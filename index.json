{
  "api/Lime.AfterAnimationStage.html": {
    "href": "api/Lime.AfterAnimationStage.html",
    "title": "Class AfterAnimationStage | Citrus Engine",
    "keywords": "Class AfterAnimationStage Namespace Lime Assembly Lime.dll Identifier for after advance animation update stage. public class AfterAnimationStage Inheritance object AfterAnimationStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.AggregateAssetBundle.html": {
    "href": "api/Lime.AggregateAssetBundle.html",
    "title": "Class AggregateAssetBundle | Citrus Engine",
    "keywords": "Class AggregateAssetBundle Namespace Lime Assembly Lime.dll public class AggregateAssetBundle : AssetBundle, IDisposable Inheritance object AssetBundle AggregateAssetBundle Implements IDisposable Inherited Members AssetBundle.Current AssetBundle.SetCurrent(AssetBundle, bool) AssetBundle.Initialized AssetBundle.ReadFile(string) AssetBundle.ReadAllText(string, Encoding) AssetBundle.ImportFile(string, string, SHA256, AssetAttributes) AssetBundle.OpenFileLocalized(string) AssetBundle.GetLocalizedPath(string) AssetBundle.GetFileAttributes(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AggregateAssetBundle(params AssetBundle[]) public AggregateAssetBundle(params AssetBundle[] bundles) Parameters bundles AssetBundle[] Methods Attach(AssetBundle) public void Attach(AssetBundle bundle) Parameters bundle AssetBundle DeleteFile(string) public override void DeleteFile(string path) Parameters path string Detach(AssetBundle) public void Detach(AssetBundle bundle) Parameters bundle AssetBundle Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public override void Dispose() EnumerateFiles(string, string) Enumerates all files by given path and having the given extension. Order is specific to implementation. public override IEnumerable<string> EnumerateFiles(string path = null, string extension = null) Parameters path string extension string Returns IEnumerable<string> FileExists(string) public override bool FileExists(string path) Parameters path string Returns bool FromSystemPath(string) Translates absolute system file path to the asset path. Raises UnsupportedException() for PackedAssetBundle. public override string FromSystemPath(string systemPath) Parameters systemPath string Returns string GetFileContentsHash(string) Returns SHA256 based on the file contents. public override SHA256 GetFileContentsHash(string path) Parameters path string Returns SHA256 GetFileOriginHash(string) Returns SHA256 that was passed to the ImportFile or ImportFileRaw methods. public override SHA256 GetFileOriginHash(string path) Parameters path string Returns SHA256 GetFileSize(string) public override int GetFileSize(string path) Parameters path string Returns int GetFileUnpackedSize(string) public override int GetFileUnpackedSize(string path) Parameters path string Returns int ImportFile(string, Stream, SHA256, AssetAttributes) public override void ImportFile(string destinationPath, Stream stream, SHA256 originHash, AssetAttributes attributes = AssetAttributes.None) Parameters destinationPath string stream Stream originHash SHA256 attributes AssetAttributes ImportFileRaw(string, Stream, int, SHA256, SHA256, AssetAttributes) Imports a file assuming that the input stream is already compressed. public override void ImportFileRaw(string destinationPath, Stream stream, int unpackedSize, SHA256 hash, SHA256 originHash, AssetAttributes attributes = AssetAttributes.None) Parameters destinationPath string stream Stream unpackedSize int hash SHA256 originHash SHA256 attributes AssetAttributes OpenFile(string, FileMode) public override Stream OpenFile(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream OpenFileRaw(string, FileMode) Returns file data as it stored in the asset bundle, e.g. compressed. public override Stream OpenFileRaw(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream ToSystemPath(string) Translates bundle path to the asset in the file system. Raises UnsupportedException() for PackedAssetBundle. public override string ToSystemPath(string bundlePath) Parameters bundlePath string Returns string"
  },
  "api/Lime.Alignment.html": {
    "href": "api/Lime.Alignment.html",
    "title": "Struct Alignment | Citrus Engine",
    "keywords": "Struct Alignment Namespace Lime Assembly Lime.dll public struct Alignment Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Alignment(HAlignment, VAlignment) public Alignment(HAlignment horizontalAlignment, VAlignment verticalAlignment) Parameters horizontalAlignment HAlignment verticalAlignment VAlignment Fields Center public static readonly Alignment Center Field Value Alignment CenterBottom public static readonly Alignment CenterBottom Field Value Alignment CenterTop public static readonly Alignment CenterTop Field Value Alignment LeftBottom public static readonly Alignment LeftBottom Field Value Alignment LeftCenter public static readonly Alignment LeftCenter Field Value Alignment LeftTop public static readonly Alignment LeftTop Field Value Alignment RightBottom public static readonly Alignment RightBottom Field Value Alignment RightCenter public static readonly Alignment RightCenter Field Value Alignment RightTop public static readonly Alignment RightTop Field Value Alignment Properties X [YuzuMember(\"0\")] public HAlignment X { readonly get; set; } Property Value HAlignment Y [YuzuMember(\"1\")] public VAlignment Y { readonly get; set; } Property Value VAlignment Operators operator ==(Alignment, Alignment) public static bool operator ==(Alignment lhs, Alignment rhs) Parameters lhs Alignment rhs Alignment Returns bool operator !=(Alignment, Alignment) public static bool operator !=(Alignment lhs, Alignment rhs) Parameters lhs Alignment rhs Alignment Returns bool"
  },
  "api/Lime.AllowMultipleComponentsAttribute.html": {
    "href": "api/Lime.AllowMultipleComponentsAttribute.html",
    "title": "Class AllowMultipleComponentsAttribute | Citrus Engine",
    "keywords": "Class AllowMultipleComponentsAttribute Namespace Lime Assembly Lime.dll Allow to add multiple components of a type decorated with the attribute and it's derived types. [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class AllowMultipleComponentsAttribute : Attribute Inheritance object Attribute AllowMultipleComponentsAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.AllowOnlyOneComponentAttribute.html": {
    "href": "api/Lime.AllowOnlyOneComponentAttribute.html",
    "title": "Class AllowOnlyOneComponentAttribute | Citrus Engine",
    "keywords": "Class AllowOnlyOneComponentAttribute Namespace Lime Assembly Lime.dll Allow to add only one component of a type decorated with the attribute and it's derived types. [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class AllowOnlyOneComponentAttribute : Attribute Inheritance object Attribute AllowOnlyOneComponentAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.AllowedComponentOwnerTypes.html": {
    "href": "api/Lime.AllowedComponentOwnerTypes.html",
    "title": "Class AllowedComponentOwnerTypes | Citrus Engine",
    "keywords": "Class AllowedComponentOwnerTypes Namespace Lime Assembly Lime.dll public sealed class AllowedComponentOwnerTypes : Attribute Inheritance object Attribute AllowedComponentOwnerTypes Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors AllowedComponentOwnerTypes(params Type[]) public AllowedComponentOwnerTypes(params Type[] types) Parameters types Type[] Fields Types public Type[] Types Field Value Type[]"
  },
  "api/Lime.AlphaIntensityComponent.html": {
    "href": "api/Lime.AlphaIntensityComponent.html",
    "title": "Class AlphaIntensityComponent | Citrus Engine",
    "keywords": "Class AlphaIntensityComponent Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Effects/Alpha Intensity\")] public class AlphaIntensityComponent : MaterialComponent<AlphaIntensityMaterial>, IDisposable, IAnimable Inheritance object Component NodeComponent MaterialComponent MaterialComponent<AlphaIntensityMaterial> AlphaIntensityComponent Implements IDisposable IAnimable Inherited Members MaterialComponent<AlphaIntensityMaterial>.CustomMaterial MaterialComponent<AlphaIntensityMaterial>.OnOwnerChanged(Node) NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Brightness [YuzuMember] public float Brightness { get; set; } Property Value float Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 MaskTexture [YuzuMember] public ITexture MaskTexture { get; set; } Property Value ITexture Radius [YuzuMember] public float Radius { get; set; } Property Value float"
  },
  "api/Lime.AlphaIntensityMaterial.AlphaIntensityShaderProgram.html": {
    "href": "api/Lime.AlphaIntensityMaterial.AlphaIntensityShaderProgram.html",
    "title": "Class AlphaIntensityMaterial.AlphaIntensityShaderProgram | Citrus Engine",
    "keywords": "Class AlphaIntensityMaterial.AlphaIntensityShaderProgram Namespace Lime Assembly Lime.dll public class AlphaIntensityMaterial.AlphaIntensityShaderProgram : ShaderProgram Inheritance object ShaderProgram AlphaIntensityMaterial.AlphaIntensityShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance public static AlphaIntensityMaterial.AlphaIntensityShaderProgram Instance { get; } Property Value AlphaIntensityMaterial.AlphaIntensityShaderProgram"
  },
  "api/Lime.AlphaIntensityMaterial.html": {
    "href": "api/Lime.AlphaIntensityMaterial.html",
    "title": "Class AlphaIntensityMaterial | Citrus Engine",
    "keywords": "Class AlphaIntensityMaterial Namespace Lime Assembly Lime.dll public class AlphaIntensityMaterial : IMaterial Inheritance object AlphaIntensityMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AlphaIntensityMaterial() public AlphaIntensityMaterial() Fields Blending [YuzuMember] public Blending Blending Field Value Blending Brightness [YuzuMember] public float Brightness Field Value float Color [YuzuMember] public Vector4 Color Field Value Vector4 MaskTexture [YuzuMember] public ITexture MaskTexture Field Value ITexture Radius [YuzuMember] public float Radius Field Value float Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.AnchorLayout.html": {
    "href": "api/Lime.AnchorLayout.html",
    "title": "Class AnchorLayout | Citrus Engine",
    "keywords": "Class AnchorLayout Namespace Lime Assembly Lime.dll public class AnchorLayout : ILayout Inheritance object AnchorLayout Implements ILayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static readonly ILayout Instance Field Value ILayout Properties ArrangementValid public bool ArrangementValid { get; } Property Value bool ConstraintsValid public bool ConstraintsValid { get; } Property Value bool DebugRectangles public List<Rectangle> DebugRectangles { get; } Property Value List<Rectangle> Owner public Widget Owner { get; set; } Property Value Widget Methods ArrangeChildren() public void ArrangeChildren() InvalidateArrangement() public void InvalidateArrangement() InvalidateConstraintsAndArrangement() public void InvalidateConstraintsAndArrangement() MeasureSizeConstraints() public void MeasureSizeConstraints() OnSizeChanged(Widget, Vector2) public void OnSizeChanged(Widget widget, Vector2 sizeDelta) Parameters widget Widget sizeDelta Vector2"
  },
  "api/Lime.Anchors.html": {
    "href": "api/Lime.Anchors.html",
    "title": "Enum Anchors | Citrus Engine",
    "keywords": "Enum Anchors Namespace Lime Assembly Lime.dll Parent-relative layout. [Flags] public enum Anchors Fields Bottom = 8 Center = CenterH | CenterV CenterH = 16 CenterV = 32 Left = 1 LeftRight = Left | Right LeftRightTopBottom = LeftRight | TopBottom None = 0 Right = 2 Top = 4 TopBottom = Top | Bottom"
  },
  "api/Lime.Animable.html": {
    "href": "api/Lime.Animable.html",
    "title": "Class Animable | Citrus Engine",
    "keywords": "Class Animable Namespace Lime Assembly Lime.dll public class Animable : IAnimable Inheritance object Animable Implements IAnimable Derived AnimableList<T> SerializableSample ShadowParams TableLayoutColumn TableLayoutRow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Owner public IAnimable Owner { get; set; } Property Value IAnimable Methods OnOwnerChanged(IAnimable) protected virtual void OnOwnerChanged(IAnimable previousOwner) Parameters previousOwner IAnimable"
  },
  "api/Lime.AnimableList-1.html": {
    "href": "api/Lime.AnimableList-1.html",
    "title": "Class AnimableList<T> | Citrus Engine",
    "keywords": "Class AnimableList<T> Namespace Lime Assembly Lime.dll public class AnimableList<T> : Animable, IAnimable, IList<T>, ICollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable Type Parameters T Inheritance object Animable AnimableList<T> Implements IAnimable IList<T> ICollection<T> IEnumerable<T> IList ICollection IEnumerable Derived SignedDistanceFieldComponent.ShadowCollection Inherited Members Animable.Owner Animable.OnOwnerChanged(IAnimable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors AnimableList() public AnimableList() Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public T this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value T The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(T) Adds an item to the ICollection<T>. public void Add(T item) Parameters item T The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(T) Determines whether the ICollection<T> contains a specific value. public bool Contains(T item) Parameters item T The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(T[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(T[] array, int arrayIndex) Parameters array T[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() public List<T>.Enumerator GetEnumerator() Returns List<T>.Enumerator IndexOf(T) Determines the index of a specific item in the IList<T>. public int IndexOf(T item) Parameters item T The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, T) Inserts an item to the IList<T> at the specified index. public void Insert(int index, T item) Parameters index int The zero-based index at which item should be inserted. item T The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(T) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(T item) Parameters item T The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.Animation.AnimationBezierEasingCalculator.html": {
    "href": "api/Lime.Animation.AnimationBezierEasingCalculator.html",
    "title": "Class Animation.AnimationBezierEasingCalculator | Citrus Engine",
    "keywords": "Class Animation.AnimationBezierEasingCalculator Namespace Lime Assembly Lime.dll public class Animation.AnimationBezierEasingCalculator : IEasingCalculator Inheritance object Animation.AnimationBezierEasingCalculator Implements IEasingCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnimationBezierEasingCalculator(MarkerList, Animation) public AnimationBezierEasingCalculator(MarkerList markers, Animation owner) Parameters markers MarkerList owner Animation Methods EaseTime(double) public double EaseTime(double time) Parameters time double Returns double Invalidate() public void Invalidate()"
  },
  "api/Lime.Animation.AnimationData.LoadedDelegate.html": {
    "href": "api/Lime.Animation.AnimationData.LoadedDelegate.html",
    "title": "Delegate Animation.AnimationData.LoadedDelegate | Citrus Engine",
    "keywords": "Delegate Animation.AnimationData.LoadedDelegate Namespace Lime Assembly Lime.dll public delegate void Animation.AnimationData.LoadedDelegate(string path, Animation.AnimationData instance) Parameters path string instance Animation.AnimationData"
  },
  "api/Lime.Animation.AnimationData.LoadingDelegate.html": {
    "href": "api/Lime.Animation.AnimationData.LoadingDelegate.html",
    "title": "Delegate Animation.AnimationData.LoadingDelegate | Citrus Engine",
    "keywords": "Delegate Animation.AnimationData.LoadingDelegate Namespace Lime Assembly Lime.dll public delegate bool Animation.AnimationData.LoadingDelegate(string path, ref Animation.AnimationData instance) Parameters path string instance Animation.AnimationData Returns bool"
  },
  "api/Lime.Animation.AnimationData.html": {
    "href": "api/Lime.Animation.AnimationData.html",
    "title": "Class Animation.AnimationData | Citrus Engine",
    "keywords": "Class Animation.AnimationData Namespace Lime Assembly Lime.dll public class Animation.AnimationData Inheritance object Animation.AnimationData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Loaded public static ThreadLocal<Animation.AnimationData.LoadedDelegate> Loaded Field Value ThreadLocal<Animation.AnimationData.LoadedDelegate> Loading public static ThreadLocal<Animation.AnimationData.LoadingDelegate> Loading Field Value ThreadLocal<Animation.AnimationData.LoadingDelegate> Properties Animators [YuzuMember] public List<IAnimator> Animators { get; } Property Value List<IAnimator> Methods Load(string) public static Animation.AnimationData Load(string path) Parameters path string Returns Animation.AnimationData"
  },
  "api/Lime.Animation.html": {
    "href": "api/Lime.Animation.html",
    "title": "Class Animation | Citrus Engine",
    "keywords": "Class Animation Namespace Lime Assembly Lime.dll public class Animation Inheritance object Animation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Animation() public Animation() Fields AnimationEngine public AnimationEngine AnimationEngine Field Value AnimationEngine AssuredStopped public Action AssuredStopped Field Value Action EffectiveAnimators Cached list of all animators used by this animation. This cache may be in invalid state, in the user code use ValidatedEffectiveAnimators. public List<IAbstractAnimator> EffectiveAnimators Field Value List<IAbstractAnimator> EffectiveAnimatorsVersion public int EffectiveAnimatorsVersion Field Value int EffectiveTriggerableAnimators Cached list of only triggerable animators used by this animation. This cache may be in invalid state, in the user code use ValidatedEffectiveTriggerableAnimators. public List<IAbstractAnimator> EffectiveTriggerableAnimators Field Value List<IAbstractAnimator> MarkerAhead public Marker MarkerAhead Field Value Marker Stopped public Action Stopped Field Value Action ZeroPoseId public const string ZeroPoseId = \"ZeroPose\" Field Value string ZeroPoseIdComparisonCode public static readonly int ZeroPoseIdComparisonCode Field Value int Properties ApplyZeroPose [YuzuMember] public bool ApplyZeroPose { get; set; } Property Value bool BezierEasingCalculator public Animation.AnimationBezierEasingCalculator BezierEasingCalculator { get; } Property Value Animation.AnimationBezierEasingCalculator ContentsPath [YuzuMember] public string ContentsPath { get; set; } Property Value string Frame public int Frame { get; set; } Property Value int Id [Validation.DefaultCharset] [YuzuMember] public string Id { get; set; } Property Value string IdComparisonCode public int IdComparisonCode { get; } Property Value int IsCompound [YuzuMember] public bool IsCompound { get; set; } Property Value bool IsLegacy [YuzuMember] public bool IsLegacy { get; set; } Property Value bool IsRunning public bool IsRunning { get; set; } Property Value bool Markers [YuzuMember] public MarkerList Markers { get; } Property Value MarkerList Owner public AnimationComponent Owner { get; } Property Value AnimationComponent OwnerNode public Node OwnerNode { get; } Property Value Node RunningMarkerId public string RunningMarkerId { get; set; } Property Value string Time public double Time { get; set; } Property Value double Tracks [YuzuMember] public AnimationTrackList Tracks { get; } Property Value AnimationTrackList ValidatedEffectiveAnimators Cached list of all animators used by this animation. public List<IAbstractAnimator> ValidatedEffectiveAnimators { get; } Property Value List<IAbstractAnimator> ValidatedEffectiveTriggerableAnimators Cached list of only triggerable animators used by this animation. public List<IAbstractAnimator> ValidatedEffectiveTriggerableAnimators { get; } Property Value List<IAbstractAnimator> Methods Advance(float) public void Advance(float delta) Parameters delta float ApplyAnimators() public void ApplyAnimators() CalcDurationInFrames() public int CalcDurationInFrames() Returns int CalcDurationInSeconds() public double CalcDurationInSeconds() Returns double FixAntPath(string) public static string FixAntPath(string path) Parameters path string Returns string GetData() public Animation.AnimationData GetData() Returns Animation.AnimationData HasEasings() public bool HasEasings() Returns bool Load() public void Load() Run(string) public void Run(string markerId = null) Parameters markerId string ScheduleAssuredStopped(Action, bool) public void ScheduleAssuredStopped(Action onStopped, bool immediatelyInvokeIfStopped) Parameters onStopped Action immediatelyInvokeIfStopped bool TryRun(string, double) public bool TryRun(string markerId = null, double animationTimeCorrection = 0) Parameters markerId string animationTimeCorrection double Returns bool"
  },
  "api/Lime.AnimationBlender.html": {
    "href": "api/Lime.AnimationBlender.html",
    "title": "Class AnimationBlender | Citrus Engine",
    "keywords": "Class AnimationBlender Namespace Lime Assembly Lime.dll [UpdateStage(typeof(EarlyUpdateStage))] public class AnimationBlender : BehaviorComponent, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent AnimationBlender Implements IDisposable IAnimable Inherited Members BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Enabled public bool Enabled { get; set; } Property Value bool Options [YuzuMember] public Dictionary<string, AnimationBlending> Options { get; } Property Value Dictionary<string, AnimationBlending> Methods Attach(Animation, string, string) public void Attach(Animation animation, string markerId, string sourceMarkerId = null) Parameters animation Animation markerId string sourceMarkerId string ClearBlendings() public void ClearBlendings() Start() Start is called on the frame in which the component had added just before Update method is called first time. Note: Start doesn't called immediately at the time it is adding. protected override void Start() Stop(Node) Stop is called immediately after component had removed protected override void Stop(Node owner) Parameters owner Node Previous owner node. Update(Animation, double) public void Update(Animation animation, double delta) Parameters animation Animation delta double Update(float) Update is called on every frame if the owner node isn't frozen and the behavior isn't suspended. protected override void Update(float delta) Parameters delta float Elapsed time between frames. UpdateWantedState(Animation) public void UpdateWantedState(Animation animation) Parameters animation Animation"
  },
  "api/Lime.AnimationBlending.html": {
    "href": "api/Lime.AnimationBlending.html",
    "title": "Class AnimationBlending | Citrus Engine",
    "keywords": "Class AnimationBlending Namespace Lime Assembly Lime.dll public class AnimationBlending Inheritance object AnimationBlending Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MarkersOptions [YuzuMember] public Dictionary<string, MarkerBlending> MarkersOptions { get; } Property Value Dictionary<string, MarkerBlending> Option [YuzuMember] public BlendingOption Option { get; set; } Property Value BlendingOption"
  },
  "api/Lime.AnimationClip.html": {
    "href": "api/Lime.AnimationClip.html",
    "title": "Class AnimationClip | Citrus Engine",
    "keywords": "Class AnimationClip Namespace Lime Assembly Lime.dll public class AnimationClip Inheritance object AnimationClip Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AnimationId [YuzuMember] [TangerineGroup(\"Clip\")] public string AnimationId { get; set; } Property Value string AnimationIdComparisonCode public int AnimationIdComparisonCode { get; } Property Value int BeginFrame [YuzuMember] [TangerineGroup(\"Clip\")] public int BeginFrame { get; set; } Property Value int BeginTime public double BeginTime { get; } Property Value double DurationInFrames public int DurationInFrames { get; set; } Property Value int DurationInSeconds public double DurationInSeconds { get; } Property Value double EndFrame [YuzuMember] [TangerineGroup(\"Clip\")] public int EndFrame { get; set; } Property Value int EndTime public double EndTime { get; } Property Value double InFrame [YuzuMember] [TangerineGroup(\"Clip\")] public int InFrame { get; set; } Property Value int InTime public double InTime { get; } Property Value double Owner public AnimationTrack Owner { get; } Property Value AnimationTrack PostExtrapolation [YuzuMember] [TangerineGroup(\"Clip\")] public AnimationClipExtrapolation PostExtrapolation { get; set; } Property Value AnimationClipExtrapolation Reversed [YuzuMember] [TangerineGroup(\"Clip\")] public bool Reversed { get; set; } Property Value bool Speed [YuzuMember] [TangerineGroup(\"Clip\")] [Validation.Range(0, 3.4028235E+38)] public float Speed { get; set; } Property Value float Methods Clone() public AnimationClip Clone() Returns AnimationClip FindAnimation() public Animation FindAnimation() Returns Animation ToLocalTime(double) public double ToLocalTime(double time) Parameters time double Returns double"
  },
  "api/Lime.AnimationClipExtrapolation.html": {
    "href": "api/Lime.AnimationClipExtrapolation.html",
    "title": "Enum AnimationClipExtrapolation | Citrus Engine",
    "keywords": "Enum AnimationClipExtrapolation Namespace Lime Assembly Lime.dll public enum AnimationClipExtrapolation Fields Hold = 1 None = 0 PingPong = 3 Repeat = 2"
  },
  "api/Lime.AnimationClipList.html": {
    "href": "api/Lime.AnimationClipList.html",
    "title": "Class AnimationClipList | Citrus Engine",
    "keywords": "Class AnimationClipList Namespace Lime Assembly Lime.dll public class AnimationClipList : IList<AnimationClip>, ICollection<AnimationClip>, IEnumerable<AnimationClip>, IEnumerable Inheritance object AnimationClipList Implements IList<AnimationClip> ICollection<AnimationClip> IEnumerable<AnimationClip> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors AnimationClipList(AnimationTrack) public AnimationClipList(AnimationTrack owner) Parameters owner AnimationTrack AnimationClipList(AnimationTrack, int) public AnimationClipList(AnimationTrack owner, int capacity = 0) Parameters owner AnimationTrack capacity int Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public AnimationClip this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value AnimationClip The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(AnimationClip) Adds an item to the ICollection<T>. public void Add(AnimationClip clip) Parameters clip AnimationClip Exceptions NotSupportedException The ICollection<T> is read-only. AddOrdered(AnimationClip) public void AddOrdered(AnimationClip clip) Parameters clip AnimationClip Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(AnimationClip) Determines whether the ICollection<T> contains a specific value. public bool Contains(AnimationClip item) Parameters item AnimationClip The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(AnimationClip[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(AnimationClip[] array, int arrayIndex) Parameters array AnimationClip[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. Exists(Predicate<AnimationClip>) public bool Exists(Predicate<AnimationClip> match) Parameters match Predicate<AnimationClip> Returns bool FindIndex(Predicate<AnimationClip>) public int FindIndex(Predicate<AnimationClip> match) Parameters match Predicate<AnimationClip> Returns int GetByFrame(int) public AnimationClip GetByFrame(int frame) Parameters frame int Returns AnimationClip GetEnumerator() public List<AnimationClip>.Enumerator GetEnumerator() Returns List<AnimationClip>.Enumerator IndexOf(AnimationClip) Determines the index of a specific item in the IList<T>. public int IndexOf(AnimationClip item) Parameters item AnimationClip The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, AnimationClip) Inserts an item to the IList<T> at the specified index. public void Insert(int index, AnimationClip item) Parameters index int The zero-based index at which item should be inserted. item AnimationClip The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(AnimationClip) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(AnimationClip clip) Parameters clip AnimationClip Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.AnimationCollection.html": {
    "href": "api/Lime.AnimationCollection.html",
    "title": "Class AnimationCollection | Citrus Engine",
    "keywords": "Class AnimationCollection Namespace Lime Assembly Lime.dll public sealed class AnimationCollection : IList<Animation>, ICollection<Animation>, IEnumerable<Animation>, IList, ICollection, IEnumerable Inheritance object AnimationCollection Implements IList<Animation> ICollection<Animation> IEnumerable<Animation> IList ICollection IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors AnimationCollection(AnimationComponent) public AnimationCollection(AnimationComponent owner) Parameters owner AnimationComponent Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. this[int] Gets or sets the element at the specified index. public Animation this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value Animation The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(Animation) Adds an item to the ICollection<T>. public void Add(Animation item) Parameters item Animation The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. AddRange(IEnumerable<Animation>) public void AddRange(IEnumerable<Animation> collection) Parameters collection IEnumerable<Animation> Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Animation) Determines whether the ICollection<T> contains a specific value. public bool Contains(Animation item) Parameters item Animation The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Animation[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Animation[] array, int arrayIndex) Parameters array Animation[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. Find(string) public Animation Find(string id) Parameters id string Returns Animation GetEnumerator() public List<Animation>.Enumerator GetEnumerator() Returns List<Animation>.Enumerator IndexOf(Animation) Determines the index of a specific item in the IList<T>. public int IndexOf(Animation item) Parameters item Animation The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, Animation) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Animation item) Parameters index int The zero-based index at which item should be inserted. item Animation The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(Animation) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Animation item) Parameters item Animation The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Run(string, string) public Animation Run(string animationId, string markerId = null) Parameters animationId string markerId string Returns Animation TryFind(int, out Animation) public bool TryFind(int idComparisonCode, out Animation animation) Parameters idComparisonCode int animation Animation Returns bool TryFind(string, out Animation) public bool TryFind(string id, out Animation animation) Parameters id string animation Animation Returns bool TryRun(string, string, double) public bool TryRun(string animationId, string markerId = null, double animationTimeCorrection = 0) Parameters animationId string markerId string animationTimeCorrection double Returns bool"
  },
  "api/Lime.AnimationComponent.html": {
    "href": "api/Lime.AnimationComponent.html",
    "title": "Class AnimationComponent | Citrus Engine",
    "keywords": "Class AnimationComponent Namespace Lime Assembly Lime.dll public class AnimationComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent AnimationComponent Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors AnimationComponent() public AnimationComponent() Properties Animations public AnimationCollection Animations { get; } Property Value AnimationCollection DefaultAnimation public Animation DefaultAnimation { get; } Property Value Animation"
  },
  "api/Lime.AnimationEngine.html": {
    "href": "api/Lime.AnimationEngine.html",
    "title": "Class AnimationEngine | Citrus Engine",
    "keywords": "Class AnimationEngine Namespace Lime Assembly Lime.dll public class AnimationEngine Inheritance object AnimationEngine Derived AnimationEngineDelegate DefaultAnimationEngine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields JumpAffectsRunningMarkerId public static bool JumpAffectsRunningMarkerId Field Value bool Methods AdvanceAnimation(Animation, double) public virtual void AdvanceAnimation(Animation animation, double delta) Parameters animation Animation delta double ApplyAnimatorsAndExecuteTriggers(Animation, double, double, bool) Refreshes animation.EffectiveAnimators; Applies each animator at currentTime; Executes triggers in given range. The range is [previousTime, currentTime) or [previousTime, currentTime] depending on executeTriggersAtCurrentTime flag. This method doesn't depend on animation.Time value. public virtual void ApplyAnimatorsAndExecuteTriggers(Animation animation, double previousTime, double currentTime, bool executeTriggersAtCurrentTime) Parameters animation Animation previousTime double currentTime double executeTriggersAtCurrentTime bool AreEffectiveAnimatorsValid(Animation) public virtual bool AreEffectiveAnimatorsValid(Animation animation) Parameters animation Animation Returns bool BuildEffectiveAnimators(Animation) public virtual void BuildEffectiveAnimators(Animation animation) Parameters animation Animation RaiseStopped(Animation) public virtual void RaiseStopped(Animation animation) Parameters animation Animation TryRunAnimation(Animation, string, double) public virtual bool TryRunAnimation(Animation animation, string markerId, double animationTimeCorrection = 0) Parameters animation Animation markerId string animationTimeCorrection double Returns bool"
  },
  "api/Lime.AnimationEngineDelegate.html": {
    "href": "api/Lime.AnimationEngineDelegate.html",
    "title": "Class AnimationEngineDelegate | Citrus Engine",
    "keywords": "Class AnimationEngineDelegate Namespace Lime Assembly Lime.dll public class AnimationEngineDelegate : AnimationEngine Inheritance object AnimationEngine AnimationEngineDelegate Inherited Members AnimationEngine.JumpAffectsRunningMarkerId AnimationEngine.AreEffectiveAnimatorsValid(Animation) AnimationEngine.BuildEffectiveAnimators(Animation) AnimationEngine.RaiseStopped(Animation) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OnAdvanceAnimation public Action<Animation, double> OnAdvanceAnimation Field Value Action<Animation, double> OnApplyEffectiveAnimatorsAndBuildTriggersList public Action<Animation, double, double, bool> OnApplyEffectiveAnimatorsAndBuildTriggersList Field Value Action<Animation, double, double, bool> OnRunAnimation public Func<Animation, string, double, bool> OnRunAnimation Field Value Func<Animation, string, double, bool> Methods AdvanceAnimation(Animation, double) public override void AdvanceAnimation(Animation animation, double delta) Parameters animation Animation delta double ApplyAnimatorsAndExecuteTriggers(Animation, double, double, bool) Refreshes animation.EffectiveAnimators; Applies each animator at currentTime; Executes triggers in given range. The range is [previousTime, currentTime) or [previousTime, currentTime] depending on executeTriggersAtCurrentTime flag. This method doesn't depend on animation.Time value. public override void ApplyAnimatorsAndExecuteTriggers(Animation animation, double previousTime, double currentTime, bool executeTriggersAtCurrentTime) Parameters animation Animation previousTime double currentTime double executeTriggersAtCurrentTime bool TryRunAnimation(Animation, string, double) public override bool TryRunAnimation(Animation animation, string markerId, double animationTimeCorrection = 0) Parameters animation Animation markerId string animationTimeCorrection double Returns bool"
  },
  "api/Lime.AnimationExtensionMethods.html": {
    "href": "api/Lime.AnimationExtensionMethods.html",
    "title": "Class AnimationExtensionMethods | Citrus Engine",
    "keywords": "Class AnimationExtensionMethods Namespace Lime Assembly Lime.dll public static class AnimationExtensionMethods Inheritance object AnimationExtensionMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Contains(Dictionary<IAnimatorHost, HashSet<IAbstractAnimator>>, IAnimator) public static bool Contains(this Dictionary<IAnimatorHost, HashSet<IAbstractAnimator>> animatorsPerHost, IAnimator animator) Parameters animatorsPerHost Dictionary<IAnimatorHost, HashSet<IAbstractAnimator>> animator IAnimator Returns bool"
  },
  "api/Lime.AnimationProcessor.html": {
    "href": "api/Lime.AnimationProcessor.html",
    "title": "Class AnimationProcessor | Citrus Engine",
    "keywords": "Class AnimationProcessor Namespace Lime Assembly Lime.dll public class AnimationProcessor : NodeComponentProcessor<AnimationComponent> Inheritance object NodeProcessor NodeComponentProcessor NodeComponentProcessor<AnimationComponent> AnimationProcessor Inherited Members NodeComponentProcessor<AnimationComponent>.InternalAdd(NodeComponent, Node) NodeComponentProcessor<AnimationComponent>.InternalRemove(NodeComponent, Node) NodeComponentProcessor<AnimationComponent>.InternalOnOwnerFrozenChanged(NodeComponent, Node) NodeComponentProcessor.TargetComponentType NodeProcessor.Manager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Add(AnimationComponent, Node) protected override void Add(AnimationComponent component, Node owner) Parameters component AnimationComponent owner Node OnOwnerFrozenChanged(AnimationComponent, Node) protected override void OnOwnerFrozenChanged(AnimationComponent component, Node owner) Parameters component AnimationComponent owner Node Remove(AnimationComponent, Node) protected override void Remove(AnimationComponent component, Node owner) Parameters component AnimationComponent owner Node Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.AnimationSystem.html": {
    "href": "api/Lime.AnimationSystem.html",
    "title": "Class AnimationSystem | Citrus Engine",
    "keywords": "Class AnimationSystem Namespace Lime Assembly Lime.dll public class AnimationSystem Inheritance object AnimationSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Events AnimationAdded public event Action<AnimationComponent, Animation> AnimationAdded Event Type Action<AnimationComponent, Animation> AnimationRemoved public event Action<AnimationComponent, Animation> AnimationRemoved Event Type Action<AnimationComponent, Animation> AnimationRun public event Action<AnimationComponent, Animation> AnimationRun Event Type Action<AnimationComponent, Animation> AnimationStopped public event Action<AnimationComponent, Animation> AnimationStopped Event Type Action<AnimationComponent, Animation>"
  },
  "api/Lime.AnimationTrack.html": {
    "href": "api/Lime.AnimationTrack.html",
    "title": "Class AnimationTrack | Citrus Engine",
    "keywords": "Class AnimationTrack Namespace Lime Assembly Lime.dll public class AnimationTrack : IAnimatorHost, IAnimable Inheritance object AnimationTrack Implements IAnimatorHost IAnimable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors AnimationTrack() public AnimationTrack() Fields MaxWeight public const float MaxWeight = 100 Field Value float Properties Animators [YuzuMember] public AnimatorList Animators { get; } Property Value AnimatorList Clips [YuzuMember] public AnimationClipList Clips { get; } Property Value AnimationClipList Id [Validation.DefaultCharset] [YuzuMember] [TangerineGroup(\"Track\")] public string Id { get; set; } Property Value string Owner public Animation Owner { get; } Property Value Animation TangerineFlags [YuzuMember] public TangerineFlags TangerineFlags { get; set; } Property Value TangerineFlags UserData public object UserData { get; set; } Property Value object Weight [YuzuMember] [TangerineGroup(\"Track\")] [Validation.Range(0, 100)] [TangerineKeyframeColor(1)] public float Weight { get; set; } Property Value float Methods CalcWeight(double) public float CalcWeight(double time) Parameters time double Returns float GetTangerineFlag(TangerineFlags) public bool GetTangerineFlag(TangerineFlags flag) Parameters flag TangerineFlags Returns bool SetTangerineFlag(TangerineFlags, bool) public void SetTangerineFlag(TangerineFlags flag, bool value) Parameters flag TangerineFlags value bool"
  },
  "api/Lime.AnimationTrackList.html": {
    "href": "api/Lime.AnimationTrackList.html",
    "title": "Class AnimationTrackList | Citrus Engine",
    "keywords": "Class AnimationTrackList Namespace Lime Assembly Lime.dll public class AnimationTrackList : IList<AnimationTrack>, ICollection<AnimationTrack>, IEnumerable<AnimationTrack>, IEnumerable Inheritance object AnimationTrackList Implements IList<AnimationTrack> ICollection<AnimationTrack> IEnumerable<AnimationTrack> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors AnimationTrackList(Animation, int) public AnimationTrackList(Animation owner, int capacity = 0) Parameters owner Animation capacity int Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public AnimationTrack this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value AnimationTrack The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(AnimationTrack) Adds an item to the ICollection<T>. public void Add(AnimationTrack track) Parameters track AnimationTrack Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(AnimationTrack) Determines whether the ICollection<T> contains a specific value. public bool Contains(AnimationTrack item) Parameters item AnimationTrack The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(AnimationTrack[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(AnimationTrack[] array, int arrayIndex) Parameters array AnimationTrack[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. Exists(Predicate<AnimationTrack>) public bool Exists(Predicate<AnimationTrack> match) Parameters match Predicate<AnimationTrack> Returns bool FindIndex(Predicate<AnimationTrack>) public int FindIndex(Predicate<AnimationTrack> match) Parameters match Predicate<AnimationTrack> Returns int GetEnumerator() public List<AnimationTrack>.Enumerator GetEnumerator() Returns List<AnimationTrack>.Enumerator IndexOf(AnimationTrack) Determines the index of a specific item in the IList<T>. public int IndexOf(AnimationTrack item) Parameters item AnimationTrack The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, AnimationTrack) Inserts an item to the IList<T> at the specified index. public void Insert(int index, AnimationTrack track) Parameters index int The zero-based index at which item should be inserted. track AnimationTrack Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(AnimationTrack) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(AnimationTrack track) Parameters track AnimationTrack Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.AnimationUtils.PropertyData.html": {
    "href": "api/Lime.AnimationUtils.PropertyData.html",
    "title": "Struct AnimationUtils.PropertyData | Citrus Engine",
    "keywords": "Struct AnimationUtils.PropertyData Namespace Lime Assembly Lime.dll public struct AnimationUtils.PropertyData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Empty public static AnimationUtils.PropertyData Empty Field Value AnimationUtils.PropertyData Info public PropertyInfo Info Field Value PropertyInfo OwnerType public Type OwnerType Field Value Type Triggerable public bool Triggerable Field Value bool"
  },
  "api/Lime.AnimationUtils.html": {
    "href": "api/Lime.AnimationUtils.html",
    "title": "Class AnimationUtils | Citrus Engine",
    "keywords": "Class AnimationUtils Namespace Lime Assembly Lime.dll public static class AnimationUtils Inheritance object AnimationUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FramesPerSecond public const double FramesPerSecond = 30 Field Value double SecondsPerFrame public const double SecondsPerFrame = 0.03333333333333333 Field Value double Threshold public const double Threshold = 1E-06 Field Value double Methods FramesToSeconds(double) public static double FramesToSeconds(double frame) Parameters frame double Returns double FramesToSeconds(int) public static double FramesToSeconds(int frame) Parameters frame int Returns double GetPropertyByPath(IAnimatorHost, string) public static (AnimationUtils.PropertyData PropertyData, IAnimable Animable, int Index) GetPropertyByPath(IAnimatorHost host, string propertyPath) Parameters host IAnimatorHost propertyPath string Returns (AnimationUtils.PropertyData PropertyData, IAnimable Animable, int Index) GetPropertyHost(IAnimatorHost, string) public static (IAnimatorHost, int) GetPropertyHost(IAnimatorHost host, string propertyPath) Parameters host IAnimatorHost propertyPath string Returns (IAnimatorHost, int) SecondsToFrames(double) public static int SecondsToFrames(double seconds) Parameters seconds double Returns int SecondsToFramesCeiling(double) public static int SecondsToFramesCeiling(double seconds) Parameters seconds double Returns int"
  },
  "api/Lime.Animator-1.html": {
    "href": "api/Lime.Animator-1.html",
    "title": "Class Animator<T> | Citrus Engine",
    "keywords": "Class Animator<T> Namespace Lime Assembly Lime.dll public class Animator<T> : IAnimator, IDisposable, IAbstractAnimator Type Parameters T Inheritance object Animator<T> Implements IAnimator IDisposable IAbstractAnimator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Animator() public Animator() Properties Animable public IAnimable Animable { get; } Property Value IAnimable AnimationId [YuzuMember] public string AnimationId { get; set; } Property Value string Curve public IAnimationCurve<T> Curve { get; } Property Value IAnimationCurve<T> Duration public int Duration { get; } Property Value int EasingCalculator public IEasingCalculator EasingCalculator { get; set; } Property Value IEasingCalculator Enabled public bool Enabled { get; set; } Property Value bool IsEmpty public bool IsEmpty { get; } Property Value bool IsTriggerable public bool IsTriggerable { get; } Property Value bool IsZombie public bool IsZombie { get; } Property Value bool Keys public IKeyframeCollection<T> Keys { get; } Property Value IKeyframeCollection<T> Owner public IAnimatorHost Owner { get; set; } Property Value IAnimatorHost PropertyInfo public PropertyInfo PropertyInfo { get; } Property Value PropertyInfo ReadonlyCurve [YuzuMember] public IAnimationCurve<T> ReadonlyCurve { get; set; } Property Value IAnimationCurve<T> ReadonlyKeys public IKeyframeCollection<T> ReadonlyKeys { get; } Property Value IKeyframeCollection<T> TargetPropertyPath [YuzuMember(\"TargetProperty\")] public string TargetPropertyPath { get; set; } Property Value string TargetPropertyPathComparisonCode public int TargetPropertyPathComparisonCode { get; } Property Value int UserData public object UserData { get; set; } Property Value object ValueType public Type ValueType { get; } Property Value Type Methods Apply(double) public void Apply(double time) Parameters time double CalcValue(double) public T CalcValue(double time) Parameters time double Returns T Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ExecuteTrigger(int, double) public void ExecuteTrigger(int frame, double animationTimeCorrection) Parameters frame int animationTimeCorrection double ExecuteTriggersInRange(double, double, bool) public void ExecuteTriggersInRange(double minTime, double maxTime, bool executeTriggerAtMaxTime) Parameters minTime double maxTime double executeTriggerAtMaxTime bool ResetCache() public void ResetCache() SetValue(T) public void SetValue(T value) Parameters value T Unbind() public void Unbind()"
  },
  "api/Lime.AnimatorList.html": {
    "href": "api/Lime.AnimatorList.html",
    "title": "Class AnimatorList | Citrus Engine",
    "keywords": "Class AnimatorList Namespace Lime Assembly Lime.dll public sealed class AnimatorList : IList<IAnimator>, ICollection<IAnimator>, IEnumerable<IAnimator>, IEnumerable, IDisposable Inheritance object AnimatorList Implements IList<IAnimator> ICollection<IAnimator> IEnumerable<IAnimator> IEnumerable IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors AnimatorList(IAnimatorHost) public AnimatorList(IAnimatorHost owner) Parameters owner IAnimatorHost Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. this[int] Gets or sets the element at the specified index. public IAnimator this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value IAnimator The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. this[string, string] public IAnimator this[string propertyPath, string animationId = null] { get; } Parameters propertyPath string animationId string Property Value IAnimator Methods Add(IAnimator) Adds an item to the ICollection<T>. public void Add(IAnimator item) Parameters item IAnimator The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. AddRange(IEnumerable<IAnimator>) public void AddRange(IEnumerable<IAnimator> collection) Parameters collection IEnumerable<IAnimator> Apply(double, string) public void Apply(double time, string animationId = null) Parameters time double animationId string Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(IAnimator) Determines whether the ICollection<T> contains a specific value. public bool Contains(IAnimator item) Parameters item IAnimator The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetEnumerator() public List<IAnimator>.Enumerator GetEnumerator() Returns List<IAnimator>.Enumerator GetOverallDuration(string) public int GetOverallDuration(string animationId = null) Parameters animationId string Returns int IndexOf(IAnimator) Determines the index of a specific item in the IList<T>. public int IndexOf(IAnimator item) Parameters item IAnimator The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, IAnimator) Inserts an item to the IList<T> at the specified index. public void Insert(int index, IAnimator item) Parameters index int The zero-based index at which item should be inserted. item IAnimator The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. InvokeTriggers(int, string, double) public void InvokeTriggers(int frame, string animationId = null, double animationTimeCorrection = 0) Parameters frame int animationId string animationTimeCorrection double Remove(IAnimator) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(IAnimator item) Parameters item IAnimator The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(string, string) public bool Remove(string propertyName, string animationId = null) Parameters propertyName string animationId string Returns bool RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. TryFind(string, out IAnimator, string) public bool TryFind(string propertyPath, out IAnimator animator, string animationId = null) Parameters propertyPath string animator IAnimator animationId string Returns bool TryFind<T>(string, out Animator<T>, string) public bool TryFind<T>(string propertyPath, out Animator<T> animator, string animationId = null) Parameters propertyPath string animator Animator<T> animationId string Returns bool Type Parameters T"
  },
  "api/Lime.AnimatorRegistry.AnimatorFactory-1.html": {
    "href": "api/Lime.AnimatorRegistry.AnimatorFactory-1.html",
    "title": "Class AnimatorRegistry.AnimatorFactory<T> | Citrus Engine",
    "keywords": "Class AnimatorRegistry.AnimatorFactory<T> Namespace Lime Assembly Lime.dll public class AnimatorRegistry.AnimatorFactory<T> : AnimatorRegistry.IAnimatorFactory Type Parameters T Inheritance object AnimatorRegistry.AnimatorFactory<T> Implements AnimatorRegistry.IAnimatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateBezierAnimator() Creates an animator with BezierKeyframeCollection<T>. public virtual IAnimator CreateBezierAnimator() Returns IAnimator The animator. CreateBlendedAnimator() public virtual IBlendedAnimator CreateBlendedAnimator() Returns IBlendedAnimator CreateChainedAnimator() public virtual IChainedAnimator CreateChainedAnimator() Returns IChainedAnimator CreateSimpleAnimator() Creates an animator with SimpleKeyframeCollection<T>. public virtual IAnimator CreateSimpleAnimator() Returns IAnimator The animator."
  },
  "api/Lime.AnimatorRegistry.EnumAnimatorFactory.html": {
    "href": "api/Lime.AnimatorRegistry.EnumAnimatorFactory.html",
    "title": "Class AnimatorRegistry.EnumAnimatorFactory | Citrus Engine",
    "keywords": "Class AnimatorRegistry.EnumAnimatorFactory Namespace Lime Assembly Lime.dll public class AnimatorRegistry.EnumAnimatorFactory : AnimatorRegistry.IAnimatorFactory Inheritance object AnimatorRegistry.EnumAnimatorFactory Implements AnimatorRegistry.IAnimatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EnumAnimatorFactory(Type) public EnumAnimatorFactory(Type enumType) Parameters enumType Type Methods CreateBezierAnimator() Creates an animator with BezierKeyframeCollection<T>. public virtual IAnimator CreateBezierAnimator() Returns IAnimator The animator. CreateBlendedAnimator() public IBlendedAnimator CreateBlendedAnimator() Returns IBlendedAnimator CreateChainedAnimator() public IChainedAnimator CreateChainedAnimator() Returns IChainedAnimator CreateSimpleAnimator() Creates an animator with SimpleKeyframeCollection<T>. public IAnimator CreateSimpleAnimator() Returns IAnimator The animator."
  },
  "api/Lime.AnimatorRegistry.IAnimatorFactory.html": {
    "href": "api/Lime.AnimatorRegistry.IAnimatorFactory.html",
    "title": "Interface AnimatorRegistry.IAnimatorFactory | Citrus Engine",
    "keywords": "Interface AnimatorRegistry.IAnimatorFactory Namespace Lime Assembly Lime.dll public interface AnimatorRegistry.IAnimatorFactory Methods CreateBezierAnimator() Creates an animator with BezierKeyframeCollection<T>. IAnimator CreateBezierAnimator() Returns IAnimator The animator. CreateBlendedAnimator() IBlendedAnimator CreateBlendedAnimator() Returns IBlendedAnimator CreateChainedAnimator() IChainedAnimator CreateChainedAnimator() Returns IChainedAnimator CreateSimpleAnimator() Creates an animator with SimpleKeyframeCollection<T>. IAnimator CreateSimpleAnimator() Returns IAnimator The animator."
  },
  "api/Lime.AnimatorRegistry.html": {
    "href": "api/Lime.AnimatorRegistry.html",
    "title": "Class AnimatorRegistry | Citrus Engine",
    "keywords": "Class AnimatorRegistry Namespace Lime Assembly Lime.dll public sealed class AnimatorRegistry Inheritance object AnimatorRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors AnimatorRegistry() public AnimatorRegistry() Properties Instance public static AnimatorRegistry Instance { get; } Property Value AnimatorRegistry Methods Add(Type, IAnimatorFactory) public void Add(Type propertyType, AnimatorRegistry.IAnimatorFactory factory) Parameters propertyType Type factory AnimatorRegistry.IAnimatorFactory CanAnimateWithBezierCurve(Type) public bool CanAnimateWithBezierCurve(Type type) Parameters type Type Returns bool CanAnimateWithEasing(Type) public bool CanAnimateWithEasing(Type type) Parameters type Type Returns bool CanAnimateWithSimpleCurve(Type) public bool CanAnimateWithSimpleCurve(Type type) Parameters type Type Returns bool CanAnimateWithSimpleLinearInterpolation(Type) public bool CanAnimateWithSimpleLinearInterpolation(Type type) Parameters type Type Returns bool CanAnimateWithSimpleSmoothInterpolation(Type) public bool CanAnimateWithSimpleSmoothInterpolation(Type type) Parameters type Type Returns bool Contains(Type) public bool Contains(Type propertyType) Parameters propertyType Type Returns bool CreateBezierAnimator(Type) public IAnimator CreateBezierAnimator(Type propertyType) Parameters propertyType Type Returns IAnimator CreateBezierAnimator(Type, string) public IAnimator CreateBezierAnimator(Type propertyType, string targetPropertyPath) Parameters propertyType Type targetPropertyPath string Returns IAnimator CreateBlendedAnimator(Type) public IBlendedAnimator CreateBlendedAnimator(Type propertyType) Parameters propertyType Type Returns IBlendedAnimator CreateChainedAnimator(Type) public IChainedAnimator CreateChainedAnimator(Type propertyType) Parameters propertyType Type Returns IChainedAnimator CreateSimpleAnimator(Type) public IAnimator CreateSimpleAnimator(Type propertyType) Parameters propertyType Type Returns IAnimator CreateSimpleAnimator(Type, string) public IAnimator CreateSimpleAnimator(Type propertyType, string targetPropertyPath) Parameters propertyType Type targetPropertyPath string Returns IAnimator EnumerateRegisteredTypes() public IEnumerable<Type> EnumerateRegisteredTypes() Returns IEnumerable<Type>"
  },
  "api/Lime.Animesh.SkinnedVertex.html": {
    "href": "api/Lime.Animesh.SkinnedVertex.html",
    "title": "Struct Animesh.SkinnedVertex | Citrus Engine",
    "keywords": "Struct Animesh.SkinnedVertex Namespace Lime Assembly Lime.dll public struct Animesh.SkinnedVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BlendIndices [YuzuMember] public Mesh3D.BlendIndices BlendIndices Field Value Mesh3D.BlendIndices BlendWeights [YuzuMember] public Mesh3D.BlendWeights BlendWeights Field Value Mesh3D.BlendWeights Color [YuzuMember] public Color4 Color Field Value Color4 Pos4 [YuzuMember] public Vector4 Pos4 Field Value Vector4 UV1 [YuzuMember] public Vector2 UV1 Field Value Vector2 Properties Pos public Vector2 Pos { get; set; } Property Value Vector2"
  },
  "api/Lime.Animesh.html": {
    "href": "api/Lime.Animesh.html",
    "title": "Class Animesh | Citrus Engine",
    "keywords": "Class Animesh Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Images\", \"Animesh\")] [TangerineReadOnlyProperties(new string[] { \"Size\" })] public class Animesh : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Animesh Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Animesh() public Animesh() Properties ConstrainedEdges [YuzuMember] public List<TopologyEdge> ConstrainedEdges { get; set; } Property Value List<TopologyEdge> Faces [YuzuMember] public List<TopologyFace> Faces { get; set; } Property Value List<TopologyFace> Sprite Gets or sets a texture upon the widget. For widgets which can not have a texture returns null. [YuzuMember] public override ISprite Sprite { get; set; } Property Value ISprite TransientVertices An auxiliary property, which is needed to store values from the Animator<T>. public List<Animesh.SkinnedVertex> TransientVertices { get; set; } Property Value List<Animesh.SkinnedVertex> Vertices [YuzuMember] public List<Animesh.SkinnedVertex> Vertices { get; set; } Property Value List<Animesh.SkinnedVertex> Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject Invalidate() public void Invalidate()"
  },
  "api/Lime.Application.html": {
    "href": "api/Lime.Application.html",
    "title": "Class Application | Citrus Engine",
    "keywords": "Class Application Namespace Lime Assembly Lime.dll public static class Application Inheritance object Application Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Input Global Input of whole application. public static readonly Input Input Field Value Input MaxDelta public const float MaxDelta = 0.0300003 Field Value float Properties CurrentCultureInfo Gets or sets CultureInfo for UI public static CultureInfo CurrentCultureInfo { get; set; } Property Value CultureInfo CurrentDeviceOrientation Gets the current device orientation. On desktop platforms it is always DeviceOrientation.LandscapeLeft. public static DeviceOrientation CurrentDeviceOrientation { get; } Property Value DeviceOrientation CurrentLanguage Gets or sets the ISO 639-1 two-letter code for current application language public static string CurrentLanguage { get; set; } Property Value string CurrentThread Gets the currently running thread. public static Thread CurrentThread { get; } Property Value Thread DesktopMousePosition public static Vector2 DesktopMousePosition { get; set; } Property Value Vector2 IsInputAccelerationListening public static bool IsInputAccelerationListening { get; set; } Property Value bool IsProduction Production flag. Set to true if application is in production. Missing textures will be rendered as transparent instead of checkered pattern. Diagnostic exceptions will not be thrown. public static bool IsProduction { get; set; } Property Value bool MainMenu public static IMenu MainMenu { get; set; } Property Value IMenu MainThread Gets the main (UI) thread. All rendering is beging processed on the main thread. public static Thread MainThread { get; } Property Value Thread MainWindow public static IWindow MainWindow { get; set; } Property Value IWindow Platform Gets the current platform public static PlatformId Platform { get; } Property Value PlatformId RenderingBackend public static RenderingBackend RenderingBackend { get; } Property Value RenderingBackend ScreenDPI Returns the main display's pixel density. public static Vector2 ScreenDPI { get; } Property Value Vector2 SoftKeyboard Software (on-screen) keyboard for mobile devices. public static ISoftKeyboard SoftKeyboard { get; } Property Value ISoftKeyboard SupportedDeviceOrientations Supported device orientations (only for mobile platforms) public static DeviceOrientation SupportedDeviceOrientations { get; set; } Property Value DeviceOrientation WindowUnderMouse public static IWindow WindowUnderMouse { get; } Property Value IWindow Windows public static IEnumerable<IWindow> Windows { get; } Property Value IEnumerable<IWindow> Methods AreAllWindowsInactive() public static bool AreAllWindowsInactive() Returns bool DoExited() public static void DoExited() DoExiting() public static bool DoExiting() Returns bool EnumerateSupportedRenderingBackends() Enumerates rendering backends supported by current device. Only implemented for WIN and MAC and throws NotImplmentedException on other platforms. public static IEnumerable<RenderingBackend> EnumerateSupportedRenderingBackends() Returns IEnumerable<RenderingBackend> Exit() Terminates the application. public static void Exit() FreeScheduledActions() Use in Orange to free references, since Orange doesn't invoke Lime.Application RunScheduledActions in main thread. This function MUST be removed as soon as new Orange will be implemented with use of OpenTK and our Widget system. public static void FreeScheduledActions() Initialize(ApplicationOptions) public static void Initialize(ApplicationOptions options = null) Parameters options ApplicationOptions InvalidateWindows() public static void InvalidateWindows() InvokeOnMainThread(Action) Executes an action on the main thread. public static void InvokeOnMainThread(Action action) Parameters action Action InvokeOnNextUpdate(Action) public static void InvokeOnNextUpdate(Action action) Parameters action Action IsMain(Thread) Checks whether a thread is the main thread. public static bool IsMain(this Thread thread) Parameters thread Thread Returns bool RegisterDataLayers(IEnumerable<(string Layer, int Version)>) public static void RegisterDataLayers(IEnumerable<(string Layer, int Version)> layers) Parameters layers IEnumerable<(string Layer, int Version)> Run() Runs the main application loop on desktop platforms. Does nothing on iOS, Android. public static void Run() Events Exited public static event Action Exited Event Type Action Exiting public static event Func<bool> Exiting Event Type Func<bool> SupportedDeviceOrientationsChanged public static event Action<DeviceOrientation> SupportedDeviceOrientationsChanged Event Type Action<DeviceOrientation> UnhandledExceptionOnUpdate public static event Action<Exception> UnhandledExceptionOnUpdate Event Type Action<Exception>"
  },
  "api/Lime.ApplicationOptions.html": {
    "href": "api/Lime.ApplicationOptions.html",
    "title": "Class ApplicationOptions | Citrus Engine",
    "keywords": "Class ApplicationOptions Namespace Lime Assembly Lime.dll public class ApplicationOptions Inheritance object ApplicationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AlwaysThrowUnhandledException public bool AlwaysThrowUnhandledException Field Value bool DecodeAudioInSeparateThread public bool DecodeAudioInSeparateThread Field Value bool EnableParticleLimiter Set to true to use ParticleLimiter service. public bool EnableParticleLimiter Field Value bool NumChannels public int NumChannels Field Value int RenderingBackend public RenderingBackend RenderingBackend Field Value RenderingBackend TargetFrameRate public int TargetFrameRate Field Value int"
  },
  "api/Lime.ArrayEqualityComparer-1.html": {
    "href": "api/Lime.ArrayEqualityComparer-1.html",
    "title": "Class ArrayEqualityComparer<T> | Citrus Engine",
    "keywords": "Class ArrayEqualityComparer<T> Namespace Lime Assembly Lime.dll public class ArrayEqualityComparer<T> : IEqualityComparer<T[]> Type Parameters T Inheritance object ArrayEqualityComparer<T> Implements IEqualityComparer<T[]> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArrayEqualityComparer(IEqualityComparer<T>) public ArrayEqualityComparer(IEqualityComparer<T> elementComparer) Parameters elementComparer IEqualityComparer<T> Fields Default public static readonly ArrayEqualityComparer<T> Default Field Value ArrayEqualityComparer<T> Methods Equals(T[], T[]) Determines whether the specified objects are equal. public bool Equals(T[] x, T[] y) Parameters x T[] The first object of type T to compare. y T[] The second object of type T to compare. Returns bool true if the specified objects are equal; otherwise, false. GetHashCode(T[]) Returns a hash code for the specified object. public int GetHashCode(T[] x) Parameters x T[] Returns int A hash code for the specified object. Exceptions ArgumentNullException The type of obj is a reference type and obj is null."
  },
  "api/Lime.AssetAttributes.html": {
    "href": "api/Lime.AssetAttributes.html",
    "title": "Enum AssetAttributes | Citrus Engine",
    "keywords": "Enum AssetAttributes Namespace Lime Assembly Lime.dll [Flags] public enum AssetAttributes Fields NonPowerOf2Texture = 2 None = 0 Zipped = ZippedDeflate | ZippedLZMA ZippedDeflate = 1 ZippedLZMA = 4"
  },
  "api/Lime.AssetBundle.html": {
    "href": "api/Lime.AssetBundle.html",
    "title": "Class AssetBundle | Citrus Engine",
    "keywords": "Class AssetBundle Namespace Lime Assembly Lime.dll public abstract class AssetBundle : IDisposable Inheritance object AssetBundle Implements IDisposable Derived AggregateAssetBundle FilesystemAssetBundle PackedAssetBundle WrappedAssetBundle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Current public static AssetBundle Current { get; set; } Property Value AssetBundle Initialized public static bool Initialized { get; } Property Value bool Methods DeleteFile(string) public abstract void DeleteFile(string path) Parameters path string Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public virtual void Dispose() EnumerateFiles(string, string) Enumerates all files by given path and having the given extension. Order is specific to implementation. public abstract IEnumerable<string> EnumerateFiles(string path = null, string extension = null) Parameters path string extension string Returns IEnumerable<string> FileExists(string) public abstract bool FileExists(string path) Parameters path string Returns bool FromSystemPath(string) Translates absolute system file path to the asset path. Raises UnsupportedException() for PackedAssetBundle. public abstract string FromSystemPath(string systemPath) Parameters systemPath string Returns string GetFileAttributes(string) public virtual AssetAttributes GetFileAttributes(string path) Parameters path string Returns AssetAttributes GetFileContentsHash(string) Returns SHA256 based on the file contents. public abstract SHA256 GetFileContentsHash(string path) Parameters path string Returns SHA256 GetFileOriginHash(string) Returns SHA256 that was passed to the ImportFile or ImportFileRaw methods. public abstract SHA256 GetFileOriginHash(string path) Parameters path string Returns SHA256 GetFileSize(string) public abstract int GetFileSize(string path) Parameters path string Returns int GetFileUnpackedSize(string) public abstract int GetFileUnpackedSize(string path) Parameters path string Returns int GetLocalizedPath(string) public string GetLocalizedPath(string path) Parameters path string Returns string ImportFile(string, Stream, SHA256, AssetAttributes) public abstract void ImportFile(string destinationPath, Stream stream, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream originHash SHA256 attributes AssetAttributes ImportFile(string, string, SHA256, AssetAttributes) public void ImportFile(string sourcePath, string destinationPath, SHA256 originHash, AssetAttributes attributes) Parameters sourcePath string destinationPath string originHash SHA256 attributes AssetAttributes ImportFileRaw(string, Stream, int, SHA256, SHA256, AssetAttributes) Imports a file assuming that the input stream is already compressed. public abstract void ImportFileRaw(string destinationPath, Stream stream, int unpackedSize, SHA256 hash, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream unpackedSize int hash SHA256 originHash SHA256 attributes AssetAttributes OpenFile(string, FileMode) public abstract Stream OpenFile(string path, FileMode fileMode = FileMode.Open) Parameters path string fileMode FileMode Returns Stream OpenFileLocalized(string) public Stream OpenFileLocalized(string path) Parameters path string Returns Stream OpenFileRaw(string, FileMode) Returns file data as it stored in the asset bundle, e.g. compressed. public abstract Stream OpenFileRaw(string path, FileMode fileMode = FileMode.Open) Parameters path string fileMode FileMode Returns Stream ReadAllText(string, Encoding) public string ReadAllText(string path, Encoding encoding) Parameters path string encoding Encoding Returns string ReadFile(string) public byte[] ReadFile(string path) Parameters path string Returns byte[] SetCurrent(AssetBundle, bool) public static void SetCurrent(AssetBundle bundle, bool resetTexturePool = false) Parameters bundle AssetBundle resetTexturePool bool ToSystemPath(string) Translates bundle path to the asset in the file system. Raises UnsupportedException() for PackedAssetBundle. public abstract string ToSystemPath(string bundlePath) Parameters bundlePath string Returns string"
  },
  "api/Lime.AssetBundleFlags.html": {
    "href": "api/Lime.AssetBundleFlags.html",
    "title": "Enum AssetBundleFlags | Citrus Engine",
    "keywords": "Enum AssetBundleFlags Namespace Lime Assembly Lime.dll [Flags] public enum AssetBundleFlags Fields None = 0 Writable = 1"
  },
  "api/Lime.AssetBundleToolbox.html": {
    "href": "api/Lime.AssetBundleToolbox.html",
    "title": "Class AssetBundleToolbox | Citrus Engine",
    "keywords": "Class AssetBundleToolbox Namespace Lime Assembly Lime.dll public static class AssetBundleToolbox Inheritance object AssetBundleToolbox Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreatePatch(List<AssetBundle>, AssetBundle, AssetBundle, int) Creates a new asset bundle patch. public static void CreatePatch(List<AssetBundle> previousBundlePatches, AssetBundle currentBundle, AssetBundle currentBundlePatch, int baseBundleVersion) Parameters previousBundlePatches List<AssetBundle> List of previously created bundle patches. currentBundle AssetBundle Up-to-date bundle with all assets. currentBundlePatch AssetBundle Output bundle patch. baseBundleVersion int Version on the last bundle patch in the previousBundlePatches list."
  },
  "api/Lime.AssetPath.html": {
    "href": "api/Lime.AssetPath.html",
    "title": "Class AssetPath | Citrus Engine",
    "keywords": "Class AssetPath Namespace Lime Assembly Lime.dll public static class AssetPath Inheritance object AssetPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Combine(string, string) public static string Combine(string path1, string path2) Parameters path1 string path2 string Returns string Combine(params string[]) public static string Combine(params string[] paths) Parameters paths string[] Returns string CorrectSlashes(string) public static string CorrectSlashes(string path) Parameters path string Returns string GetDirectoryName(string) public static string GetDirectoryName(string path) Parameters path string Returns string"
  },
  "api/Lime.AssetStream.html": {
    "href": "api/Lime.AssetStream.html",
    "title": "Class AssetStream | Citrus Engine",
    "keywords": "Class AssetStream Namespace Lime Assembly Lime.dll public sealed class AssetStream : Stream, IAsyncDisposable, IDisposable Inheritance object MarshalByRefObject Stream AssetStream Implements IAsyncDisposable IDisposable Inherited Members Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyToAsync(Stream, CancellationToken) Stream.Dispose() Stream.DisposeAsync() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.Read(Span<byte>) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.ReadAtLeast(Span<byte>, int, bool) Stream.ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken) Stream.ReadByte() Stream.ReadExactly(byte[], int, int) Stream.ReadExactly(Span<byte>) Stream.ReadExactlyAsync(byte[], int, int, CancellationToken) Stream.ReadExactlyAsync(Memory<byte>, CancellationToken) Stream.Synchronized(Stream) Stream.Write(ReadOnlySpan<byte>) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.WriteByte(byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors AssetStream(PackedAssetBundle, string) public AssetStream(PackedAssetBundle bundle, string path) Parameters bundle PackedAssetBundle path string Properties CanRead When overridden in a derived class, gets a value indicating whether the current stream supports reading. public override bool CanRead { get; } Property Value bool true if the stream supports reading; otherwise, false. CanSeek When overridden in a derived class, gets a value indicating whether the current stream supports seeking. public override bool CanSeek { get; } Property Value bool true if the stream supports seeking; otherwise, false. CanWrite When overridden in a derived class, gets a value indicating whether the current stream supports writing. public override bool CanWrite { get; } Property Value bool true if the stream supports writing; otherwise, false. Length When overridden in a derived class, gets the length in bytes of the stream. public override long Length { get; } Property Value long A long value representing the length of the stream in bytes. Exceptions NotSupportedException A class derived from Stream does not support seeking and the length is unknown. ObjectDisposedException Methods were called after the stream was closed. Position When overridden in a derived class, gets or sets the position within the current stream. public override long Position { get; set; } Property Value long The current position within the stream. Exceptions IOException An I/O error occurs. NotSupportedException The stream does not support seeking. ObjectDisposedException Methods were called after the stream was closed. Methods Dispose(bool) Releases the unmanaged resources used by the Stream and optionally releases the managed resources. protected override void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. Flush() When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device. public override void Flush() Exceptions IOException An I/O error occurs. Read(byte[], int, int) When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read. public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source. offset int The zero-based byte offset in buffer at which to begin storing the data read from the current stream. count int The maximum number of bytes to be read from the current stream. Returns int The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if count is 0 or the end of the stream has been reached. Exceptions ArgumentException The sum of offset and count is larger than the buffer length. ArgumentNullException buffer is null. ArgumentOutOfRangeException offset or count is negative. IOException An I/O error occurs. NotSupportedException The stream does not support reading. ObjectDisposedException Methods were called after the stream was closed. Seek(long, SeekOrigin) When overridden in a derived class, sets the position within the current stream. public override long Seek(long offset, SeekOrigin origin) Parameters offset long A byte offset relative to the origin parameter. origin SeekOrigin A value of type SeekOrigin indicating the reference point used to obtain the new position. Returns long The new position within the current stream. Exceptions IOException An I/O error occurs. NotSupportedException The stream does not support seeking, such as if the stream is constructed from a pipe or console output. ObjectDisposedException Methods were called after the stream was closed. SetLength(long) When overridden in a derived class, sets the length of the current stream. public override void SetLength(long value) Parameters value long The desired length of the current stream in bytes. Exceptions IOException An I/O error occurs. NotSupportedException The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. ObjectDisposedException Methods were called after the stream was closed. Write(byte[], int, int) When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written. public override void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] An array of bytes. This method copies count bytes from buffer to the current stream. offset int The zero-based byte offset in buffer at which to begin copying bytes to the current stream. count int The number of bytes to be written to the current stream. Exceptions ArgumentException The sum of offset and count is greater than the buffer length. ArgumentNullException buffer is null. ArgumentOutOfRangeException offset or count is negative. IOException An I/O error occurred, such as the specified file cannot be found. NotSupportedException The stream does not support writing. ObjectDisposedException Write(byte[], int, int) was called after the stream was closed."
  },
  "api/Lime.Attributes-1.html": {
    "href": "api/Lime.Attributes-1.html",
    "title": "Class Attributes<T> | Citrus Engine",
    "keywords": "Class Attributes<T> Namespace Lime Assembly Lime.dll public static class Attributes<T> where T : Attribute Type Parameters T Inheritance object Attributes<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Get(MemberInfo, bool) public static T Get(MemberInfo memberInfo, bool inherit = false) Parameters memberInfo MemberInfo inherit bool Returns T GetAll(MemberInfo, bool) public static T[] GetAll(MemberInfo memberInfo, bool inherit = false) Parameters memberInfo MemberInfo inherit bool Returns T[] IsDefined(MemberInfo, bool) public static bool IsDefined(MemberInfo memberInfo, bool inherit = false) Parameters memberInfo MemberInfo inherit bool Returns bool"
  },
  "api/Lime.Audio.html": {
    "href": "api/Lime.Audio.html",
    "title": "Class Audio | Citrus Engine",
    "keywords": "Class Audio Namespace Lime Assembly Lime.dll public class Audio : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Audio Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Audio() public Audio() Fields GloballyEnable public static bool GloballyEnable Field Value bool Properties Action [TangerineKeyframeColor(15)] public AudioAction Action { get; set; } Property Value AudioAction AuxiliaryPitch public float AuxiliaryPitch { get; set; } Property Value float AuxiliaryVolume public float AuxiliaryVolume { get; set; } Property Value float Continuous [YuzuMember] [TangerineKeyframeColor(27)] public bool Continuous { get; set; } Property Value bool Exclusive Mute all audio channels withing same Group when this audio is playing. Multiple exclusive audio mute and unmute each other in stack order. FadeInTime and FadeTime are used for transitions between exclusive audio. [YuzuMember] [TangerineTooltip(\"Mute all audio channels within same audio group when this audio is playing.\\nMultiple exclusive audio mute and unmute each other in stack order.\\nUse Fade In Time and Fade Out Time for transitions.\")] public bool Exclusive { get; set; } Property Value bool FadeInTime [YuzuMember] [TangerineKeyframeColor(21)] [Validation.Range(0, Infinity)] [TangerineDisplayName(\"Fade In Time\")] public float FadeInTime { get; set; } Property Value float FadeTime [YuzuMember] [TangerineKeyframeColor(21)] [Validation.Range(0, Infinity)] [TangerineDisplayName(\"Fade Out Time\")] public float FadeTime { get; set; } Property Value float Group [YuzuMember] [TangerineKeyframeColor(25)] public AudioChannelGroup Group { get; set; } Property Value AudioChannelGroup Looping [YuzuMember] [TangerineKeyframeColor(20)] public bool Looping { get; set; } Property Value bool Pan [YuzuMember] [TangerineKeyframeColor(23)] [Validation.Range(-1, 1)] public float Pan { get; set; } Property Value float Pitch [YuzuMember] [TangerineKeyframeColor(24)] [Validation.Range(0.0625, 16)] public float Pitch { get; set; } Property Value float Priority [YuzuMember] [TangerineKeyframeColor(26)] public float Priority { get; set; } Property Value float Sample [YuzuMember] [TangerineKeyframeColor(19)] public SerializableSample Sample { get; set; } Property Value SerializableSample Volume [YuzuMember] [TangerineKeyframeColor(22)] [Validation.Range(0, 1)] public float Volume { get; set; } Property Value float Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain IsPlaying() public bool IsPlaying() Returns bool OnTrigger(string, object, double) Invokes when the trigger property has been changed by animation. public override void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string A property name. value object A new property value. animationTimeCorrection double An animation time correction. Pause() public virtual void Pause() Play() public virtual void Play() Resume() public virtual void Resume() Stop() public virtual void Stop()"
  },
  "api/Lime.AudioAction.html": {
    "href": "api/Lime.AudioAction.html",
    "title": "Enum AudioAction | Citrus Engine",
    "keywords": "Enum AudioAction Namespace Lime Assembly Lime.dll public enum AudioAction Fields Pause = 2 Play = 0 Stop = 1"
  },
  "api/Lime.AudioChannel.html": {
    "href": "api/Lime.AudioChannel.html",
    "title": "Class AudioChannel | Citrus Engine",
    "keywords": "Class AudioChannel Namespace Lime Assembly Lime.dll public class AudioChannel : IDisposable, IAudioChannel Inheritance object AudioChannel Implements IDisposable IAudioChannel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AudioChannel(int) public AudioChannel(int index) Parameters index int Fields BufferSize public const int BufferSize = 32768 Field Value int Id public int Id Field Value int NumBuffers public const int NumBuffers = 8 Field Value int Priority public float Priority Field Value float StartupTime public DateTime StartupTime Field Value DateTime Properties FadeInTime public float FadeInTime { get; } Property Value float FadeOutTime public float FadeOutTime { get; } Property Value float Group public AudioChannelGroup Group { get; set; } Property Value AudioChannelGroup Pan public float Pan { get; set; } Property Value float Pitch public float Pitch { get; set; } Property Value float SamplePath public string SamplePath { get; set; } Property Value string Sound public Sound Sound { get; } Property Value Sound State public AudioChannelState State { get; } Property Value AudioChannelState Streaming public bool Streaming { get; } Property Value bool Volume public float Volume { get; set; } Property Value float Methods CreateOpenALResources() public void CreateOpenALResources() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() DisposeOpenALResources() public void DisposeOpenALResources() Pause(float) public void Pause(float fadeOutTime = 0) Parameters fadeOutTime float Resume(float) public void Resume(float fadeInTime = 0) Parameters fadeInTime float Stop(float) public void Stop(float fadeOutTime = 0) Parameters fadeOutTime float Suspend(float) public PlayParameters Suspend(float fadeOutTime = 0) Parameters fadeOutTime float Returns PlayParameters Update(float) public void Update(float delta) Parameters delta float"
  },
  "api/Lime.AudioChannelGroup.html": {
    "href": "api/Lime.AudioChannelGroup.html",
    "title": "Enum AudioChannelGroup | Citrus Engine",
    "keywords": "Enum AudioChannelGroup Namespace Lime Assembly Lime.dll public enum AudioChannelGroup Fields Effects = 0 Music = 1 Voice = 2"
  },
  "api/Lime.AudioChannelState.html": {
    "href": "api/Lime.AudioChannelState.html",
    "title": "Enum AudioChannelState | Citrus Engine",
    "keywords": "Enum AudioChannelState Namespace Lime Assembly Lime.dll public enum AudioChannelState Fields Initial = 0 Invalid = 4 Paused = 3 Playing = 1 Stopped = 2"
  },
  "api/Lime.AudioDecoderFactory.html": {
    "href": "api/Lime.AudioDecoderFactory.html",
    "title": "Class AudioDecoderFactory | Citrus Engine",
    "keywords": "Class AudioDecoderFactory Namespace Lime Assembly Lime.dll public class AudioDecoderFactory Inheritance object AudioDecoderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateDecoder(Stream) public static IAudioDecoder CreateDecoder(Stream stream) Parameters stream Stream Returns IAudioDecoder"
  },
  "api/Lime.AudioFormat.html": {
    "href": "api/Lime.AudioFormat.html",
    "title": "Enum AudioFormat | Citrus Engine",
    "keywords": "Enum AudioFormat Namespace Lime Assembly Lime.dll public enum AudioFormat Fields Mono16 = 1 Stereo16 = 0"
  },
  "api/Lime.AudioPlayer.html": {
    "href": "api/Lime.AudioPlayer.html",
    "title": "Class AudioPlayer | Citrus Engine",
    "keywords": "Class AudioPlayer Namespace Lime Assembly Lime.dll public class AudioPlayer Inheritance object AudioPlayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AudioPlayer() public AudioPlayer() Methods Bump() public void Bump() Write(byte[]) public void Write(byte[] pcm) Parameters pcm byte[]"
  },
  "api/Lime.AudioRandomizerComponent.html": {
    "href": "api/Lime.AudioRandomizerComponent.html",
    "title": "Class AudioRandomizerComponent | Citrus Engine",
    "keywords": "Class AudioRandomizerComponent Namespace Lime Assembly Lime.dll [AllowedComponentOwnerTypes(new Type[] { typeof(Audio) })] public class AudioRandomizerComponent : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior AudioRandomizerComponent Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.Order NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.Update(float) NodeBehavior.LateUpdate(float) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors AudioRandomizerComponent() public AudioRandomizerComponent() Properties Pitch [YuzuMember] public NumericRange Pitch { get; set; } Property Value NumericRange Samples [YuzuMember] public AnimableList<SerializableSample> Samples { get; } Property Value AnimableList<SerializableSample> Volume [YuzuMember] public NumericRange Volume { get; set; } Property Value NumericRange Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node OnTrigger(string, object, double) public override void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string value object animationTimeCorrection double"
  },
  "api/Lime.AudioSystem.html": {
    "href": "api/Lime.AudioSystem.html",
    "title": "Class AudioSystem | Citrus Engine",
    "keywords": "Class AudioSystem Namespace Lime Assembly Lime.dll public static class AudioSystem Inheritance object AudioSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ExclusiveAudioDefaultCrossfadeTime Default time for fade in and fade out when performing cross fade between exclusive channels. To override for corresponding kind of fade set either FadeTime or FadeInTime to non zero. public static float ExclusiveAudioDefaultCrossfadeTime Field Value float Properties Active public static bool Active { get; set; } Property Value bool Channels public static IEnumerable<IAudioChannel> Channels { get; } Property Value IEnumerable<IAudioChannel> Methods GetGroupVolume(AudioChannelGroup) public static float GetGroupVolume(AudioChannelGroup group) Parameters group AudioChannelGroup Returns float Initialize(ApplicationOptions) public static void Initialize(ApplicationOptions options) Parameters options ApplicationOptions PauseAll() public static void PauseAll() PauseGroup(AudioChannelGroup) public static void PauseGroup(AudioChannelGroup group) Parameters group AudioChannelGroup Play(PlayParameters) public static Sound Play(PlayParameters parameters) Parameters parameters PlayParameters Returns Sound Play(string, AudioChannelGroup, bool, float, float, bool, float, float, float, bool, float) public static Sound Play(string path, AudioChannelGroup group, bool looping = false, float priority = 0.5, float fadeInTime = 0, bool paused = false, float volume = 1, float pan = 0, float pitch = 1, bool exclusive = false, float fadeOutTime = 0) Parameters path string group AudioChannelGroup looping bool priority float fadeInTime float paused bool volume float pan float pitch float exclusive bool fadeOutTime float Returns Sound PlayEffect(string, bool, float, float, bool, float, float, float) public static Sound PlayEffect(string path, bool looping = false, float priority = 0.5, float fadeinTime = 0, bool paused = false, float volume = 1, float pan = 0, float pitch = 1) Parameters path string looping bool priority float fadeinTime float paused bool volume float pan float pitch float Returns Sound PlayMusic(string, bool, float, float, bool, float, float, float) public static Sound PlayMusic(string path, bool looping = true, float priority = 100, float fadeinTime = 0.5, bool paused = false, float volume = 1, float pan = 0, float pitch = 1) Parameters path string looping bool priority float fadeinTime float paused bool volume float pan float pitch float Returns Sound ResumeAll() public static void ResumeAll() ResumeGroup(AudioChannelGroup) public static void ResumeGroup(AudioChannelGroup group) Parameters group AudioChannelGroup SetGroupVolume(AudioChannelGroup, float) public static float SetGroupVolume(AudioChannelGroup group, float value) Parameters group AudioChannelGroup value float Returns float StopAll() public static void StopAll() StopGroup(AudioChannelGroup, float) public static void StopGroup(AudioChannelGroup group, float fadeoutTime = 0) Parameters group AudioChannelGroup fadeoutTime float Terminate() public static void Terminate() Update() public static void Update() Events AudioMissing public static event Action<string> AudioMissing Event Type Action<string>"
  },
  "api/Lime.AwakeBehavior.html": {
    "href": "api/Lime.AwakeBehavior.html",
    "title": "Class AwakeBehavior | Citrus Engine",
    "keywords": "Class AwakeBehavior Namespace Lime Assembly Lime.dll public class AwakeBehavior : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior AwakeBehavior Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.Update(float) NodeBehavior.LateUpdate(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties IsAwoken public bool IsAwoken { get; } Property Value bool Order public override int Order { get; } Property Value int Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node OnRegister() protected override void OnRegister() Events Action public event Action<Node> Action Event Type Action<Node>"
  },
  "api/Lime.BehaviorComponent.html": {
    "href": "api/Lime.BehaviorComponent.html",
    "title": "Class BehaviorComponent | Citrus Engine",
    "keywords": "Class BehaviorComponent Namespace Lime Assembly Lime.dll BehaviorComponent is NodeComponent that used for scripting node behavior. public class BehaviorComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent Implements IDisposable IAnimable Derived AnimationBlender BoneArrayUpdaterBehavior ButtonBehavior LegacyBehaviorContainer NodeBehavior UpdatableNodeBehavior Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Suspended Determines if behavior is suspended. public bool Suspended { get; } Property Value bool Methods OnOwnerFrozenChanged() Occurs when the GloballyFrozen property of the owner node changes. protected virtual void OnOwnerFrozenChanged() Resume() Resumes the Update calls. public bool Resume() Returns bool Start() Start is called on the frame in which the component had added just before Update method is called first time. Note: Start doesn't called immediately at the time it is adding. protected virtual void Start() Stop(Node) Stop is called immediately after component had removed protected virtual void Stop(Node owner) Parameters owner Node Previous owner node. Suspend() Stops the Update calls. public bool Suspend() Returns bool Update(float) Update is called on every frame if the owner node isn't frozen and the behavior isn't suspended. protected virtual void Update(float delta) Parameters delta float Elapsed time between frames."
  },
  "api/Lime.BehaviorSetupProcessor.html": {
    "href": "api/Lime.BehaviorSetupProcessor.html",
    "title": "Class BehaviorSetupProcessor | Citrus Engine",
    "keywords": "Class BehaviorSetupProcessor Namespace Lime Assembly Lime.dll public class BehaviorSetupProcessor : NodeComponentProcessor<BehaviorComponent> Inheritance object NodeProcessor NodeComponentProcessor NodeComponentProcessor<BehaviorComponent> BehaviorSetupProcessor Inherited Members NodeComponentProcessor<BehaviorComponent>.InternalAdd(NodeComponent, Node) NodeComponentProcessor<BehaviorComponent>.InternalRemove(NodeComponent, Node) NodeComponentProcessor<BehaviorComponent>.InternalOnOwnerFrozenChanged(NodeComponent, Node) NodeComponentProcessor.TargetComponentType NodeProcessor.Manager NodeProcessor.Update(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Add(BehaviorComponent, Node) protected override void Add(BehaviorComponent component, Node owner) Parameters component BehaviorComponent owner Node OnOwnerFrozenChanged(BehaviorComponent, Node) protected override void OnOwnerFrozenChanged(BehaviorComponent component, Node owner) Parameters component BehaviorComponent owner Node Remove(BehaviorComponent, Node) protected override void Remove(BehaviorComponent component, Node owner) Parameters component BehaviorComponent owner Node Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager"
  },
  "api/Lime.BehaviorSystem.html": {
    "href": "api/Lime.BehaviorSystem.html",
    "title": "Class BehaviorSystem | Citrus Engine",
    "keywords": "Class BehaviorSystem Namespace Lime Assembly Lime.dll public class BehaviorSystem Inheritance object BehaviorSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetUpdateStage(Type) public BehaviorUpdateStage GetUpdateStage(Type stageType) Parameters stageType Type Returns BehaviorUpdateStage HasStartPendingBehaviors() public bool HasStartPendingBehaviors() Returns bool StartPendingBehaviors() public void StartPendingBehaviors()"
  },
  "api/Lime.BehaviorUpdateProcessor.html": {
    "href": "api/Lime.BehaviorUpdateProcessor.html",
    "title": "Class BehaviorUpdateProcessor | Citrus Engine",
    "keywords": "Class BehaviorUpdateProcessor Namespace Lime Assembly Lime.dll public class BehaviorUpdateProcessor : NodeProcessor Inheritance object NodeProcessor BehaviorUpdateProcessor Inherited Members NodeProcessor.Manager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BehaviorUpdateProcessor(Type) public BehaviorUpdateProcessor(Type updateStageType) Parameters updateStageType Type Fields UpdateStageType public readonly Type UpdateStageType Field Value Type Methods Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.BehaviorUpdateStage.html": {
    "href": "api/Lime.BehaviorUpdateStage.html",
    "title": "Class BehaviorUpdateStage | Citrus Engine",
    "keywords": "Class BehaviorUpdateStage Namespace Lime Assembly Lime.dll public class BehaviorUpdateStage Inheritance object BehaviorUpdateStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BehaviorSystem public readonly BehaviorSystem BehaviorSystem Field Value BehaviorSystem StageType public readonly Type StageType Field Value Type Methods Update(float) public void Update(float delta) Parameters delta float"
  },
  "api/Lime.BezierAnimationCurve-1.html": {
    "href": "api/Lime.BezierAnimationCurve-1.html",
    "title": "Class BezierAnimationCurve<T> | Citrus Engine",
    "keywords": "Class BezierAnimationCurve<T> Namespace Lime Assembly Lime.dll public abstract class BezierAnimationCurve<T> : IAnimationCurve<T>, IBezierAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<T> Type Parameters T Inheritance object BezierAnimationCurve<T> Implements IAnimationCurve<T> IBezierAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<T> Derived FloatBezierAnimationCurve NumericRangeBezierAnimationCurve Vector2BezierAnimationCurve Vector3BezierAnimationCurve Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BezierAnimationCurve() public BezierAnimationCurve() Properties Duration public int Duration { get; } Property Value int IsEmpty public bool IsEmpty { get; } Property Value bool Keys [YuzuMember] public BezierKeyframeCollection<T> Keys { get; } Property Value BezierKeyframeCollection<T> RefCount public int RefCount { get; } Property Value int Methods AddRef() public void AddRef() CreateEvaluator() public IAnimationCurveEvaluator<T> CreateEvaluator() Returns IAnimationCurveEvaluator<T> Interpolate(int, float, float) protected abstract T Interpolate(int index, float time, float intervalTime) Parameters index int time float intervalTime float Returns T Release() public void Release()"
  },
  "api/Lime.BezierEasing.html": {
    "href": "api/Lime.BezierEasing.html",
    "title": "Struct BezierEasing | Citrus Engine",
    "keywords": "Struct BezierEasing Namespace Lime Assembly Lime.dll public struct BezierEasing : IEquatable<BezierEasing> Implements IEquatable<BezierEasing> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Default public static readonly BezierEasing Default Field Value BezierEasing Properties this[int] public float this[int component] { get; set; } Parameters component int Property Value float P1 public Vector2 P1 { get; set; } Property Value Vector2 P1X [YuzuMember] public float P1X { readonly get; set; } Property Value float P1Y [YuzuMember] public float P1Y { readonly get; set; } Property Value float P2 public Vector2 P2 { get; set; } Property Value Vector2 P2X [YuzuMember] public float P2X { readonly get; set; } Property Value float P2Y [YuzuMember] public float P2Y { readonly get; set; } Property Value float Methods Clone() public BezierEasing Clone() Returns BezierEasing Equals(BezierEasing) Indicates whether the current object is equal to another object of the same type. public bool Equals(BezierEasing other) Parameters other BezierEasing An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. IsDefault() public bool IsDefault() Returns bool"
  },
  "api/Lime.BezierKeyframe-1.html": {
    "href": "api/Lime.BezierKeyframe-1.html",
    "title": "Class BezierKeyframe<T> | Citrus Engine",
    "keywords": "Class BezierKeyframe<T> Namespace Lime Assembly Lime.dll public class BezierKeyframe<T> : IBezierKeyframe, IKeyframe<T>, IKeyframe Type Parameters T Inheritance object BezierKeyframe<T> Implements IBezierKeyframe IKeyframe<T> IKeyframe Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BezierKeyframe() public BezierKeyframe() BezierKeyframe(int, T, T, T, T, T) public BezierKeyframe(int frame, T value, T inSlope, T outSlope, T inWeight, T outWeight) Parameters frame int value T inSlope T outSlope T inWeight T outWeight T Properties Flags [YuzuMember(\"6\")] public int Flags { get; set; } Property Value int Frame [YuzuMember(\"0\")] public int Frame { get; set; } Property Value int InSlope [YuzuMember(\"2\")] public T InSlope { get; set; } Property Value T InWeight [YuzuMember(\"4\")] public T InWeight { get; set; } Property Value T OutSlope [YuzuMember(\"3\")] public T OutSlope { get; set; } Property Value T OutWeight [YuzuMember(\"5\")] public T OutWeight { get; set; } Property Value T Value [YuzuMember(\"1\")] public T Value { get; set; } Property Value T"
  },
  "api/Lime.BezierKeyframeCollection-1.Enumerator.html": {
    "href": "api/Lime.BezierKeyframeCollection-1.Enumerator.html",
    "title": "Struct BezierKeyframeCollection<T>.Enumerator | Citrus Engine",
    "keywords": "Struct BezierKeyframeCollection<T>.Enumerator Namespace Lime Assembly Lime.dll public struct BezierKeyframeCollection<T>.Enumerator : IEnumerator<BezierKeyframe<T>>, IEnumerator, IDisposable Implements IEnumerator<BezierKeyframe<T>> IEnumerator IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Enumerator(BezierKeyframeCollection<T>) public Enumerator(BezierKeyframeCollection<T> collection) Parameters collection BezierKeyframeCollection<T> Properties Current Gets the element in the collection at the current position of the enumerator. public BezierKeyframe<T> Current { get; } Property Value BezierKeyframe<T> The element in the collection at the current position of the enumerator. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() MoveNext() Advances the enumerator to the next element of the collection. public bool MoveNext() Returns bool true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection. Exceptions InvalidOperationException The collection was modified after the enumerator was created. Reset() Sets the enumerator to its initial position, which is before the first element in the collection. public void Reset() Exceptions InvalidOperationException The collection was modified after the enumerator was created. NotSupportedException The enumerator does not support being reset."
  },
  "api/Lime.BezierKeyframeCollection-1.html": {
    "href": "api/Lime.BezierKeyframeCollection-1.html",
    "title": "Class BezierKeyframeCollection<T> | Citrus Engine",
    "keywords": "Class BezierKeyframeCollection<T> Namespace Lime Assembly Lime.dll public class BezierKeyframeCollection<T> : ICollection<BezierKeyframe<T>>, IEnumerable<BezierKeyframe<T>>, IKeyframeCollection, ICollection<IKeyframe>, IEnumerable<IKeyframe>, IKeyframeCollection<T>, ICollection<IKeyframe<T>>, IEnumerable<IKeyframe<T>>, IBezierKeyframeCollection, ICollection<IBezierKeyframe>, IEnumerable<IBezierKeyframe>, IEnumerable Type Parameters T Inheritance object BezierKeyframeCollection<T> Implements ICollection<BezierKeyframe<T>> IEnumerable<BezierKeyframe<T>> IKeyframeCollection ICollection<IKeyframe> IEnumerable<IKeyframe> IKeyframeCollection<T> ICollection<IKeyframe<T>> IEnumerable<IKeyframe<T>> IBezierKeyframeCollection ICollection<IBezierKeyframe> IEnumerable<IBezierKeyframe> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] public BezierKeyframe<T> this[int index] { get; } Parameters index int Property Value BezierKeyframe<T> Methods Add(BezierKeyframe<T>) Adds an item to the ICollection<T>. public void Add(BezierKeyframe<T> item) Parameters item BezierKeyframe<T> The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(IBezierKeyframe) Adds an item to the ICollection<T>. public void Add(IBezierKeyframe item) Parameters item IBezierKeyframe The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(IKeyframe) Adds an item to the ICollection<T>. public void Add(IKeyframe item) Parameters item IKeyframe The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(IKeyframe<T>) Adds an item to the ICollection<T>. public void Add(IKeyframe<T> item) Parameters item IKeyframe<T> The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(int, object) public void Add(int frame, object value) Parameters frame int value object Add(int, T) public void Add(int frame, T value) Parameters frame int value T AddRange(IEnumerable<IKeyframe<T>>) public void AddRange(IEnumerable<IKeyframe<T>> keyframes) Parameters keyframes IEnumerable<IKeyframe<T>> AddRange(IEnumerable<IKeyframe>) public void AddRange(IEnumerable<IKeyframe> keyframes) Parameters keyframes IEnumerable<IKeyframe> Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(BezierKeyframe<T>) Determines whether the ICollection<T> contains a specific value. public bool Contains(BezierKeyframe<T> item) Parameters item BezierKeyframe<T> The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(IBezierKeyframe) Determines whether the ICollection<T> contains a specific value. public bool Contains(IBezierKeyframe item) Parameters item IBezierKeyframe The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(IKeyframe) Determines whether the ICollection<T> contains a specific value. public bool Contains(IKeyframe item) Parameters item IKeyframe The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(IKeyframe<T>) Determines whether the ICollection<T> contains a specific value. public bool Contains(IKeyframe<T> item) Parameters item IKeyframe<T> The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(int) public bool Contains(int frame) Parameters frame int Returns bool CopyTo(BezierKeyframe<T>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(BezierKeyframe<T>[] array, int index) Parameters array BezierKeyframe<T>[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. index int Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(IBezierKeyframe[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(IBezierKeyframe[] array, int arrayIndex) Parameters array IBezierKeyframe[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(IKeyframe[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(IKeyframe[] array, int arrayIndex) Parameters array IKeyframe[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(IKeyframe<T>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(IKeyframe<T>[] array, int arrayIndex) Parameters array IKeyframe<T>[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetByFrame(int) public BezierKeyframe<T> GetByFrame(int frame) Parameters frame int Returns BezierKeyframe<T> GetEnumerator() public BezierKeyframeCollection<T>.Enumerator GetEnumerator() Returns BezierKeyframeCollection<T>.Enumerator IndexOf(BezierKeyframe<T>) public int IndexOf(BezierKeyframe<T> item) Parameters item BezierKeyframe<T> Returns int IndexOf(int) public int IndexOf(int frame) Parameters frame int Returns int Remove(BezierKeyframe<T>) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(BezierKeyframe<T> item) Parameters item BezierKeyframe<T> The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(IBezierKeyframe) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(IBezierKeyframe item) Parameters item IBezierKeyframe The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(IKeyframe) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(IKeyframe item) Parameters item IKeyframe The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(IKeyframe<T>) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(IKeyframe<T> item) Parameters item IKeyframe<T> The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(int) public bool Remove(int frame) Parameters frame int Returns bool RemoveAt(int) public void RemoveAt(int index) Parameters index int Update(int, IKeyframe<T>) public void Update(int index, IKeyframe<T> keyframe) Parameters index int keyframe IKeyframe<T> Update(int, object, object, object, object, object) public void Update(int index, object value, object inSlope, object outSlope, object inWeight, object outWeight) Parameters index int value object inSlope object outSlope object inWeight object outWeight object Update(int, T, T, T, T, T) public void Update(int index, T value, T inSlope, T outSlope, T inWeight, T outWeight) Parameters index int value T inSlope T outSlope T inWeight T outWeight T"
  },
  "api/Lime.BitSet32.html": {
    "href": "api/Lime.BitSet32.html",
    "title": "Struct BitSet32 | Citrus Engine",
    "keywords": "Struct BitSet32 Namespace Lime Assembly Lime.dll Representation of 32-bit array of bit flags. public struct BitSet32 : IEquatable<BitSet32> Implements IEquatable<BitSet32> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors BitSet32(uint) public BitSet32(uint value) Parameters value uint Fields Empty Returns 0x00000000 (all bits are 0). public static readonly BitSet32 Empty Field Value BitSet32 Full Returns 0xffffffff (all bits are 1). public static readonly BitSet32 Full Field Value BitSet32 Value Uint that is used for array representation. [YuzuMember(\"0\")] public uint Value Field Value uint Properties Count public int Count { get; } Property Value int this[int] public bool this[int bit] { get; set; } Parameters bit int Bit index (0 - 31). Property Value bool Methods All() Returns true if all bits are 1. public bool All() Returns bool Any() Returns true if any bit is 1. public bool Any() Returns bool Equals(BitSet32) Indicates whether the current object is equal to another object of the same type. public bool Equals(BitSet32 other) Parameters other BitSet32 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the string representation of this BitSet32 as sequence of \"0\" and \"1\" (from 32 bit to 1 bit). Zeroes on the left are trimmed. public override string ToString() Returns string Operators operator ==(BitSet32, BitSet32) public static bool operator ==(BitSet32 lhs, BitSet32 rhs) Parameters lhs BitSet32 rhs BitSet32 Returns bool operator !=(BitSet32, BitSet32) public static bool operator !=(BitSet32 lhs, BitSet32 rhs) Parameters lhs BitSet32 rhs BitSet32 Returns bool"
  },
  "api/Lime.Bitmap.html": {
    "href": "api/Lime.Bitmap.html",
    "title": "Class Bitmap | Citrus Engine",
    "keywords": "Class Bitmap Namespace Lime Assembly Lime.dll Wraps native bitmap and exposes unified methods to work with images. public class Bitmap : IDisposable Inheritance object Bitmap Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Bitmap(Color4[], int, int) Initializes a new instance of Bitmap class with the specified array of pixels, width and height. public Bitmap(Color4[] data, int width, int height) Parameters data Color4[] The array of pixels of Color4 type. width int The width, in pixels, of the new bitmap. height int The height, in pixels, of the new bitmap. Bitmap(Stream) Initializes a new instance of Bitmap class from the specified data stream. public Bitmap(Stream stream) Parameters stream Stream The data stream used to load the image. Properties HasAlpha Gets a value indicating whether this bitmap has at least one non-opaque pixel. public bool HasAlpha { get; } Property Value bool Height Gets the height, in pixels, of this bitmap. public int Height { get; } Property Value int IsValid Gets a value indicating whether this bitmap is valid. public bool IsValid { get; } Property Value bool true if this bitmap is not null or empty; otherwise, false. NativeBitmap Gets a platform specific bitmap. public Bitmap NativeBitmap { get; } Property Value Bitmap Size Gets the size this bitmap. public Vector2 Size { get; } Property Value Vector2 Width Gets the width, in pixels, of this bitmap. public int Width { get; } Property Value int Methods Clone() Creates an exact copy of this bitmap. public Bitmap Clone() Returns Bitmap The new bitmap that this method creates. Crop(IntRectangle) Creates a copy of the section of this bitmap defined by IntRectangle structure. public Bitmap Crop(IntRectangle cropArea) Parameters cropArea IntRectangle Defines the portion of this bitmap to copy. Returns Bitmap The new bitmap that this method creates. Remarks This method can not create empty bitmap. Section should be inside of the bitmap. Dispose() Releases all resources used by this bitmap. public void Dispose() GetPixels() Gets the array of pixels from this bitmap. public Color4[] GetPixels() Returns Color4[] An Color4 array of pixels. Rescale(int, int) Creates a copy of this bitmap scaled to the specified size. public Bitmap Rescale(int newWidth, int newHeight) Parameters newWidth int The width, in pixels, of the new bitmap. newHeight int The height, in pixels, of the new bitmap. Returns Bitmap The new bitmap that this method creates. Remarks This method can not create empty bitmap or flip it. SaveTo(Stream, CompressionFormat) Saves this image to the specified stream in specified compression format (default compression is PNG). public void SaveTo(Stream stream, CompressionFormat compression = CompressionFormat.Png) Parameters stream Stream The stream where the image will be saved. compression CompressionFormat Jpeg or Png. SaveTo(string, CompressionFormat) Saves this image to file with specified path in specified compression format (default compression is PNG). public void SaveTo(string path, CompressionFormat compression = CompressionFormat.Png) Parameters path string The path to a file. compression CompressionFormat Jpeg or Png."
  },
  "api/Lime.Blend.html": {
    "href": "api/Lime.Blend.html",
    "title": "Enum Blend | Citrus Engine",
    "keywords": "Enum Blend Namespace Lime Assembly Lime.dll public enum Blend Fields DstAlpha = 7 DstColor = 6 Factor = 2 InverseDstAlpha = 12 InverseDstColor = 11 InverseFactor = 8 InverseSrcAlpha = 10 InverseSrcColor = 9 One = 0 SrcAlpha = 4 SrcAlphaSaturation = 5 SrcColor = 3 Zero = 1"
  },
  "api/Lime.BlendAnimationEngine.html": {
    "href": "api/Lime.BlendAnimationEngine.html",
    "title": "Class BlendAnimationEngine | Citrus Engine",
    "keywords": "Class BlendAnimationEngine Namespace Lime Assembly Lime.dll public class BlendAnimationEngine : DefaultAnimationEngine Inheritance object AnimationEngine DefaultAnimationEngine BlendAnimationEngine Inherited Members DefaultAnimationEngine.FindMarkerAhead(Animation, double) DefaultAnimationEngine.RaiseStopped(Animation) DefaultAnimationEngine.ApplyAnimatorsAndExecuteTriggers(Animation, double, double, bool) DefaultAnimationEngine.AreEffectiveAnimatorsValid(Animation) DefaultAnimationEngine.BuildEffectiveAnimators(Animation) AnimationEngine.JumpAffectsRunningMarkerId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static BlendAnimationEngine Instance Field Value BlendAnimationEngine Methods AdvanceAnimation(Animation, double) public override void AdvanceAnimation(Animation animation, double delta) Parameters animation Animation delta double ProcessMarker(Animation, Marker, double, double) protected override void ProcessMarker(Animation animation, Marker marker, double previousTime, double currentTime) Parameters animation Animation marker Marker previousTime double currentTime double TryRunAnimation(Animation, string, double) public override bool TryRunAnimation(Animation animation, string markerId, double animationTimeCorrection = 0) Parameters animation Animation markerId string animationTimeCorrection double Returns bool"
  },
  "api/Lime.BlendFunc.html": {
    "href": "api/Lime.BlendFunc.html",
    "title": "Enum BlendFunc | Citrus Engine",
    "keywords": "Enum BlendFunc Namespace Lime Assembly Lime.dll public enum BlendFunc Fields Add = 0 ReverseSubtract = 2 Subtract = 1"
  },
  "api/Lime.BlendState.html": {
    "href": "api/Lime.BlendState.html",
    "title": "Struct BlendState | Citrus Engine",
    "keywords": "Struct BlendState Namespace Lime Assembly Lime.dll public struct BlendState Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AlphaBlendFunc public BlendFunc AlphaBlendFunc Field Value BlendFunc AlphaDstBlend public Blend AlphaDstBlend Field Value Blend AlphaSrcBlend public Blend AlphaSrcBlend Field Value Blend BlendFactor public Color4 BlendFactor Field Value Color4 ColorBlendFunc public BlendFunc ColorBlendFunc Field Value BlendFunc ColorDstBlend public Blend ColorDstBlend Field Value Blend ColorSrcBlend public Blend ColorSrcBlend Field Value Blend Default public static readonly BlendState Default Field Value BlendState Enable public bool Enable Field Value bool Properties BlendFunc public BlendFunc BlendFunc { set; } Property Value BlendFunc DstBlend public Blend DstBlend { set; } Property Value Blend SrcBlend public Blend SrcBlend { set; } Property Value Blend"
  },
  "api/Lime.Blending.html": {
    "href": "api/Lime.Blending.html",
    "title": "Enum Blending | Citrus Engine",
    "keywords": "Enum Blending Namespace Lime Assembly Lime.dll public enum Blending Extension Methods GraphicsExtensions.GetBlendState(Blending, bool) Fields Add = 3 Alpha = 2 Burn = 6 Darken = 7 Glow = 4 Inherited = 1 LcdTextFirstPass = 9 LcdTextSecondPass = 10 Modulate = 5 None = 0 Opaque = 8 PremultipliedAlpha = 11"
  },
  "api/Lime.BlendingOption.html": {
    "href": "api/Lime.BlendingOption.html",
    "title": "Class BlendingOption | Citrus Engine",
    "keywords": "Class BlendingOption Namespace Lime Assembly Lime.dll public class BlendingOption Inheritance object BlendingOption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BlendingOption() public BlendingOption() BlendingOption(double) public BlendingOption(double duration) Parameters duration double BlendingOption(int) public BlendingOption(int frames) Parameters frames int Properties Duration [YuzuMember] public double Duration { get; set; } Property Value double Frames public double Frames { get; set; } Property Value double"
  },
  "api/Lime.BloomMaterial.html": {
    "href": "api/Lime.BloomMaterial.html",
    "title": "Class BloomMaterial | Citrus Engine",
    "keywords": "Class BloomMaterial Namespace Lime Assembly Lime.dll public class BloomMaterial : IMaterial Inheritance object BloomMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BloomMaterial() public BloomMaterial() Properties BrightThreshold [YuzuMember] public float BrightThreshold { get; set; } Property Value float Id public string Id { get; set; } Property Value string InversedGammaCorrection [YuzuMember] public Vector3 InversedGammaCorrection { get; set; } Property Value Vector3 PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.BloomShaderProgram.html": {
    "href": "api/Lime.BloomShaderProgram.html",
    "title": "Class BloomShaderProgram | Citrus Engine",
    "keywords": "Class BloomShaderProgram Namespace Lime Assembly Lime.dll public class BloomShaderProgram : ShaderProgram Inheritance object ShaderProgram BloomShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance() public static BloomShaderProgram GetInstance() Returns BloomShaderProgram"
  },
  "api/Lime.BlurMaterial.html": {
    "href": "api/Lime.BlurMaterial.html",
    "title": "Class BlurMaterial | Citrus Engine",
    "keywords": "Class BlurMaterial Namespace Lime Assembly Lime.dll public class BlurMaterial : IMaterial Inheritance object BlurMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BlurMaterial() public BlurMaterial() BlurMaterial(Blending) public BlurMaterial(Blending blending) Parameters blending Blending Properties AlphaCorrection [YuzuMember] public float AlphaCorrection { get; set; } Property Value float Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending BlurShaderId [YuzuMember] public BlurShaderId BlurShaderId { get; set; } Property Value BlurShaderId Dir [YuzuMember] public Vector2 Dir { get; set; } Property Value Vector2 Id public string Id { get; set; } Property Value string Opaque [YuzuMember] public bool Opaque { get; set; } Property Value bool PassCount public int PassCount { get; } Property Value int Radius [YuzuMember] public float Radius { get; set; } Property Value float Step [YuzuMember] public Vector2 Step { get; set; } Property Value Vector2 Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.BlurShaderId.html": {
    "href": "api/Lime.BlurShaderId.html",
    "title": "Enum BlurShaderId | Citrus Engine",
    "keywords": "Enum BlurShaderId Namespace Lime Assembly Lime.dll public enum BlurShaderId Fields GaussOneDimensionalWith11Samples = 4 GaussOneDimensionalWith13Samples = 5 GaussOneDimensionalWith15Samples = 6 GaussOneDimensionalWith31Samples = 7 GaussOneDimensionalWith3Samples = 0 GaussOneDimensionalWith5Samples = 1 GaussOneDimensionalWith7Samples = 2 GaussOneDimensionalWith9Samples = 3"
  },
  "api/Lime.BlurShaderProgram.html": {
    "href": "api/Lime.BlurShaderProgram.html",
    "title": "Class BlurShaderProgram | Citrus Engine",
    "keywords": "Class BlurShaderProgram Namespace Lime Assembly Lime.dll public class BlurShaderProgram : ShaderProgram Inheritance object ShaderProgram BlurShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(BlurShaderId, bool) public static BlurShaderProgram GetInstance(BlurShaderId blurShaderId = BlurShaderId.GaussOneDimensionalWith5Samples, bool opaque = false) Parameters blurShaderId BlurShaderId opaque bool Returns BlurShaderProgram"
  },
  "api/Lime.Bone.html": {
    "href": "api/Lime.Bone.html",
    "title": "Class Bone | Citrus Engine",
    "keywords": "Class Bone Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Bones\", null)] public class Bone : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Bone Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Bone() public Bone() Properties BaseIndex [YuzuMember] public int BaseIndex { get; set; } Property Value int EffectiveRadius [YuzuMember] [TangerineKeyframeColor(8)] public float EffectiveRadius { get; set; } Property Value float FadeoutZone [YuzuMember] [TangerineKeyframeColor(9)] public float FadeoutZone { get; set; } Property Value float IKStopper [YuzuMember] [TangerineKeyframeColor(7)] public bool IKStopper { get; set; } Property Value bool Index [YuzuMember] public int Index { get; set; } Property Value int Length [YuzuMember] [TangerineKeyframeColor(2)] public float Length { get; set; } Property Value float Position [YuzuMember] [TangerineKeyframeColor(10)] public Vector2 Position { get; set; } Property Value Vector2 RefLength [YuzuMember] [TangerineKeyframeColor(12)] public float RefLength { get; set; } Property Value float RefPosition [YuzuMember] [TangerineKeyframeColor(13)] public Vector2 RefPosition { get; set; } Property Value Vector2 RefRotation [YuzuMember] [TangerineKeyframeColor(11)] public float RefRotation { get; set; } Property Value float Rotation [YuzuMember] [TangerineKeyframeColor(1)] public float Rotation { get; set; } Property Value float Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcLocalToParentWidgetTransform() public Matrix32 CalcLocalToParentWidgetTransform() Returns Matrix32 CalcWeightForPoint(Vector2) public float CalcWeightForPoint(Vector2 point) Parameters point Vector2 Returns float OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float"
  },
  "api/Lime.BoneArray.Entry.html": {
    "href": "api/Lime.BoneArray.Entry.html",
    "title": "Struct BoneArray.Entry | Citrus Engine",
    "keywords": "Struct BoneArray.Entry Namespace Lime Assembly Lime.dll public struct BoneArray.Entry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Joint public Vector2 Joint Field Value Vector2 Length public float Length Field Value float RelativeTransform Bone's transformation relative its reference position. public Matrix32 RelativeTransform Field Value Matrix32 Rotation public float Rotation Field Value float Tip public Vector2 Tip Field Value Vector2"
  },
  "api/Lime.BoneArray.html": {
    "href": "api/Lime.BoneArray.html",
    "title": "Struct BoneArray | Citrus Engine",
    "keywords": "Struct BoneArray Namespace Lime Assembly Lime.dll public struct BoneArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields items [YuzuMember] public BoneArray.Entry[] items Field Value Entry[] Properties this[int] public BoneArray.Entry this[int index] { get; set; } Parameters index int Property Value BoneArray.Entry Methods ApplySkinningToVector(Vector2, SkinningWeights) public Vector2 ApplySkinningToVector(Vector2 vector, SkinningWeights weights) Parameters vector Vector2 weights SkinningWeights Returns Vector2 CalcWeightedRelativeTransform(SkinningWeights) public Matrix32 CalcWeightedRelativeTransform(SkinningWeights weights) Parameters weights SkinningWeights Returns Matrix32"
  },
  "api/Lime.BoneArrayUpdaterBehavior.html": {
    "href": "api/Lime.BoneArrayUpdaterBehavior.html",
    "title": "Class BoneArrayUpdaterBehavior | Citrus Engine",
    "keywords": "Class BoneArrayUpdaterBehavior Namespace Lime Assembly Lime.dll [UpdateStage(typeof(LateUpdateStage))] [UpdateBeforeBehavior(typeof(UpdatableNodeBehavior))] public class BoneArrayUpdaterBehavior : BehaviorComponent, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent BoneArrayUpdaterBehavior Implements IDisposable IAnimable Inherited Members BehaviorComponent.Suspended BehaviorComponent.Start() BehaviorComponent.Stop(Node) BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Methods AddBone(Bone) public void AddBone(Bone bone) Parameters bone Bone RemoveBone(Bone) public void RemoveBone(Bone bone) Parameters bone Bone Update(float) Update is called on every frame if the owner node isn't frozen and the behavior isn't suspended. protected override void Update(float delta) Parameters delta float Elapsed time between frames."
  },
  "api/Lime.BoneUtils.html": {
    "href": "api/Lime.BoneUtils.html",
    "title": "Class BoneUtils | Citrus Engine",
    "keywords": "Class BoneUtils Namespace Lime Assembly Lime.dll public static class BoneUtils Inheritance object BoneUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CalcSkinningWeight(SkinningWeights, Vector2, List<Bone>) public static SkinningWeights CalcSkinningWeight(SkinningWeights oldSkinningWeights, Vector2 position, List<Bone> bones) Parameters oldSkinningWeights SkinningWeights position Vector2 bones List<Bone> Returns SkinningWeights CheckConsistency(IEnumerable<Bone>, params Widget[]) public static bool CheckConsistency(IEnumerable<Bone> bones, params Widget[] widgets) Parameters bones IEnumerable<Bone> widgets Widget[] Returns bool FindBoneRoot(Bone, IEnumerable<Node>) public static Bone FindBoneRoot(Bone bone, IEnumerable<Node> nodes) Parameters bone Bone nodes IEnumerable<Node> Returns Bone GenerateNewBoneIndex(Node) public static int GenerateNewBoneIndex(Node hostNode) Parameters hostNode Node Returns int GetBone(IEnumerable<Node>, int) public static Bone GetBone(this IEnumerable<Node> nodes, int index) Parameters nodes IEnumerable<Node> index int Returns Bone SortBones(IList<Bone>) Reorder bones with topological sort to maintain correct update order of transformations. public static void SortBones(IList<Bone> bones) Parameters bones IList<Bone> SortBones(IList<Node>) Reorder bones within mixed list of nodes with topological sort to maintain correct update order of transformations. public static void SortBones(IList<Node> nodes) Parameters nodes IList<Node>"
  },
  "api/Lime.BoneWeight.html": {
    "href": "api/Lime.BoneWeight.html",
    "title": "Struct BoneWeight | Citrus Engine",
    "keywords": "Struct BoneWeight Namespace Lime Assembly Lime.dll public struct BoneWeight Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Index [YuzuMember(\"0\")] public int Index Field Value int Weight [YuzuMember(\"1\")] public float Weight Field Value float"
  },
  "api/Lime.BoundingSphere.html": {
    "href": "api/Lime.BoundingSphere.html",
    "title": "Struct BoundingSphere | Citrus Engine",
    "keywords": "Struct BoundingSphere Namespace Lime Assembly Lime.dll Representation of solid sphere. public struct BoundingSphere : IEquatable<BoundingSphere> Implements IEquatable<BoundingSphere> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors BoundingSphere(Vector3, float) public BoundingSphere(Vector3 center, float radius) Parameters center Vector3 radius float Fields Center [YuzuMember] public Vector3 Center Field Value Vector3 Radius [YuzuMember] public float Radius Field Value float Methods Contains(ref BoundingSphere) Test if a sphere is fully inside, outside, or just intersecting the sphere. public ContainmentType Contains(ref BoundingSphere sphere) Parameters sphere BoundingSphere Returns ContainmentType Contains(ref Vector3) Test if a vector is fully inside, outside, or just intersecting the sphere. public ContainmentType Contains(ref Vector3 point) Parameters point Vector3 Returns ContainmentType CreateFromPoints(IEnumerable<Vector3>) Creates the smallest sphere that can contain a specified list of points. public static BoundingSphere CreateFromPoints(IEnumerable<Vector3> points) Parameters points IEnumerable<Vector3> Returns BoundingSphere Equals(BoundingSphere) Indicates whether the current object is equal to another object of the same type. public bool Equals(BoundingSphere other) Parameters other BoundingSphere An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Transform(Matrix44) Creates a new sphere that contains a transformation of translation and scale from this sphere by the specified Matrix. public BoundingSphere Transform(Matrix44 matrix) Parameters matrix Matrix44 Returns BoundingSphere Operators operator ==(BoundingSphere, BoundingSphere) public static bool operator ==(BoundingSphere a, BoundingSphere b) Parameters a BoundingSphere b BoundingSphere Returns bool operator !=(BoundingSphere, BoundingSphere) public static bool operator !=(BoundingSphere a, BoundingSphere b) Parameters a BoundingSphere b BoundingSphere Returns bool"
  },
  "api/Lime.Bounds.html": {
    "href": "api/Lime.Bounds.html",
    "title": "Struct Bounds | Citrus Engine",
    "keywords": "Struct Bounds Namespace Lime Assembly Lime.dll An axis-aligned bounding box, or AABB for short, is a box aligned with coordinate axes and fully enclosing some object. public struct Bounds : IEquatable<Bounds> Implements IEquatable<Bounds> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Bounds(Vector3, Vector3) public Bounds(Vector3 a, Vector3 b) Parameters a Vector3 b Vector3 Bounds(float, float, float, float, float, float) public Bounds(float left, float right, float bottom, float top, float back, float front) Parameters left float right float bottom float top float back float front float Fields A [YuzuMember(\"0\")] public Vector3 A Field Value Vector3 B [YuzuMember(\"1\")] public Vector3 B Field Value Vector3 Empty public static readonly Bounds Empty Field Value Bounds Properties Back public float Back { get; set; } Property Value float Bottom public float Bottom { get; set; } Property Value float Center public Vector3 Center { get; } Property Value Vector3 Depth public float Depth { get; set; } Property Value float Front public float Front { get; set; } Property Value float Height public float Height { get; set; } Property Value float Left public float Left { get; set; } Property Value float Normalized public Bounds Normalized { get; } Property Value Bounds Right public float Right { get; set; } Property Value float Size public Vector3 Size { get; } Property Value Vector3 Top public float Top { get; set; } Property Value float Width public float Width { get; set; } Property Value float Methods Combine(Bounds, Bounds) public static Bounds Combine(Bounds value1, Bounds value2) Parameters value1 Bounds value2 Bounds Returns Bounds Contains(Vector3) public bool Contains(Vector3 value) Parameters value Vector3 Returns bool Equals(Bounds) Indicates whether the current object is equal to another object of the same type. public bool Equals(Bounds other) Parameters other Bounds An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IncludingPoint(Vector3) public Bounds IncludingPoint(Vector3 value) Parameters value Vector3 Returns Bounds Intersect(Bounds, Bounds) public static Bounds Intersect(Bounds value1, Bounds value2) Parameters value1 Bounds value2 Bounds Returns Bounds ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Transform(Matrix44) public Bounds Transform(Matrix44 value) Parameters value Matrix44 Returns Bounds Operators operator ==(Bounds, Bounds) public static bool operator ==(Bounds lhs, Bounds rhs) Parameters lhs Bounds rhs Bounds Returns bool operator !=(Bounds, Bounds) public static bool operator !=(Bounds lhs, Bounds rhs) Parameters lhs Bounds rhs Bounds Returns bool"
  },
  "api/Lime.Buffer.html": {
    "href": "api/Lime.Buffer.html",
    "title": "Class Buffer | Citrus Engine",
    "keywords": "Class Buffer Namespace Lime Assembly Lime.dll public class Buffer : IDisposable Inheritance object Buffer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Buffer(BufferType, int, bool) public Buffer(BufferType type, int size, bool dynamic) Parameters type BufferType size int dynamic bool Properties Dynamic public bool Dynamic { get; } Property Value bool IsDisposed public bool IsDisposed { get; } Property Value bool Size public int Size { get; } Property Value int Type public BufferType Type { get; } Property Value BufferType Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~Buffer() protected ~Buffer() SetData(int, nint, int, BufferSetDataMode) public void SetData(int offset, nint data, int size, BufferSetDataMode mode) Parameters offset int data nint size int mode BufferSetDataMode SetData<T>(int, T[], int, int, BufferSetDataMode) public void SetData<T>(int offset, T[] data, int startIndex, int count, BufferSetDataMode mode) where T : unmanaged Parameters offset int data T[] startIndex int count int mode BufferSetDataMode Type Parameters T"
  },
  "api/Lime.BufferSetDataMode.html": {
    "href": "api/Lime.BufferSetDataMode.html",
    "title": "Enum BufferSetDataMode | Citrus Engine",
    "keywords": "Enum BufferSetDataMode Namespace Lime Assembly Lime.dll public enum BufferSetDataMode Fields Default = 0 Discard = 1"
  },
  "api/Lime.BufferType.html": {
    "href": "api/Lime.BufferType.html",
    "title": "Enum BufferType | Citrus Engine",
    "keywords": "Enum BufferType Namespace Lime Assembly Lime.dll public enum BufferType Fields Index = 1 Vertex = 0"
  },
  "api/Lime.Button.html": {
    "href": "api/Lime.Button.html",
    "title": "Class Button | Citrus Engine",
    "keywords": "Class Button Namespace Lime Assembly Lime.dll [TangerineNodeBuilder(\"BuildForTangerine\")] [TangerineAllowedChildrenTypes(new Type[] { typeof(Node) })] [TangerineVisualHintGroup(\"/All/Nodes/Containers\", null)] public class Button : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Button Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedButton ThemedTabCloseButton Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Button() public Button() Fields EnableMask public BitSet32 EnableMask Field Value BitSet32 Properties Clicked public override Action Clicked { get; set; } Property Value Action Enabled [YuzuMember] [TangerineKeyframeColor(18)] public override bool Enabled { get; set; } Property Value bool Text Get or sets a label upon the widget. For widgets which can not have a label returns null. [YuzuMember] [TangerineKeyframeColor(9)] public override string Text { get; set; } Property Value string Methods OnAwake() protected virtual void OnAwake() OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float WasClicked() public override bool WasClicked() Returns bool"
  },
  "api/Lime.ButtonBehavior.html": {
    "href": "api/Lime.ButtonBehavior.html",
    "title": "Class ButtonBehavior | Citrus Engine",
    "keywords": "Class ButtonBehavior Namespace Lime Assembly Lime.dll [UpdateStage(typeof(EarlyUpdateStage))] [UpdateAfterBehavior(typeof(LegacyEarlyBehaviorContainer))] public class ButtonBehavior : BehaviorComponent, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent ButtonBehavior Implements IDisposable IAnimable Inherited Members BehaviorComponent.Suspended BehaviorComponent.Stop(Node) BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Methods Start() Start is called on the frame in which the component had added just before Update method is called first time. Note: Start doesn't called immediately at the time it is adding. protected override void Start() Update(float) Update is called on every frame if the owner node isn't frozen and the behavior isn't suspended. protected override void Update(float delta) Parameters delta float Elapsed time between frames."
  },
  "api/Lime.Camera3D.html": {
    "href": "api/Lime.Camera3D.html",
    "title": "Class Camera3D | Citrus Engine",
    "keywords": "Class Camera3D Namespace Lime Assembly Lime.dll [TangerineNodeBuilder(\"BuildForTangerine\")] [TangerineMenuPath(\"3D/Camera 3D\")] [TangerineVisualHintGroup(\"/All/Nodes/3D\", null)] public class Camera3D : Node3D, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Node3D Camera3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node3D.localTransform Node3D.globalTransform Node3D.globalTransformInverse Node3D.globallyVisible Node3D.globallyFreezeInvisible Node3D.globalColor Node3D.Viewport Node3D.Visible Node3D.FreezeInvisible Node3D.Scale Node3D.Rotation Node3D.Position Node3D.Color Node3D.Opaque Node3D.LocalTransform Node3D.GlobalTransform Node3D.GlobalTransformInverse Node3D.GloballyVisible Node3D.GlobalColor Node3D.RecalcGloballyFrozen() Node3D.SetGlobalTransform(Matrix44) Node3D.SetGlobalTransformInverse(Matrix44) Node3D.SetLocalTransform(Matrix44) Node3D.FindModel() Node3D.TryFindModel() Node3D.CalcTransformInSpaceOf(Node3D) Node3D.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Properties AspectRatio [YuzuMember] [TangerineKeyframeColor(2)] public float AspectRatio { get; set; } Property Value float FarClipPlane [YuzuMember] [TangerineKeyframeColor(4)] public float FarClipPlane { get; set; } Property Value float FieldOfView [YuzuMember] [TangerineKeyframeColor(1)] public float FieldOfView { get; set; } Property Value float NearClipPlane [YuzuMember] [TangerineKeyframeColor(3)] public float NearClipPlane { get; set; } Property Value float OrthographicSize [YuzuMember] [TangerineKeyframeColor(5)] public float OrthographicSize { get; set; } Property Value float Projection public Matrix44 Projection { get; } Property Value Matrix44 ProjectionMode [YuzuMember] [TangerineKeyframeColor(6)] public CameraProjectionMode ProjectionMode { get; set; } Property Value CameraProjectionMode View public Matrix44 View { get; } Property Value Matrix44 ViewProjection public Matrix44 ViewProjection { get; } Property Value Matrix44"
  },
  "api/Lime.CameraProjectionMode.html": {
    "href": "api/Lime.CameraProjectionMode.html",
    "title": "Enum CameraProjectionMode | Citrus Engine",
    "keywords": "Enum CameraProjectionMode Namespace Lime Assembly Lime.dll public enum CameraProjectionMode Fields Orthographic = 0 Perspective = 1"
  },
  "api/Lime.CaretDisplay.html": {
    "href": "api/Lime.CaretDisplay.html",
    "title": "Class CaretDisplay | Citrus Engine",
    "keywords": "Class CaretDisplay Namespace Lime Assembly Lime.dll public class CaretDisplay Inheritance object CaretDisplay Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CaretDisplay(Widget, ICaretPosition, ICaretParams) public CaretDisplay(Widget container, ICaretPosition caretPos, ICaretParams caretParams) Parameters container Widget caretPos ICaretPosition caretParams ICaretParams"
  },
  "api/Lime.CaretParams.html": {
    "href": "api/Lime.CaretParams.html",
    "title": "Class CaretParams | Citrus Engine",
    "keywords": "Class CaretParams Namespace Lime Assembly Lime.dll public class CaretParams : ICaretParams Inheritance object CaretParams Implements ICaretParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BlinkInterval public float BlinkInterval { get; set; } Property Value float CaretPresenter public ICaretPresenter CaretPresenter { get; set; } Property Value ICaretPresenter FollowTextColor public bool FollowTextColor { get; set; } Property Value bool"
  },
  "api/Lime.CaretPosition.ValidState.html": {
    "href": "api/Lime.CaretPosition.ValidState.html",
    "title": "Enum CaretPosition.ValidState | Citrus Engine",
    "keywords": "Enum CaretPosition.ValidState Namespace Lime Assembly Lime.dll public enum CaretPosition.ValidState Fields All = 1 LineCol = 2 LineWorldX = 5 None = 0 TextPos = 4 WorldPos = 3"
  },
  "api/Lime.CaretPosition.html": {
    "href": "api/Lime.CaretPosition.html",
    "title": "Class CaretPosition | Citrus Engine",
    "keywords": "Class CaretPosition Namespace Lime Assembly Lime.dll public class CaretPosition : ICaretPosition Inheritance object CaretPosition Implements ICaretPosition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Col public int Col { get; set; } Property Value int IsValid public bool IsValid { get; } Property Value bool IsVisible public bool IsVisible { get; set; } Property Value bool Line public int Line { get; set; } Property Value int TextPos public int TextPos { get; set; } Property Value int Valid public CaretPosition.ValidState Valid { get; } Property Value CaretPosition.ValidState WorldPos public Vector2 WorldPos { get; set; } Property Value Vector2 Methods AssignFrom(ICaretPosition) public void AssignFrom(ICaretPosition c) Parameters c ICaretPosition ClampCol(int) public void ClampCol(int maxCol) Parameters maxCol int ClampLine(int) public void ClampLine(int lineCount) Parameters lineCount int ClampTextPos(int) public void ClampTextPos(int textLength) Parameters textLength int Clone() public ICaretPosition Clone() Returns ICaretPosition EmptyText(Vector2) public void EmptyText(Vector2 pos) Parameters pos Vector2 FinishSync() public void FinishSync() InvalidatePreservingTextPos() public void InvalidatePreservingTextPos() NextLine() public void NextLine() StartSync() public void StartSync() Sync(int, Vector2, Vector2) public void Sync(int index, Vector2 charPos, Vector2 size) Parameters index int charPos Vector2 size Vector2"
  },
  "api/Lime.CharMap.html": {
    "href": "api/Lime.CharMap.html",
    "title": "Class CharMap | Citrus Engine",
    "keywords": "Class CharMap Namespace Lime Assembly Lime.dll public class CharMap Inheritance object CharMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties this[char] public FontChar this[char code] { get; set; } Parameters code char Property Value FontChar Methods Clear() public void Clear() Contains(char) public bool Contains(char code) Parameters code char Returns bool TranslateKnownMissingChars(ref char) public static bool TranslateKnownMissingChars(ref char code) Parameters code char Returns bool"
  },
  "api/Lime.CharPosition.html": {
    "href": "api/Lime.CharPosition.html",
    "title": "Struct CharPosition | Citrus Engine",
    "keywords": "Struct CharPosition Namespace Lime Assembly Lime.dll public struct CharPosition Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Char public FontChar Char Field Value FontChar Position public Vector2 Position Field Value Vector2 Methods Size(float) public Vector2 Size(float fontHeight) Parameters fontHeight float Returns Vector2"
  },
  "api/Lime.CheckBox.ChangedEventArgs.html": {
    "href": "api/Lime.CheckBox.ChangedEventArgs.html",
    "title": "Class CheckBox.ChangedEventArgs | Citrus Engine",
    "keywords": "Class CheckBox.ChangedEventArgs Namespace Lime Assembly Lime.dll public class CheckBox.ChangedEventArgs Inheritance object CheckBox.ChangedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ChangedByUser public bool ChangedByUser Field Value bool Value public bool Value Field Value bool"
  },
  "api/Lime.CheckBox.html": {
    "href": "api/Lime.CheckBox.html",
    "title": "Class CheckBox | Citrus Engine",
    "keywords": "Class CheckBox Namespace Lime Assembly Lime.dll public class CheckBox : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CheckBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedCheckBox Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors CheckBox() public CheckBox() Properties Checked public bool Checked { get; set; } Property Value bool State public CheckBoxState State { get; set; } Property Value CheckBoxState Methods RiseChanged(bool) protected void RiseChanged(bool changedByUser = false) Parameters changedByUser bool Toggle() public void Toggle() Events Changed public event Action<CheckBox.ChangedEventArgs> Changed Event Type Action<CheckBox.ChangedEventArgs>"
  },
  "api/Lime.CheckBoxState.html": {
    "href": "api/Lime.CheckBoxState.html",
    "title": "Enum CheckBoxState | Citrus Engine",
    "keywords": "Enum CheckBoxState Namespace Lime Assembly Lime.dll public enum CheckBoxState Fields Checked = 1 Indeterminate = 2 Unchecked = 0"
  },
  "api/Lime.ClearOptions.html": {
    "href": "api/Lime.ClearOptions.html",
    "title": "Enum ClearOptions | Citrus Engine",
    "keywords": "Enum ClearOptions Namespace Lime Assembly Lime.dll [Flags] public enum ClearOptions Fields All = ColorBuffer | DepthBuffer | StencilBuffer ColorBuffer = 1 DepthBuffer = 2 None = 0 StencilBuffer = 4"
  },
  "api/Lime.ClickGesture.html": {
    "href": "api/Lime.ClickGesture.html",
    "title": "Class ClickGesture | Citrus Engine",
    "keywords": "Class ClickGesture Namespace Lime Assembly Lime.dll public class ClickGesture : TapGesture Inheritance object Gesture TapGesture ClickGesture Inherited Members TapGesture.Threshold TapGesture.Began TapGesture.Canceled TapGesture.Recognized TapGesture.MousePressPosition TapGesture.WasBegan() TapGesture.WasCanceled() TapGesture.WasRecognized() TapGesture.WasRecognizedOrCanceled() TapGesture.ButtonIndex TapGesture.OnCancel(Gesture) TapGesture.OnUpdate() Gesture.Owner Gesture.Input object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClickGesture() public ClickGesture() ClickGesture(Action) public ClickGesture(Action onRecognized) Parameters onRecognized Action ClickGesture(int) public ClickGesture(int buttonIndex) Parameters buttonIndex int ClickGesture(int, Action) public ClickGesture(int buttonIndex, Action onRecognized) Parameters buttonIndex int onRecognized Action"
  },
  "api/Lime.ClipMethod.html": {
    "href": "api/Lime.ClipMethod.html",
    "title": "Enum ClipMethod | Citrus Engine",
    "keywords": "Enum ClipMethod Namespace Lime Assembly Lime.dll public enum ClipMethod Fields NoRender = 3 None = 0 ScissorTest = 1 StencilTest = 2"
  },
  "api/Lime.Clipboard.html": {
    "href": "api/Lime.Clipboard.html",
    "title": "Class Clipboard | Citrus Engine",
    "keywords": "Class Clipboard Namespace Lime Assembly Lime.dll public static class Clipboard Inheritance object Clipboard Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Text public static string Text { get; set; } Property Value string"
  },
  "api/Lime.ClipboardImplementation.html": {
    "href": "api/Lime.ClipboardImplementation.html",
    "title": "Class ClipboardImplementation | Citrus Engine",
    "keywords": "Class ClipboardImplementation Namespace Lime Assembly Lime.dll public class ClipboardImplementation Inheritance object ClipboardImplementation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Text public string Text { get; set; } Property Value string"
  },
  "api/Lime.Cloner.html": {
    "href": "api/Lime.Cloner.html",
    "title": "Class Cloner | Citrus Engine",
    "keywords": "Class Cloner Namespace Lime Assembly Lime.dll Utility class that contain methods for cloning objects. public static class Cloner Inheritance object Cloner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clone(object) Clone the object. If source object implements ICloneable then the method will return object produced by ICloneable.Clone(). Otherwise Serialization.Clone() will be used. public static object Clone(object @object) Parameters object object A source object to clone. Returns object Clone<T>(object) public static T Clone<T>(object @object) Parameters object object Returns T Type Parameters T Clone<T>(T) Clone the object. If source object implements ICloneable then the method will return object produced by ICloneable.Clone(). Otherwise Serialization.Clone() will be used. public static T Clone<T>(T @object) Parameters object T A source object to clone. Returns T Type Parameters T A type of object that need to be returned."
  },
  "api/Lime.CloseReason.html": {
    "href": "api/Lime.CloseReason.html",
    "title": "Enum CloseReason | Citrus Engine",
    "keywords": "Enum CloseReason Namespace Lime Assembly Lime.dll Defines the reason for the window closing. public enum CloseReason Fields MainWindowClosing = 2 A window is closing because main window is closing. Unknown = 0 The cause if the closure was not defined or could not be determined. UserClosing = 1 The user has closed the window from UI."
  },
  "api/Lime.ClosingDelegate.html": {
    "href": "api/Lime.ClosingDelegate.html",
    "title": "Delegate ClosingDelegate | Citrus Engine",
    "keywords": "Delegate ClosingDelegate Namespace Lime Assembly Lime.dll Delegate used by Closing event. public delegate bool ClosingDelegate(CloseReason reason) Parameters reason CloseReason Defines the reason of window closing. Returns bool Whether to cancel closing or not."
  },
  "api/Lime.Color4.StringPresentation.html": {
    "href": "api/Lime.Color4.StringPresentation.html",
    "title": "Enum Color4.StringPresentation | Citrus Engine",
    "keywords": "Enum Color4.StringPresentation Namespace Lime Assembly Lime.dll public enum Color4.StringPresentation Fields Dec = 1 Hex = 0"
  },
  "api/Lime.Color4.html": {
    "href": "api/Lime.Color4.html",
    "title": "Struct Color4 | Citrus Engine",
    "keywords": "Struct Color4 Namespace Lime Assembly Lime.dll Representation of 4-byte color (RGBA). public struct Color4 : IEquatable<Color4> Implements IEquatable<Color4> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Color4(byte, byte, byte, byte) public Color4(byte r, byte g, byte b, byte a = 255) Parameters r byte g byte b byte a byte Color4(uint) public Color4(uint abgr) Parameters abgr uint Fields A public byte A Field Value byte ABGR [YuzuMember(\"0\")] public uint ABGR Field Value uint B public byte B Field Value byte Black public static readonly Color4 Black Field Value Color4 Blue public static readonly Color4 Blue Field Value Color4 DarkGray public static readonly Color4 DarkGray Field Value Color4 G public byte G Field Value byte Gray public static readonly Color4 Gray Field Value Color4 Green public static readonly Color4 Green Field Value Color4 Orange public static readonly Color4 Orange Field Value Color4 R public byte R Field Value byte Red public static readonly Color4 Red Field Value Color4 Transparent public static readonly Color4 Transparent Field Value Color4 White public static readonly Color4 White Field Value Color4 Yellow public static readonly Color4 Yellow Field Value Color4 Zero public static readonly Color4 Zero Field Value Color4 Methods CreateArgb(byte, byte, byte, byte) Creates an ARGB color-int from a specified alpha, red, green and blue components. public static int CreateArgb(byte alpha, byte red, byte green, byte blue) Parameters alpha byte Alpha component of the color. red byte Red component of the color. green byte Green component of the color. blue byte Blue component of the color. Returns int ARGB color-int. Darken(float) Darken the color with the specified amount. Amount 1 turns the color into black, Amount 0 remains the color unchanged. public Color4 Darken(float amount) Parameters amount float Returns Color4 Equals(Color4) Indicates whether the current object is equal to another object of the same type. public bool Equals(Color4 other) Parameters other Color4 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FromFloats(float, float, float, float) public static Color4 FromFloats(float r, float g, float b, float a = 1) Parameters r float g float b float a float Returns Color4 GetAlphaComponent(int) Gets the alpha component from a specified ARGB color-int. public static byte GetAlphaComponent(int color) Parameters color int The color as integer value in ARGB format. Returns byte Alpha. GetBlueComponent(int) Gets the blue component from a specified ARGB color-int. public static byte GetBlueComponent(int color) Parameters color int The color as integer value in ARGB format. Returns byte Blue. GetGreenComponent(int) Gets the green component from a specified ARGB color-int. public static byte GetGreenComponent(int color) Parameters color int The color as integer value in ARGB format. Returns byte Green. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. GetRedComponent(int) Gets the red component from a specified ARGB color-int. public static byte GetRedComponent(int color) Parameters color int The color as integer value in ARGB format. Returns byte Red. Lerp(float, Color4, Color4) Creates a new Color4 that contains linear interpolation of the specified colors. public static Color4 Lerp(float amount, Color4 value1, Color4 value2) Parameters amount float Weighting value(between 0.0 and 1.0). value1 Color4 The first color. value2 Color4 The second color. Returns Color4 Lighten(float) Lighten the color with the specified amount. Amount 1 turns the color into white, Amount 0 remains the color unchanged. public Color4 Lighten(float amount) Parameters amount float Returns Color4 Parse(string) public static Color4 Parse(string s) Parameters s string Returns Color4 PremulAlpha(Color4) Multiplies every component of color with its alpha. public static Color4 PremulAlpha(Color4 color) Parameters color Color4 Returns Color4 RGB(uint) public static Color4 RGB(uint rgb) Parameters rgb uint Returns Color4 RGBA(uint) public static Color4 RGBA(uint rgba) Parameters rgba uint Returns Color4 ToString() Returns the string representation of this Color4 in the format: \"#R.G.B.A\", where R, G, B, A are represented by hexadecimal numbers. public override string ToString() Returns string ToString(StringPresentation) public string ToString(Color4.StringPresentation presentation) Parameters presentation Color4.StringPresentation Returns string ToVector4() public Vector4 ToVector4() Returns Vector4 Transparentify(float) Change the color transparency with the specified amount. Amount 1 turns the color into fully transparent, Amount 0 remains the color unchanged. public Color4 Transparentify(float amount) Parameters amount float Returns Color4 TryParse(string, out Color4) public static bool TryParse(string s, out Color4 result) Parameters s string result Color4 Returns bool Operators operator ==(Color4, Color4) public static bool operator ==(Color4 lhs, Color4 rhs) Parameters lhs Color4 rhs Color4 Returns bool operator !=(Color4, Color4) public static bool operator !=(Color4 lhs, Color4 rhs) Parameters lhs Color4 rhs Color4 Returns bool operator *(Color4, Color4) Component-wise multiplication of two colors. public static Color4 operator *(Color4 lhs, Color4 rhs) Parameters lhs Color4 rhs Color4 Returns Color4"
  },
  "api/Lime.Color4SimpleAnimationCurve.html": {
    "href": "api/Lime.Color4SimpleAnimationCurve.html",
    "title": "Class Color4SimpleAnimationCurve | Citrus Engine",
    "keywords": "Class Color4SimpleAnimationCurve Namespace Lime Assembly Lime.dll public class Color4SimpleAnimationCurve : SimpleAnimationCurve<Color4>, IAnimationCurve<Color4>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Color4> Inheritance object SimpleAnimationCurve<Color4> Color4SimpleAnimationCurve Implements IAnimationCurve<Color4> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Color4> Inherited Members SimpleAnimationCurve<Color4>.Keys SimpleAnimationCurve<Color4>.IsEmpty SimpleAnimationCurve<Color4>.Duration SimpleAnimationCurve<Color4>.RefCount SimpleAnimationCurve<Color4>.AddRef() SimpleAnimationCurve<Color4>.Release() SimpleAnimationCurve<Color4>.CreateEvaluator() SimpleAnimationCurve<Color4>.InterpolateSplined(Color4, Color4, Color4, Color4, float) SimpleAnimationCurve<Color4>.Create(IEnumerable<SimpleKeyframe<Color4>>) SimpleAnimationCurve<Color4>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(Color4, Color4, float) protected override Color4 InterpolateLinear(Color4 value1, Color4 value2, float amount) Parameters value1 Color4 value2 Color4 amount float Returns Color4"
  },
  "api/Lime.ColorCorrectionMaterial.html": {
    "href": "api/Lime.ColorCorrectionMaterial.html",
    "title": "Class ColorCorrectionMaterial | Citrus Engine",
    "keywords": "Class ColorCorrectionMaterial Namespace Lime Assembly Lime.dll public class ColorCorrectionMaterial : IMaterial Inheritance object ColorCorrectionMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ColorCorrectionMaterial() public ColorCorrectionMaterial() ColorCorrectionMaterial(Blending) public ColorCorrectionMaterial(Blending blending) Parameters blending Blending Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Brightness [YuzuMember] public float Brightness { get; set; } Property Value float Contrast [YuzuMember] public float Contrast { get; set; } Property Value float HSL [YuzuMember] public Vector3 HSL { get; set; } Property Value Vector3 Id public string Id { get; set; } Property Value string Opaque [YuzuMember] public bool Opaque { get; set; } Property Value bool PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.ColorCorrectionShaderProgram.html": {
    "href": "api/Lime.ColorCorrectionShaderProgram.html",
    "title": "Class ColorCorrectionShaderProgram | Citrus Engine",
    "keywords": "Class ColorCorrectionShaderProgram Namespace Lime Assembly Lime.dll public class ColorCorrectionShaderProgram : ShaderProgram Inheritance object ShaderProgram ColorCorrectionShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(bool, bool, bool) public static ColorCorrectionShaderProgram GetInstance(bool requiredBrightnessContrast = false, bool requiredHSL = false, bool opaque = false) Parameters requiredBrightnessContrast bool requiredHSL bool opaque bool Returns ColorCorrectionShaderProgram"
  },
  "api/Lime.ColorGradient.html": {
    "href": "api/Lime.ColorGradient.html",
    "title": "Class ColorGradient | Citrus Engine",
    "keywords": "Class ColorGradient Namespace Lime Assembly Lime.dll public class ColorGradient : List<GradientControlPoint>, IList<GradientControlPoint>, ICollection<GradientControlPoint>, IReadOnlyList<GradientControlPoint>, IReadOnlyCollection<GradientControlPoint>, IEnumerable<GradientControlPoint>, IList, ICollection, IEnumerable, IComparer<GradientControlPoint> Inheritance object List<GradientControlPoint> ColorGradient Implements IList<GradientControlPoint> ICollection<GradientControlPoint> IReadOnlyList<GradientControlPoint> IReadOnlyCollection<GradientControlPoint> IEnumerable<GradientControlPoint> IList ICollection IEnumerable IComparer<GradientControlPoint> Inherited Members List<GradientControlPoint>.Add(GradientControlPoint) List<GradientControlPoint>.AddRange(IEnumerable<GradientControlPoint>) List<GradientControlPoint>.AsReadOnly() List<GradientControlPoint>.BinarySearch(int, int, GradientControlPoint, IComparer<GradientControlPoint>) List<GradientControlPoint>.BinarySearch(GradientControlPoint) List<GradientControlPoint>.BinarySearch(GradientControlPoint, IComparer<GradientControlPoint>) List<GradientControlPoint>.Clear() List<GradientControlPoint>.Contains(GradientControlPoint) List<GradientControlPoint>.ConvertAll<TOutput>(Converter<GradientControlPoint, TOutput>) List<GradientControlPoint>.CopyTo(int, GradientControlPoint[], int, int) List<GradientControlPoint>.CopyTo(GradientControlPoint[]) List<GradientControlPoint>.CopyTo(GradientControlPoint[], int) List<GradientControlPoint>.EnsureCapacity(int) List<GradientControlPoint>.Exists(Predicate<GradientControlPoint>) List<GradientControlPoint>.Find(Predicate<GradientControlPoint>) List<GradientControlPoint>.FindAll(Predicate<GradientControlPoint>) List<GradientControlPoint>.FindIndex(int, int, Predicate<GradientControlPoint>) List<GradientControlPoint>.FindIndex(int, Predicate<GradientControlPoint>) List<GradientControlPoint>.FindIndex(Predicate<GradientControlPoint>) List<GradientControlPoint>.FindLast(Predicate<GradientControlPoint>) List<GradientControlPoint>.FindLastIndex(int, int, Predicate<GradientControlPoint>) List<GradientControlPoint>.FindLastIndex(int, Predicate<GradientControlPoint>) List<GradientControlPoint>.FindLastIndex(Predicate<GradientControlPoint>) List<GradientControlPoint>.ForEach(Action<GradientControlPoint>) List<GradientControlPoint>.GetEnumerator() List<GradientControlPoint>.GetRange(int, int) List<GradientControlPoint>.IndexOf(GradientControlPoint) List<GradientControlPoint>.IndexOf(GradientControlPoint, int) List<GradientControlPoint>.IndexOf(GradientControlPoint, int, int) List<GradientControlPoint>.Insert(int, GradientControlPoint) List<GradientControlPoint>.InsertRange(int, IEnumerable<GradientControlPoint>) List<GradientControlPoint>.LastIndexOf(GradientControlPoint) List<GradientControlPoint>.LastIndexOf(GradientControlPoint, int) List<GradientControlPoint>.LastIndexOf(GradientControlPoint, int, int) List<GradientControlPoint>.Remove(GradientControlPoint) List<GradientControlPoint>.RemoveAll(Predicate<GradientControlPoint>) List<GradientControlPoint>.RemoveAt(int) List<GradientControlPoint>.RemoveRange(int, int) List<GradientControlPoint>.Reverse() List<GradientControlPoint>.Reverse(int, int) List<GradientControlPoint>.Slice(int, int) List<GradientControlPoint>.Sort() List<GradientControlPoint>.Sort(IComparer<GradientControlPoint>) List<GradientControlPoint>.Sort(Comparison<GradientControlPoint>) List<GradientControlPoint>.Sort(int, int, IComparer<GradientControlPoint>) List<GradientControlPoint>.ToArray() List<GradientControlPoint>.TrimExcess() List<GradientControlPoint>.TrueForAll(Predicate<GradientControlPoint>) List<GradientControlPoint>.Capacity List<GradientControlPoint>.Count List<GradientControlPoint>.this[int] object.Equals(object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Toolbox.RemoveTail<T>(List<T>, int) Constructors ColorGradient() public ColorGradient() ColorGradient(Color4) public ColorGradient(Color4 a) Parameters a Color4 ColorGradient(Color4, Color4) public ColorGradient(Color4 a, Color4 b) Parameters a Color4 b Color4 Methods CalculateHashCode() public long CalculateHashCode() Returns long Clone() public ColorGradient Clone() Returns ColorGradient Compare(GradientControlPoint, GradientControlPoint) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. public int Compare(GradientControlPoint x, GradientControlPoint y) Parameters x GradientControlPoint The first object to compare. y GradientControlPoint The second object to compare. Returns int A signed integer that indicates the relative values of x and y, as shown in the following table. Value Meaning Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetNearestPointTo(float) public GradientControlPoint GetNearestPointTo(float position) Parameters position float Returns GradientControlPoint Ordered() public IEnumerable<GradientControlPoint> Ordered() Returns IEnumerable<GradientControlPoint> Rasterize(ref Color4[]) public void Rasterize(ref Color4[] pixels) Parameters pixels Color4[]"
  },
  "api/Lime.ColorWriteMask.html": {
    "href": "api/Lime.ColorWriteMask.html",
    "title": "Enum ColorWriteMask | Citrus Engine",
    "keywords": "Enum ColorWriteMask Namespace Lime Assembly Lime.dll [Flags] public enum ColorWriteMask Fields All = Red | Green | Blue | Alpha Alpha = 8 Blue = 4 Green = 2 None = 0 Red = 1"
  },
  "api/Lime.ColorfulTextMaterial.html": {
    "href": "api/Lime.ColorfulTextMaterial.html",
    "title": "Class ColorfulTextMaterial | Citrus Engine",
    "keywords": "Class ColorfulTextMaterial Namespace Lime Assembly Lime.dll public class ColorfulTextMaterial : IMaterial Inheritance object ColorfulTextMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int GetInstance(Blending, int) public static ColorfulTextMaterial GetInstance(Blending blending, int styleIndex) Parameters blending Blending styleIndex int Returns ColorfulTextMaterial Invalidate() public void Invalidate()"
  },
  "api/Lime.CombinedContext.html": {
    "href": "api/Lime.CombinedContext.html",
    "title": "Class CombinedContext | Citrus Engine",
    "keywords": "Class CombinedContext Namespace Lime Assembly Lime.dll public class CombinedContext : IContext Inheritance object CombinedContext Implements IContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CombinedContext(params IContext[]) public CombinedContext(params IContext[] contexts) Parameters contexts IContext[] CombinedContext(IEnumerable<IContext>) public CombinedContext(IEnumerable<IContext> contexts) Parameters contexts IEnumerable<IContext> Methods Activate() public IContext Activate() Returns IContext Deactivate() public void Deactivate() Scoped() public ContextScope Scoped() Returns ContextScope"
  },
  "api/Lime.ComboBox.html": {
    "href": "api/Lime.ComboBox.html",
    "title": "Class ComboBox | Citrus Engine",
    "keywords": "Class ComboBox Namespace Lime Assembly Lime.dll public class ComboBox : CommonDropDownList, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonDropDownList ComboBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedComboBox Inherited Members CommonDropDownList.Changed CommonDropDownList.ShowingDropDownList CommonDropDownList.Items CommonDropDownList.TextWidgetRef CommonDropDownList.TextWidget CommonDropDownList.userValue CommonDropDownList.Index CommonDropDownList.Text CommonDropDownList.Value CommonDropDownList.RaiseChanged(bool) CommonDropDownList.RefreshTextWidget() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ComboBox() public ComboBox() Methods ShouldHandleSpacebar() protected override bool ShouldHandleSpacebar() Returns bool"
  },
  "api/Lime.Command.html": {
    "href": "api/Lime.Command.html",
    "title": "Class Command | Citrus Engine",
    "keywords": "Class Command Namespace Lime Assembly Lime.dll public class Command : ICommand Inheritance object Command Implements ICommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Command() public Command() Command(Key) public Command(Key main) Parameters main Key Command(Modifiers, Key) public Command(Modifiers modifiers, Key main) Parameters modifiers Modifiers main Key Command(Shortcut) public Command(Shortcut shortcut) Parameters shortcut Shortcut Command(string) public Command(string text) Parameters text string Command(string, IMenu) public Command(string text, IMenu menu) Parameters text string menu IMenu Command(string, Shortcut) public Command(string text, Shortcut shortcut) Parameters text string shortcut Shortcut Command(string, Shortcut, Action) public Command(string text, Shortcut shortcut, Action execute) Parameters text string shortcut Shortcut execute Action Command(string, Action) public Command(string text, Action execute) Parameters text string execute Action Fields Copy public static readonly ICommand Copy Field Value ICommand Cut public static readonly ICommand Cut Field Value ICommand Delete public static readonly ICommand Delete Field Value ICommand Editing public static readonly List<ICommand> Editing Field Value List<ICommand> MenuSeparator public static readonly ICommand MenuSeparator Field Value ICommand Paste public static readonly ICommand Paste Field Value ICommand Redo public static readonly ICommand Redo Field Value ICommand SelectAll public static readonly ICommand SelectAll Field Value ICommand Undo public static readonly ICommand Undo Field Value ICommand checked protected bool @checked Field Value bool Properties Checked Gets or sets a value indicating whether the menu item or tool button is checked. public virtual bool Checked { get; set; } Property Value bool ClearUserDataAfterUse Gets or sets a value indicating whether a custom command's UserData should be cleaned after use. public bool ClearUserDataAfterUse { get; set; } Property Value bool Enabled Gets or sets a value indicating whether the command is enabled (e.g. in menus and toolbars). public bool Enabled { get; set; } Property Value bool Icon Gets or sets the icon. The icon is used as the tool button icon. public Icon Icon { get; set; } Property Value Icon Menu Gets or sets the menu contained by this command. Commands that contain menus can be used to create menu items with submenus, or inserted into toolbars to create buttons with popup menus. public IMenu Menu { get; set; } Property Value IMenu Repeatable Gets or sets a value indicating whether the command will auto repeat when the keyboard shortcut combination is held down. Commands used in the main menu are always repeatable. The default value is true. public bool Repeatable { get; set; } Property Value bool Shortcut Gets or sets the command's primary shortcut key. public Shortcut Shortcut { get; set; } Property Value Shortcut Text Gets or sets the command's descriptive text. If the command is added to a menu, the menu option will consist of the text and the shortcut (if there is one). public string Text { get; set; } Property Value string TooltipText Tooltip. public string TooltipText { get; set; } Property Value string UserData Any data you need to pass to consumer of the command. public object UserData { get; set; } Property Value object Version Gets the command's version, which is increased after changing any command's property. public int Version { get; protected set; } Property Value int Visible Gets or sets a value indicating whether the command can be seen (e.g. in menus and toolbars). public bool Visible { get; set; } Property Value bool Methods Consume() Consumes the command. WasIssued is false if the command was consumed. Returns true is command was issued before consuming. public bool Consume() Returns bool ConsumeRange(IEnumerable<ICommand>) public static void ConsumeRange(IEnumerable<ICommand> commands) Parameters commands IEnumerable<ICommand> ConsumeRange(List<ICommand>) public static void ConsumeRange(List<ICommand> commands) Parameters commands List<ICommand> IsConsumed() Gets a value indicating whether the command has been consumed. The command should not be consumed before changing its Enabled property. public bool IsConsumed() Returns bool Issue() public void Issue() ResetConsumedCommands() public static void ResetConsumedCommands() WasIssued() Returns true, if the command was issued, enabled and has not been consumed yet. public bool WasIssued() Returns bool Events Issued Occurs when command is issued by clicking on menu item, activating menu shortcut or clicking a tool button. public event Action Issued Event Type Action"
  },
  "api/Lime.CommandHandler.html": {
    "href": "api/Lime.CommandHandler.html",
    "title": "Class CommandHandler | Citrus Engine",
    "keywords": "Class CommandHandler Namespace Lime Assembly Lime.dll public abstract class CommandHandler Inheritance object CommandHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute() public abstract void Execute() RefreshCommand(ICommand) public virtual void RefreshCommand(ICommand command) Parameters command ICommand"
  },
  "api/Lime.CommandHandlerList.html": {
    "href": "api/Lime.CommandHandlerList.html",
    "title": "Class CommandHandlerList | Citrus Engine",
    "keywords": "Class CommandHandlerList Namespace Lime Assembly Lime.dll public class CommandHandlerList Inheritance object CommandHandlerList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Global public static readonly CommandHandlerList Global Field Value CommandHandlerList Methods Connect(ICommand, CommandHandler) public void Connect(ICommand command, CommandHandler handler) Parameters command ICommand handler CommandHandler Connect(ICommand, Action, Func<bool>) public void Connect(ICommand command, Action action, Func<bool> enableChecker = null) Parameters command ICommand action Action enableChecker Func<bool> Disconnect(ICommand) public void Disconnect(ICommand command) Parameters command ICommand ProcessCommands() public void ProcessCommands()"
  },
  "api/Lime.CommandLineArgs.html": {
    "href": "api/Lime.CommandLineArgs.html",
    "title": "Class CommandLineArgs | Citrus Engine",
    "keywords": "Class CommandLineArgs Namespace Lime Assembly Lime.dll public static class CommandLineArgs Inheritance object CommandLineArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Debug public static readonly bool Debug Field Value bool FullscreenMode public static readonly bool FullscreenMode Field Value bool Limit25FPS public static readonly bool Limit25FPS Field Value bool MaximizedWindow public static readonly bool MaximizedWindow Field Value bool NoAudio public static readonly bool NoAudio Field Value bool NoMusic public static readonly bool NoMusic Field Value bool OpenGL public static readonly bool OpenGL Field Value bool SimulateSlowExternalStorage public static readonly bool SimulateSlowExternalStorage Field Value bool Methods CheckFlag(string) public static bool CheckFlag(string name) Parameters name string Returns bool Get() public static string[] Get() Returns string[]"
  },
  "api/Lime.CommandProcessor.html": {
    "href": "api/Lime.CommandProcessor.html",
    "title": "Class CommandProcessor | Citrus Engine",
    "keywords": "Class CommandProcessor Namespace Lime Assembly Lime.dll public class CommandProcessor : NodeProcessor Inheritance object NodeProcessor CommandProcessor Inherited Members NodeProcessor.Manager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.CommandQueue.html": {
    "href": "api/Lime.CommandQueue.html",
    "title": "Class CommandQueue | Citrus Engine",
    "keywords": "Class CommandQueue Namespace Lime Assembly Lime.dll public class CommandQueue Inheritance object CommandQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static CommandQueue Instance Field Value CommandQueue Methods Add(Command) public void Add(Command command) Parameters command Command IssueCommands() public void IssueCommands()"
  },
  "api/Lime.CommonDropDownList.ChangedEventArgs.html": {
    "href": "api/Lime.CommonDropDownList.ChangedEventArgs.html",
    "title": "Class CommonDropDownList.ChangedEventArgs | Citrus Engine",
    "keywords": "Class CommonDropDownList.ChangedEventArgs Namespace Lime Assembly Lime.dll public class CommonDropDownList.ChangedEventArgs Inheritance object CommonDropDownList.ChangedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ChangedByUser public bool ChangedByUser Field Value bool Index public int Index Field Value int Value public object Value Field Value object"
  },
  "api/Lime.CommonDropDownList.Item.html": {
    "href": "api/Lime.CommonDropDownList.Item.html",
    "title": "Class CommonDropDownList.Item | Citrus Engine",
    "keywords": "Class CommonDropDownList.Item Namespace Lime Assembly Lime.dll public class CommonDropDownList.Item Inheritance object CommonDropDownList.Item Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Item(string) public Item(string text) Parameters text string Item(string, object) public Item(string text, object value) Parameters text string value object Item(string, object, string) public Item(string text, object value, string tooltipText) Parameters text string value object tooltipText string Fields Text public string Text Field Value string TooltipText public string TooltipText Field Value string Value public object Value Field Value object"
  },
  "api/Lime.CommonDropDownList.html": {
    "href": "api/Lime.CommonDropDownList.html",
    "title": "Class CommonDropDownList | Citrus Engine",
    "keywords": "Class CommonDropDownList Namespace Lime Assembly Lime.dll public abstract class CommonDropDownList : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonDropDownList Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ComboBox DropDownList Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors CommonDropDownList() public CommonDropDownList() Fields Items public readonly ObservableCollection<CommonDropDownList.Item> Items Field Value ObservableCollection<CommonDropDownList.Item> userValue protected object userValue Field Value object Properties Index public int Index { get; set; } Property Value int Text Get or sets a label upon the widget. For widgets which can not have a label returns null. public override string Text { get; set; } Property Value string TextWidget public Widget TextWidget { get; } Property Value Widget TextWidgetRef [YuzuMember] public NodeReference<Widget> TextWidgetRef { get; set; } Property Value NodeReference<Widget> Value public object Value { get; set; } Property Value object Methods RaiseChanged(bool) protected void RaiseChanged(bool changedByUser = false) Parameters changedByUser bool RefreshTextWidget() protected void RefreshTextWidget() ShouldHandleSpacebar() protected abstract bool ShouldHandleSpacebar() Returns bool Events Changed public event Action<CommonDropDownList.ChangedEventArgs> Changed Event Type Action<CommonDropDownList.ChangedEventArgs> ShowingDropDownList public event Action ShowingDropDownList Event Type Action"
  },
  "api/Lime.CommonEditBox.html": {
    "href": "api/Lime.CommonEditBox.html",
    "title": "Class CommonEditBox | Citrus Engine",
    "keywords": "Class CommonEditBox Namespace Lime Assembly Lime.dll public abstract class CommonEditBox : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonEditBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived EditBox NumericEditBox Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors CommonEditBox() public CommonEditBox() Properties Editor public Editor Editor { get; set; } Property Value Editor IsReadOnly public bool IsReadOnly { get; set; } Property Value bool ScrollView public ScrollView ScrollView { get; protected set; } Property Value ScrollView ScrollWidget public Frame ScrollWidget { get; } Property Value Frame Text Get or sets a label upon the widget. For widgets which can not have a label returns null. public override string Text { get; set; } Property Value string TextWidget public SimpleText TextWidget { get; } Property Value SimpleText Methods OnSubmit() protected void OnSubmit() Events Submitted public event Action<string> Submitted Event Type Action<string>"
  },
  "api/Lime.CommonMaterial.html": {
    "href": "api/Lime.CommonMaterial.html",
    "title": "Class CommonMaterial | Citrus Engine",
    "keywords": "Class CommonMaterial Namespace Lime Assembly Lime.dll public class CommonMaterial : IMaterial, IMaterialSkin, IMaterialFog Inheritance object CommonMaterial Implements IMaterial IMaterialSkin IMaterialFog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommonMaterial() public CommonMaterial() Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending DiffuseColor [YuzuMember] public Color4 DiffuseColor { get; set; } Property Value Color4 DiffuseTexture [YuzuMember] public ITexture DiffuseTexture { get; set; } Property Value ITexture FogColor [YuzuMember] public Color4 FogColor { get; set; } Property Value Color4 FogDensity [YuzuMember] public float FogDensity { get; set; } Property Value float FogEnd [YuzuMember] public float FogEnd { get; set; } Property Value float FogMode [YuzuMember] public FogMode FogMode { get; set; } Property Value FogMode FogStart [YuzuMember] public float FogStart { get; set; } Property Value float Id [YuzuMember(\"Name\")] public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int ShadowsRenderingMode public static bool ShadowsRenderingMode { get; set; } Property Value bool SkinEnabled [YuzuMember] public bool SkinEnabled { get; set; } Property Value bool SkinningMode [YuzuMember] public SkinningMode SkinningMode { get; set; } Property Value SkinningMode Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate() SetBones(Matrix44[], int) public void SetBones(Matrix44[] boneTransforms, int boneCount) Parameters boneTransforms Matrix44[] boneCount int SetBones(Vector4[], Vector4[], int) public void SetBones(Vector4[] dualQuaternionPartA, Vector4[] dualQuaternionPartB, int boneCount) Parameters dualQuaternionPartA Vector4[] dualQuaternionPartB Vector4[] boneCount int"
  },
  "api/Lime.CommonTexture.html": {
    "href": "api/Lime.CommonTexture.html",
    "title": "Class CommonTexture | Citrus Engine",
    "keywords": "Class CommonTexture Namespace Lime Assembly Lime.dll public class CommonTexture Inheritance object CommonTexture Derived RenderTexture SerializableTexture Texture2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsDisposed public bool IsDisposed { get; } Property Value bool MemoryUsed public int MemoryUsed { get; protected set; } Property Value int TotalMemoryUsed Gets total bytes uploaded to vram by all alive textures. Thread safe. public static int TotalMemoryUsed { get; } Property Value int TotalMemoryUsedMb public static int TotalMemoryUsedMb { get; } Property Value int Methods Dispose() public virtual void Dispose() MaybeDiscardUnderPressure() public virtual void MaybeDiscardUnderPressure()"
  },
  "api/Lime.CommonWindow.html": {
    "href": "api/Lime.CommonWindow.html",
    "title": "Class CommonWindow | Citrus Engine",
    "keywords": "Class CommonWindow Namespace Lime Assembly Lime.dll public abstract class CommonWindow Inheritance object CommonWindow Derived DummyWindow Window Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommonWindow() protected CommonWindow() Properties Context public IContext Context { get; set; } Property Value IContext Current public static IWindow Current { get; } Property Value IWindow IsRenderingPhase public bool IsRenderingPhase { get; } Property Value bool SafeAreaInsets public Rectangle SafeAreaInsets { get; protected set; } Property Value Rectangle Tag public object Tag { get; set; } Property Value object VSync Keeps refresh rate the same as monitor's refresh rate. Setting to false allows to render as much frames as possible. Works only on Windows with disabled Timer. public virtual bool VSync { get; set; } Property Value bool Methods InvokeOnRendering(Action) public void InvokeOnRendering(Action action) Parameters action Action RaiseActivated() protected void RaiseActivated() RaiseClosed() protected void RaiseClosed() RaiseClosing(CloseReason) protected bool RaiseClosing(CloseReason reason) Parameters reason CloseReason Returns bool RaiseDeactivated() protected void RaiseDeactivated() RaiseMoved() protected void RaiseMoved() RaiseRendering() protected void RaiseRendering() RaiseResized(bool) protected void RaiseResized(bool deviceRotated) Parameters deviceRotated bool RaiseSafeAreaInsetsChanged() protected void RaiseSafeAreaInsetsChanged() RaiseSync() protected void RaiseSync() RaiseUpdating(float) protected void RaiseUpdating(float delta) Parameters delta float RaiseVisibleChanging(bool, bool) protected void RaiseVisibleChanging(bool value, bool modal) Parameters value bool modal bool Events Activated public event Action Activated Event Type Action Closed public event Action Closed Event Type Action Closing public event ClosingDelegate Closing Event Type ClosingDelegate Deactivated public event Action Deactivated Event Type Action Moved public event Action Moved Event Type Action Rendering public event Action Rendering Event Type Action Resized public event ResizeDelegate Resized Event Type ResizeDelegate SafeAreaInsetsChanged public event SafeAreaInsetsChangedDelegate SafeAreaInsetsChanged Event Type SafeAreaInsetsChangedDelegate Sync public event Action Sync Event Type Action UnhandledExceptionOnUpdate public event Action<Exception> UnhandledExceptionOnUpdate Event Type Action<Exception> Updating public event UpdatingDelegate Updating Event Type UpdatingDelegate VisibleChanging public event VisibleChangingDelegate VisibleChanging Event Type VisibleChangingDelegate"
  },
  "api/Lime.CompareFunc.html": {
    "href": "api/Lime.CompareFunc.html",
    "title": "Enum CompareFunc | Citrus Engine",
    "keywords": "Enum CompareFunc Namespace Lime Assembly Lime.dll public enum CompareFunc Fields Always = 0 Equal = 6 Greater = 4 GreaterEqual = 5 Less = 2 LessEqual = 3 Never = 1 NotEqual = 7"
  },
  "api/Lime.Component.html": {
    "href": "api/Lime.Component.html",
    "title": "Class Component | Citrus Engine",
    "keywords": "Class Component Namespace Lime Assembly Lime.dll public class Component Inheritance object Component Derived NodeComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.ComponentCollection-1.Enumerator.html": {
    "href": "api/Lime.ComponentCollection-1.Enumerator.html",
    "title": "Struct ComponentCollection<TComponent>.Enumerator | Citrus Engine",
    "keywords": "Struct ComponentCollection<TComponent>.Enumerator Namespace Lime Assembly Lime.dll public struct ComponentCollection<TComponent>.Enumerator : IEnumerator<TComponent>, IEnumerator, IDisposable Implements IEnumerator<TComponent> IEnumerator IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Enumerator(TComponent[], int) public Enumerator(TComponent[] list, int length) Parameters list TComponent[] length int Properties Current Gets the element in the collection at the current position of the enumerator. public TComponent Current { get; } Property Value TComponent The element in the collection at the current position of the enumerator. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() MoveNext() Advances the enumerator to the next element of the collection. public bool MoveNext() Returns bool true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection. Exceptions InvalidOperationException The collection was modified after the enumerator was created. Reset() Sets the enumerator to its initial position, which is before the first element in the collection. public void Reset() Exceptions InvalidOperationException The collection was modified after the enumerator was created. NotSupportedException The enumerator does not support being reset."
  },
  "api/Lime.ComponentCollection-1.html": {
    "href": "api/Lime.ComponentCollection-1.html",
    "title": "Class ComponentCollection<TComponent> | Citrus Engine",
    "keywords": "Class ComponentCollection<TComponent> Namespace Lime Assembly Lime.dll public class ComponentCollection<TComponent> : ICollection<TComponent>, IEnumerable<TComponent>, IEnumerable where TComponent : Component Type Parameters TComponent Inheritance object ComponentCollection<TComponent> Implements ICollection<TComponent> IEnumerable<TComponent> IEnumerable Derived NodeComponentCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. Methods Add(TComponent) Adds an item to the ICollection<T>. public virtual void Add(TComponent component) Parameters component TComponent Exceptions NotSupportedException The ICollection<T> is read-only. CanAdd(Type) public bool CanAdd(Type type) Parameters type Type Returns bool CanAdd<T>() public bool CanAdd<T>() where T : TComponent Returns bool Type Parameters T Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Type) public bool Contains(Type type) Parameters type Type Returns bool Contains(TComponent) Determines whether the ICollection<T> contains a specific value. public virtual bool Contains(TComponent component) Parameters component TComponent Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains<T>() public bool Contains<T>() Returns bool Type Parameters T CopyTo(TComponent[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(TComponent[] array, int arrayIndex) Parameters array TComponent[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. Get(Type) public TComponent Get(Type type) Parameters type Type Returns TComponent GetAll(Type) public IEnumerable<TComponent> GetAll(Type type) Parameters type Type Returns IEnumerable<TComponent> GetAll(Type, IList<TComponent>) public void GetAll(Type type, IList<TComponent> result) Parameters type Type result IList<TComponent> GetAll<T>() public IEnumerable<T> GetAll<T>() Returns IEnumerable<T> Type Parameters T GetAll<T>(IList<T>) public void GetAll<T>(IList<T> result) Parameters result IList<T> Type Parameters T GetEnumerator() public ComponentCollection<TComponent>.Enumerator GetEnumerator() Returns ComponentCollection<TComponent>.Enumerator GetOrAdd<T>() public T GetOrAdd<T>() where T : TComponent, new() Returns T Type Parameters T Get<T>() public T Get<T>() Returns T Type Parameters T OnRemove(TComponent) protected virtual void OnRemove(TComponent component) Parameters component TComponent Remove(Type) public bool Remove(Type type) Parameters type Type Returns bool Remove(TComponent) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(TComponent component) Parameters component TComponent Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove<T>() public bool Remove<T>() Returns bool Type Parameters T Replace<T>(T) public bool Replace<T>(T component) where T : TComponent Parameters component T Returns bool Type Parameters T TryGet<T>(out T) public bool TryGet<T>(out T result) Parameters result T Returns bool Type Parameters T"
  },
  "api/Lime.CompoundFont.html": {
    "href": "api/Lime.CompoundFont.html",
    "title": "Class CompoundFont | Citrus Engine",
    "keywords": "Class CompoundFont Namespace Lime Assembly Lime.dll Font class which combines different fonts into one. You can use collection of IFont in order of priority to use (if first font doesn't contain FontChar it will look for it in the next font and so on). public class CompoundFont : IFont, IDisposable Inheritance object CompoundFont Implements IFont IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FontExtensions.MeasureTextLine(IFont, string, float, int, int, float) FontExtensions.MeasureTextLine(IFont, string, float, float) Constructors CompoundFont() public CompoundFont() CompoundFont(params IFont[]) public CompoundFont(params IFont[] fonts) Parameters fonts IFont[] CompoundFont(IEnumerable<IFont>) public CompoundFont(IEnumerable<IFont> fonts) Parameters fonts IEnumerable<IFont> Fields PlaceHolderCharacter Character that is used as a placeholder for missing character (used in QA testing) public static char PlaceHolderCharacter Field Value char UsePlaceholders Allow to render a PlaceHolderCharacter when character is missing (used in QA testing) public static bool UsePlaceholders Field Value bool Properties About Legacy interface property. public string About { get; } Property Value string CharSource public IFontCharSource CharSource { get; } Property Value IFontCharSource Fonts public List<IFont> Fonts { get; } Property Value List<IFont> RoundCoordinates public bool RoundCoordinates { get; } Property Value bool Spacing public float Spacing { get; } Property Value float Methods ClearCache() public void ClearCache() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.CompoundPresenter.html": {
    "href": "api/Lime.CompoundPresenter.html",
    "title": "Class CompoundPresenter | Citrus Engine",
    "keywords": "Class CompoundPresenter Namespace Lime Assembly Lime.dll public class CompoundPresenter : List<IPresenter>, IList<IPresenter>, ICollection<IPresenter>, IReadOnlyList<IPresenter>, IReadOnlyCollection<IPresenter>, IEnumerable<IPresenter>, IList, ICollection, IEnumerable, IPresenter Inheritance object List<IPresenter> CompoundPresenter Implements IList<IPresenter> ICollection<IPresenter> IReadOnlyList<IPresenter> IReadOnlyCollection<IPresenter> IEnumerable<IPresenter> IList ICollection IEnumerable IPresenter Inherited Members List<IPresenter>.Add(IPresenter) List<IPresenter>.AddRange(IEnumerable<IPresenter>) List<IPresenter>.AsReadOnly() List<IPresenter>.BinarySearch(int, int, IPresenter, IComparer<IPresenter>) List<IPresenter>.BinarySearch(IPresenter) List<IPresenter>.BinarySearch(IPresenter, IComparer<IPresenter>) List<IPresenter>.Clear() List<IPresenter>.Contains(IPresenter) List<IPresenter>.ConvertAll<TOutput>(Converter<IPresenter, TOutput>) List<IPresenter>.CopyTo(int, IPresenter[], int, int) List<IPresenter>.CopyTo(IPresenter[]) List<IPresenter>.CopyTo(IPresenter[], int) List<IPresenter>.EnsureCapacity(int) List<IPresenter>.Exists(Predicate<IPresenter>) List<IPresenter>.Find(Predicate<IPresenter>) List<IPresenter>.FindAll(Predicate<IPresenter>) List<IPresenter>.FindIndex(int, int, Predicate<IPresenter>) List<IPresenter>.FindIndex(int, Predicate<IPresenter>) List<IPresenter>.FindIndex(Predicate<IPresenter>) List<IPresenter>.FindLast(Predicate<IPresenter>) List<IPresenter>.FindLastIndex(int, int, Predicate<IPresenter>) List<IPresenter>.FindLastIndex(int, Predicate<IPresenter>) List<IPresenter>.FindLastIndex(Predicate<IPresenter>) List<IPresenter>.ForEach(Action<IPresenter>) List<IPresenter>.GetEnumerator() List<IPresenter>.GetRange(int, int) List<IPresenter>.IndexOf(IPresenter) List<IPresenter>.IndexOf(IPresenter, int) List<IPresenter>.IndexOf(IPresenter, int, int) List<IPresenter>.Insert(int, IPresenter) List<IPresenter>.InsertRange(int, IEnumerable<IPresenter>) List<IPresenter>.LastIndexOf(IPresenter) List<IPresenter>.LastIndexOf(IPresenter, int) List<IPresenter>.LastIndexOf(IPresenter, int, int) List<IPresenter>.Remove(IPresenter) List<IPresenter>.RemoveAll(Predicate<IPresenter>) List<IPresenter>.RemoveAt(int) List<IPresenter>.RemoveRange(int, int) List<IPresenter>.Reverse() List<IPresenter>.Reverse(int, int) List<IPresenter>.Slice(int, int) List<IPresenter>.Sort() List<IPresenter>.Sort(IComparer<IPresenter>) List<IPresenter>.Sort(Comparison<IPresenter>) List<IPresenter>.Sort(int, int, IComparer<IPresenter>) List<IPresenter>.ToArray() List<IPresenter>.TrimExcess() List<IPresenter>.TrueForAll(Predicate<IPresenter>) List<IPresenter>.Capacity List<IPresenter>.Count List<IPresenter>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Toolbox.RemoveTail<T>(List<T>, int) Constructors CompoundPresenter() public CompoundPresenter() CompoundPresenter(IPresenter) public CompoundPresenter(IPresenter presenter) Parameters presenter IPresenter Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool Push(IPresenter) public void Push(IPresenter presenter) Parameters presenter IPresenter"
  },
  "api/Lime.CompressedAnimationCurve-1.html": {
    "href": "api/Lime.CompressedAnimationCurve-1.html",
    "title": "Class CompressedAnimationCurve<T> | Citrus Engine",
    "keywords": "Class CompressedAnimationCurve<T> Namespace Lime Assembly Lime.dll public abstract class CompressedAnimationCurve<T> : IAnimationCurve<T>, ICompressedAnimationCurve, IAnimationCurve Type Parameters T Inheritance object CompressedAnimationCurve<T> Implements IAnimationCurve<T> ICompressedAnimationCurve IAnimationCurve Derived QuaternionCompressedAnimationCurve Vector3CompressedAnimationCurve Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FrameNumberBuffer [YuzuMember] public byte[] FrameNumberBuffer Field Value byte[] FrameNumberFormat [YuzuMember] public CompressedAnimationCurveFrameNumberFormat FrameNumberFormat Field Value CompressedAnimationCurveFrameNumberFormat ValueBuffer [YuzuMember] public byte[] ValueBuffer Field Value byte[] Properties Duration public int Duration { get; } Property Value int IsEmpty public bool IsEmpty { get; } Property Value bool RefCount public int RefCount { get; } Property Value int Methods AddRef() public void AddRef() Compress(List<int>, List<T>) public void Compress(List<int> frameNumbers, List<T> values) Parameters frameNumbers List<int> values List<T> CompressValues(T[]) protected abstract void CompressValues(T[] values) Parameters values T[] Create() public static CompressedAnimationCurve<T> Create() Returns CompressedAnimationCurve<T> Create(List<int>, List<T>) public static CompressedAnimationCurve<T> Create(List<int> frameNumbers, List<T> values) Parameters frameNumbers List<int> values List<T> Returns CompressedAnimationCurve<T> CreateEvaluator() public IAnimationCurveEvaluator<T> CreateEvaluator() Returns IAnimationCurveEvaluator<T> DecompressValue(int) protected abstract T DecompressValue(int index) Parameters index int Returns T Interpolate(T, T, float) protected abstract T Interpolate(T value1, T value2, float amount) Parameters value1 T value2 T amount float Returns T Release() public void Release()"
  },
  "api/Lime.CompressedAnimationCurveFrameNumberFormat.html": {
    "href": "api/Lime.CompressedAnimationCurveFrameNumberFormat.html",
    "title": "Enum CompressedAnimationCurveFrameNumberFormat | Citrus Engine",
    "keywords": "Enum CompressedAnimationCurveFrameNumberFormat Namespace Lime Assembly Lime.dll public enum CompressedAnimationCurveFrameNumberFormat Fields Int16 = 1 Int32 = 2 Int8 = 0"
  },
  "api/Lime.CompressionFormat.html": {
    "href": "api/Lime.CompressionFormat.html",
    "title": "Enum CompressionFormat | Citrus Engine",
    "keywords": "Enum CompressionFormat Namespace Lime Assembly Lime.dll public enum CompressionFormat Fields Jpeg = 0 Png = 1"
  },
  "api/Lime.ContainmentType.html": {
    "href": "api/Lime.ContainmentType.html",
    "title": "Enum ContainmentType | Citrus Engine",
    "keywords": "Enum ContainmentType Namespace Lime Assembly Lime.dll Defines how the bounding volumes intersects or contain one another. public enum ContainmentType Fields Contains = 1 Indicates that one bounding volume completely contains another volume. Disjoint = 0 Indicates that there is no overlap between two bounding volumes. Intersects = 2 Indicates that bounding volumes partially overlap one another."
  },
  "api/Lime.Context.html": {
    "href": "api/Lime.Context.html",
    "title": "Class Context | Citrus Engine",
    "keywords": "Class Context Namespace Lime Assembly Lime.dll public class Context : IContext Inheritance object Context Implements IContext Derived WidgetContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Context(string) protected Context(string propertyName) Parameters propertyName string Methods Activate() public IContext Activate() Returns IContext Deactivate() public void Deactivate() Scoped() public ContextScope Scoped() Returns ContextScope"
  },
  "api/Lime.ContextScope.html": {
    "href": "api/Lime.ContextScope.html",
    "title": "Struct ContextScope | Citrus Engine",
    "keywords": "Struct ContextScope Namespace Lime Assembly Lime.dll public struct ContextScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ContextScope(IContext) public ContextScope(IContext context) Parameters context IContext Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.CubicBezier.html": {
    "href": "api/Lime.CubicBezier.html",
    "title": "Class CubicBezier | Citrus Engine",
    "keywords": "Class CubicBezier Namespace Lime Assembly Lime.dll public class CubicBezier Inheritance object CubicBezier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CubicBezier(double, double, double, double) public CubicBezier(double p1x, double p1y, double p2x, double p2y) Parameters p1x double p1y double p2x double p2y double Methods SampleCurveX(double) public double SampleCurveX(double t) Parameters t double Returns double SampleCurveY(double) public double SampleCurveY(double t) Parameters t double Returns double SolveCurveX(double, double) public double SolveCurveX(double x, double epsilon) Parameters x double epsilon double Returns double SolveWithEpsilon(double, double) public double SolveWithEpsilon(double x, double epsilon) Parameters x double epsilon double Returns double"
  },
  "api/Lime.CullMode.html": {
    "href": "api/Lime.CullMode.html",
    "title": "Enum CullMode | Citrus Engine",
    "keywords": "Enum CullMode Namespace Lime Assembly Lime.dll public enum CullMode Fields Back = 1 Front = 2 None = 0"
  },
  "api/Lime.CustomPresenter-1.html": {
    "href": "api/Lime.CustomPresenter-1.html",
    "title": "Class CustomPresenter<T> | Citrus Engine",
    "keywords": "Class CustomPresenter<T> Namespace Lime Assembly Lime.dll public class CustomPresenter<T> : CustomPresenter, IPresenter where T : Node Type Parameters T Inheritance object CustomPresenter CustomPresenter<T> Implements IPresenter Derived DelegatePresenter<T> Inherited Members CustomPresenter.GetRenderObject(Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InternalPartialHitTest(T, ref HitTestArgs) protected virtual bool InternalPartialHitTest(T node, ref HitTestArgs args) Parameters node T args HitTestArgs Returns bool InternalRender(T) protected virtual void InternalRender(T node) Parameters node T PartialHitTest(Node, ref HitTestArgs) public override sealed bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool Render(Node) public override sealed void Render(Node node) Parameters node Node"
  },
  "api/Lime.CustomPresenter.html": {
    "href": "api/Lime.CustomPresenter.html",
    "title": "Class CustomPresenter | Citrus Engine",
    "keywords": "Class CustomPresenter Namespace Lime Assembly Lime.dll public class CustomPresenter : IPresenter Inheritance object CustomPresenter Implements IPresenter Derived CustomPresenter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public virtual bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool Render(Node) public virtual void Render(Node node) Parameters node Node"
  },
  "api/Lime.CustomSetAssetBundle.html": {
    "href": "api/Lime.CustomSetAssetBundle.html",
    "title": "Class CustomSetAssetBundle | Citrus Engine",
    "keywords": "Class CustomSetAssetBundle Namespace Lime Assembly Lime.dll Asset bundle which substitutes enumeration results with the given list of files. All file operations will throw FileNotFoundException if provided file path does not exist in provided list of files. public class CustomSetAssetBundle : WrappedAssetBundle, IDisposable Inheritance object AssetBundle WrappedAssetBundle CustomSetAssetBundle Implements IDisposable Inherited Members WrappedAssetBundle.Bundle WrappedAssetBundle.Dispose() WrappedAssetBundle.ImportFile(string, Stream, SHA256, AssetAttributes) WrappedAssetBundle.ImportFileRaw(string, Stream, int, SHA256, SHA256, AssetAttributes) WrappedAssetBundle.ToSystemPath(string) WrappedAssetBundle.FromSystemPath(string) AssetBundle.Current AssetBundle.SetCurrent(AssetBundle, bool) AssetBundle.Initialized AssetBundle.ReadFile(string) AssetBundle.ReadAllText(string, Encoding) AssetBundle.ImportFile(string, string, SHA256, AssetAttributes) AssetBundle.OpenFileLocalized(string) AssetBundle.GetLocalizedPath(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomSetAssetBundle(AssetBundle, IEnumerable<string>) public CustomSetAssetBundle(AssetBundle bundle, IEnumerable<string> files) Parameters bundle AssetBundle files IEnumerable<string> Methods DeleteFile(string) public override void DeleteFile(string path) Parameters path string EnumerateFiles(string, string) Enumerates all files by given path and having the given extension. Order is specific to implementation. public override IEnumerable<string> EnumerateFiles(string path = null, string extension = null) Parameters path string extension string Returns IEnumerable<string> FileExists(string) public override bool FileExists(string path) Parameters path string Returns bool GetFileAttributes(string) public override AssetAttributes GetFileAttributes(string path) Parameters path string Returns AssetAttributes GetFileContentsHash(string) Returns SHA256 based on the file contents. public override SHA256 GetFileContentsHash(string path) Parameters path string Returns SHA256 GetFileOriginHash(string) Returns SHA256 that was passed to the ImportFile or ImportFileRaw methods. public override SHA256 GetFileOriginHash(string path) Parameters path string Returns SHA256 GetFileSize(string) public override int GetFileSize(string path) Parameters path string Returns int GetFileUnpackedSize(string) public override int GetFileUnpackedSize(string path) Parameters path string Returns int OpenFile(string, FileMode) public override Stream OpenFile(string path, FileMode fileMode = FileMode.Open) Parameters path string fileMode FileMode Returns Stream OpenFileRaw(string, FileMode) Returns file data as it stored in the asset bundle, e.g. compressed. public override Stream OpenFileRaw(string path, FileMode fileMode = FileMode.Open) Parameters path string fileMode FileMode Returns Stream"
  },
  "api/Lime.CyclicDependencyException.html": {
    "href": "api/Lime.CyclicDependencyException.html",
    "title": "Class CyclicDependencyException | Citrus Engine",
    "keywords": "Class CyclicDependencyException Namespace Lime Assembly Lime.dll public class CyclicDependencyException : LimeException, ISerializable Inheritance object Exception LimeException CyclicDependencyException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CyclicDependencyException(string) public CyclicDependencyException(string message = null) Parameters message string CyclicDependencyException(string, params object[]) public CyclicDependencyException(string format, params object[] args) Parameters format string args object[]"
  },
  "api/Lime.DashedLineMaterial.html": {
    "href": "api/Lime.DashedLineMaterial.html",
    "title": "Class DashedLineMaterial | Citrus Engine",
    "keywords": "Class DashedLineMaterial Namespace Lime Assembly Lime.dll public class DashedLineMaterial : IMaterial Inheritance object DashedLineMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static readonly DashedLineMaterial Instance Field Value DashedLineMaterial Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.Debug.html": {
    "href": "api/Lime.Debug.html",
    "title": "Class Debug | Citrus Engine",
    "keywords": "Class Debug Namespace Lime Assembly Lime.dll public static class Debug Inheritance object Debug Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Write(object) public static void Write(object value) Parameters value object Write(string) public static void Write(string message) Parameters message string Write(string, params object[]) public static void Write(string msg, params object[] args) Parameters msg string args object[]"
  },
  "api/Lime.DefaultAnimationEngine.html": {
    "href": "api/Lime.DefaultAnimationEngine.html",
    "title": "Class DefaultAnimationEngine | Citrus Engine",
    "keywords": "Class DefaultAnimationEngine Namespace Lime Assembly Lime.dll public class DefaultAnimationEngine : AnimationEngine Inheritance object AnimationEngine DefaultAnimationEngine Derived BlendAnimationEngine FastForwardAnimationEngine Inherited Members AnimationEngine.JumpAffectsRunningMarkerId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static DefaultAnimationEngine Instance Field Value DefaultAnimationEngine Methods AdvanceAnimation(Animation, double) public override void AdvanceAnimation(Animation animation, double delta) Parameters animation Animation delta double ApplyAnimatorsAndExecuteTriggers(Animation, double, double, bool) Refreshes animation.EffectiveAnimators; Applies each animator at currentTime; Executes triggers in given range. The range is [previousTime, currentTime) or [previousTime, currentTime] depending on executeTriggersAtCurrentTime flag. This method doesn't depend on animation.Time value. public override void ApplyAnimatorsAndExecuteTriggers(Animation animation, double previousTime, double currentTime, bool executeTriggersAtCurrentTime) Parameters animation Animation previousTime double currentTime double executeTriggersAtCurrentTime bool AreEffectiveAnimatorsValid(Animation) public override bool AreEffectiveAnimatorsValid(Animation animation) Parameters animation Animation Returns bool BuildEffectiveAnimators(Animation) public override void BuildEffectiveAnimators(Animation animation) Parameters animation Animation FindMarkerAhead(Animation, double) protected static Marker FindMarkerAhead(Animation animation, double time) Parameters animation Animation time double Returns Marker ProcessMarker(Animation, Marker, double, double) protected virtual void ProcessMarker(Animation animation, Marker marker, double previousTime, double currentTime) Parameters animation Animation marker Marker previousTime double currentTime double RaiseStopped(Animation) public override void RaiseStopped(Animation animation) Parameters animation Animation TryRunAnimation(Animation, string, double) public override bool TryRunAnimation(Animation animation, string markerId, double animationTimeCorrection = 0) Parameters animation Animation markerId string animationTimeCorrection double Returns bool"
  },
  "api/Lime.DefaultPresenter.html": {
    "href": "api/Lime.DefaultPresenter.html",
    "title": "Class DefaultPresenter | Citrus Engine",
    "keywords": "Class DefaultPresenter Namespace Lime Assembly Lime.dll public class DefaultPresenter : IPresenter Inheritance object DefaultPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static readonly DefaultPresenter Instance Field Value DefaultPresenter Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.DefaultRandomProvider.html": {
    "href": "api/Lime.DefaultRandomProvider.html",
    "title": "Class DefaultRandomProvider | Citrus Engine",
    "keywords": "Class DefaultRandomProvider Namespace Lime Assembly Lime.dll public class DefaultRandomProvider : IRandomProvider Inheritance object DefaultRandomProvider Implements IRandomProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SharedRandom public IRandom SharedRandom { get; } Property Value IRandom Methods Create(int) public IRandom Create(int seed) Parameters seed int Returns IRandom"
  },
  "api/Lime.DefaultWindowWidget.html": {
    "href": "api/Lime.DefaultWindowWidget.html",
    "title": "Class DefaultWindowWidget | Citrus Engine",
    "keywords": "Class DefaultWindowWidget Namespace Lime Assembly Lime.dll public class DefaultWindowWidget : WindowWidget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget WindowWidget DefaultWindowWidget Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived InvalidableWindowWidget ThemedDefaultWindowWidget Inherited Members WindowWidget.renderChain WindowWidget.Window WindowWidget.WidgetContext WindowWidget.CreateManager(LayoutManager, WidgetContext) WindowWidget.ContinuousRendering() WindowWidget.PrepareToRender() WindowWidget.Update(float) WindowWidget.RenderAll() WindowWidget.Render(RenderObjectList) WindowWidget.GetViewport() WindowWidget.GetProjection() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors DefaultWindowWidget(IWindow) public DefaultWindowWidget(IWindow window) Parameters window IWindow Properties LayoutBasedWindowSize public bool LayoutBasedWindowSize { get; set; } Property Value bool"
  },
  "api/Lime.DeferredRendererWrapper.html": {
    "href": "api/Lime.DeferredRendererWrapper.html",
    "title": "Class DeferredRendererWrapper | Citrus Engine",
    "keywords": "Class DeferredRendererWrapper Namespace Lime Assembly Lime.dll public class DeferredRendererWrapper : RendererWrapper Inheritance object RendererWrapper DeferredRendererWrapper Inherited Members RendererWrapper.Current RendererWrapper.DrawCircle(float, float, float, int, Color4) RendererWrapper.DrawRound(Vector2, float, int, Color4) RendererWrapper.DrawRound(float, float, float, int, Color4) RendererWrapper.DrawTriangleFan(Vertex[], int) RendererWrapper.DrawTriangleFan(ITexture, Vertex[], int) RendererWrapper.DrawRect(float, float, float, float, Color4) RendererWrapper.DrawTextLine(float, float, string, float, Color4, float) RendererWrapper.DrawTextLine(Vector2, string, float, Color4, float) RendererWrapper.DrawTextLine(IFont, Vector2, string, float, Color4, float) RendererWrapper.DrawLine(float, float, float, float, Color4, float, LineCap) RendererWrapper.Clear(Color4) RendererWrapper.Clear(ClearOptions) RendererWrapper.SetOrthogonalProjection(Vector2, Vector2) RendererWrapper.RenderToTexture(RenderChain, ITexture, float, float, Matrix32, bool) RendererWrapper.RenderToTexture(Widget, ITexture, RenderChain, bool) RendererWrapper.GetBitmap(Widget, Action<Bitmap>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Blending public override Blending Blending { set; } Property Value Blending ColorWriteEnabled public override ColorWriteMask ColorWriteEnabled { set; } Property Value ColorWriteMask CullMode public override CullMode CullMode { set; } Property Value CullMode DepthState public override DepthState DepthState { set; } Property Value DepthState Projection public override Matrix44 Projection { set; } Property Value Matrix44 ScissorState public override ScissorState ScissorState { set; } Property Value ScissorState Shader public override ShaderId Shader { set; } Property Value ShaderId StencilState public override StencilState StencilState { set; } Property Value StencilState Transform1 public override Matrix32 Transform1 { set; } Property Value Matrix32 Transform2 public override Matrix32 Transform2 { set; } Property Value Matrix32 View public override Matrix44 View { set; } Property Value Matrix44 Viewport public override Viewport Viewport { set; } Property Value Viewport World public override Matrix44 World { set; } Property Value Matrix44 Methods BeginFrame() public override void BeginFrame() Callback(Action) public override void Callback(Action callback) Parameters callback Action Clear(ClearOptions, Color4) public override void Clear(ClearOptions options, Color4 color) Parameters options ClearOptions color Color4 ClearCommands() public void ClearCommands() DrawCircle(Vector2, float, int, Color4) public override void DrawCircle(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawDashedLine(Vector2, Vector2, Color4, Vector2) public override void DrawDashedLine(Vector2 a, Vector2 b, Color4 color, Vector2 dashSize) Parameters a Vector2 b Vector2 color Color4 dashSize Vector2 DrawLine(Vector2, Vector2, Color4, float, LineCap) public override void DrawLine(Vector2 a, Vector2 b, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters a Vector2 b Vector2 color Color4 thickness float cap LineCap DrawRect(Vector2, Vector2, Color4) public override void DrawRect(Vector2 a, Vector2 b, Color4 color) Parameters a Vector2 b Vector2 color Color4 DrawRectOutline(Vector2, Vector2, Color4, float) public override void DrawRectOutline(Vector2 a, Vector2 b, Color4 color, float thickness = 1) Parameters a Vector2 b Vector2 color Color4 thickness float DrawRenderChain(RenderChain) public override void DrawRenderChain(RenderChain renderChain) Parameters renderChain RenderChain DrawRenderObjects(RenderObjectList) public override void DrawRenderObjects(RenderObjectList renderObjects) Parameters renderObjects RenderObjectList DrawRound(Vector2, float, int, Color4, Color4) public override void DrawRound(Vector2 center, float radius, int numSegments, Color4 innerColor, Color4 outerColor) Parameters center Vector2 radius float numSegments int innerColor Color4 outerColor Color4 DrawSprite(ISprite, Color4, Vector2, Vector2) public override void DrawSprite(ISprite sprite, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite color Color4 position Vector2 size Vector2 DrawSprite(ISprite, IMaterial, Color4, Vector2, Vector2) public override void DrawSprite(ISprite sprite, IMaterial material, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite material IMaterial color Color4 position Vector2 size Vector2 DrawTextLine(IFont, Vector2, string, Color4, float, int, int, float) public override void DrawTextLine(IFont font, Vector2 position, string text, Color4 color, float fontHeight, int start, int length, float letterSpacing) Parameters font IFont position Vector2 text string color Color4 fontHeight float start int length int letterSpacing float DrawTexture(ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTexture(ITexture, ITexture, IMaterial, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, ITexture texture2, IMaterial material, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture material IMaterial color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTriangleFan(ITexture, ITexture, Vertex[], int) public override void DrawTriangleFan(ITexture texture1, ITexture texture2, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture vertices Vertex[] numVertices int EndFrame() public override void EndFrame() ExecuteCommands(RendererWrapper) public void ExecuteCommands(RendererWrapper renderer) Parameters renderer RendererWrapper Flush() public override void Flush() MultiplyTransform1(Matrix32) public override void MultiplyTransform1(Matrix32 transform) Parameters transform Matrix32 MultiplyTransform2(Matrix32) public override void MultiplyTransform2(Matrix32 transform) Parameters transform Matrix32 PopRenderTarget() public override void PopRenderTarget() PopState() public override void PopState() PushRenderTarget(ITexture) public override void PushRenderTarget(ITexture texture) Parameters texture ITexture PushState(RenderState) public override void PushState(RenderState mask) Parameters mask RenderState SetOrthogonalProjection(float, float, float, float) public override void SetOrthogonalProjection(float left, float top, float right, float bottom) Parameters left float top float right float bottom float"
  },
  "api/Lime.DelegatePresenter-1.PartialHitTestDelegate.html": {
    "href": "api/Lime.DelegatePresenter-1.PartialHitTestDelegate.html",
    "title": "Delegate DelegatePresenter<T>.PartialHitTestDelegate | Citrus Engine",
    "keywords": "Delegate DelegatePresenter<T>.PartialHitTestDelegate Namespace Lime Assembly Lime.dll public delegate bool DelegatePresenter<T>.PartialHitTestDelegate(T node, ref HitTestArgs args) Parameters node T args HitTestArgs Returns bool"
  },
  "api/Lime.DelegatePresenter-1.RenderDelegate.html": {
    "href": "api/Lime.DelegatePresenter-1.RenderDelegate.html",
    "title": "Delegate DelegatePresenter<T>.RenderDelegate | Citrus Engine",
    "keywords": "Delegate DelegatePresenter<T>.RenderDelegate Namespace Lime Assembly Lime.dll public delegate void DelegatePresenter<T>.RenderDelegate(T node) Parameters node T"
  },
  "api/Lime.DelegatePresenter-1.html": {
    "href": "api/Lime.DelegatePresenter-1.html",
    "title": "Class DelegatePresenter<T> | Citrus Engine",
    "keywords": "Class DelegatePresenter<T> Namespace Lime Assembly Lime.dll public class DelegatePresenter<T> : CustomPresenter<T>, IPresenter where T : Node Type Parameters T Inheritance object CustomPresenter CustomPresenter<T> DelegatePresenter<T> Implements IPresenter Inherited Members CustomPresenter<T>.Render(Node) CustomPresenter<T>.PartialHitTest(Node, ref HitTestArgs) CustomPresenter.GetRenderObject(Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DelegatePresenter(PartialHitTestDelegate) public DelegatePresenter(DelegatePresenter<T>.PartialHitTestDelegate partialHitTest) Parameters partialHitTest DelegatePresenter<T>.PartialHitTestDelegate DelegatePresenter(RenderDelegate) public DelegatePresenter(DelegatePresenter<T>.RenderDelegate render) Parameters render DelegatePresenter<T>.RenderDelegate DelegatePresenter(RenderDelegate, PartialHitTestDelegate) public DelegatePresenter(DelegatePresenter<T>.RenderDelegate render, DelegatePresenter<T>.PartialHitTestDelegate partialHitTest) Parameters render DelegatePresenter<T>.RenderDelegate partialHitTest DelegatePresenter<T>.PartialHitTestDelegate Methods InternalPartialHitTest(T, ref HitTestArgs) protected override bool InternalPartialHitTest(T node, ref HitTestArgs args) Parameters node T args HitTestArgs Returns bool InternalRender(T) protected override void InternalRender(T node) Parameters node T"
  },
  "api/Lime.DepthState.html": {
    "href": "api/Lime.DepthState.html",
    "title": "Struct DepthState | Citrus Engine",
    "keywords": "Struct DepthState Namespace Lime Assembly Lime.dll public struct DepthState Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Comparison public CompareFunc Comparison Field Value CompareFunc Default public static readonly DepthState Default Field Value DepthState DepthDisabled public static readonly DepthState DepthDisabled Field Value DepthState DepthRead public static readonly DepthState DepthRead Field Value DepthState DepthReadWrite public static readonly DepthState DepthReadWrite Field Value DepthState DepthWrite public static readonly DepthState DepthWrite Field Value DepthState Enable public bool Enable Field Value bool WriteEnable public bool WriteEnable Field Value bool"
  },
  "api/Lime.DeviceOrientation.html": {
    "href": "api/Lime.DeviceOrientation.html",
    "title": "Enum DeviceOrientation | Citrus Engine",
    "keywords": "Enum DeviceOrientation Namespace Lime Assembly Lime.dll [Flags] public enum DeviceOrientation Extension Methods DeviceOrientationExtensions.IsLandscape(DeviceOrientation) DeviceOrientationExtensions.IsPortrait(DeviceOrientation) Fields All = AllPortraits | AllLandscapes AllLandscapes = LandscapeLeft | LandscapeRight AllPortraits = Portrait | PortraitUpsideDown LandscapeLeft = 4 LandscapeRight = 8 Portrait = 1 PortraitUpsideDown = 2"
  },
  "api/Lime.DeviceOrientationExtensions.html": {
    "href": "api/Lime.DeviceOrientationExtensions.html",
    "title": "Class DeviceOrientationExtensions | Citrus Engine",
    "keywords": "Class DeviceOrientationExtensions Namespace Lime Assembly Lime.dll public static class DeviceOrientationExtensions Inheritance object DeviceOrientationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsLandscape(DeviceOrientation) public static bool IsLandscape(this DeviceOrientation value) Parameters value DeviceOrientation Returns bool IsPortrait(DeviceOrientation) public static bool IsPortrait(this DeviceOrientation value) Parameters value DeviceOrientation Returns bool"
  },
  "api/Lime.DisableAncestralGesturesComponent.html": {
    "href": "api/Lime.DisableAncestralGesturesComponent.html",
    "title": "Class DisableAncestralGesturesComponent | Citrus Engine",
    "keywords": "Class DisableAncestralGesturesComponent Namespace Lime Assembly Lime.dll public class DisableAncestralGesturesComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent DisableAncestralGesturesComponent Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable)"
  },
  "api/Lime.DissolveComponent.html": {
    "href": "api/Lime.DissolveComponent.html",
    "title": "Class DissolveComponent | Citrus Engine",
    "keywords": "Class DissolveComponent Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Effects/Dissolve\")] public class DissolveComponent : MaterialComponent<DissolveMaterial>, IDisposable, IAnimable Inheritance object Component NodeComponent MaterialComponent MaterialComponent<DissolveMaterial> DissolveComponent Implements IDisposable IAnimable Inherited Members MaterialComponent<DissolveMaterial>.CustomMaterial MaterialComponent<DissolveMaterial>.OnOwnerChanged(Node) NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Brightness [YuzuMember] public float Brightness { get; set; } Property Value float Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 MaskTexture [YuzuMember] public ITexture MaskTexture { get; set; } Property Value ITexture Range [YuzuMember] public Vector2 Range { get; set; } Property Value Vector2"
  },
  "api/Lime.DissolveMaterial.DissolveMaterialShaderProgram.html": {
    "href": "api/Lime.DissolveMaterial.DissolveMaterialShaderProgram.html",
    "title": "Class DissolveMaterial.DissolveMaterialShaderProgram | Citrus Engine",
    "keywords": "Class DissolveMaterial.DissolveMaterialShaderProgram Namespace Lime Assembly Lime.dll public class DissolveMaterial.DissolveMaterialShaderProgram : ShaderProgram Inheritance object ShaderProgram DissolveMaterial.DissolveMaterialShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance public static DissolveMaterial.DissolveMaterialShaderProgram Instance { get; } Property Value DissolveMaterial.DissolveMaterialShaderProgram"
  },
  "api/Lime.DissolveMaterial.html": {
    "href": "api/Lime.DissolveMaterial.html",
    "title": "Class DissolveMaterial | Citrus Engine",
    "keywords": "Class DissolveMaterial Namespace Lime Assembly Lime.dll public class DissolveMaterial : IMaterial Inheritance object DissolveMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DissolveMaterial() public DissolveMaterial() Fields Blending [YuzuMember] public Blending Blending Field Value Blending Brightness [YuzuMember] public float Brightness Field Value float Color [YuzuMember] public Vector4 Color Field Value Vector4 MaskTexture [YuzuMember] public ITexture MaskTexture Field Value ITexture Range [YuzuMember] public Vector2 Range Field Value Vector2 Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.DistortionMaterial.html": {
    "href": "api/Lime.DistortionMaterial.html",
    "title": "Class DistortionMaterial | Citrus Engine",
    "keywords": "Class DistortionMaterial Namespace Lime Assembly Lime.dll public class DistortionMaterial : IMaterial Inheritance object DistortionMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DistortionMaterial() public DistortionMaterial() DistortionMaterial(Blending) public DistortionMaterial(Blending blending) Parameters blending Blending Properties BarrelPincushion [YuzuMember] public float BarrelPincushion { get; set; } Property Value float Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Blue [YuzuMember] public float Blue { get; set; } Property Value float ChromaticAberration [YuzuMember] public float ChromaticAberration { get; set; } Property Value float Green [YuzuMember] public float Green { get; set; } Property Value float Id public string Id { get; set; } Property Value string Opaque [YuzuMember] public bool Opaque { get; set; } Property Value bool PassCount public int PassCount { get; } Property Value int Red [YuzuMember] public float Red { get; set; } Property Value float Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.DistortionMesh.html": {
    "href": "api/Lime.DistortionMesh.html",
    "title": "Class DistortionMesh | Citrus Engine",
    "keywords": "Class DistortionMesh Namespace Lime Assembly Lime.dll [TangerineAllowedChildrenTypes(new Type[] { typeof(DistortionMeshPoint) })] [TangerineVisualHintGroup(\"/All/Nodes/Images\", \"Distortion Mesh\")] public class DistortionMesh : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IMaterialComponentOwner Inheritance object Node Widget DistortionMesh Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IMaterialComponentOwner Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods DistortionMeshExtensions.GetLocalAABB(DistortionMesh) IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors DistortionMesh() public DistortionMesh() Fields points protected static DistortionMeshPoint[] points Field Value DistortionMeshPoint[] Properties DefaultMaterial public IMaterial DefaultMaterial { get; } Property Value IMaterial Material public IMaterial Material { get; set; } Property Value IMaterial NumCols [YuzuMember] public int NumCols { get; set; } Property Value int NumRows [YuzuMember] public int NumRows { get; set; } Property Value int Sprite Gets or sets a texture upon the widget. For widgets which can not have a texture returns null. [YuzuMember] [TangerineKeyframeColor(4)] public override ISprite Sprite { get; set; } Property Value ISprite UV0 public Vector2 UV0 { get; } Property Value Vector2 UV1 public Vector2 UV1 { get; } Property Value Vector2 Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain GetPoint(int, int) public DistortionMeshPoint GetPoint(int row, int col) Parameters row int col int Returns DistortionMeshPoint GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject PartialHitTestByContents(ref HitTestArgs) protected override bool PartialHitTestByContents(ref HitTestArgs args) Parameters args HitTestArgs Returns bool"
  },
  "api/Lime.DistortionMeshPoint.html": {
    "href": "api/Lime.DistortionMeshPoint.html",
    "title": "Class DistortionMeshPoint | Citrus Engine",
    "keywords": "Class DistortionMeshPoint Namespace Lime Assembly Lime.dll [TangerineAllowedParentTypes(new Type[] { typeof(DistortionMesh) })] public class DistortionMeshPoint : PointObject, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node PointObject DistortionMeshPoint Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members PointObject.Position PointObject.X PointObject.Y PointObject.SkinningWeights PointObject.TransformedPosition PointObject.RecalcTransformedPositionIfNeeded() PointObject.CalcPositionInSpaceOf(Widget) PointObject.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors DistortionMeshPoint() public DistortionMeshPoint() Properties Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 Offset [YuzuMember] public override Vector2 Offset { get; set; } Property Value Vector2 UV [YuzuMember] public Vector2 UV { get; set; } Property Value Vector2 Methods UpdateAncestorBoundingRect(Widget) public override void UpdateAncestorBoundingRect(Widget ancestor) Parameters ancestor Widget"
  },
  "api/Lime.DistortionShaderProgram.html": {
    "href": "api/Lime.DistortionShaderProgram.html",
    "title": "Class DistortionShaderProgram | Citrus Engine",
    "keywords": "Class DistortionShaderProgram Namespace Lime Assembly Lime.dll public class DistortionShaderProgram : ShaderProgram Inheritance object ShaderProgram DistortionShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(bool) public static DistortionShaderProgram GetInstance(bool opaque = false) Parameters opaque bool Returns DistortionShaderProgram"
  },
  "api/Lime.DocumentHeader.html": {
    "href": "api/Lime.DocumentHeader.html",
    "title": "Class DocumentHeader | Citrus Engine",
    "keywords": "Class DocumentHeader Namespace Lime Assembly Lime.dll When any given citrus document is serialized DocumentHeader is serialized into the output stream before the document itself. Lime.* contains several serializable classes. Some of them (or their derived classes) are serialized directly while others are used as elements of those serialized. Directly serialized ones determine document root type. So Node is root type of a *.tan document. Examples of citrus documents are: Node (tangerine scene, *.tan), Model3DAttachmentParser.ModelAttachmentFormat (*.txt), TextureAtlasElement.Params (*.atlasPart, but will be renamed to Sprite *.sprite), Font (*.tft). Lime.TftConfig (*.tftconf) (defined in Extensions/DynamicFont) PackedAssetBundle.Manifest (.Manifest) TextureParams (*.texture) SerializableCompoundFont (*.cft) Animation.AnimationData (*.ant) Model3D (*.t3d) (actually also Node* kind of document) public sealed class DocumentHeader Inheritance object DocumentHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields Metadata List of document's Metadata. [YuzuMember] public List<Metadata> Metadata Field Value List<Metadata>"
  },
  "api/Lime.DoubleClickGesture.html": {
    "href": "api/Lime.DoubleClickGesture.html",
    "title": "Class DoubleClickGesture | Citrus Engine",
    "keywords": "Class DoubleClickGesture Namespace Lime Assembly Lime.dll public class DoubleClickGesture : Gesture Inheritance object Gesture DoubleClickGesture Inherited Members Gesture.Owner Gesture.Input Gesture.OnCancel(Gesture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DoubleClickGesture(Action) public DoubleClickGesture(Action recognized = null) Parameters recognized Action DoubleClickGesture(int, Action) public DoubleClickGesture(int buttonIndex, Action recognized = null) Parameters buttonIndex int recognized Action Properties ButtonIndex public int ButtonIndex { get; } Property Value int Methods OnUpdate() protected override bool OnUpdate() Returns bool WasRecognized() public bool WasRecognized() Returns bool Events Recognized public event Action Recognized Event Type Action"
  },
  "api/Lime.DragDirection.html": {
    "href": "api/Lime.DragDirection.html",
    "title": "Enum DragDirection | Citrus Engine",
    "keywords": "Enum DragDirection Namespace Lime Assembly Lime.dll public enum DragDirection Fields Any = 0 Horizontal = 1 Vertical = 2"
  },
  "api/Lime.DragGesture.DampingMotionStrategy.html": {
    "href": "api/Lime.DragGesture.DampingMotionStrategy.html",
    "title": "Class DragGesture.DampingMotionStrategy | Citrus Engine",
    "keywords": "Class DragGesture.DampingMotionStrategy Namespace Lime Assembly Lime.dll Motion damping based on Gauss error function. Duration is calculated so motion lasts until min speed reached. public class DragGesture.DampingMotionStrategy : DragGesture.IMotionStrategy Inheritance object DragGesture.DampingMotionStrategy Implements DragGesture.IMotionStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DampingMotionStrategy(float, float, float, float) public DampingMotionStrategy(float dampingFactor1, float dampingFactor2, float minSpeed = 25, float maxStartSpeed = Infinity) Parameters dampingFactor1 float Initial speed damping factor. Should be in range (0; 1]. The lower the dampingFactor2, the lower damingFactor1 can be. Otherwise it may result in overflow. dampingFactor2 float Damping factor applied to speed damping factor each frame. Valid range is (0; 1). minSpeed float The minimum speed that is considered a full stop. maxStartSpeed float Maximum initial speed of movement. Properties Duration public float Duration { get; } Property Value float Position public Vector2 Position { get; } Property Value Vector2 Methods Start(Vector2, IEnumerable<(Vector2 Distance, float Duration)>) Start position calculation. public bool Start(Vector2 startPosition, IEnumerable<(Vector2 Distance, float Duration)> touchHistory) Parameters startPosition Vector2 The position motion should begin at. touchHistory IEnumerable<(Vector2 Distance, float Duration)> Sequence of distance and duration pairs for a couple of last frames. Returns bool Update(float) Recalculates position. public void Update(float time) Parameters time float Time elapsed from the start."
  },
  "api/Lime.DragGesture.IMotionStrategy.html": {
    "href": "api/Lime.DragGesture.IMotionStrategy.html",
    "title": "Interface DragGesture.IMotionStrategy | Citrus Engine",
    "keywords": "Interface DragGesture.IMotionStrategy Namespace Lime Assembly Lime.dll Defines a motion strategy. public interface DragGesture.IMotionStrategy Properties Duration float Duration { get; } Property Value float Position Vector2 Position { get; } Property Value Vector2 Methods Start(Vector2, IEnumerable<(Vector2 Distance, float Duration)>) Start position calculation. bool Start(Vector2 startPosition, IEnumerable<(Vector2 Distance, float Duration)> touchHistory) Parameters startPosition Vector2 The position motion should begin at. touchHistory IEnumerable<(Vector2 Distance, float Duration)> Sequence of distance and duration pairs for a couple of last frames. Returns bool Update(float) Recalculates position. void Update(float time) Parameters time float Time elapsed from the start."
  },
  "api/Lime.DragGesture.html": {
    "href": "api/Lime.DragGesture.html",
    "title": "Class DragGesture | Citrus Engine",
    "keywords": "Class DragGesture Namespace Lime Assembly Lime.dll public class DragGesture : Gesture Inheritance object Gesture DragGesture Derived PinchGesture Inherited Members Gesture.Owner Gesture.Input object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DragGesture(IMotionStrategy) public DragGesture(DragGesture.IMotionStrategy motionStrategy) Parameters motionStrategy DragGesture.IMotionStrategy DragGesture(int, DragDirection, bool, float, IMotionStrategy) public DragGesture(int buttonIndex = 0, DragDirection direction = DragDirection.Any, bool exclusive = false, float dragThreshold = 5, DragGesture.IMotionStrategy motionStrategy = null) Parameters buttonIndex int direction DragDirection exclusive bool dragThreshold float motionStrategy DragGesture.IMotionStrategy Fields DefaultDragThreshold protected const float DefaultDragThreshold = 5 Field Value float changed protected Gesture.PollableEvent changed Field Value Gesture.PollableEvent Properties ButtonIndex public int ButtonIndex { get; } Property Value int Direction public DragDirection Direction { get; } Property Value DragDirection DragThreshold public float DragThreshold { get; set; } Property Value float Exclusive public bool Exclusive { get; set; } Property Value bool LastDragDistance public Vector2 LastDragDistance { get; } Property Value Vector2 MousePosition MousePosition depends on DragDirection so (MousePosition - DragDirection).X or Y will always be zero if DragDirection is Vertical or Horizontal respectively. This fact is used when checking for threshold. public virtual Vector2 MousePosition { get; } Property Value Vector2 MousePressPosition public Vector2 MousePressPosition { get; } Property Value Vector2 PreviousMousePosition protected virtual Vector2 PreviousMousePosition { get; } Property Value Vector2 TotalDragDistance public Vector2 TotalDragDistance { get; } Property Value Vector2 Methods CanStartDrag() protected virtual bool CanStartDrag() Returns bool IsChanging() public bool IsChanging() Returns bool IsDragging() protected virtual bool IsDragging() Returns bool IsRecognizing() public bool IsRecognizing() Returns bool OnCancel(Gesture) protected override void OnCancel(Gesture sender) Parameters sender Gesture OnUpdate() protected override bool OnUpdate() Returns bool TryGetDragPosition(out Vector2) protected virtual bool TryGetDragPosition(out Vector2 position) Parameters position Vector2 Returns bool TryGetStartDragPosition(out Vector2) protected virtual bool TryGetStartDragPosition(out Vector2 position) Parameters position Vector2 Returns bool WasBegan() public bool WasBegan() Returns bool WasChanged() public bool WasChanged() Returns bool WasEnded() public bool WasEnded() Returns bool WasEnding() public bool WasEnding() Returns bool WasRecognized() public bool WasRecognized() Returns bool Events Began Occurs when gesture activates and starts recognition. public event Action Began Event Type Action Changed Occurs when drag position is being changed by either user or motion strategy. public event Action Changed Event Type Action Ended Occurs when either a user released input or motion strategy is done. public event Action Ended Event Type Action Ending Occurs when the drag is completed and the motion defined by motion strategy begins. public virtual event Action Ending Event Type Action Recognized Occurs if a user started gesture in a valid direction. public event Action Recognized Event Type Action"
  },
  "api/Lime.DropDownList.html": {
    "href": "api/Lime.DropDownList.html",
    "title": "Class DropDownList | Citrus Engine",
    "keywords": "Class DropDownList Namespace Lime Assembly Lime.dll public class DropDownList : CommonDropDownList, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonDropDownList DropDownList Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedDropDownList Inherited Members CommonDropDownList.Changed CommonDropDownList.ShowingDropDownList CommonDropDownList.Items CommonDropDownList.TextWidgetRef CommonDropDownList.TextWidget CommonDropDownList.userValue CommonDropDownList.Index CommonDropDownList.Text CommonDropDownList.Value CommonDropDownList.RaiseChanged(bool) CommonDropDownList.RefreshTextWidget() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Methods ShouldHandleSpacebar() protected override bool ShouldHandleSpacebar() Returns bool"
  },
  "api/Lime.DropFilesGesture.html": {
    "href": "api/Lime.DropFilesGesture.html",
    "title": "Class DropFilesGesture | Citrus Engine",
    "keywords": "Class DropFilesGesture Namespace Lime Assembly Lime.dll public class DropFilesGesture : Gesture Inheritance object Gesture DropFilesGesture Inherited Members Gesture.Owner Gesture.Input Gesture.OnCancel(Gesture) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnUpdate() protected override bool OnUpdate() Returns bool Events Recognized Invokes on files drop. Handler should clean up processed files. All unprocessed files will be propagated up to the hierarchy. public event Action<List<string>> Recognized Event Type Action<List<string>>"
  },
  "api/Lime.DummyWindow.html": {
    "href": "api/Lime.DummyWindow.html",
    "title": "Class DummyWindow | Citrus Engine",
    "keywords": "Class DummyWindow Namespace Lime Assembly Lime.dll public class DummyWindow : CommonWindow, IWindow Inheritance object CommonWindow DummyWindow Implements IWindow Inherited Members CommonWindow.Activated CommonWindow.Deactivated CommonWindow.Closing CommonWindow.Closed CommonWindow.Moved CommonWindow.Resized CommonWindow.Updating CommonWindow.Rendering CommonWindow.Sync CommonWindow.SafeAreaInsetsChanged CommonWindow.VisibleChanging CommonWindow.Tag CommonWindow.Current CommonWindow.Context CommonWindow.SafeAreaInsets CommonWindow.VSync CommonWindow.UnhandledExceptionOnUpdate CommonWindow.IsRenderingPhase CommonWindow.RaiseActivated() CommonWindow.RaiseDeactivated() CommonWindow.RaiseClosed() CommonWindow.RaiseRendering() CommonWindow.RaiseUpdating(float) CommonWindow.RaiseSync() CommonWindow.RaiseSafeAreaInsetsChanged() CommonWindow.RaiseClosing(CloseReason) CommonWindow.RaiseMoved() CommonWindow.RaiseResized(bool) CommonWindow.RaiseVisibleChanging(bool, bool) CommonWindow.InvokeOnRendering(Action) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Active Indicates whether the window is active. For PC, Mac it means that the window has the input focus. On mobile platforms it indicates that the application is on screen and running. public bool Active { get; set; } Property Value bool AllowDropFiles Gets or sets a value indicating whether this IWindow allow files drop. public bool AllowDropFiles { get; set; } Property Value bool AsyncRendering public bool AsyncRendering { get; } Property Value bool ClientPosition Gets or sets an upper-left corner of the client area on the desktop. public Vector2 ClientPosition { get; set; } Property Value Vector2 ClientSize Gets or sets a client size of this window. public Vector2 ClientSize { get; set; } Property Value Vector2 Cursor Gets or sets the cursor for this window. public MouseCursor Cursor { get; set; } Property Value MouseCursor DecoratedPosition Gets or sets a position of this window on the desktop. public Vector2 DecoratedPosition { get; set; } Property Value Vector2 DecoratedSize Gets or sets an decorated size (including title and border) of this window. public Vector2 DecoratedSize { get; set; } Property Value Vector2 Display Gets the display device containing the largest portion of this window on desktops or the default screen on devices. public IDisplay Display { get; } Property Value IDisplay FPS Gets current FPS for the window. public float FPS { get; set; } Property Value float FixedSize Gets or sets the window behavior to be resizable or not. public bool FixedSize { get; set; } Property Value bool Form public Form Form { get; set; } Property Value Form Fullscreen Gets or sets the fullscreen window state. public bool Fullscreen { get; set; } Property Value bool Input Gets WindowInput for this window. public WindowInput Input { get; set; } Property Value WindowInput MaximumDecoratedSize public Vector2 MaximumDecoratedSize { get; set; } Property Value Vector2 MinimumDecoratedSize public Vector2 MinimumDecoratedSize { get; set; } Property Value Vector2 PixelScale Gets the scale factor which translates virtual units to the physical pixels. public float PixelScale { get; set; } Property Value float State Gets or sets the window state. public WindowState State { get; set; } Property Value WindowState Title Gets or sets the title of the window. public string Title { get; set; } Property Value string UnclampedDelta Milliseconds since last update. public float UnclampedDelta { get; } Property Value float UpdateMinimized public bool UpdateMinimized { get; set; } Property Value bool Visible Gets or sets a value indicates whether the window is displayed. public bool Visible { get; set; } Property Value bool Methods Activate() Activates this window. public void Activate() CalcFPS() public float CalcFPS() Returns float Center() Centers the game window on the current display. public void Center() Close() Closes this window. public void Close() DesktopToLocal(Vector2) Converts desktop coordinates into local window coordinates. public Vector2 DesktopToLocal(Vector2 desktopPosition) Parameters desktopPosition Vector2 Returns Vector2 DragFiles(string[]) Initiate dragging of files supported by native controls public void DragFiles(string[] filenames) Parameters filenames string[] list of paths to files Invalidate() Sets a flag indicating whether the current frame should be rendered. public void Invalidate() LocalToDesktop(Vector2) Converts local window coordinates into desktop coordinates. public Vector2 LocalToDesktop(Vector2 localPosition) Parameters localPosition Vector2 Returns Vector2 ShowModal() You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The window must be hidden before calling this method. public void ShowModal() WaitForRendering() public void WaitForRendering() Events FilesDropped Occurs when files are dropped. public event Action<IEnumerable<string>> FilesDropped Event Type Action<IEnumerable<string>>"
  },
  "api/Lime.EarlyUpdateStage.html": {
    "href": "api/Lime.EarlyUpdateStage.html",
    "title": "Class EarlyUpdateStage | Citrus Engine",
    "keywords": "Class EarlyUpdateStage Namespace Lime Assembly Lime.dll Identifier for early update stage. public class EarlyUpdateStage Inheritance object EarlyUpdateStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.EditBox.html": {
    "href": "api/Lime.EditBox.html",
    "title": "Class EditBox | Citrus Engine",
    "keywords": "Class EditBox Namespace Lime Assembly Lime.dll public class EditBox : CommonEditBox, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonEditBox EditBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedEditBox Inherited Members CommonEditBox.IsReadOnly CommonEditBox.Editor CommonEditBox.ScrollWidget CommonEditBox.TextWidget CommonEditBox.Submitted CommonEditBox.ScrollView CommonEditBox.Text CommonEditBox.OnSubmit() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float)"
  },
  "api/Lime.Editor.Cmds.html": {
    "href": "api/Lime.Editor.Cmds.html",
    "title": "Class Editor.Cmds | Citrus Engine",
    "keywords": "Class Editor.Cmds Namespace Lime Assembly Lime.dll public static class Editor.Cmds Inheritance object Editor.Cmds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BackSpace public static ICommand BackSpace Field Value ICommand Cancel public static ICommand Cancel Field Value ICommand ContextMenu public static ICommand ContextMenu Field Value ICommand DeleteWordNext public static ICommand DeleteWordNext Field Value ICommand DeleteWordPrev public static ICommand DeleteWordPrev Field Value ICommand MoveCharNext public static ICommand MoveCharNext Field Value ICommand MoveCharPrev public static ICommand MoveCharPrev Field Value ICommand MoveLineEnd public static ICommand MoveLineEnd Field Value ICommand MoveLineNext public static ICommand MoveLineNext Field Value ICommand MoveLinePrev public static ICommand MoveLinePrev Field Value ICommand MoveLineStart public static ICommand MoveLineStart Field Value ICommand MoveWordNext public static ICommand MoveWordNext Field Value ICommand MoveWordPrev public static ICommand MoveWordPrev Field Value ICommand SelectCharNext public static ICommand SelectCharNext Field Value ICommand SelectCharPrev public static ICommand SelectCharPrev Field Value ICommand SelectCurrentWord public static ICommand SelectCurrentWord Field Value ICommand SelectLineEnd public static ICommand SelectLineEnd Field Value ICommand SelectLineStart public static ICommand SelectLineStart Field Value ICommand SelectWordNext public static ICommand SelectWordNext Field Value ICommand SelectWordPrev public static ICommand SelectWordPrev Field Value ICommand Submit public static ICommand Submit Field Value ICommand ToggleOverwrite public static ICommand ToggleOverwrite Field Value ICommand"
  },
  "api/Lime.Editor.UndoItem.html": {
    "href": "api/Lime.Editor.UndoItem.html",
    "title": "Struct Editor.UndoItem | Citrus Engine",
    "keywords": "Struct Editor.UndoItem Namespace Lime Assembly Lime.dll public struct Editor.UndoItem : IEquatable<Editor.UndoItem> Implements IEquatable<Editor.UndoItem> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields TextPos public int TextPos Field Value int Value public string Value Field Value string Methods Equals(UndoItem) Indicates whether the current object is equal to another object of the same type. public bool Equals(Editor.UndoItem other) Parameters other Editor.UndoItem An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false."
  },
  "api/Lime.Editor.html": {
    "href": "api/Lime.Editor.html",
    "title": "Class Editor | Citrus Engine",
    "keywords": "Class Editor Namespace Lime Assembly Lime.dll Editor behaviour implemented over the given text display widget. public class Editor Inheritance object Editor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Editor(Widget, IEditorParams, Widget, Widget) public Editor(Widget displayWidget, IEditorParams editorParams, Widget focusableWidget = null, Widget clickableWidget = null) Parameters displayWidget Widget editorParams IEditorParams focusableWidget Widget clickableWidget Widget Fields ClickableWidget public readonly Widget ClickableWidget Field Value Widget DisplayWidget public readonly Widget DisplayWidget Field Value Widget EditorParams public readonly IEditorParams EditorParams Field Value IEditorParams FocusableWidget public readonly Widget FocusableWidget Field Value Widget History public UndoHistory<Editor.UndoItem> History Field Value UndoHistory<Editor.UndoItem> Password public SecureString Password Field Value SecureString Text public readonly IText Text Field Value IText Properties CaretPos public ICaretPosition CaretPos { get; } Property Value ICaretPosition Enabled public bool Enabled { get; } Property Value bool OverwriteMode public bool OverwriteMode { get; } Property Value bool ProcessInput public bool ProcessInput { get; set; } Property Value bool SelectionEnd public ICaretPosition SelectionEnd { get; } Property Value ICaretPosition SelectionStart public ICaretPosition SelectionStart { get; } Property Value ICaretPosition Methods AdjustSizeAndScrollToCaret() public void AdjustSizeAndScrollToCaret() CurrentChar() public char CurrentChar() Returns char DeleteChar() public void DeleteChar() HasSelection() public bool HasSelection() Returns bool SelectAll() public void SelectAll() Unlink() public void Unlink()"
  },
  "api/Lime.EditorParams.html": {
    "href": "api/Lime.EditorParams.html",
    "title": "Class EditorParams | Citrus Engine",
    "keywords": "Class EditorParams Namespace Lime Assembly Lime.dll public class EditorParams : NodeComponent, IDisposable, IAnimable, IEditorParams Inheritance object Component NodeComponent EditorParams Implements IDisposable IAnimable IEditorParams Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields NumberStyle public const NumberStyles NumberStyle = AllowLeadingSign | AllowDecimalPoint Field Value NumberStyles Properties AcceptText public Predicate<string> AcceptText { get; set; } Property Value Predicate<string> AllowNonDisplayableChars public bool AllowNonDisplayableChars { get; set; } Property Value bool MaxHeight public float MaxHeight { get; set; } Property Value float MaxLength public int MaxLength { get; set; } Property Value int MaxLines public int MaxLines { get; set; } Property Value int MaxUndoDepth public int MaxUndoDepth { get; set; } Property Value int MouseSelectionThreshold public float MouseSelectionThreshold { get; set; } Property Value float OffsetContextMenu public Func<Vector2, Vector2> OffsetContextMenu { get; set; } Property Value Func<Vector2, Vector2> PasswordChar public char? PasswordChar { get; set; } Property Value char? PasswordLastCharShowTime public float PasswordLastCharShowTime { get; set; } Property Value float ReplaceCommaWithDecimalPoint public bool ReplaceCommaWithDecimalPoint { get; set; } Property Value bool Scroll public ScrollView Scroll { get; set; } Property Value ScrollView SelectAllOnFocus public bool SelectAllOnFocus { get; set; } Property Value bool SoftKeyboardType public SoftKeyboardType SoftKeyboardType { get; set; } Property Value SoftKeyboardType UseSecureString public bool UseSecureString { get; set; } Property Value bool Methods AcceptNumber(string) public static bool AcceptNumber(string s) Parameters s string Returns bool IsAcceptableHeight(float) public bool IsAcceptableHeight(float height) Parameters height float Returns bool IsAcceptableLength(int) public bool IsAcceptableLength(int length) Parameters length int Returns bool IsAcceptableLines(int) public bool IsAcceptableLines(int lines) Parameters lines int Returns bool"
  },
  "api/Lime.EmissionType.html": {
    "href": "api/Lime.EmissionType.html",
    "title": "Enum EmissionType | Citrus Engine",
    "keywords": "Enum EmissionType Namespace Lime Assembly Lime.dll [Flags] public enum EmissionType Fields Inner = 1 None = 0 Outer = 2"
  },
  "api/Lime.EmitterAction.html": {
    "href": "api/Lime.EmitterAction.html",
    "title": "Enum EmitterAction | Citrus Engine",
    "keywords": "Enum EmitterAction Namespace Lime Assembly Lime.dll public enum EmitterAction Fields Burst = 0 Reset = 1"
  },
  "api/Lime.EmitterShape.html": {
    "href": "api/Lime.EmitterShape.html",
    "title": "Enum EmitterShape | Citrus Engine",
    "keywords": "Enum EmitterShape Namespace Lime Assembly Lime.dll public enum EmitterShape Fields Area = 3 Custom = 4 Particles are generated inside polygon defined by EmitterShapePoint points. Polygon points are oriented clockwise. Ellipse = 2 Line = 1 Point = 0"
  },
  "api/Lime.EmitterShapePoint.html": {
    "href": "api/Lime.EmitterShapePoint.html",
    "title": "Class EmitterShapePoint | Citrus Engine",
    "keywords": "Class EmitterShapePoint Namespace Lime Assembly Lime.dll [TangerineAllowedParentTypes(new Type[] { typeof(ParticleEmitter) })] public class EmitterShapePoint : PointObject, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node PointObject EmitterShapePoint Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members PointObject.Position PointObject.X PointObject.Y PointObject.SkinningWeights PointObject.Offset PointObject.TransformedPosition PointObject.RecalcTransformedPositionIfNeeded() PointObject.CalcPositionInSpaceOf(Widget) PointObject.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float)"
  },
  "api/Lime.Environment.html": {
    "href": "api/Lime.Environment.html",
    "title": "Class Environment | Citrus Engine",
    "keywords": "Class Environment Namespace Lime Assembly Lime.dll public static class Environment Inheritance object Environment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDataDirectory(string) public static string GetDataDirectory(string appName) Parameters appName string Returns string GetDataDirectory(string, string, string) public static string GetDataDirectory(string companyName, string appName, string appVersion) Parameters companyName string appName string appVersion string Returns string GetDesktopBounds() public static Rectangle GetDesktopBounds() Returns Rectangle GetDesktopSize() public static Vector2 GetDesktopSize() Returns Vector2 GetDownloadableContentDirectory(string) public static string GetDownloadableContentDirectory(string appName) Parameters appName string Returns string GetDownloadableContentDirectory(string, string, string) public static string GetDownloadableContentDirectory(string companyName, string appName, string appVersion) Parameters companyName string appName string appVersion string Returns string GetPathInsideDataDirectory(string, string) public static string GetPathInsideDataDirectory(string appName, string path) Parameters appName string path string Returns string OpenBrowser(string) [Obsolete(\"Use OpenUrl() instead\")] public static void OpenBrowser(string url) Parameters url string OpenUrl(string) public static void OpenUrl(string url) Parameters url string ShellExecute(string) public static void ShellExecute(string url) Parameters url string ShowInFileManager(string) Opens the system file manager and selects a file or folder public static void ShowInFileManager(string path) Parameters path string Absolute path to the file or folder"
  },
  "api/Lime.ExpandableListItem.html": {
    "href": "api/Lime.ExpandableListItem.html",
    "title": "Class ExpandableListItem | Citrus Engine",
    "keywords": "Class ExpandableListItem Namespace Lime Assembly Lime.dll public class ExpandableListItem : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget ExpandableListItem Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ExpandableListItem(Widget, ListView) public ExpandableListItem(Widget header, ListView listView) Parameters header Widget listView ListView Fields Header public readonly Widget Header Field Value Widget ListView public readonly ListView ListView Field Value ListView Properties ContentItems public NodeList ContentItems { get; } Property Value NodeList IsAnimating public bool IsAnimating { get; } Property Value bool IsExpanded public bool IsExpanded { get; } Property Value bool PinHeader public bool PinHeader { get; set; } Property Value bool Methods AddContentItem(Widget) public void AddContentItem(Widget item) Parameters item Widget DisposeContent() public void DisposeContent() InsertContentItem(int, Widget) public void InsertContentItem(int index, Widget item) Parameters index int item Widget SetExpanded(bool, bool, Action) public void SetExpanded(bool value, bool animated, Action onAnimationFinished = null) Parameters value bool animated bool onAnimationFinished Action"
  },
  "api/Lime.FXAAMaterial.html": {
    "href": "api/Lime.FXAAMaterial.html",
    "title": "Class FXAAMaterial | Citrus Engine",
    "keywords": "Class FXAAMaterial Namespace Lime Assembly Lime.dll public class FXAAMaterial : IMaterial Inheritance object FXAAMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FXAAMaterial() public FXAAMaterial() FXAAMaterial(Blending) public FXAAMaterial(Blending blending) Parameters blending Blending Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Id public string Id { get; set; } Property Value string LumaTreshold [YuzuMember] public float LumaTreshold { get; set; } Property Value float MaxSpan [YuzuMember] public float MaxSpan { get; set; } Property Value float MinReduce [YuzuMember] public float MinReduce { get; set; } Property Value float MulReduce [YuzuMember] public float MulReduce { get; set; } Property Value float Opaque [YuzuMember] public bool Opaque { get; set; } Property Value bool PassCount public int PassCount { get; } Property Value int TexelStep [YuzuMember] public Vector2 TexelStep { get; set; } Property Value Vector2 Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.FXAAShaderProgram.html": {
    "href": "api/Lime.FXAAShaderProgram.html",
    "title": "Class FXAAShaderProgram | Citrus Engine",
    "keywords": "Class FXAAShaderProgram Namespace Lime Assembly Lime.dll public class FXAAShaderProgram : ShaderProgram Inheritance object ShaderProgram FXAAShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(bool) public static FXAAShaderProgram GetInstance(bool opaque = false) Parameters opaque bool Returns FXAAShaderProgram"
  },
  "api/Lime.FastForwardAnimationEngine.html": {
    "href": "api/Lime.FastForwardAnimationEngine.html",
    "title": "Class FastForwardAnimationEngine | Citrus Engine",
    "keywords": "Class FastForwardAnimationEngine Namespace Lime Assembly Lime.dll public class FastForwardAnimationEngine : DefaultAnimationEngine Inheritance object AnimationEngine DefaultAnimationEngine FastForwardAnimationEngine Inherited Members DefaultAnimationEngine.Instance DefaultAnimationEngine.TryRunAnimation(Animation, string, double) DefaultAnimationEngine.FindMarkerAhead(Animation, double) DefaultAnimationEngine.ProcessMarker(Animation, Marker, double, double) DefaultAnimationEngine.RaiseStopped(Animation) DefaultAnimationEngine.ApplyAnimatorsAndExecuteTriggers(Animation, double, double, bool) DefaultAnimationEngine.AreEffectiveAnimatorsValid(Animation) DefaultAnimationEngine.BuildEffectiveAnimators(Animation) AnimationEngine.JumpAffectsRunningMarkerId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AdvanceAnimation(Animation, double) public override void AdvanceAnimation(Animation animation, double delta) Parameters animation Animation delta double"
  },
  "api/Lime.FileDialog.html": {
    "href": "api/Lime.FileDialog.html",
    "title": "Class FileDialog | Citrus Engine",
    "keywords": "Class FileDialog Namespace Lime Assembly Lime.dll Brings access to files and folders through the dialog screen. public class FileDialog : IFileDialog Inheritance object FileDialog Implements IFileDialog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedFileTypes Gets or sets an array of allowed file types. Example { \"txt\", \"png\" }. public string[] AllowedFileTypes { get; set; } Property Value string[] AllowsMultipleSelection Gets or sets a value indicating whether it is allowed to select more then one file in the open file dialog. public bool AllowsMultipleSelection { get; set; } Property Value bool CanCreateDirectories Gets or sets a value indicating whether the folder browser dialog has the \"New Folder\" button. public bool CanCreateDirectories { get; set; } Property Value bool FileName Gets a string containing file or folder path selected in the dialog. public string FileName { get; } Property Value string FileNames Gets an array of strings containing paths of all selected files. public string[] FileNames { get; } Property Value string[] InitialDirectory Gets or sets the dialog's initial directory. public string InitialDirectory { get; set; } Property Value string InitialFileName Gets or sets initial file name showed in file dialog. public string InitialFileName { get; set; } Property Value string Mode Gets or sets a mode indicating whether this dialog opens file, saves file or selects folder. public FileDialogMode Mode { get; set; } Property Value FileDialogMode Title Title text of the file dialog window. public string Title { get; set; } Property Value string Methods RunModal() Shows dialog. public bool RunModal() Returns bool return true if user clicks OK in the dialog."
  },
  "api/Lime.FileDialogMode.html": {
    "href": "api/Lime.FileDialogMode.html",
    "title": "Enum FileDialogMode | Citrus Engine",
    "keywords": "Enum FileDialogMode Namespace Lime Assembly Lime.dll Specifies possible dialog modes. public enum FileDialogMode Fields Open = 0 Open file dialog. Save = 1 Save file dialog. SelectFolder = 2 Select folder dialog."
  },
  "api/Lime.FileSystemWatcher.html": {
    "href": "api/Lime.FileSystemWatcher.html",
    "title": "Class FileSystemWatcher | Citrus Engine",
    "keywords": "Class FileSystemWatcher Namespace Lime Assembly Lime.dll public class FileSystemWatcher : IFileSystemWatcher, IDisposable Inheritance object FileSystemWatcher Implements IFileSystemWatcher IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileSystemWatcher(string, bool) public FileSystemWatcher(string path, bool includeSubdirectories) Parameters path string includeSubdirectories bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Events Changed public event Action<string> Changed Event Type Action<string> Created public event Action<string> Created Event Type Action<string> Deleted public event Action<string> Deleted Event Type Action<string> Renamed public event Action<string, string> Renamed Event Type Action<string, string>"
  },
  "api/Lime.FilesystemAssetBundle.FileInfo.html": {
    "href": "api/Lime.FilesystemAssetBundle.FileInfo.html",
    "title": "Class FilesystemAssetBundle.FileInfo | Citrus Engine",
    "keywords": "Class FilesystemAssetBundle.FileInfo Namespace Lime Assembly Lime.dll public class FilesystemAssetBundle.FileInfo Inheritance object FilesystemAssetBundle.FileInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ContentsHash [YuzuMember] public SHA256 ContentsHash Field Value SHA256 DateModified [YuzuMember] public DateTime DateModified Field Value DateTime OriginHash [YuzuMember] public SHA256 OriginHash Field Value SHA256"
  },
  "api/Lime.FilesystemAssetBundle.html": {
    "href": "api/Lime.FilesystemAssetBundle.html",
    "title": "Class FilesystemAssetBundle | Citrus Engine",
    "keywords": "Class FilesystemAssetBundle Namespace Lime Assembly Lime.dll public class FilesystemAssetBundle : AssetBundle, IDisposable Inheritance object AssetBundle FilesystemAssetBundle Implements IDisposable Inherited Members AssetBundle.Current AssetBundle.SetCurrent(AssetBundle, bool) AssetBundle.Initialized AssetBundle.ReadFile(string) AssetBundle.ReadAllText(string, Encoding) AssetBundle.ImportFile(string, string, SHA256, AssetAttributes) AssetBundle.OpenFileLocalized(string) AssetBundle.GetLocalizedPath(string) AssetBundle.GetFileAttributes(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FilesystemAssetBundle(string) public FilesystemAssetBundle(string baseDirectory) Parameters baseDirectory string Fields BaseDirectory public readonly string BaseDirectory Field Value string Methods DeleteFile(string) public override void DeleteFile(string path) Parameters path string Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public override void Dispose() EnumerateFiles(string, string) Enumerates all files by given path and having the given extension. Order is specific to implementation. public override IEnumerable<string> EnumerateFiles(string path = null, string extension = null) Parameters path string extension string Returns IEnumerable<string> FileExists(string) public override bool FileExists(string path) Parameters path string Returns bool FromSystemPath(string) Translates absolute system file path to the asset path. Raises UnsupportedException() for PackedAssetBundle. public override string FromSystemPath(string systemPath) Parameters systemPath string Returns string GetFileContentsHash(string) Returns SHA256 based on the file contents. public override SHA256 GetFileContentsHash(string path) Parameters path string Returns SHA256 GetFileOriginHash(string) Returns SHA256 that was passed to the ImportFile or ImportFileRaw methods. public override SHA256 GetFileOriginHash(string path) Parameters path string Returns SHA256 GetFileSize(string) public override int GetFileSize(string path) Parameters path string Returns int GetFileUnpackedSize(string) public override int GetFileUnpackedSize(string path) Parameters path string Returns int ImportFile(string, Stream, SHA256, AssetAttributes) public override void ImportFile(string destinationPath, Stream stream, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream originHash SHA256 attributes AssetAttributes ImportFileRaw(string, Stream, int, SHA256, SHA256, AssetAttributes) Imports a file assuming that the input stream is already compressed. public override void ImportFileRaw(string destinationPath, Stream stream, int unpackedSize, SHA256 hash, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream unpackedSize int hash SHA256 originHash SHA256 attributes AssetAttributes OpenFile(string, FileMode) public override Stream OpenFile(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream OpenFileRaw(string, FileMode) Returns file data as it stored in the asset bundle, e.g. compressed. public override Stream OpenFileRaw(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream ToSystemPath(string) Translates bundle path to the asset in the file system. Raises UnsupportedException() for PackedAssetBundle. public override string ToSystemPath(string bundlePath) Parameters bundlePath string Returns string"
  },
  "api/Lime.FloatBezierAnimationCurve.html": {
    "href": "api/Lime.FloatBezierAnimationCurve.html",
    "title": "Class FloatBezierAnimationCurve | Citrus Engine",
    "keywords": "Class FloatBezierAnimationCurve Namespace Lime Assembly Lime.dll public class FloatBezierAnimationCurve : BezierAnimationCurve<float>, IAnimationCurve<float>, IBezierAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<float> Inheritance object BezierAnimationCurve<float> FloatBezierAnimationCurve Implements IAnimationCurve<float> IBezierAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<float> Inherited Members BezierAnimationCurve<float>.IsEmpty BezierAnimationCurve<float>.Duration BezierAnimationCurve<float>.RefCount BezierAnimationCurve<float>.Keys BezierAnimationCurve<float>.AddRef() BezierAnimationCurve<float>.Release() BezierAnimationCurve<float>.CreateEvaluator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Interpolate(int, float, float) protected override float Interpolate(int index, float time, float intervalTime) Parameters index int time float intervalTime float Returns float"
  },
  "api/Lime.FloatSimpleAnimationCurve.html": {
    "href": "api/Lime.FloatSimpleAnimationCurve.html",
    "title": "Class FloatSimpleAnimationCurve | Citrus Engine",
    "keywords": "Class FloatSimpleAnimationCurve Namespace Lime Assembly Lime.dll public class FloatSimpleAnimationCurve : SimpleAnimationCurve<float>, IAnimationCurve<float>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<float> Inheritance object SimpleAnimationCurve<float> FloatSimpleAnimationCurve Implements IAnimationCurve<float> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<float> Inherited Members SimpleAnimationCurve<float>.Keys SimpleAnimationCurve<float>.IsEmpty SimpleAnimationCurve<float>.Duration SimpleAnimationCurve<float>.RefCount SimpleAnimationCurve<float>.AddRef() SimpleAnimationCurve<float>.Release() SimpleAnimationCurve<float>.CreateEvaluator() SimpleAnimationCurve<float>.Create(IEnumerable<SimpleKeyframe<float>>) SimpleAnimationCurve<float>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(float, float, float) protected override float InterpolateLinear(float value1, float value2, float amount) Parameters value1 float value2 float amount float Returns float InterpolateSplined(float, float, float, float, float) protected override float InterpolateSplined(float value1, float value2, float value3, float value4, float amount) Parameters value1 float value2 float value3 float value4 float amount float Returns float"
  },
  "api/Lime.FlowLayout.html": {
    "href": "api/Lime.FlowLayout.html",
    "title": "Class FlowLayout | Citrus Engine",
    "keywords": "Class FlowLayout Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Layout/Flow Layout\")] public class FlowLayout : Layout, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout FlowLayout Implements IDisposable IAnimable ILayout Inherited Members Layout.Owner Layout.DebugRectangles Layout.ConstraintsValid Layout.ArrangementValid Layout.RowAlignment Layout.ColumnAlignment Layout.Alignment Layout.IgnoreHidden Layout.InvalidateConstraintsAndArrangement() Layout.InvalidateArrangement() Layout.GetChildren() Layout.CalcAlignmentOffsetAndStride(HAlignment, float, int) Layout.CalcAlignmentOffsetAndStride(VAlignment, float, int) Layout.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors FlowLayout() public FlowLayout() FlowLayout(LayoutDirection) public FlowLayout(LayoutDirection direction) Parameters direction LayoutDirection Properties Direction [YuzuMember] public LayoutDirection Direction { get; set; } Property Value LayoutDirection EqualizeWidgetHeights [YuzuMember] public bool EqualizeWidgetHeights { get; set; } Property Value bool Spacing [YuzuMember] [Validation.Range(0, 3.4028235E+38)] public float Spacing { get; set; } Property Value float Methods ArrangeChildren() public override void ArrangeChildren() ColumnCount(int) public int ColumnCount(int rowIndex) Parameters rowIndex int Returns int MeasureSizeConstraints() public override void MeasureSizeConstraints() OnSizeChanged(Widget, Vector2) public override void OnSizeChanged(Widget widget, Vector2 sizeDelta) Parameters widget Widget sizeDelta Vector2 RowCount(int) public int RowCount(int columnIndex) Parameters columnIndex int Returns int"
  },
  "api/Lime.FogMode.html": {
    "href": "api/Lime.FogMode.html",
    "title": "Enum FogMode | Citrus Engine",
    "keywords": "Enum FogMode Namespace Lime Assembly Lime.dll public enum FogMode Fields Exp = 2 ExpSquared = 3 Linear = 1 None = 0"
  },
  "api/Lime.Folder.Descriptor.html": {
    "href": "api/Lime.Folder.Descriptor.html",
    "title": "Class Folder.Descriptor | Citrus Engine",
    "keywords": "Class Folder.Descriptor Namespace Lime Assembly Lime.dll public class Folder.Descriptor Inheritance object Folder.Descriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Expanded TODO: Remove Expanded property when migrations are ready. [YuzuMember] public bool Expanded { get; set; } Property Value bool Id [YuzuMember] public string Id { get; set; } Property Value string Index [YuzuMember] public int Index { get; set; } Property Value int ItemCount [YuzuMember] public int ItemCount { get; set; } Property Value int Owner public Node Owner { get; } Property Value Node Methods Unlink() public void Unlink()"
  },
  "api/Lime.Folder.html": {
    "href": "api/Lime.Folder.html",
    "title": "Class Folder | Citrus Engine",
    "keywords": "Class Folder Namespace Lime Assembly Lime.dll public class Folder Inheritance object Folder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.FolderList.html": {
    "href": "api/Lime.FolderList.html",
    "title": "Class FolderList | Citrus Engine",
    "keywords": "Class FolderList Namespace Lime Assembly Lime.dll public class FolderList : IList<Folder.Descriptor>, ICollection<Folder.Descriptor>, IEnumerable<Folder.Descriptor>, IEnumerable Inheritance object FolderList Implements IList<Folder.Descriptor> ICollection<Folder.Descriptor> IEnumerable<Folder.Descriptor> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors FolderList(Node) public FolderList(Node owner) Parameters owner Node Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public Folder.Descriptor this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value Folder.Descriptor The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(Descriptor) Adds an item to the ICollection<T>. public void Add(Folder.Descriptor item) Parameters item Folder.Descriptor The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Descriptor) Determines whether the ICollection<T> contains a specific value. public bool Contains(Folder.Descriptor item) Parameters item Folder.Descriptor The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Descriptor[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Folder.Descriptor[] array, int arrayIndex) Parameters array Descriptor[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() public List<Folder.Descriptor>.Enumerator GetEnumerator() Returns List<Folder.Descriptor>.Enumerator IndexOf(Descriptor) Determines the index of a specific item in the IList<T>. public int IndexOf(Folder.Descriptor item) Parameters item Folder.Descriptor The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, Descriptor) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Folder.Descriptor item) Parameters index int The zero-based index at which item should be inserted. item Folder.Descriptor The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(Descriptor) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Folder.Descriptor item) Parameters item Folder.Descriptor The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.Font.html": {
    "href": "api/Lime.Font.html",
    "title": "Class Font | Citrus Engine",
    "keywords": "Class Font Namespace Lime Assembly Lime.dll public sealed class Font : IFont, IDisposable Inheritance object Font Implements IFont IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods FontExtensions.MeasureTextLine(IFont, string, float, int, int, float) FontExtensions.MeasureTextLine(IFont, string, float, float) Constructors Font() public Font() Font(FontCharCollection) public Font(FontCharCollection chars) Parameters chars FontCharCollection Properties About [YuzuMember] public string About { get; set; } Property Value string CharCollection [YuzuMember] public FontCharCollection CharCollection { get; } Property Value FontCharCollection CharSource public IFontCharSource CharSource { get; } Property Value IFontCharSource RoundCoordinates [YuzuMember] public bool RoundCoordinates { get; set; } Property Value bool Spacing [YuzuMember] public float Spacing { get; set; } Property Value float Sprites [YuzuMember] public List<ISprite> Sprites { get; } Property Value List<ISprite> Methods ClearCache() public void ClearCache() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.FontChar.html": {
    "href": "api/Lime.FontChar.html",
    "title": "Class FontChar | Citrus Engine",
    "keywords": "Class FontChar Namespace Lime Assembly Lime.dll Class representing the single font character and it's geometry public class FontChar Inheritance object FontChar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ACWidths Contains the A and C spacing of the character. The A spacing is the distance to add to the current position before drawing the character glyph. The C spacing is the distance to add to the current position to provide white space to the right of the character glyph. [YuzuMember] public Vector2 ACWidths Field Value Vector2 Char [YuzuMember] public char Char Field Value char Height Height of the glyph in pixels [YuzuMember] public float Height Field Value float KerningPairs List of kerning pairs, related to this character [YuzuMember] public List<KerningPair> KerningPairs Field Value List<KerningPair> Null The null-character which denotes any missing character in a font public static FontChar Null Field Value FontChar RgbIntensity TrueType channels intensity ot grayscale [YuzuMember] public bool RgbIntensity Field Value bool Sprite Cached sprite reference. public ISprite Sprite Field Value ISprite SpriteIndex Font sprite's index which contains the given glyph [YuzuMember] public int SpriteIndex Field Value int UV0 The left-top glyph's position in the font texture [YuzuMember] public Vector2 UV0 Field Value Vector2 UV1 The right-bottom glyph's position in the font texture [YuzuMember] public Vector2 UV1 Field Value Vector2 VerticalOffset Mostly stores only negative offset which is useful for chars with diacritics. [YuzuMember] public float VerticalOffset Field Value float Width Width of the glyph in pixels [YuzuMember] public float Width Field Value float Properties PaddedHeight Height including padding from bottom and top. public float PaddedHeight { get; } Property Value float PaddedWidth Width including padding from right and left. public float PaddedWidth { get; } Property Value float Padding Padding from each side of glyph bounding box. Should be used in proper character positioning because glyph is rendered with padding. [YuzuMember] public float Padding { get; set; } Property Value float Methods Kerning(FontChar) public float Kerning(FontChar prevChar) Parameters prevChar FontChar Returns float"
  },
  "api/Lime.FontCharCollection.html": {
    "href": "api/Lime.FontCharCollection.html",
    "title": "Class FontCharCollection | Citrus Engine",
    "keywords": "Class FontCharCollection Namespace Lime Assembly Lime.dll public class FontCharCollection : IFontCharSource, IDisposable, ICollection<FontChar>, IEnumerable<FontChar>, IEnumerable Inheritance object FontCharCollection Implements IFontCharSource IDisposable ICollection<FontChar> IEnumerable<FontChar> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Fields Sprites public readonly List<ISprite> Sprites Field Value List<ISprite> Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. Methods Add(FontChar) Adds an item to the ICollection<T>. public void Add(FontChar item) Parameters item FontChar The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(FontChar) Determines whether the ICollection<T> contains a specific value. public bool Contains(FontChar item) Parameters item FontChar The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(char) public bool Contains(char code) Parameters code char Returns bool CopyTo(FontChar[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(FontChar[] array, int arrayIndex) Parameters array FontChar[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Get(char, float) public FontChar Get(char code, float heightHint) Parameters code char heightHint float Returns FontChar GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<FontChar> GetEnumerator() Returns IEnumerator<FontChar> An enumerator that can be used to iterate through the collection. Remove(FontChar) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(FontChar item) Parameters item FontChar The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only."
  },
  "api/Lime.FontExtensions.html": {
    "href": "api/Lime.FontExtensions.html",
    "title": "Class FontExtensions | Citrus Engine",
    "keywords": "Class FontExtensions Namespace Lime Assembly Lime.dll public static class FontExtensions Inheritance object FontExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MeasureTextLine(IFont, string, float, int, int, float) public static Vector2 MeasureTextLine(this IFont font, string text, float fontHeight, int start, int length, float letterSpacing) Parameters font IFont text string fontHeight float start int length int letterSpacing float Returns Vector2 MeasureTextLine(IFont, string, float, float) public static Vector2 MeasureTextLine(this IFont font, string text, float fontHeight, float letterSpacing) Parameters font IFont text string fontHeight float letterSpacing float Returns Vector2"
  },
  "api/Lime.FontPool.html": {
    "href": "api/Lime.FontPool.html",
    "title": "Class FontPool | Citrus Engine",
    "keywords": "Class FontPool Namespace Lime Assembly Lime.dll public class FontPool Inheritance object FontPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultBoldFontName public const string DefaultBoldFontName = \"Bold\" Field Value string DefaultFontName public const string DefaultFontName = \"Default\" Field Value string FontDirectory public const string FontDirectory = \"Fonts/\" Field Value string FontNameChanger public Func<string, string> FontNameChanger Field Value Func<string, string> Properties DefaultFont public IFont DefaultFont { get; } Property Value IFont Instance public static FontPool Instance { get; } Property Value FontPool this[string] public IFont this[string name] { get; } Parameters name string Property Value IFont Null public IFont Null { get; } Property Value IFont Methods AddFont(string, IFont) public void AddFont(string name, IFont font) Parameters name string font IFont Clear(bool) public void Clear(bool preserveDefaultFonts = false) Parameters preserveDefaultFonts bool ClearCache() public void ClearCache() Remove(string) public void Remove(string name) Parameters name string TryGetFontPath(string, out string, string) public static bool TryGetFontPath(string fontName, out string fontPath, string extension) Parameters fontName string fontPath string extension string Returns bool"
  },
  "api/Lime.Format.html": {
    "href": "api/Lime.Format.html",
    "title": "Enum Format | Citrus Engine",
    "keywords": "Enum Format Namespace Lime Assembly Lime.dll public enum Format Extension Methods FormatExtensions.GetBlockSize(Format, out int, out int) FormatExtensions.GetSize(Format) FormatExtensions.IsCompressed(Format) Fields B8G8R8A8_UNorm = 17 BC1_RGBA_UNorm_Block = 42 BC1_RGB_UNorm_Block = 41 BC2_UNorm_Block = 43 BC3_UNorm_Block = 44 ETC1_R8G8B8_UNorm_Block = 45 ETC2_R8G8B8A1_UNorm_Block = 47 ETC2_R8G8B8A8_UNorm_Block = 48 ETC2_R8G8B8_UNorm_Block = 46 PVRTC1_2Bpp_UNorm_Block = 49 PVRTC1_4Bpp_UNorm_Block = 50 PVRTC2_2Bpp_UNorm_Block = 51 PVRTC2_4Bpp_UNorm_Block = 52 R16G16B16A16_SNorm = 30 R16G16B16A16_SScaled = 31 R16G16B16A16_UNorm = 32 R16G16B16A16_UScaled = 33 R16G16B16_SNorm = 26 R16G16B16_SScaled = 27 R16G16B16_UNorm = 28 R16G16B16_UScaled = 29 R16G16_SNorm = 22 R16G16_SScaled = 23 R16G16_UNorm = 24 R16G16_UScaled = 25 R16_SNorm = 18 R16_SScaled = 19 R16_UNorm = 20 R16_UScaled = 21 R32G32B32A32_SFloat = 37 R32G32B32_SFloat = 36 R32G32_SFloat = 35 R32_SFloat = 34 R4G4B4A4_UNorm_Pack16 = 40 R5G5B5A1_UNorm_Pack16 = 39 R5G6B5_UNorm_Pack16 = 38 R8G8B8A8_SNorm = 13 R8G8B8A8_SScaled = 14 R8G8B8A8_UNorm = 15 R8G8B8A8_UScaled = 16 R8G8B8_SNorm = 9 R8G8B8_SScaled = 10 R8G8B8_UNorm = 11 R8G8B8_UScaled = 12 R8G8_SNorm = 5 R8G8_SScaled = 6 R8G8_UNorm = 7 R8G8_UScaled = 8 R8_SNorm = 1 R8_SScaled = 2 R8_UNorm = 3 R8_UScaled = 4 Undefined = 0"
  },
  "api/Lime.FormatExtensions.html": {
    "href": "api/Lime.FormatExtensions.html",
    "title": "Class FormatExtensions | Citrus Engine",
    "keywords": "Class FormatExtensions Namespace Lime Assembly Lime.dll public static class FormatExtensions Inheritance object FormatExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBlockSize(Format, out int, out int) public static void GetBlockSize(this Format format, out int width, out int height) Parameters format Format width int height int GetSize(Format) public static int GetSize(this Format format) Parameters format Format Returns int IsCompressed(Format) public static bool IsCompressed(this Format format) Parameters format Format Returns bool"
  },
  "api/Lime.FormatFeatures.html": {
    "href": "api/Lime.FormatFeatures.html",
    "title": "Enum FormatFeatures | Citrus Engine",
    "keywords": "Enum FormatFeatures Namespace Lime Assembly Lime.dll [Flags] public enum FormatFeatures Fields None = 0 RenderTarget = 4 Sample = 2 VertexBuffer = 8"
  },
  "api/Lime.FragmentShader.html": {
    "href": "api/Lime.FragmentShader.html",
    "title": "Class FragmentShader | Citrus Engine",
    "keywords": "Class FragmentShader Namespace Lime Assembly Lime.dll public class FragmentShader : Shader, IDisposable Inheritance object Shader FragmentShader Implements IDisposable Inherited Members Shader.Source Shader.Stage Shader.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FragmentShader(string) public FragmentShader(string source) Parameters source string"
  },
  "api/Lime.Frame.html": {
    "href": "api/Lime.Frame.html",
    "title": "Class Frame | Citrus Engine",
    "keywords": "Class Frame Namespace Lime Assembly Lime.dll [TangerineAllowedChildrenTypes(new Type[] { typeof(Node) })] [TangerineVisualHintGroup(\"/All/Nodes/Containers\", null)] public class Frame : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg Inheritance object Node Widget Frame Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg Derived ScrollView.ScrollViewContentWidget ThemedFrame ThemedScrollView Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Frame() public Frame() Frame(Vector2) public Frame(Vector2 position) Parameters position Vector2 Frame(string) [Obsolete(\"Use Node.Load instead\", false)] public Frame(string path) Parameters path string Properties ClipByWidget public Widget ClipByWidget { get; set; } Property Value Widget ClipChildren [YuzuMember] [TangerineKeyframeColor(13)] public ClipMethod ClipChildren { get; set; } Property Value ClipMethod RenderTarget [YuzuMember] [TangerineKeyframeColor(14)] public RenderTarget RenderTarget { get; set; } Property Value RenderTarget Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject IsRenderedToTexture() protected override bool IsRenderedToTexture() Returns bool PartialHitTest(ref HitTestArgs) Checks whether this widget contains the given point. protected override bool PartialHitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool"
  },
  "api/Lime.FrontFace.html": {
    "href": "api/Lime.FrontFace.html",
    "title": "Enum FrontFace | Citrus Engine",
    "keywords": "Enum FrontFace Namespace Lime Assembly Lime.dll public enum FrontFace Extension Methods GraphicsExtensions.Invert(FrontFace) Fields CCW = 1 CW = 0"
  },
  "api/Lime.GLInfo.html": {
    "href": "api/Lime.GLInfo.html",
    "title": "Struct GLInfo | Citrus Engine",
    "keywords": "Struct GLInfo Namespace Lime Assembly Lime.dll public struct GLInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ESProfile public bool ESProfile Field Value bool MajorVersion public int MajorVersion Field Value int MinorVersion public int MinorVersion Field Value int"
  },
  "api/Lime.GeometryUtils.html": {
    "href": "api/Lime.GeometryUtils.html",
    "title": "Class GeometryUtils | Citrus Engine",
    "keywords": "Class GeometryUtils Namespace Lime Assembly Lime.dll public static class GeometryUtils Inheritance object GeometryUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CalcLinesIntersection(Vector2, Vector2, Vector2, Vector2, out Vector2) public static bool CalcLinesIntersection(Vector2 a1, Vector2 b1, Vector2 a2, Vector2 b2, out Vector2 intersection) Parameters a1 Vector2 b1 Vector2 a2 Vector2 b2 Vector2 intersection Vector2 Returns bool CalcPointHalfPlane(Vector2, Vector2, Vector2) public static int CalcPointHalfPlane(Vector2 point, Vector2 lineA, Vector2 lineB) Parameters point Vector2 lineA Vector2 lineB Vector2 Returns int IntersectLineCircle(Vector2, float, Vector2, Vector2, out Vector2) public static bool IntersectLineCircle(Vector2 location, float radius, Vector2 lineFrom, Vector2 lineTo, out Vector2 intersection) Parameters location Vector2 radius float lineFrom Vector2 lineTo Vector2 intersection Vector2 Returns bool"
  },
  "api/Lime.Gesture.PollableEvent.html": {
    "href": "api/Lime.Gesture.PollableEvent.html",
    "title": "Struct Gesture.PollableEvent | Citrus Engine",
    "keywords": "Struct Gesture.PollableEvent Namespace Lime Assembly Lime.dll protected struct Gesture.PollableEvent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties HasOccurred public bool HasOccurred { get; } Property Value bool Methods Raise() public void Raise() Events Handler public event Action Handler Event Type Action"
  },
  "api/Lime.Gesture.html": {
    "href": "api/Lime.Gesture.html",
    "title": "Class Gesture | Citrus Engine",
    "keywords": "Class Gesture Namespace Lime Assembly Lime.dll public abstract class Gesture Inheritance object Gesture Derived DoubleClickGesture DragGesture DropFilesGesture TapGesture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Input protected WindowInput Input { get; } Property Value WindowInput Owner public Node Owner { get; } Property Value Node Methods OnCancel(Gesture) protected virtual void OnCancel(Gesture sender) Parameters sender Gesture OnUpdate() protected abstract bool OnUpdate() Returns bool"
  },
  "api/Lime.GestureList.html": {
    "href": "api/Lime.GestureList.html",
    "title": "Class GestureList | Citrus Engine",
    "keywords": "Class GestureList Namespace Lime Assembly Lime.dll public class GestureList : IList<Gesture>, ICollection<Gesture>, IEnumerable<Gesture>, IEnumerable Inheritance object GestureList Implements IList<Gesture> ICollection<Gesture> IEnumerable<Gesture> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors GestureList(Node) public GestureList(Node owner) Parameters owner Node Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public Gesture this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value Gesture The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(Gesture) Adds an item to the ICollection<T>. public void Add(Gesture gesture) Parameters gesture Gesture Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Gesture) Determines whether the ICollection<T> contains a specific value. public bool Contains(Gesture gesture) Parameters gesture Gesture Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Gesture[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Gesture[] array, int arrayIndex) Parameters array Gesture[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() public List<Gesture>.Enumerator GetEnumerator() Returns List<Gesture>.Enumerator IndexOf(Gesture) Determines the index of a specific item in the IList<T>. public int IndexOf(Gesture gesture) Parameters gesture Gesture Returns int The index of item if found in the list; otherwise, -1. Insert(int, Gesture) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Gesture gesture) Parameters index int The zero-based index at which item should be inserted. gesture Gesture Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(Gesture) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Gesture gesture) Parameters gesture Gesture Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.GestureManager.html": {
    "href": "api/Lime.GestureManager.html",
    "title": "Class GestureManager | Citrus Engine",
    "keywords": "Class GestureManager Namespace Lime Assembly Lime.dll public class GestureManager Inheritance object GestureManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GestureManager(WidgetContext) public GestureManager(WidgetContext context) Parameters context WidgetContext Fields context protected readonly WidgetContext context Field Value WidgetContext Properties CurrentIteration public int CurrentIteration { get; } Property Value int Methods EnumerateGestures(Node) protected virtual IEnumerable<Gesture> EnumerateGestures(Node node) Parameters node Node Returns IEnumerable<Gesture> Update(float) public void Update(float delta) Parameters delta float"
  },
  "api/Lime.GestureProcessor.html": {
    "href": "api/Lime.GestureProcessor.html",
    "title": "Class GestureProcessor | Citrus Engine",
    "keywords": "Class GestureProcessor Namespace Lime Assembly Lime.dll public class GestureProcessor : NodeProcessor Inheritance object NodeProcessor GestureProcessor Inherited Members NodeProcessor.Manager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.Glyph.html": {
    "href": "api/Lime.Glyph.html",
    "title": "Class Glyph | Citrus Engine",
    "keywords": "Class Glyph Namespace Lime Assembly Lime.dll public class Glyph Inheritance object Glyph Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Color public Color4 Color Field Value Color4 Material public IMaterial Material Field Value IMaterial Position public Vector2 Position Field Value Vector2 Size public Vector2 Size Field Value Vector2 Tag public int Tag Field Value int Texture1 public ITexture Texture1 Field Value ITexture Texture2 public ITexture Texture2 Field Value ITexture UV0T1 public Vector2 UV0T1 Field Value Vector2 UV0T2 public Vector2 UV0T2 Field Value Vector2 UV1T1 public Vector2 UV1T1 Field Value Vector2 UV1T2 public Vector2 UV1T2 Field Value Vector2"
  },
  "api/Lime.GlyphList.html": {
    "href": "api/Lime.GlyphList.html",
    "title": "Class GlyphList | Citrus Engine",
    "keywords": "Class GlyphList Namespace Lime Assembly Lime.dll public class GlyphList Inheritance object GlyphList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Add(IFont, Color4, float, CharPosition[], int) public void Add(IFont font, Color4 color, float fontHeight, CharPosition[] charDefs, int tag) Parameters font IFont color Color4 fontHeight float charDefs CharPosition[] tag int Add(ITexture, Color4, Vector2, Vector2, Vector2, Vector2, int) public void Add(ITexture texture, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, int tag) Parameters texture ITexture color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 tag int Clear() public void Clear() GetCharPair(Vector2, out (CharPosition, CharPosition)) public bool GetCharPair(Vector2 point, out (CharPosition, CharPosition) pair) Parameters point Vector2 pair (CharPosition, CharPosition) Returns bool HitTest(Matrix32, Vector2, out int) public bool HitTest(Matrix32 worldTransform, Vector2 point, out int tag) Parameters worldTransform Matrix32 point Vector2 tag int Returns bool Render(Color4, Blending, ShaderId) public void Render(Color4 color, Blending blending, ShaderId shader) Parameters color Color4 blending Blending shader ShaderId Render(Color4, IGlyphMaterialProvider) public void Render(Color4 color, IGlyphMaterialProvider materialProvider) Parameters color Color4 materialProvider IGlyphMaterialProvider"
  },
  "api/Lime.GradientComponent.html": {
    "href": "api/Lime.GradientComponent.html",
    "title": "Class GradientComponent | Citrus Engine",
    "keywords": "Class GradientComponent Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Effects/Gradient\")] public class GradientComponent : MaterialComponent<GradientMaterial>, IDisposable, IAnimable Inheritance object Component NodeComponent MaterialComponent MaterialComponent<GradientMaterial> GradientComponent Implements IDisposable IAnimable Inherited Members MaterialComponent<GradientMaterial>.CustomMaterial MaterialComponent<GradientMaterial>.OnOwnerChanged(Node) NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Angle [YuzuMember] public float Angle { get; set; } Property Value float BlendMode [YuzuMember] public GradientMaterialBlendMode BlendMode { get; set; } Property Value GradientMaterialBlendMode Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Gradient [YuzuMember] public ColorGradient Gradient { get; set; } Property Value ColorGradient"
  },
  "api/Lime.GradientControlPoint.html": {
    "href": "api/Lime.GradientControlPoint.html",
    "title": "Class GradientControlPoint | Citrus Engine",
    "keywords": "Class GradientControlPoint Namespace Lime Assembly Lime.dll public class GradientControlPoint Inheritance object GradientControlPoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GradientControlPoint() public GradientControlPoint() GradientControlPoint(Color4, float) public GradientControlPoint(Color4 color, float position) Parameters color Color4 position float Properties Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 Position [YuzuMember] public float Position { get; set; } Property Value float Methods Clone() public GradientControlPoint Clone() Returns GradientControlPoint"
  },
  "api/Lime.GradientMaterial.html": {
    "href": "api/Lime.GradientMaterial.html",
    "title": "Class GradientMaterial | Citrus Engine",
    "keywords": "Class GradientMaterial Namespace Lime Assembly Lime.dll public class GradientMaterial : IMaterial Inheritance object GradientMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GradientMaterial() public GradientMaterial() Fields Blending public Blending Blending Field Value Blending Properties Angle [YuzuMember] public float Angle { get; set; } Property Value float BlendMode [YuzuMember] public GradientMaterialBlendMode BlendMode { get; set; } Property Value GradientMaterialBlendMode Gradient [YuzuMember] public ColorGradient Gradient { get; set; } Property Value ColorGradient GradientTexture public Texture2D GradientTexture { get; } Property Value Texture2D Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.GradientMaterialBlendMode.html": {
    "href": "api/Lime.GradientMaterialBlendMode.html",
    "title": "Enum GradientMaterialBlendMode | Citrus Engine",
    "keywords": "Enum GradientMaterialBlendMode Namespace Lime Assembly Lime.dll public enum GradientMaterialBlendMode Fields Addition = 6 ColorBurn = 4 ColorDodge = 5 Darken = 14 Difference = 9 Dissolve = 1 Divide = 8 Exclusion = 10 Lighten = 13 LinearBurn = 3 Multiply = 2 Normal = 0 Overlay = 12 Screen = 11 Subtract = 7"
  },
  "api/Lime.GradientShaderProgram.html": {
    "href": "api/Lime.GradientShaderProgram.html",
    "title": "Class GradientShaderProgram | Citrus Engine",
    "keywords": "Class GradientShaderProgram Namespace Lime Assembly Lime.dll public class GradientShaderProgram : ShaderProgram Inheritance object ShaderProgram GradientShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(GradientMaterialBlendMode) public static GradientShaderProgram GetInstance(GradientMaterialBlendMode blend) Parameters blend GradientMaterialBlendMode Returns GradientShaderProgram"
  },
  "api/Lime.Graphics.Platform.IPlatformBuffer.html": {
    "href": "api/Lime.Graphics.Platform.IPlatformBuffer.html",
    "title": "Interface IPlatformBuffer | Citrus Engine",
    "keywords": "Interface IPlatformBuffer Namespace Lime.Graphics.Platform Assembly Lime.dll public interface IPlatformBuffer : IDisposable Inherited Members IDisposable.Dispose() Extension Methods PlatformBufferExtensions.SetData<T>(IPlatformBuffer, int, ref T, BufferSetDataMode) PlatformBufferExtensions.SetData<T>(IPlatformBuffer, int, T[], BufferSetDataMode) PlatformBufferExtensions.SetData<T>(IPlatformBuffer, int, T[], int, int, BufferSetDataMode) Properties BufferType BufferType BufferType { get; } Property Value BufferType Dynamic bool Dynamic { get; } Property Value bool Size int Size { get; } Property Value int Methods SetData(int, nint, int, BufferSetDataMode) void SetData(int offset, nint data, int size, BufferSetDataMode mode) Parameters offset int data nint size int mode BufferSetDataMode"
  },
  "api/Lime.Graphics.Platform.IPlatformRenderTexture2D.html": {
    "href": "api/Lime.Graphics.Platform.IPlatformRenderTexture2D.html",
    "title": "Interface IPlatformRenderTexture2D | Citrus Engine",
    "keywords": "Interface IPlatformRenderTexture2D Namespace Lime.Graphics.Platform Assembly Lime.dll public interface IPlatformRenderTexture2D : IPlatformTexture2D, IDisposable Inherited Members IPlatformTexture2D.Format IPlatformTexture2D.Width IPlatformTexture2D.Height IPlatformTexture2D.LevelCount IPlatformTexture2D.SetTextureParams(TextureParams) IDisposable.Dispose() Methods ReadPixels(Format, int, int, int, int, nint) void ReadPixels(Format format, int x, int y, int width, int height, nint pixels) Parameters format Format x int y int width int height int pixels nint"
  },
  "api/Lime.Graphics.Platform.IPlatformShader.html": {
    "href": "api/Lime.Graphics.Platform.IPlatformShader.html",
    "title": "Interface IPlatformShader | Citrus Engine",
    "keywords": "Interface IPlatformShader Namespace Lime.Graphics.Platform Assembly Lime.dll public interface IPlatformShader : IDisposable Inherited Members IDisposable.Dispose() Properties Stage ShaderStageMask Stage { get; } Property Value ShaderStageMask"
  },
  "api/Lime.Graphics.Platform.IPlatformShaderProgram.html": {
    "href": "api/Lime.Graphics.Platform.IPlatformShaderProgram.html",
    "title": "Interface IPlatformShaderProgram | Citrus Engine",
    "keywords": "Interface IPlatformShaderProgram Namespace Lime.Graphics.Platform Assembly Lime.dll public interface IPlatformShaderProgram : IDisposable Inherited Members IDisposable.Dispose() Methods GetUniformDescriptions() UniformDesc[] GetUniformDescriptions() Returns UniformDesc[] SetUniform(int, nint, int) void SetUniform(int index, nint data, int elementCount) Parameters index int data nint elementCount int"
  },
  "api/Lime.Graphics.Platform.IPlatformTexture2D.html": {
    "href": "api/Lime.Graphics.Platform.IPlatformTexture2D.html",
    "title": "Interface IPlatformTexture2D | Citrus Engine",
    "keywords": "Interface IPlatformTexture2D Namespace Lime.Graphics.Platform Assembly Lime.dll public interface IPlatformTexture2D : IDisposable Inherited Members IDisposable.Dispose() Properties Format Format Format { get; } Property Value Format Height int Height { get; } Property Value int LevelCount int LevelCount { get; } Property Value int Width int Width { get; } Property Value int Methods SetTextureParams(TextureParams) void SetTextureParams(TextureParams textureParams) Parameters textureParams TextureParams"
  },
  "api/Lime.Graphics.Platform.IPlatformVertexInputLayout.html": {
    "href": "api/Lime.Graphics.Platform.IPlatformVertexInputLayout.html",
    "title": "Interface IPlatformVertexInputLayout | Citrus Engine",
    "keywords": "Interface IPlatformVertexInputLayout Namespace Lime.Graphics.Platform Assembly Lime.dll public interface IPlatformVertexInputLayout : IDisposable Inherited Members IDisposable.Dispose()"
  },
  "api/Lime.Graphics.Platform.OpenGL.PlatformRenderContext.html": {
    "href": "api/Lime.Graphics.Platform.OpenGL.PlatformRenderContext.html",
    "title": "Class PlatformRenderContext | Citrus Engine",
    "keywords": "Class PlatformRenderContext Namespace Lime.Graphics.Platform.OpenGL Assembly Lime.dll public class PlatformRenderContext : IDisposable Inheritance object PlatformRenderContext Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlatformRenderContext() public PlatformRenderContext() Properties ESProfile public bool ESProfile { get; } Property Value bool GLMajorVersion public int GLMajorVersion { get; } Property Value int GLMinorVersion public int GLMinorVersion { get; } Property Value int MaxTextureSlots public int MaxTextureSlots { get; } Property Value int MaxVertexAttributes public int MaxVertexAttributes { get; } Property Value int MaxVertexBufferSlots public int MaxVertexBufferSlots { get; } Property Value int PipelineCacheSupported public bool PipelineCacheSupported { get; } Property Value bool UseBufferOrphaningWorkaround public bool UseBufferOrphaningWorkaround { get; } Property Value bool Methods Begin(int) public void Begin(int glFramebuffer) Parameters glFramebuffer int Clear(ClearOptions, Color4, float, byte) public void Clear(ClearOptions options, Color4 color, float depth, byte stencil) Parameters options ClearOptions color Color4 depth float stencil byte CreateBuffer(BufferType, int, bool) public IPlatformBuffer CreateBuffer(BufferType bufferType, int size, bool dynamic) Parameters bufferType BufferType size int dynamic bool Returns IPlatformBuffer CreateRenderTexture2D(Format, int, int, TextureParams) public IPlatformRenderTexture2D CreateRenderTexture2D(Format format, int width, int height, TextureParams textureParams) Parameters format Format width int height int textureParams TextureParams Returns IPlatformRenderTexture2D CreateShader(ShaderStageMask, string) public IPlatformShader CreateShader(ShaderStageMask stage, string source) Parameters stage ShaderStageMask source string Returns IPlatformShader CreateShaderProgram(IPlatformShader[], AttribLocation[], Sampler[]) public IPlatformShaderProgram CreateShaderProgram(IPlatformShader[] shaders, ShaderProgram.AttribLocation[] attribLocation, ShaderProgram.Sampler[] samplers) Parameters shaders IPlatformShader[] attribLocation AttribLocation[] samplers Sampler[] Returns IPlatformShaderProgram CreateTexture2D(Format, int, int, bool, TextureParams) public IPlatformTexture2D CreateTexture2D(Format format, int width, int height, bool mipmaps, TextureParams textureParams) Parameters format Format width int height int mipmaps bool textureParams TextureParams Returns IPlatformTexture2D CreateVertexInputLayout(VertexInputLayoutBinding[], VertexInputLayoutAttribute[]) public IPlatformVertexInputLayout CreateVertexInputLayout(VertexInputLayoutBinding[] bindings, VertexInputLayoutAttribute[] attributes) Parameters bindings VertexInputLayoutBinding[] attributes VertexInputLayoutAttribute[] Returns IPlatformVertexInputLayout Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Draw(int, int) public void Draw(int startVertex, int vertexCount) Parameters startVertex int vertexCount int DrawIndexed(int, int, int) public void DrawIndexed(int startIndex, int indexCount, int baseVertex) Parameters startIndex int indexCount int baseVertex int End() public void End() Finish() public void Finish() Flush() public void Flush() GetFormatFeatures(Format) public FormatFeatures GetFormatFeatures(Format format) Parameters format Format Returns FormatFeatures GetPipelineCacheData() public byte[] GetPipelineCacheData() Returns byte[] SetBlendState(BlendState) public void SetBlendState(BlendState state) Parameters state BlendState SetColorWriteMask(ColorWriteMask) public void SetColorWriteMask(ColorWriteMask mask) Parameters mask ColorWriteMask SetCullMode(CullMode) public void SetCullMode(CullMode mode) Parameters mode CullMode SetDepthState(DepthState) public void SetDepthState(DepthState state) Parameters state DepthState SetFrontFace(FrontFace) public void SetFrontFace(FrontFace face) Parameters face FrontFace SetIndexBuffer(IPlatformBuffer, int, IndexFormat) public void SetIndexBuffer(IPlatformBuffer buffer, int offset, IndexFormat format) Parameters buffer IPlatformBuffer offset int format IndexFormat SetPipelineCacheData(byte[]) public bool SetPipelineCacheData(byte[] data) Parameters data byte[] Returns bool SetPrimitiveTopology(PrimitiveTopology) public void SetPrimitiveTopology(PrimitiveTopology topology) Parameters topology PrimitiveTopology SetRenderTarget(IPlatformRenderTexture2D) public void SetRenderTarget(IPlatformRenderTexture2D texture) Parameters texture IPlatformRenderTexture2D SetScissorState(ScissorState) public void SetScissorState(ScissorState state) Parameters state ScissorState SetShaderProgram(IPlatformShaderProgram) public void SetShaderProgram(IPlatformShaderProgram program) Parameters program IPlatformShaderProgram SetStencilState(StencilState) public void SetStencilState(StencilState state) Parameters state StencilState SetTexture(int, IPlatformTexture2D) public void SetTexture(int slot, IPlatformTexture2D texture) Parameters slot int texture IPlatformTexture2D SetVertexBuffer(int, IPlatformBuffer, int) public void SetVertexBuffer(int slot, IPlatformBuffer buffer, int offset) Parameters slot int buffer IPlatformBuffer offset int SetVertexInputLayout(IPlatformVertexInputLayout) public void SetVertexInputLayout(IPlatformVertexInputLayout layout) Parameters layout IPlatformVertexInputLayout SetViewport(Viewport) public void SetViewport(Viewport vp) Parameters vp Viewport"
  },
  "api/Lime.Graphics.Platform.OpenGL.html": {
    "href": "api/Lime.Graphics.Platform.OpenGL.html",
    "title": "Namespace Lime.Graphics.Platform.OpenGL | Citrus Engine",
    "keywords": "Namespace Lime.Graphics.Platform.OpenGL Classes PlatformRenderContext"
  },
  "api/Lime.Graphics.Platform.PlatformBufferExtensions.html": {
    "href": "api/Lime.Graphics.Platform.PlatformBufferExtensions.html",
    "title": "Class PlatformBufferExtensions | Citrus Engine",
    "keywords": "Class PlatformBufferExtensions Namespace Lime.Graphics.Platform Assembly Lime.dll public static class PlatformBufferExtensions Inheritance object PlatformBufferExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetData<T>(IPlatformBuffer, int, ref T, BufferSetDataMode) public static void SetData<T>(this IPlatformBuffer buffer, int offset, ref T data, BufferSetDataMode mode) where T : unmanaged Parameters buffer IPlatformBuffer offset int data T mode BufferSetDataMode Type Parameters T SetData<T>(IPlatformBuffer, int, T[], BufferSetDataMode) public static void SetData<T>(this IPlatformBuffer buffer, int offset, T[] data, BufferSetDataMode mode) where T : unmanaged Parameters buffer IPlatformBuffer offset int data T[] mode BufferSetDataMode Type Parameters T SetData<T>(IPlatformBuffer, int, T[], int, int, BufferSetDataMode) public static void SetData<T>(this IPlatformBuffer buffer, int offset, T[] data, int startIndex, int count, BufferSetDataMode mode) where T : unmanaged Parameters buffer IPlatformBuffer offset int data T[] startIndex int count int mode BufferSetDataMode Type Parameters T"
  },
  "api/Lime.Graphics.Platform.ShaderStageMask.html": {
    "href": "api/Lime.Graphics.Platform.ShaderStageMask.html",
    "title": "Enum ShaderStageMask | Citrus Engine",
    "keywords": "Enum ShaderStageMask Namespace Lime.Graphics.Platform Assembly Lime.dll [Flags] public enum ShaderStageMask Fields Fragment = 2 None = 0 Vertex = 1"
  },
  "api/Lime.Graphics.Platform.ShaderVariableType.html": {
    "href": "api/Lime.Graphics.Platform.ShaderVariableType.html",
    "title": "Enum ShaderVariableType | Citrus Engine",
    "keywords": "Enum ShaderVariableType Namespace Lime.Graphics.Platform Assembly Lime.dll public enum ShaderVariableType Extension Methods ShaderVariableTypeExtensions.GetColumnCount(ShaderVariableType) ShaderVariableTypeExtensions.GetRowCount(ShaderVariableType) ShaderVariableTypeExtensions.IsSampler(ShaderVariableType) Fields Bool = 1 BoolVector2 = 2 BoolVector3 = 3 BoolVector4 = 4 Float = 9 FloatMatrix2 = 13 FloatMatrix3 = 14 FloatMatrix4 = 15 FloatVector2 = 10 FloatVector3 = 11 FloatVector4 = 12 Int = 5 IntVector2 = 6 IntVector3 = 7 IntVector4 = 8 Sampler2D = 16 SamplerCube = 17 SamplerExternal = 18 Unknown = 0"
  },
  "api/Lime.Graphics.Platform.ShaderVariableTypeExtensions.html": {
    "href": "api/Lime.Graphics.Platform.ShaderVariableTypeExtensions.html",
    "title": "Class ShaderVariableTypeExtensions | Citrus Engine",
    "keywords": "Class ShaderVariableTypeExtensions Namespace Lime.Graphics.Platform Assembly Lime.dll public static class ShaderVariableTypeExtensions Inheritance object ShaderVariableTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetColumnCount(ShaderVariableType) public static int GetColumnCount(this ShaderVariableType type) Parameters type ShaderVariableType Returns int GetRowCount(ShaderVariableType) public static int GetRowCount(this ShaderVariableType type) Parameters type ShaderVariableType Returns int IsSampler(ShaderVariableType) public static bool IsSampler(this ShaderVariableType type) Parameters type ShaderVariableType Returns bool"
  },
  "api/Lime.Graphics.Platform.UniformDesc.html": {
    "href": "api/Lime.Graphics.Platform.UniformDesc.html",
    "title": "Struct UniformDesc | Citrus Engine",
    "keywords": "Struct UniformDesc Namespace Lime.Graphics.Platform Assembly Lime.dll public struct UniformDesc Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ArraySize public int ArraySize Field Value int Name public string Name Field Value string Type public ShaderVariableType Type Field Value ShaderVariableType"
  },
  "api/Lime.Graphics.Platform.Vulkan.PlatformRenderContext.html": {
    "href": "api/Lime.Graphics.Platform.Vulkan.PlatformRenderContext.html",
    "title": "Class PlatformRenderContext | Citrus Engine",
    "keywords": "Class PlatformRenderContext Namespace Lime.Graphics.Platform.Vulkan Assembly Lime.dll public class PlatformRenderContext : IDisposable Inheritance object PlatformRenderContext Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlatformRenderContext() public PlatformRenderContext() Properties MaxTextureSlots public int MaxTextureSlots { get; } Property Value int MaxVertexAttributes public int MaxVertexAttributes { get; } Property Value int MaxVertexBufferSlots public int MaxVertexBufferSlots { get; } Property Value int PipelineCacheSupported public bool PipelineCacheSupported { get; } Property Value bool Methods Begin(Swapchain) public void Begin(Swapchain swapchain) Parameters swapchain Swapchain Clear(ClearOptions, Color4, float, byte) public void Clear(ClearOptions options, Color4 color, float depth, byte stencil) Parameters options ClearOptions color Color4 depth float stencil byte CreateBuffer(BufferType, int, bool) public IPlatformBuffer CreateBuffer(BufferType bufferType, int size, bool dynamic) Parameters bufferType BufferType size int dynamic bool Returns IPlatformBuffer CreateRenderTexture2D(Format, int, int, TextureParams) public IPlatformRenderTexture2D CreateRenderTexture2D(Format format, int width, int height, TextureParams textureParams) Parameters format Format width int height int textureParams TextureParams Returns IPlatformRenderTexture2D CreateShader(ShaderStageMask, string) public IPlatformShader CreateShader(ShaderStageMask stage, string source) Parameters stage ShaderStageMask source string Returns IPlatformShader CreateShaderProgram(IPlatformShader[], AttribLocation[], Sampler[]) public IPlatformShaderProgram CreateShaderProgram(IPlatformShader[] shaders, ShaderProgram.AttribLocation[] attribLocation, ShaderProgram.Sampler[] samplers) Parameters shaders IPlatformShader[] attribLocation AttribLocation[] samplers Sampler[] Returns IPlatformShaderProgram CreateSwapchain(nint, int, int) public Swapchain CreateSwapchain(nint windowHandle, int width, int height) Parameters windowHandle nint width int height int Returns Swapchain CreateTexture2D(Format, int, int, bool, TextureParams) public IPlatformTexture2D CreateTexture2D(Format format, int width, int height, bool mipmaps, TextureParams textureParams) Parameters format Format width int height int mipmaps bool textureParams TextureParams Returns IPlatformTexture2D CreateVertexInputLayout(VertexInputLayoutBinding[], VertexInputLayoutAttribute[]) public IPlatformVertexInputLayout CreateVertexInputLayout(VertexInputLayoutBinding[] bindings, VertexInputLayoutAttribute[] attributes) Parameters bindings VertexInputLayoutBinding[] attributes VertexInputLayoutAttribute[] Returns IPlatformVertexInputLayout Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Draw(int, int) public void Draw(int startVertex, int vertexCount) Parameters startVertex int vertexCount int DrawIndexed(int, int, int) public void DrawIndexed(int startIndex, int indexCount, int baseVertex) Parameters startIndex int indexCount int baseVertex int Finish() public void Finish() Flush() public void Flush() GetFormatFeatures(Format) public FormatFeatures GetFormatFeatures(Format format) Parameters format Format Returns FormatFeatures GetPipelineCacheData() public byte[] GetPipelineCacheData() Returns byte[] IsSupported() public static bool IsSupported() Returns bool Present() public void Present() SetBlendState(BlendState) public void SetBlendState(BlendState state) Parameters state BlendState SetColorWriteMask(ColorWriteMask) public void SetColorWriteMask(ColorWriteMask mask) Parameters mask ColorWriteMask SetCullMode(CullMode) public void SetCullMode(CullMode mode) Parameters mode CullMode SetDepthState(DepthState) public void SetDepthState(DepthState state) Parameters state DepthState SetFrontFace(FrontFace) public void SetFrontFace(FrontFace face) Parameters face FrontFace SetIndexBuffer(IPlatformBuffer, int, IndexFormat) public void SetIndexBuffer(IPlatformBuffer buffer, int offset, IndexFormat format) Parameters buffer IPlatformBuffer offset int format IndexFormat SetPipelineCacheData(byte[]) public bool SetPipelineCacheData(byte[] data) Parameters data byte[] Returns bool SetPrimitiveTopology(PrimitiveTopology) public void SetPrimitiveTopology(PrimitiveTopology topology) Parameters topology PrimitiveTopology SetRenderTarget(IPlatformRenderTexture2D) public void SetRenderTarget(IPlatformRenderTexture2D texture) Parameters texture IPlatformRenderTexture2D SetScissorState(ScissorState) public void SetScissorState(ScissorState state) Parameters state ScissorState SetShaderProgram(IPlatformShaderProgram) public void SetShaderProgram(IPlatformShaderProgram program) Parameters program IPlatformShaderProgram SetStencilState(StencilState) public void SetStencilState(StencilState state) Parameters state StencilState SetTexture(int, IPlatformTexture2D) public void SetTexture(int slot, IPlatformTexture2D texture) Parameters slot int texture IPlatformTexture2D SetVertexBuffer(int, IPlatformBuffer, int) public void SetVertexBuffer(int slot, IPlatformBuffer buffer, int offset) Parameters slot int buffer IPlatformBuffer offset int SetVertexInputLayout(IPlatformVertexInputLayout) public void SetVertexInputLayout(IPlatformVertexInputLayout layout) Parameters layout IPlatformVertexInputLayout SetViewport(Viewport) public void SetViewport(Viewport vp) Parameters vp Viewport"
  },
  "api/Lime.Graphics.Platform.Vulkan.ShaderCompiler.Stage.html": {
    "href": "api/Lime.Graphics.Platform.Vulkan.ShaderCompiler.Stage.html",
    "title": "Enum ShaderCompiler.Stage | Citrus Engine",
    "keywords": "Enum ShaderCompiler.Stage Namespace Lime.Graphics.Platform.Vulkan Assembly Lime.dll public enum ShaderCompiler.Stage Fields Fragment = 2 Undefined = 0 Vertex = 1"
  },
  "api/Lime.Graphics.Platform.Vulkan.ShaderCompiler.VariableType.html": {
    "href": "api/Lime.Graphics.Platform.Vulkan.ShaderCompiler.VariableType.html",
    "title": "Enum ShaderCompiler.VariableType | Citrus Engine",
    "keywords": "Enum ShaderCompiler.VariableType Namespace Lime.Graphics.Platform.Vulkan Assembly Lime.dll public enum ShaderCompiler.VariableType Fields Bool = 1 BoolVector2 = 2 BoolVector3 = 3 BoolVector4 = 4 Float = 9 FloatMatrix2 = 13 FloatMatrix3 = 14 FloatMatrix4 = 15 FloatVector2 = 10 FloatVector3 = 11 FloatVector4 = 12 Int = 5 IntVector2 = 6 IntVector3 = 7 IntVector4 = 8 Sampler2D = 16 SamplerCube = 17 Unknown = 0"
  },
  "api/Lime.Graphics.Platform.Vulkan.ShaderCompiler.html": {
    "href": "api/Lime.Graphics.Platform.Vulkan.ShaderCompiler.html",
    "title": "Class ShaderCompiler | Citrus Engine",
    "keywords": "Class ShaderCompiler Namespace Lime.Graphics.Platform.Vulkan Assembly Lime.dll public static class ShaderCompiler Inheritance object ShaderCompiler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BindAttribLocation(nint, string, int) public static void BindAttribLocation(nint programHandle, string name, int location) Parameters programHandle nint name string location int CompileShader(nint, Stage, string) public static bool CompileShader(nint shaderHandle, ShaderCompiler.Stage stage, string source) Parameters shaderHandle nint stage ShaderCompiler.Stage source string Returns bool CreateProgram() public static extern nint CreateProgram() Returns nint CreateShader() public static extern nint CreateShader() Returns nint DestroyProgram(nint) public static extern void DestroyProgram(nint programHandle) Parameters programHandle nint DestroyShader(nint) public static extern void DestroyShader(nint shaderHandle) Parameters shaderHandle nint GetActiveAttribCount(nint) public static extern int GetActiveAttribCount(nint programHandle) Parameters programHandle nint Returns int GetActiveAttribLocation(nint, int) public static extern int GetActiveAttribLocation(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveAttribName(nint, int) public static string GetActiveAttribName(nint programHandle, int index) Parameters programHandle nint index int Returns string GetActiveAttribType(nint, int) public static extern ShaderCompiler.VariableType GetActiveAttribType(nint programHandle, int index) Parameters programHandle nint index int Returns ShaderCompiler.VariableType GetActiveUniformArraySize(nint, int) public static extern int GetActiveUniformArraySize(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformArrayStride(nint, int) public static extern int GetActiveUniformArrayStride(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformBinding(nint, int) public static extern int GetActiveUniformBinding(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformBlockBinding(nint, int) public static extern int GetActiveUniformBlockBinding(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformBlockCount(nint) public static extern int GetActiveUniformBlockCount(nint programHandle) Parameters programHandle nint Returns int GetActiveUniformBlockIndex(nint, int) public static extern int GetActiveUniformBlockIndex(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformBlockOffset(nint, int) public static extern int GetActiveUniformBlockOffset(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformBlockSize(nint, int) public static extern int GetActiveUniformBlockSize(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformBlockStage(nint, int) public static extern ShaderCompiler.Stage GetActiveUniformBlockStage(nint programHandle, int index) Parameters programHandle nint index int Returns ShaderCompiler.Stage GetActiveUniformCount(nint) public static extern int GetActiveUniformCount(nint programHandle) Parameters programHandle nint Returns int GetActiveUniformMatrixStride(nint, int) public static extern int GetActiveUniformMatrixStride(nint programHandle, int index) Parameters programHandle nint index int Returns int GetActiveUniformName(nint, int) public static string GetActiveUniformName(nint programHandle, int index) Parameters programHandle nint index int Returns string GetActiveUniformNameInternal(nint, int) public static extern nint GetActiveUniformNameInternal(nint programHandle, int index) Parameters programHandle nint index int Returns nint GetActiveUniformStage(nint, int) public static extern ShaderCompiler.Stage GetActiveUniformStage(nint programHandle, int index) Parameters programHandle nint index int Returns ShaderCompiler.Stage GetActiveUniformType(nint, int) public static extern ShaderCompiler.VariableType GetActiveUniformType(nint programHandle, int index) Parameters programHandle nint index int Returns ShaderCompiler.VariableType GetProgramInfoLog(nint) public static string GetProgramInfoLog(nint programHandle) Parameters programHandle nint Returns string GetShaderInfoLog(nint) public static string GetShaderInfoLog(nint shaderHandle) Parameters shaderHandle nint Returns string GetShaderSpv(nint) public static extern nint GetShaderSpv(nint shaderHandle) Parameters shaderHandle nint Returns nint GetShaderSpvSize(nint) public static extern uint GetShaderSpvSize(nint shaderHandle) Parameters shaderHandle nint Returns uint GetSpv(nint, Stage) public static extern nint GetSpv(nint programHandle, ShaderCompiler.Stage stage) Parameters programHandle nint stage ShaderCompiler.Stage Returns nint GetSpvSize(nint, Stage) public static extern uint GetSpvSize(nint programHandle, ShaderCompiler.Stage stage) Parameters programHandle nint stage ShaderCompiler.Stage Returns uint LinkProgram(nint, nint, nint) public static bool LinkProgram(nint programHandle, nint vertexShaderHandle, nint fragmentShaderHandle) Parameters programHandle nint vertexShaderHandle nint fragmentShaderHandle nint Returns bool SetShaderSpv(nint, nint, uint) public static extern nint SetShaderSpv(nint shaderHandle, nint spv, uint size) Parameters shaderHandle nint spv nint size uint Returns nint"
  },
  "api/Lime.Graphics.Platform.Vulkan.Swapchain.html": {
    "href": "api/Lime.Graphics.Platform.Vulkan.Swapchain.html",
    "title": "Class Swapchain | Citrus Engine",
    "keywords": "Class Swapchain Namespace Lime.Graphics.Platform.Vulkan Assembly Lime.dll public class Swapchain : IDisposable Inheritance object Swapchain Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Swapchain(PlatformRenderContext, nint, int, int, bool) public Swapchain(PlatformRenderContext context, nint windowHandle, int width, int height, bool vSync = true) Parameters context PlatformRenderContext windowHandle nint width int height int vSync bool Properties Height public int Height { get; } Property Value int VSync public bool VSync { get; } Property Value bool Width public int Width { get; } Property Value int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.Graphics.Platform.Vulkan.html": {
    "href": "api/Lime.Graphics.Platform.Vulkan.html",
    "title": "Namespace Lime.Graphics.Platform.Vulkan | Citrus Engine",
    "keywords": "Namespace Lime.Graphics.Platform.Vulkan Classes PlatformRenderContext ShaderCompiler Swapchain Enums ShaderCompiler.Stage ShaderCompiler.VariableType"
  },
  "api/Lime.Graphics.Platform.html": {
    "href": "api/Lime.Graphics.Platform.html",
    "title": "Namespace Lime.Graphics.Platform | Citrus Engine",
    "keywords": "Namespace Lime.Graphics.Platform Classes PlatformBufferExtensions ShaderVariableTypeExtensions Structs UniformDesc Interfaces IPlatformBuffer IPlatformRenderTexture2D IPlatformShader IPlatformShaderProgram IPlatformTexture2D IPlatformVertexInputLayout Enums ShaderStageMask ShaderVariableType"
  },
  "api/Lime.GraphicsExtensions.html": {
    "href": "api/Lime.GraphicsExtensions.html",
    "title": "Class GraphicsExtensions | Citrus Engine",
    "keywords": "Class GraphicsExtensions Namespace Lime Assembly Lime.dll public static class GraphicsExtensions Inheritance object GraphicsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBlendState(Blending, bool) public static BlendState GetBlendState(this Blending blending, bool alphaPremul = false) Parameters blending Blending alphaPremul bool Returns BlendState GetElementSize(IndexFormat) public static int GetElementSize(this IndexFormat indexFormat) Parameters indexFormat IndexFormat Returns int Invert(FrontFace) public static FrontFace Invert(this FrontFace value) Parameters value FrontFace Returns FrontFace"
  },
  "api/Lime.GraphicsUtility.html": {
    "href": "api/Lime.GraphicsUtility.html",
    "title": "Class GraphicsUtility | Citrus Engine",
    "keywords": "Class GraphicsUtility Namespace Lime Assembly Lime.dll public static class GraphicsUtility Inheritance object GraphicsUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AlignDown(ulong, ulong) public static ulong AlignDown(ulong value, ulong alignment) Parameters value ulong alignment ulong Returns ulong AlignUp(ulong, ulong) public static ulong AlignUp(ulong value, ulong alignment) Parameters value ulong alignment ulong Returns ulong CalculateImageDataSize(Format, int, int) public static int CalculateImageDataSize(Format format, int width, int height) Parameters format Format width int height int Returns int CalculateMipLevelCount(int, int) public static int CalculateMipLevelCount(int width, int height) Parameters width int height int Returns int CalculateMipLevelDataSize(int, Format, int, int) public static int CalculateMipLevelDataSize(int level, Format format, int width, int height) Parameters level int format Format width int height int Returns int CalculateMipLevelSize(int, int, int, out int, out int) public static void CalculateMipLevelSize(int level, int width, int height, out int levelWidth, out int levelHeight) Parameters level int width int height int levelWidth int levelHeight int CombineAlignment(ulong, ulong) public static ulong CombineAlignment(ulong alignment1, ulong alignment2) Parameters alignment1 ulong alignment2 ulong Returns ulong CopyMemory(nint, nint, int) public static void CopyMemory(nint dst, nint src, int count) Parameters dst nint src nint count int EnsureTextureDataSizeValid(Format, int, int, int) public static void EnsureTextureDataSizeValid(Format format, int width, int height, int dataSize) Parameters format Format width int height int dataSize int FillMemory(nint, int, int) public static void FillMemory(nint dst, int value, int count) Parameters dst nint value int count int"
  },
  "api/Lime.HAlignment.html": {
    "href": "api/Lime.HAlignment.html",
    "title": "Enum HAlignment | Citrus Engine",
    "keywords": "Enum HAlignment Namespace Lime Assembly Lime.dll Types of horizontal alignment. public enum HAlignment Fields Center = 1 Justify = 3 Left = 0 Right = 2"
  },
  "api/Lime.HBoxLayout.html": {
    "href": "api/Lime.HBoxLayout.html",
    "title": "Class HBoxLayout | Citrus Engine",
    "keywords": "Class HBoxLayout Namespace Lime Assembly Lime.dll public class HBoxLayout : LinearLayout, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout LinearLayout HBoxLayout Implements IDisposable IAnimable ILayout Inherited Members LinearLayout.Spacing LinearLayout.Direction LinearLayout.ArrangeChildren() LinearLayout.MeasureSizeConstraints() Layout.Owner Layout.DebugRectangles Layout.ConstraintsValid Layout.ArrangementValid Layout.RowAlignment Layout.ColumnAlignment Layout.Alignment Layout.IgnoreHidden Layout.InvalidateConstraintsAndArrangement() Layout.InvalidateArrangement() Layout.OnSizeChanged(Widget, Vector2) Layout.GetChildren() Layout.CalcAlignmentOffsetAndStride(HAlignment, float, int) Layout.CalcAlignmentOffsetAndStride(VAlignment, float, int) Layout.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors HBoxLayout() public HBoxLayout()"
  },
  "api/Lime.HSLComponent.html": {
    "href": "api/Lime.HSLComponent.html",
    "title": "Class HSLComponent | Citrus Engine",
    "keywords": "Class HSLComponent Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Effects/HSL\")] public class HSLComponent : MaterialComponent<ColorCorrectionMaterial>, IDisposable, IAnimable Inheritance object Component NodeComponent MaterialComponent MaterialComponent<ColorCorrectionMaterial> HSLComponent Implements IDisposable IAnimable Inherited Members MaterialComponent<ColorCorrectionMaterial>.CustomMaterial MaterialComponent<ColorCorrectionMaterial>.OnOwnerChanged(Node) NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Hue [YuzuMember] public float Hue { get; set; } Property Value float Lightness [YuzuMember] public float Lightness { get; set; } Property Value float Saturation [YuzuMember] public float Saturation { get; set; } Property Value float"
  },
  "api/Lime.HSplitter.html": {
    "href": "api/Lime.HSplitter.html",
    "title": "Class HSplitter | Citrus Engine",
    "keywords": "Class HSplitter Namespace Lime Assembly Lime.dll public class HSplitter : Splitter, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Splitter HSplitter Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedHSplitter Inherited Members Splitter.SeparatorActiveAreaWidth Splitter.SeparatorColor Splitter.SeparatorHighlightColor Splitter.SeparatorDragColor Splitter.IsLocked Splitter.Stretches Splitter.DragStarted Splitter.DragEnded Splitter.RaiseDragStarted() Splitter.RaiseDragEnded() Splitter.GetStretchesList(List<float>, params float[]) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors HSplitter() public HSplitter() Properties SeparatorWidth public override float SeparatorWidth { get; set; } Property Value float"
  },
  "api/Lime.Hasher.html": {
    "href": "api/Lime.Hasher.html",
    "title": "Struct Hasher | Citrus Engine",
    "keywords": "Struct Hasher Namespace Lime Assembly Lime.dll public struct Hasher Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Methods Begin() public void Begin() End() public long End() Returns long End32() public int End32() Returns int Write(nint, int) public void Write(nint data, int count) Parameters data nint count int Write(string) public void Write(string data) Parameters data string Write<T>(T) public void Write<T>(T data) where T : unmanaged Parameters data T Type Parameters T Write<T>(ref T) public void Write<T>(ref T data) where T : unmanaged Parameters data T Type Parameters T Write<T>(T[]) public void Write<T>(T[] data) where T : unmanaged Parameters data T[] Type Parameters T Write<T>(T[], int, int) public void Write<T>(T[] data, int index, int count) where T : unmanaged Parameters data T[] index int count int Type Parameters T"
  },
  "api/Lime.HierarchyAction.html": {
    "href": "api/Lime.HierarchyAction.html",
    "title": "Enum HierarchyAction | Citrus Engine",
    "keywords": "Enum HierarchyAction Namespace Lime Assembly Lime.dll public enum HierarchyAction Fields Link = 0 Unlink = 1"
  },
  "api/Lime.HierarchyChangedEventArgs.html": {
    "href": "api/Lime.HierarchyChangedEventArgs.html",
    "title": "Struct HierarchyChangedEventArgs | Citrus Engine",
    "keywords": "Struct HierarchyChangedEventArgs Namespace Lime Assembly Lime.dll public struct HierarchyChangedEventArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HierarchyChangedEventArgs(NodeManager, HierarchyAction, Node, Node) public HierarchyChangedEventArgs(NodeManager manager, HierarchyAction action, Node child, Node parent) Parameters manager NodeManager action HierarchyAction child Node parent Node Fields Action public readonly HierarchyAction Action Field Value HierarchyAction Child public readonly Node Child Field Value Node Manager public readonly NodeManager Manager Field Value NodeManager Parent public readonly Node Parent Field Value Node"
  },
  "api/Lime.HierarchyChangedEventHandler.html": {
    "href": "api/Lime.HierarchyChangedEventHandler.html",
    "title": "Delegate HierarchyChangedEventHandler | Citrus Engine",
    "keywords": "Delegate HierarchyChangedEventHandler Namespace Lime Assembly Lime.dll public delegate void HierarchyChangedEventHandler(HierarchyChangedEventArgs e) Parameters e HierarchyChangedEventArgs"
  },
  "api/Lime.HitTestArgs.html": {
    "href": "api/Lime.HitTestArgs.html",
    "title": "Struct HitTestArgs | Citrus Engine",
    "keywords": "Struct HitTestArgs Namespace Lime Assembly Lime.dll public struct HitTestArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HitTestArgs(Ray) public HitTestArgs(Ray ray) Parameters ray Ray HitTestArgs(Vector2) public HitTestArgs(Vector2 point) Parameters point Vector2 Fields Distance public float Distance Field Value float Node public Node Node Field Value Node Point public Vector2 Point Field Value Vector2 Ray public Ray Ray Field Value Ray"
  },
  "api/Lime.HitTestMethod.html": {
    "href": "api/Lime.HitTestMethod.html",
    "title": "Enum HitTestMethod | Citrus Engine",
    "keywords": "Enum HitTestMethod Namespace Lime Assembly Lime.dll public enum HitTestMethod Fields BoundingRect = 0 Contents = 1 Skip = 2"
  },
  "api/Lime.IAbstractAnimator.html": {
    "href": "api/Lime.IAbstractAnimator.html",
    "title": "Interface IAbstractAnimator | Citrus Engine",
    "keywords": "Interface IAbstractAnimator Namespace Lime Assembly Lime.dll public interface IAbstractAnimator Properties Animable IAnimable Animable { get; } Property Value IAnimable Duration int Duration { get; } Property Value int EasingCalculator IEasingCalculator EasingCalculator { get; set; } Property Value IEasingCalculator IsTriggerable bool IsTriggerable { get; } Property Value bool TargetPropertyPathComparisonCode int TargetPropertyPathComparisonCode { get; } Property Value int ValueType Type ValueType { get; } Property Value Type Methods Apply(double) void Apply(double time) Parameters time double ExecuteTriggersInRange(double, double, bool) void ExecuteTriggersInRange(double minTime, double maxTime, bool executeTriggerAtMaxTime) Parameters minTime double maxTime double executeTriggerAtMaxTime bool"
  },
  "api/Lime.IAnimable.html": {
    "href": "api/Lime.IAnimable.html",
    "title": "Interface IAnimable | Citrus Engine",
    "keywords": "Interface IAnimable Namespace Lime Assembly Lime.dll public interface IAnimable Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Owner IAnimable Owner { get; set; } Property Value IAnimable"
  },
  "api/Lime.IAnimableExtensions.html": {
    "href": "api/Lime.IAnimableExtensions.html",
    "title": "Class IAnimableExtensions | Citrus Engine",
    "keywords": "Class IAnimableExtensions Namespace Lime Assembly Lime.dll public static class IAnimableExtensions Inheritance object IAnimableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAnimatorHost(IAnimable) public static IAnimatorHost GetAnimatorHost(this IAnimable animable) Parameters animable IAnimable Returns IAnimatorHost UnbindAnimators(IAnimable) public static void UnbindAnimators(this IAnimable animable) Parameters animable IAnimable"
  },
  "api/Lime.IAnimationCurve-1.html": {
    "href": "api/Lime.IAnimationCurve-1.html",
    "title": "Interface IAnimationCurve<T> | Citrus Engine",
    "keywords": "Interface IAnimationCurve<T> Namespace Lime Assembly Lime.dll public interface IAnimationCurve<T> : IAnimationCurve Type Parameters T Inherited Members IAnimationCurve.IsEmpty IAnimationCurve.Duration IAnimationCurve.RefCount IAnimationCurve.AddRef() IAnimationCurve.Release() Methods CreateEvaluator() IAnimationCurveEvaluator<T> CreateEvaluator() Returns IAnimationCurveEvaluator<T>"
  },
  "api/Lime.IAnimationCurve.html": {
    "href": "api/Lime.IAnimationCurve.html",
    "title": "Interface IAnimationCurve | Citrus Engine",
    "keywords": "Interface IAnimationCurve Namespace Lime Assembly Lime.dll public interface IAnimationCurve Properties Duration int Duration { get; } Property Value int IsEmpty bool IsEmpty { get; } Property Value bool RefCount int RefCount { get; } Property Value int Methods AddRef() void AddRef() CreateEvaluator() IAnimationCurveEvaluator CreateEvaluator() Returns IAnimationCurveEvaluator Release() void Release()"
  },
  "api/Lime.IAnimationCurveEvaluator-1.html": {
    "href": "api/Lime.IAnimationCurveEvaluator-1.html",
    "title": "Interface IAnimationCurveEvaluator<T> | Citrus Engine",
    "keywords": "Interface IAnimationCurveEvaluator<T> Namespace Lime Assembly Lime.dll public interface IAnimationCurveEvaluator<T> : IAnimationCurveEvaluator Type Parameters T Properties Curve IAnimationCurve<T> Curve { get; } Property Value IAnimationCurve<T> Methods Evaluate(double) T Evaluate(double time) Parameters time double Returns T"
  },
  "api/Lime.IAnimationCurveEvaluator.html": {
    "href": "api/Lime.IAnimationCurveEvaluator.html",
    "title": "Interface IAnimationCurveEvaluator | Citrus Engine",
    "keywords": "Interface IAnimationCurveEvaluator Namespace Lime Assembly Lime.dll public interface IAnimationCurveEvaluator Properties Curve IAnimationCurve Curve { get; } Property Value IAnimationCurve Methods Evaluate(double) object Evaluate(double time) Parameters time double Returns object"
  },
  "api/Lime.IAnimationCurveWithKeys-1.html": {
    "href": "api/Lime.IAnimationCurveWithKeys-1.html",
    "title": "Interface IAnimationCurveWithKeys<T> | Citrus Engine",
    "keywords": "Interface IAnimationCurveWithKeys<T> Namespace Lime Assembly Lime.dll public interface IAnimationCurveWithKeys<T> Type Parameters T Properties Keys IKeyframeCollection<T> Keys { get; } Property Value IKeyframeCollection<T>"
  },
  "api/Lime.IAnimationCurveWithKeys.html": {
    "href": "api/Lime.IAnimationCurveWithKeys.html",
    "title": "Interface IAnimationCurveWithKeys | Citrus Engine",
    "keywords": "Interface IAnimationCurveWithKeys Namespace Lime Assembly Lime.dll public interface IAnimationCurveWithKeys Properties Keys IKeyframeCollection Keys { get; } Property Value IKeyframeCollection"
  },
  "api/Lime.IAnimator.html": {
    "href": "api/Lime.IAnimator.html",
    "title": "Interface IAnimator | Citrus Engine",
    "keywords": "Interface IAnimator Namespace Lime Assembly Lime.dll public interface IAnimator : IDisposable, IAbstractAnimator Inherited Members IDisposable.Dispose() IAbstractAnimator.Animable IAbstractAnimator.TargetPropertyPathComparisonCode IAbstractAnimator.Duration IAbstractAnimator.IsTriggerable IAbstractAnimator.ValueType IAbstractAnimator.EasingCalculator IAbstractAnimator.Apply(double) IAbstractAnimator.ExecuteTriggersInRange(double, double, bool) Properties AnimationId string AnimationId { get; set; } Property Value string Curve IAnimationCurve Curve { get; } Property Value IAnimationCurve Enabled bool Enabled { get; set; } Property Value bool IsEmpty bool IsEmpty { get; } Property Value bool IsZombie bool IsZombie { get; } Property Value bool Keys IKeyframeCollection Keys { get; } Property Value IKeyframeCollection Owner IAnimatorHost Owner { get; set; } Property Value IAnimatorHost ReadonlyCurve IAnimationCurve ReadonlyCurve { get; set; } Property Value IAnimationCurve ReadonlyKeys IKeyframeCollection ReadonlyKeys { get; } Property Value IKeyframeCollection TargetPropertyPath string TargetPropertyPath { get; set; } Property Value string UserData object UserData { get; set; } Property Value object Methods CalcValue(double) object CalcValue(double time) Parameters time double Returns object ExecuteTrigger(int, double) void ExecuteTrigger(int frame, double animationTimeCorrection) Parameters frame int animationTimeCorrection double ResetCache() void ResetCache() Unbind() void Unbind()"
  },
  "api/Lime.IAnimatorHost.html": {
    "href": "api/Lime.IAnimatorHost.html",
    "title": "Interface IAnimatorHost | Citrus Engine",
    "keywords": "Interface IAnimatorHost Namespace Lime Assembly Lime.dll public interface IAnimatorHost Properties Animators AnimatorList Animators { get; } Property Value AnimatorList Methods GetComponent(Type) Component GetComponent(Type type) Parameters type Type Returns Component OnAnimatorCollectionChanged() void OnAnimatorCollectionChanged() OnTrigger(string, object, double) void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string value object animationTimeCorrection double"
  },
  "api/Lime.IAudioChannel.html": {
    "href": "api/Lime.IAudioChannel.html",
    "title": "Interface IAudioChannel | Citrus Engine",
    "keywords": "Interface IAudioChannel Namespace Lime Assembly Lime.dll public interface IAudioChannel Properties Group AudioChannelGroup Group { get; } Property Value AudioChannelGroup Pan float Pan { get; } Property Value float Pitch float Pitch { get; } Property Value float SamplePath string SamplePath { get; } Property Value string Sound Sound Sound { get; } Property Value Sound State AudioChannelState State { get; } Property Value AudioChannelState Volume float Volume { get; } Property Value float"
  },
  "api/Lime.IAudioDecoder.html": {
    "href": "api/Lime.IAudioDecoder.html",
    "title": "Interface IAudioDecoder | Citrus Engine",
    "keywords": "Interface IAudioDecoder Namespace Lime Assembly Lime.dll public interface IAudioDecoder : IDisposable Inherited Members IDisposable.Dispose() Methods GetBlockSize() int GetBlockSize() Returns int GetCompressedSize() int GetCompressedSize() Returns int GetFormat() AudioFormat GetFormat() Returns AudioFormat GetFrequency() int GetFrequency() Returns int ReadBlocks(nint, int, int) int ReadBlocks(nint buffer, int startIndex, int blockCount) Parameters buffer nint startIndex int blockCount int Returns int Rewind() void Rewind()"
  },
  "api/Lime.IBezierAnimationCurve.html": {
    "href": "api/Lime.IBezierAnimationCurve.html",
    "title": "Interface IBezierAnimationCurve | Citrus Engine",
    "keywords": "Interface IBezierAnimationCurve Namespace Lime Assembly Lime.dll public interface IBezierAnimationCurve : IAnimationCurve, IAnimationCurveWithKeys Inherited Members IAnimationCurve.IsEmpty IAnimationCurve.Duration IAnimationCurve.RefCount IAnimationCurve.AddRef() IAnimationCurve.Release() IAnimationCurve.CreateEvaluator() Properties Keys IBezierKeyframeCollection Keys { get; } Property Value IBezierKeyframeCollection"
  },
  "api/Lime.IBezierKeyframe.html": {
    "href": "api/Lime.IBezierKeyframe.html",
    "title": "Interface IBezierKeyframe | Citrus Engine",
    "keywords": "Interface IBezierKeyframe Namespace Lime Assembly Lime.dll public interface IBezierKeyframe : IKeyframe Properties Flags int Flags { get; set; } Property Value int Frame int Frame { get; set; } Property Value int InSlope object InSlope { get; set; } Property Value object InWeight object InWeight { get; set; } Property Value object OutSlope object OutSlope { get; set; } Property Value object OutWeight object OutWeight { get; set; } Property Value object Value object Value { get; set; } Property Value object"
  },
  "api/Lime.IBezierKeyframeCollection.html": {
    "href": "api/Lime.IBezierKeyframeCollection.html",
    "title": "Interface IBezierKeyframeCollection | Citrus Engine",
    "keywords": "Interface IBezierKeyframeCollection Namespace Lime Assembly Lime.dll public interface IBezierKeyframeCollection : ICollection<IBezierKeyframe>, IEnumerable<IBezierKeyframe>, IEnumerable Inherited Members ICollection<IBezierKeyframe>.Add(IBezierKeyframe) ICollection<IBezierKeyframe>.Clear() ICollection<IBezierKeyframe>.Contains(IBezierKeyframe) ICollection<IBezierKeyframe>.CopyTo(IBezierKeyframe[], int) ICollection<IBezierKeyframe>.Remove(IBezierKeyframe) ICollection<IBezierKeyframe>.Count ICollection<IBezierKeyframe>.IsReadOnly IEnumerable<IBezierKeyframe>.GetEnumerator() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties this[int] IBezierKeyframe this[int index] { get; } Parameters index int Property Value IBezierKeyframe Methods Contains(int) bool Contains(int frame) Parameters frame int Returns bool GetByFrame(int) IBezierKeyframe GetByFrame(int frame) Parameters frame int Returns IBezierKeyframe IndexOf(int) int IndexOf(int frame) Parameters frame int Returns int Remove(int) bool Remove(int frame) Parameters frame int Returns bool RemoveAt(int) void RemoveAt(int index) Parameters index int Update(int, object, object, object, object, object) void Update(int index, object value, object inSlope, object outSlope, object inWeight, object outWeight) Parameters index int value object inSlope object outSlope object inWeight object outWeight object"
  },
  "api/Lime.IBlendedAnimator.html": {
    "href": "api/Lime.IBlendedAnimator.html",
    "title": "Interface IBlendedAnimator | Citrus Engine",
    "keywords": "Interface IBlendedAnimator Namespace Lime Assembly Lime.dll public interface IBlendedAnimator : IAbstractAnimator Inherited Members IAbstractAnimator.Animable IAbstractAnimator.TargetPropertyPathComparisonCode IAbstractAnimator.Duration IAbstractAnimator.IsTriggerable IAbstractAnimator.ValueType IAbstractAnimator.Apply(double) IAbstractAnimator.ExecuteTriggersInRange(double, double, bool) Properties EasingCalculator IEasingCalculator EasingCalculator { get; set; } Property Value IEasingCalculator Methods Add(AnimationTrack, IAbstractAnimator) void Add(AnimationTrack track, IAbstractAnimator animator) Parameters track AnimationTrack animator IAbstractAnimator"
  },
  "api/Lime.ICaretParams.html": {
    "href": "api/Lime.ICaretParams.html",
    "title": "Interface ICaretParams | Citrus Engine",
    "keywords": "Interface ICaretParams Namespace Lime Assembly Lime.dll public interface ICaretParams Properties BlinkInterval float BlinkInterval { get; set; } Property Value float CaretPresenter ICaretPresenter CaretPresenter { get; set; } Property Value ICaretPresenter FollowTextColor bool FollowTextColor { get; set; } Property Value bool"
  },
  "api/Lime.ICaretPosition.html": {
    "href": "api/Lime.ICaretPosition.html",
    "title": "Interface ICaretPosition | Citrus Engine",
    "keywords": "Interface ICaretPosition Namespace Lime Assembly Lime.dll public interface ICaretPosition Properties Col int Col { get; set; } Property Value int IsValid bool IsValid { get; } Property Value bool IsVisible bool IsVisible { get; set; } Property Value bool Line int Line { get; set; } Property Value int TextPos int TextPos { get; set; } Property Value int WorldPos Vector2 WorldPos { get; set; } Property Value Vector2 Methods AssignFrom(ICaretPosition) void AssignFrom(ICaretPosition c) Parameters c ICaretPosition ClampCol(int) void ClampCol(int maxCol) Parameters maxCol int ClampLine(int) void ClampLine(int lineCount) Parameters lineCount int ClampTextPos(int) void ClampTextPos(int textLength) Parameters textLength int Clone() ICaretPosition Clone() Returns ICaretPosition EmptyText(Vector2) void EmptyText(Vector2 pos) Parameters pos Vector2 FinishSync() void FinishSync() InvalidatePreservingTextPos() void InvalidatePreservingTextPos() NextLine() void NextLine() StartSync() void StartSync() Sync(int, Vector2, Vector2) void Sync(int index, Vector2 charPos, Vector2 size) Parameters index int charPos Vector2 size Vector2"
  },
  "api/Lime.ICaretPresenter.html": {
    "href": "api/Lime.ICaretPresenter.html",
    "title": "Interface ICaretPresenter | Citrus Engine",
    "keywords": "Interface ICaretPresenter Namespace Lime Assembly Lime.dll public interface ICaretPresenter : IPresenter Inherited Members IPresenter.GetRenderObject(Node) IPresenter.PartialHitTest(Node, ref HitTestArgs) Properties Color Color4 Color { get; set; } Property Value Color4 Position Vector2 Position { get; set; } Property Value Vector2 Visible bool Visible { get; set; } Property Value bool"
  },
  "api/Lime.IChainedAnimator.html": {
    "href": "api/Lime.IChainedAnimator.html",
    "title": "Interface IChainedAnimator | Citrus Engine",
    "keywords": "Interface IChainedAnimator Namespace Lime Assembly Lime.dll public interface IChainedAnimator : IAbstractAnimator Inherited Members IAbstractAnimator.Animable IAbstractAnimator.TargetPropertyPathComparisonCode IAbstractAnimator.Duration IAbstractAnimator.IsTriggerable IAbstractAnimator.ValueType IAbstractAnimator.EasingCalculator IAbstractAnimator.Apply(double) IAbstractAnimator.ExecuteTriggersInRange(double, double, bool) Methods Add(AnimationClip, IAbstractAnimator) void Add(AnimationClip clip, IAbstractAnimator animator) Parameters clip AnimationClip animator IAbstractAnimator"
  },
  "api/Lime.ICommand.html": {
    "href": "api/Lime.ICommand.html",
    "title": "Interface ICommand | Citrus Engine",
    "keywords": "Interface ICommand Namespace Lime Assembly Lime.dll The ICommand interface provides an abstract user interface command. public interface ICommand Properties Checked Gets or sets a value indicating whether the menu item or tool button is checked. bool Checked { get; set; } Property Value bool ClearUserDataAfterUse Gets or sets a value indicating whether a custom command's UserData should be cleaned after use. bool ClearUserDataAfterUse { get; set; } Property Value bool Enabled Gets or sets a value indicating whether the command is enabled (e.g. in menus and toolbars). bool Enabled { get; set; } Property Value bool Icon Gets or sets the icon. The icon is used as the tool button icon. Icon Icon { get; set; } Property Value Icon Menu Gets or sets the menu contained by this command. Commands that contain menus can be used to create menu items with submenus, or inserted into toolbars to create buttons with popup menus. IMenu Menu { get; set; } Property Value IMenu Repeatable Gets or sets a value indicating whether the command will auto repeat when the keyboard shortcut combination is held down. Commands used in the main menu are always repeatable. The default value is true. bool Repeatable { get; set; } Property Value bool Shortcut Gets or sets the command's primary shortcut key. Shortcut Shortcut { get; set; } Property Value Shortcut Text Gets or sets the command's descriptive text. If the command is added to a menu, the menu option will consist of the text and the shortcut (if there is one). string Text { get; set; } Property Value string TooltipText Tooltip. string TooltipText { get; set; } Property Value string UserData Any data you need to pass to consumer of the command. object UserData { get; set; } Property Value object Version Gets the command's version, which is increased after changing any command's property. int Version { get; } Property Value int Visible Gets or sets a value indicating whether the command can be seen (e.g. in menus and toolbars). bool Visible { get; set; } Property Value bool Methods Consume() Consumes the command. WasIssued is false if the command was consumed. Returns true is command was issued before consuming. bool Consume() Returns bool IsConsumed() Gets a value indicating whether the command has been consumed. The command should not be consumed before changing its Enabled property. bool IsConsumed() Returns bool WasIssued() Returns true, if the command was issued, enabled and has not been consumed yet. bool WasIssued() Returns bool Events Issued Occurs when command is issued by clicking on menu item, activating menu shortcut or clicking a tool button. event Action Issued Event Type Action"
  },
  "api/Lime.ICompressedAnimationCurve.html": {
    "href": "api/Lime.ICompressedAnimationCurve.html",
    "title": "Interface ICompressedAnimationCurve | Citrus Engine",
    "keywords": "Interface ICompressedAnimationCurve Namespace Lime Assembly Lime.dll public interface ICompressedAnimationCurve : IAnimationCurve Inherited Members IAnimationCurve.IsEmpty IAnimationCurve.Duration IAnimationCurve.RefCount IAnimationCurve.AddRef() IAnimationCurve.Release() IAnimationCurve.CreateEvaluator() Methods Compress(List<int>, List<object>) void Compress(List<int> frameNumbers, List<object> values) Parameters frameNumbers List<int> values List<object>"
  },
  "api/Lime.IContext.html": {
    "href": "api/Lime.IContext.html",
    "title": "Interface IContext | Citrus Engine",
    "keywords": "Interface IContext Namespace Lime Assembly Lime.dll public interface IContext Methods Activate() IContext Activate() Returns IContext Deactivate() void Deactivate() Scoped() ContextScope Scoped() Returns ContextScope"
  },
  "api/Lime.IDisplay.html": {
    "href": "api/Lime.IDisplay.html",
    "title": "Interface IDisplay | Citrus Engine",
    "keywords": "Interface IDisplay Namespace Lime Assembly Lime.dll Defines a display device. public interface IDisplay Properties Position Gets the size of display on the desktop in virtual pixels. Vector2 Position { get; } Property Value Vector2 Size Gets the size of display in virtual pixels. Vector2 Size { get; } Property Value Vector2"
  },
  "api/Lime.IEasingCalculator.html": {
    "href": "api/Lime.IEasingCalculator.html",
    "title": "Interface IEasingCalculator | Citrus Engine",
    "keywords": "Interface IEasingCalculator Namespace Lime Assembly Lime.dll public interface IEasingCalculator Methods EaseTime(double) double EaseTime(double time) Parameters time double Returns double"
  },
  "api/Lime.IEditorParams.html": {
    "href": "api/Lime.IEditorParams.html",
    "title": "Interface IEditorParams | Citrus Engine",
    "keywords": "Interface IEditorParams Namespace Lime Assembly Lime.dll public interface IEditorParams Properties AcceptText Predicate<string> AcceptText { get; set; } Property Value Predicate<string> AllowNonDisplayableChars bool AllowNonDisplayableChars { get; set; } Property Value bool MaxHeight float MaxHeight { get; set; } Property Value float MaxLength int MaxLength { get; set; } Property Value int MaxLines int MaxLines { get; set; } Property Value int MaxUndoDepth int MaxUndoDepth { get; set; } Property Value int MouseSelectionThreshold float MouseSelectionThreshold { get; set; } Property Value float OffsetContextMenu Func<Vector2, Vector2> OffsetContextMenu { get; set; } Property Value Func<Vector2, Vector2> PasswordChar char? PasswordChar { get; set; } Property Value char? PasswordLastCharShowTime float PasswordLastCharShowTime { get; set; } Property Value float ReplaceCommaWithDecimalPoint bool ReplaceCommaWithDecimalPoint { get; set; } Property Value bool Scroll ScrollView Scroll { get; set; } Property Value ScrollView SelectAllOnFocus bool SelectAllOnFocus { get; set; } Property Value bool SoftKeyboardType SoftKeyboardType SoftKeyboardType { get; set; } Property Value SoftKeyboardType UseSecureString bool UseSecureString { get; set; } Property Value bool Methods IsAcceptableHeight(float) bool IsAcceptableHeight(float height) Parameters height float Returns bool IsAcceptableLength(int) bool IsAcceptableLength(int length) Parameters length int Returns bool IsAcceptableLines(int) bool IsAcceptableLines(int lines) Parameters lines int Returns bool"
  },
  "api/Lime.IFileDialog.html": {
    "href": "api/Lime.IFileDialog.html",
    "title": "Interface IFileDialog | Citrus Engine",
    "keywords": "Interface IFileDialog Namespace Lime Assembly Lime.dll Brings access to files and folders through the dialog screen. public interface IFileDialog Properties AllowedFileTypes Gets or sets an array of allowed file types. Example { \"txt\", \"png\" }. string[] AllowedFileTypes { get; set; } Property Value string[] AllowsMultipleSelection Gets or sets a value indicating whether it is allowed to select more then one file in the open file dialog. bool AllowsMultipleSelection { get; set; } Property Value bool CanCreateDirectories Gets or sets a value indicating whether the dialog can create directories. bool CanCreateDirectories { get; set; } Property Value bool FileName Gets a string containing file or folder path selected in the dialog. string FileName { get; } Property Value string FileNames Gets an array of strings containing paths of all selected files. string[] FileNames { get; } Property Value string[] InitialDirectory Gets or sets the dialog's initial directory. string InitialDirectory { get; set; } Property Value string InitialFileName Gets or sets initial file name. string InitialFileName { get; set; } Property Value string Mode Gets or sets a mode indicating whether this dialog opens file, saves file or selects folder. FileDialogMode Mode { get; set; } Property Value FileDialogMode Title Title text of the file dialog window. string Title { get; set; } Property Value string Methods RunModal() Shows dialog. bool RunModal() Returns bool return true if user clicks OK in the dialog."
  },
  "api/Lime.IFileSystemWatcher.html": {
    "href": "api/Lime.IFileSystemWatcher.html",
    "title": "Interface IFileSystemWatcher | Citrus Engine",
    "keywords": "Interface IFileSystemWatcher Namespace Lime Assembly Lime.dll public interface IFileSystemWatcher : IDisposable Inherited Members IDisposable.Dispose() Events Changed event Action<string> Changed Event Type Action<string> Created event Action<string> Created Event Type Action<string> Deleted event Action<string> Deleted Event Type Action<string> Renamed event Action<string, string> Renamed Event Type Action<string, string>"
  },
  "api/Lime.IFont.html": {
    "href": "api/Lime.IFont.html",
    "title": "Interface IFont | Citrus Engine",
    "keywords": "Interface IFont Namespace Lime Assembly Lime.dll public interface IFont : IDisposable Inherited Members IDisposable.Dispose() Extension Methods FontExtensions.MeasureTextLine(IFont, string, float, int, int, float) FontExtensions.MeasureTextLine(IFont, string, float, float) Properties About string About { get; } Property Value string CharSource IFontCharSource CharSource { get; } Property Value IFontCharSource RoundCoordinates bool RoundCoordinates { get; } Property Value bool Spacing float Spacing { get; } Property Value float Methods ClearCache() void ClearCache()"
  },
  "api/Lime.IFontCharSource.html": {
    "href": "api/Lime.IFontCharSource.html",
    "title": "Interface IFontCharSource | Citrus Engine",
    "keywords": "Interface IFontCharSource Namespace Lime Assembly Lime.dll public interface IFontCharSource : IDisposable Inherited Members IDisposable.Dispose() Methods Contains(char) bool Contains(char code) Parameters code char Returns bool Get(char, float) FontChar Get(char code, float heightHint) Parameters code char heightHint float Returns FontChar"
  },
  "api/Lime.IGlyphMaterialProvider.html": {
    "href": "api/Lime.IGlyphMaterialProvider.html",
    "title": "Interface IGlyphMaterialProvider | Citrus Engine",
    "keywords": "Interface IGlyphMaterialProvider Namespace Lime Assembly Lime.dll public interface IGlyphMaterialProvider Methods GetMaterial(int) IMaterial GetMaterial(int tag) Parameters tag int Returns IMaterial ProcessGlyph(Glyph) Glyph ProcessGlyph(Glyph g) Parameters g Glyph Returns Glyph"
  },
  "api/Lime.IHalfEdge.html": {
    "href": "api/Lime.IHalfEdge.html",
    "title": "Interface IHalfEdge | Citrus Engine",
    "keywords": "Interface IHalfEdge Namespace Lime Assembly Lime.dll public interface IHalfEdge Properties Constrained bool Constrained { get; } Property Value bool IncidentEdges IEnumerable<IHalfEdge> IncidentEdges { get; } Property Value IEnumerable<IHalfEdge> Next IHalfEdge Next { get; } Property Value IHalfEdge Origin int Origin { get; } Property Value int Prev IHalfEdge Prev { get; } Property Value IHalfEdge Twin IHalfEdge Twin { get; } Property Value IHalfEdge"
  },
  "api/Lime.IImageCombinerArg.html": {
    "href": "api/Lime.IImageCombinerArg.html",
    "title": "Interface IImageCombinerArg | Citrus Engine",
    "keywords": "Interface IImageCombinerArg Namespace Lime Assembly Lime.dll This interface must implements every node which can be used as a source for ImageCombiner. public interface IImageCombinerArg Properties Blending Blending Blending { get; } Property Value Blending Color Color4 Color { get; } Property Value Color4 GloballyVisible bool GloballyVisible { get; } Property Value bool Shader ShaderId Shader { get; } Property Value ShaderId Size Vector2 Size { get; } Property Value Vector2 UVTransform Matrix32 UVTransform { get; } Property Value Matrix32 Methods CalcLocalToParentTransform() Matrix32 CalcLocalToParentTransform() Returns Matrix32 GetTexture() ITexture GetTexture() Returns ITexture SkipRender() Called by ImageCombiner in update cycle. It notifies that widget will be used in combining, and must not be drawn on render pass. void SkipRender()"
  },
  "api/Lime.IKeyframe-1.html": {
    "href": "api/Lime.IKeyframe-1.html",
    "title": "Interface IKeyframe<T> | Citrus Engine",
    "keywords": "Interface IKeyframe<T> Namespace Lime Assembly Lime.dll public interface IKeyframe<T> : IKeyframe Type Parameters T Properties Frame int Frame { get; set; } Property Value int Value T Value { get; set; } Property Value T"
  },
  "api/Lime.IKeyframe.html": {
    "href": "api/Lime.IKeyframe.html",
    "title": "Interface IKeyframe | Citrus Engine",
    "keywords": "Interface IKeyframe Namespace Lime Assembly Lime.dll public interface IKeyframe Properties Frame int Frame { get; set; } Property Value int Value object Value { get; set; } Property Value object"
  },
  "api/Lime.IKeyframeCollection-1.html": {
    "href": "api/Lime.IKeyframeCollection-1.html",
    "title": "Interface IKeyframeCollection<T> | Citrus Engine",
    "keywords": "Interface IKeyframeCollection<T> Namespace Lime Assembly Lime.dll public interface IKeyframeCollection<T> : ICollection<IKeyframe<T>>, IEnumerable<IKeyframe<T>>, IEnumerable Type Parameters T Inherited Members ICollection<IKeyframe<T>>.Add(IKeyframe<T>) ICollection<IKeyframe<T>>.Clear() ICollection<IKeyframe<T>>.Contains(IKeyframe<T>) ICollection<IKeyframe<T>>.CopyTo(IKeyframe<T>[], int) ICollection<IKeyframe<T>>.Remove(IKeyframe<T>) ICollection<IKeyframe<T>>.Count ICollection<IKeyframe<T>>.IsReadOnly IEnumerable<IKeyframe<T>>.GetEnumerator() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties this[int] IKeyframe<T> this[int index] { get; } Parameters index int Property Value IKeyframe<T> Methods Add(int, T) void Add(int frame, T value) Parameters frame int value T AddRange(IEnumerable<IKeyframe<T>>) void AddRange(IEnumerable<IKeyframe<T>> keyframes) Parameters keyframes IEnumerable<IKeyframe<T>> Contains(int) bool Contains(int frame) Parameters frame int Returns bool GetByFrame(int) IKeyframe<T> GetByFrame(int frame) Parameters frame int Returns IKeyframe<T> IndexOf(int) int IndexOf(int frame) Parameters frame int Returns int Remove(int) bool Remove(int frame) Parameters frame int Returns bool Update(int, IKeyframe<T>) void Update(int index, IKeyframe<T> keyframe) Parameters index int keyframe IKeyframe<T>"
  },
  "api/Lime.IKeyframeCollection.html": {
    "href": "api/Lime.IKeyframeCollection.html",
    "title": "Interface IKeyframeCollection | Citrus Engine",
    "keywords": "Interface IKeyframeCollection Namespace Lime Assembly Lime.dll public interface IKeyframeCollection : ICollection<IKeyframe>, IEnumerable<IKeyframe>, IEnumerable Inherited Members ICollection<IKeyframe>.Add(IKeyframe) ICollection<IKeyframe>.Clear() ICollection<IKeyframe>.Contains(IKeyframe) ICollection<IKeyframe>.CopyTo(IKeyframe[], int) ICollection<IKeyframe>.Remove(IKeyframe) ICollection<IKeyframe>.Count ICollection<IKeyframe>.IsReadOnly IEnumerable<IKeyframe>.GetEnumerator() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties this[int] IKeyframe this[int index] { get; } Parameters index int Property Value IKeyframe Methods Add(int, object) void Add(int frame, object value) Parameters frame int value object AddRange(IEnumerable<IKeyframe>) void AddRange(IEnumerable<IKeyframe> keyframes) Parameters keyframes IEnumerable<IKeyframe> Contains(int) bool Contains(int frame) Parameters frame int Returns bool GetByFrame(int) IKeyframe GetByFrame(int frame) Parameters frame int Returns IKeyframe IndexOf(int) int IndexOf(int frame) Parameters frame int Returns int Remove(int) bool Remove(int frame) Parameters frame int Returns bool Update(int, IKeyframe) void Update(int index, IKeyframe keyframe) Parameters index int keyframe IKeyframe"
  },
  "api/Lime.ILayout.html": {
    "href": "api/Lime.ILayout.html",
    "title": "Interface ILayout | Citrus Engine",
    "keywords": "Interface ILayout Namespace Lime Assembly Lime.dll public interface ILayout Properties ArrangementValid bool ArrangementValid { get; } Property Value bool ConstraintsValid bool ConstraintsValid { get; } Property Value bool DebugRectangles List<Rectangle> DebugRectangles { get; } Property Value List<Rectangle> Owner Widget Owner { get; set; } Property Value Widget Methods ArrangeChildren() void ArrangeChildren() InvalidateArrangement() void InvalidateArrangement() InvalidateConstraintsAndArrangement() void InvalidateConstraintsAndArrangement() MeasureSizeConstraints() void MeasureSizeConstraints() OnSizeChanged(Widget, Vector2) void OnSizeChanged(Widget widget, Vector2 sizeDelta) Parameters widget Widget sizeDelta Vector2"
  },
  "api/Lime.ILocalizationDictionarySerializer.html": {
    "href": "api/Lime.ILocalizationDictionarySerializer.html",
    "title": "Interface ILocalizationDictionarySerializer | Citrus Engine",
    "keywords": "Interface ILocalizationDictionarySerializer Namespace Lime Assembly Lime.dll Интерфейс сериалайзера, предоставляющего функции чтения и записи словаря в файл public interface ILocalizationDictionarySerializer Methods GetFileExtension() string GetFileExtension() Returns string Read(LocalizationDictionary, Stream) void Read(LocalizationDictionary dictionary, Stream stream) Parameters dictionary LocalizationDictionary stream Stream Write(LocalizationDictionary, Stream) void Write(LocalizationDictionary dictionary, Stream stream) Parameters dictionary LocalizationDictionary stream Stream"
  },
  "api/Lime.IMaterial.html": {
    "href": "api/Lime.IMaterial.html",
    "title": "Interface IMaterial | Citrus Engine",
    "keywords": "Interface IMaterial Namespace Lime Assembly Lime.dll public interface IMaterial Properties Id string Id { get; set; } Property Value string PassCount int PassCount { get; } Property Value int Methods Apply(int) void Apply(int pass) Parameters pass int Invalidate() void Invalidate()"
  },
  "api/Lime.IMaterialComponentOwner.html": {
    "href": "api/Lime.IMaterialComponentOwner.html",
    "title": "Interface IMaterialComponentOwner | Citrus Engine",
    "keywords": "Interface IMaterialComponentOwner Namespace Lime Assembly Lime.dll This interface must implements every node which can be used as a owner of MaterialComponent. public interface IMaterialComponentOwner Properties Material IMaterial Material { get; set; } Property Value IMaterial Sprite ISprite Sprite { get; } Property Value ISprite UV0 Vector2 UV0 { get; } Property Value Vector2 UV1 Vector2 UV1 { get; } Property Value Vector2"
  },
  "api/Lime.IMaterialFog.html": {
    "href": "api/Lime.IMaterialFog.html",
    "title": "Interface IMaterialFog | Citrus Engine",
    "keywords": "Interface IMaterialFog Namespace Lime Assembly Lime.dll public interface IMaterialFog Properties FogColor Color4 FogColor { get; set; } Property Value Color4 FogDensity float FogDensity { get; set; } Property Value float FogEnd float FogEnd { get; set; } Property Value float FogMode FogMode FogMode { get; set; } Property Value FogMode FogStart float FogStart { get; set; } Property Value float"
  },
  "api/Lime.IMaterialSkin.html": {
    "href": "api/Lime.IMaterialSkin.html",
    "title": "Interface IMaterialSkin | Citrus Engine",
    "keywords": "Interface IMaterialSkin Namespace Lime Assembly Lime.dll public interface IMaterialSkin Properties SkinEnabled bool SkinEnabled { get; set; } Property Value bool SkinningMode SkinningMode SkinningMode { get; set; } Property Value SkinningMode Methods SetBones(Matrix44[], int) void SetBones(Matrix44[] boneTransforms, int boneCount) Parameters boneTransforms Matrix44[] boneCount int SetBones(Vector4[], Vector4[], int) void SetBones(Vector4[] dualQuaternionPartA, Vector4[] dualQuaternionPartB, int boneCount) Parameters dualQuaternionPartA Vector4[] dualQuaternionPartB Vector4[] boneCount int"
  },
  "api/Lime.IMenu.html": {
    "href": "api/Lime.IMenu.html",
    "title": "Interface IMenu | Citrus Engine",
    "keywords": "Interface IMenu Namespace Lime Assembly Lime.dll public interface IMenu : IList<ICommand>, ICollection<ICommand>, IEnumerable<ICommand>, IEnumerable Inherited Members IList<ICommand>.IndexOf(ICommand) IList<ICommand>.Insert(int, ICommand) IList<ICommand>.RemoveAt(int) IList<ICommand>.this[int] ICollection<ICommand>.Add(ICommand) ICollection<ICommand>.Clear() ICollection<ICommand>.Contains(ICommand) ICollection<ICommand>.CopyTo(ICommand[], int) ICollection<ICommand>.Remove(ICommand) ICollection<ICommand>.Count ICollection<ICommand>.IsReadOnly IEnumerable<ICommand>.GetEnumerator() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Methods FindCommand(string) Returns first menu item with a given text. ICommand FindCommand(string text) Parameters text string Returns ICommand Popup() Shows the menu at the current position of the cursor. void Popup() Popup(IWindow, Vector2, float, ICommand) Shows the menu at the given client position of the window. void Popup(IWindow window, Vector2 position, float minimumWidth, ICommand command) Parameters window IWindow position Vector2 The location in the window client coordinate system to display the menu item. minimumWidth float command ICommand The menu item to be positioned at the specified location in the window. Refresh() Refreshes the menu according to its internal state. void Refresh()"
  },
  "api/Lime.IMesh.html": {
    "href": "api/Lime.IMesh.html",
    "title": "Interface IMesh | Citrus Engine",
    "keywords": "Interface IMesh Namespace Lime Assembly Lime.dll public interface IMesh Methods Draw(int, int) void Draw(int startVertex, int vertexCount) Parameters startVertex int vertexCount int DrawIndexed(int, int, int) void DrawIndexed(int startIndex, int indexCount, int baseVertex = 0) Parameters startIndex int indexCount int baseVertex int ShallowClone() IMesh ShallowClone() Returns IMesh"
  },
  "api/Lime.IPersistOnReplaceContent.html": {
    "href": "api/Lime.IPersistOnReplaceContent.html",
    "title": "Interface IPersistOnReplaceContent | Citrus Engine",
    "keywords": "Interface IPersistOnReplaceContent Namespace Lime Assembly Lime.dll Used to prevent removal of components implementing the interface from placeholder node when an external scene is being inlined by ReplaceContent(Node). Do not use with components marked with AllowMultipleComponentsAttribute. public interface IPersistOnReplaceContent"
  },
  "api/Lime.IPersistenceContext.html": {
    "href": "api/Lime.IPersistenceContext.html",
    "title": "Interface IPersistenceContext | Citrus Engine",
    "keywords": "Interface IPersistenceContext Namespace Lime Assembly Lime.dll public interface IPersistenceContext Methods AfterRead<T>(IPersistenceReadData, object) void AfterRead<T>(IPersistenceReadData readData, object @object) Parameters readData IPersistenceReadData object object Type Parameters T BeforeRead<T>(Persistence, AbstractDeserializer, Stream, Format) IPersistenceReadData BeforeRead<T>(Persistence persistence, AbstractDeserializer deserializer, Stream stream, Persistence.Format format) Parameters persistence Persistence deserializer AbstractDeserializer stream Stream format Persistence.Format Returns IPersistenceReadData Type Parameters T BeforeWrite(Persistence, AbstractWriterSerializer, Stream, object, Format) void BeforeWrite(Persistence persistence, AbstractWriterSerializer serializer, Stream stream, object @object, Persistence.Format format) Parameters persistence Persistence serializer AbstractWriterSerializer stream Stream object object format Persistence.Format StoreMetadata(object, List<Metadata>) void StoreMetadata(object @object, List<Metadata> metadata) Parameters object object metadata List<Metadata> TryGetMetadata(object, out List<Metadata>) bool TryGetMetadata(object @object, out List<Metadata> metadata) Parameters object object metadata List<Metadata> Returns bool"
  },
  "api/Lime.IPersistenceReadData.html": {
    "href": "api/Lime.IPersistenceReadData.html",
    "title": "Interface IPersistenceReadData | Citrus Engine",
    "keywords": "Interface IPersistenceReadData Namespace Lime Assembly Lime.dll public interface IPersistenceReadData Properties ReplacedStream Stream ReplacedStream { get; } Property Value Stream"
  },
  "api/Lime.IPresenter.html": {
    "href": "api/Lime.IPresenter.html",
    "title": "Interface IPresenter | Citrus Engine",
    "keywords": "Interface IPresenter Namespace Lime Assembly Lime.dll public interface IPresenter Methods GetRenderObject(Node) RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.IPropertyLocker.html": {
    "href": "api/Lime.IPropertyLocker.html",
    "title": "Interface IPropertyLocker | Citrus Engine",
    "keywords": "Interface IPropertyLocker Namespace Lime Assembly Lime.dll public interface IPropertyLocker Methods IsPropertyLocked(string, bool) bool IsPropertyLocked(string propertyName, bool isExternal) Parameters propertyName string isExternal bool Returns bool"
  },
  "api/Lime.IRandom.html": {
    "href": "api/Lime.IRandom.html",
    "title": "Interface IRandom | Citrus Engine",
    "keywords": "Interface IRandom Namespace Lime Assembly Lime.dll public interface IRandom Extension Methods Mathf.NormalRandom(IRandom, float, float) Mathf.RandomDouble(IRandom, double, double) Mathf.RandomFloat(IRandom) Mathf.RandomFloat(IRandom, float, float) Mathf.RandomInt(IRandom, int) Mathf.RandomOf<T>(IRandom, ICollection<T>) Mathf.RandomOf<T>(IRandom, params T[]) Mathf.UniformRandom(IRandom, float, float) Methods Next() int Next() Returns int Next(int) int Next(int maxValue) Parameters maxValue int Returns int Next(int, int) int Next(int minValue, int maxValue) Parameters minValue int maxValue int Returns int NextBytes(byte[]) void NextBytes(byte[] buffer) Parameters buffer byte[] NextBytes(Span<byte>) void NextBytes(Span<byte> buffer) Parameters buffer Span<byte> NextDouble() double NextDouble() Returns double NextLong() long NextLong() Returns long NextLong(long) long NextLong(long maxValue) Parameters maxValue long Returns long NextLong(long, long) long NextLong(long minValue, long maxValue) Parameters minValue long maxValue long Returns long NextSingle() float NextSingle() Returns float"
  },
  "api/Lime.IRandomProvider.html": {
    "href": "api/Lime.IRandomProvider.html",
    "title": "Interface IRandomProvider | Citrus Engine",
    "keywords": "Interface IRandomProvider Namespace Lime Assembly Lime.dll public interface IRandomProvider Properties SharedRandom IRandom SharedRandom { get; } Property Value IRandom Methods Create() IRandom Create() Returns IRandom Create(int) IRandom Create(int seed) Parameters seed int Returns IRandom"
  },
  "api/Lime.IRenderChainBuilder.html": {
    "href": "api/Lime.IRenderChainBuilder.html",
    "title": "Interface IRenderChainBuilder | Citrus Engine",
    "keywords": "Interface IRenderChainBuilder Namespace Lime Assembly Lime.dll public interface IRenderChainBuilder Methods AddToRenderChain(RenderChain) void AddToRenderChain(RenderChain chain) Parameters chain RenderChain"
  },
  "api/Lime.IRenderer.html": {
    "href": "api/Lime.IRenderer.html",
    "title": "Interface IRenderer | Citrus Engine",
    "keywords": "Interface IRenderer Namespace Lime Assembly Lime.dll public interface IRenderer Properties Blending Blending Blending { get; set; } Property Value Blending ColorFactor Color4 ColorFactor { get; set; } Property Value Color4 ColorWriteEnabled ColorWriteMask ColorWriteEnabled { get; set; } Property Value ColorWriteMask CullMode CullMode CullMode { get; set; } Property Value CullMode DepthState DepthState DepthState { get; set; } Property Value DepthState DrawCalls int DrawCalls { get; } Property Value int GlobalShaderParams ShaderParams GlobalShaderParams { get; } Property Value ShaderParams PolyCount3d int PolyCount3d { get; } Property Value int Projection Matrix44 Projection { get; set; } Property Value Matrix44 RenderCycle int RenderCycle { get; } Property Value int ScissorState ScissorState ScissorState { get; set; } Property Value ScissorState Shader ShaderId Shader { get; set; } Property Value ShaderId StencilState StencilState StencilState { get; set; } Property Value StencilState Transform1 Matrix32 Transform1 { get; set; } Property Value Matrix32 Transform2 Matrix32 Transform2 { get; set; } Property Value Matrix32 View Matrix44 View { get; set; } Property Value Matrix44 ViewProjection Matrix44 ViewProjection { get; } Property Value Matrix44 Viewport Viewport Viewport { get; set; } Property Value Viewport World Matrix44 World { get; set; } Property Value Matrix44 WorldView Matrix44 WorldView { get; } Property Value Matrix44 WorldViewProjection Matrix44 WorldViewProjection { get; } Property Value Matrix44 Methods BeginFrame() void BeginFrame() Clear(ClearOptions) void Clear(ClearOptions options) Parameters options ClearOptions Clear(ClearOptions, Color4) void Clear(ClearOptions options, Color4 color) Parameters options ClearOptions color Color4 Clear(ClearOptions, Color4, float, byte) void Clear(ClearOptions options, Color4 color, float depth, byte stencil) Parameters options ClearOptions color Color4 depth float stencil byte Clear(Color4) void Clear(Color4 color) Parameters color Color4 DrawCircle(Vector2, float, int, Color4) void DrawCircle(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawDashedLine(Vector2, Vector2, Color4, Vector2) void DrawDashedLine(Vector2 a, Vector2 b, Color4 color, Vector2 dashSize) Parameters a Vector2 b Vector2 color Color4 dashSize Vector2 DrawGlyphList(List<Glyph>, Color4) void DrawGlyphList(List<Glyph> glyphList, Color4 color) Parameters glyphList List<Glyph> color Color4 DrawHorizontalGradientRect(Vector2, Vector2, Color4, Color4) void DrawHorizontalGradientRect(Vector2 a, Vector2 b, Color4 topColor, Color4 bottomColor) Parameters a Vector2 b Vector2 topColor Color4 bottomColor Color4 DrawHorizontalGradientRect(Vector2, Vector2, ColorGradient) void DrawHorizontalGradientRect(Vector2 a, Vector2 b, ColorGradient gradient) Parameters a Vector2 b Vector2 gradient ColorGradient DrawHorizontalGradientRect(float, float, float, float, ColorGradient) void DrawHorizontalGradientRect(float x0, float y0, float x1, float y1, ColorGradient gradient) Parameters x0 float y0 float x1 float y1 float gradient ColorGradient DrawLine(Vector2, Vector2, Color4, float, LineCap) void DrawLine(Vector2 a, Vector2 b, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters a Vector2 b Vector2 color Color4 thickness float cap LineCap DrawLine(float, float, float, float, Color4, float, LineCap) void DrawLine(float x0, float y0, float x1, float y1, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters x0 float y0 float x1 float y1 float color Color4 thickness float cap LineCap DrawQuadrangle(Quadrangle, Color4) Draws the quadrangle void DrawQuadrangle(Quadrangle q, Color4 color) Parameters q Quadrangle color Color4 DrawQuadrangleOutline(Quadrangle, Color4, float) Draws the quadrangle outline inscribed within the given bounds. void DrawQuadrangleOutline(Quadrangle q, Color4 color, float thickness = 1) Parameters q Quadrangle color Color4 thickness float DrawRect(Vector2, Vector2, Color4) void DrawRect(Vector2 a, Vector2 b, Color4 color) Parameters a Vector2 b Vector2 color Color4 DrawRect(float, float, float, float, Color4) void DrawRect(float x0, float y0, float x1, float y1, Color4 color) Parameters x0 float y0 float x1 float y1 float color Color4 DrawRectOutline(Vector2, Vector2, Color4, float) Draws the rectangle outline inscribed within the given bounds. void DrawRectOutline(Vector2 a, Vector2 b, Color4 color, float thickness = 1) Parameters a Vector2 b Vector2 color Color4 thickness float DrawRectOutline(float, float, float, float, Color4, float) Draws the rectangle outline inscribed within the given bounds. void DrawRectOutline(float x0, float y0, float x1, float y1, Color4 color, float thickness = 1) Parameters x0 float y0 float x1 float y1 float color Color4 thickness float DrawRound(Vector2, float, int, Color4) void DrawRound(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawRound(Vector2, float, int, Color4, Color4) void DrawRound(Vector2 center, float radius, int numSegments, Color4 innerColor, Color4 outerColor) Parameters center Vector2 radius float numSegments int innerColor Color4 outerColor Color4 DrawSprite(ITexture, Color4, Vector2, Vector2, Vector2, Vector2) void DrawSprite(ITexture texture1, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawSprite(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2) void DrawSprite(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawSprite(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) void DrawSprite(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawSprite(ITexture, ITexture, IMaterial, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) void DrawSprite(ITexture texture1, ITexture texture2, IMaterial material, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture material IMaterial color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTextLine(IFont, Vector2, string, Color4, float, int, int, float) void DrawTextLine(IFont font, Vector2 position, string text, Color4 color, float fontHeight, int start, int length, float letterSpacing) Parameters font IFont position Vector2 text string color Color4 fontHeight float start int length int letterSpacing float DrawTextLine(IFont, Vector2, string, Color4, float, int, int, float, GlyphList, Action<int, Vector2, Vector2>, int) void DrawTextLine(IFont font, Vector2 position, string text, Color4 color, float fontHeight, int start, int length, float letterSpacing, GlyphList list, Action<int, Vector2, Vector2> onDrawChar = null, int tag = -1) Parameters font IFont position Vector2 text string color Color4 fontHeight float start int length int letterSpacing float list GlyphList onDrawChar Action<int, Vector2, Vector2> tag int DrawTextLine(IFont, Vector2, string, float, Color4, float) void DrawTextLine(IFont font, Vector2 position, string text, float fontHeight, Color4 color, float letterSpacing) Parameters font IFont position Vector2 text string fontHeight float color Color4 letterSpacing float DrawTextLine(Vector2, string, float, Color4, float) void DrawTextLine(Vector2 position, string text, float fontHeight, Color4 color, float letterSpacing) Parameters position Vector2 text string fontHeight float color Color4 letterSpacing float DrawTextLine(float, float, string, float, Color4, float) void DrawTextLine(float x, float y, string text, float fontHeight, Color4 color, float letterSpacing) Parameters x float y float text string fontHeight float color Color4 letterSpacing float DrawTriangleFan(ITexture, ITexture, IMaterial, Vertex[], int) RenderBatchRegion DrawTriangleFan(ITexture texture1, ITexture texture2, IMaterial material, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture material IMaterial vertices Vertex[] numVertices int Returns RenderBatchRegion DrawTriangleFan(ITexture, ITexture, Vertex[], int) void DrawTriangleFan(ITexture texture1, ITexture texture2, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture vertices Vertex[] numVertices int DrawTriangleFan(ITexture, Vertex[], int) void DrawTriangleFan(ITexture texture1, Vertex[] vertices, int numVertices) Parameters texture1 ITexture vertices Vertex[] numVertices int DrawTriangleFan(Vertex[], int) void DrawTriangleFan(Vertex[] vertices, int numVertices) Parameters vertices Vertex[] numVertices int DrawTriangleStrip(ITexture, ITexture, IMaterial, Vertex[], int) RenderBatchRegion DrawTriangleStrip(ITexture texture1, ITexture texture2, IMaterial material, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture material IMaterial vertices Vertex[] numVertices int Returns RenderBatchRegion DrawTriangleStrip(ITexture, ITexture, Vertex[], int) void DrawTriangleStrip(ITexture texture1, ITexture texture2, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture vertices Vertex[] numVertices int DrawTriangleStrip(ITexture, Vertex[], int) void DrawTriangleStrip(ITexture texture1, Vertex[] vertices, int numVertices) Parameters texture1 ITexture vertices Vertex[] numVertices int DrawTriangleStrip(Vertex[], int) void DrawTriangleStrip(Vertex[] vertices, int numVertices) Parameters vertices Vertex[] numVertices int DrawVerticalGradientRect(Vector2, Vector2, Color4, Color4) void DrawVerticalGradientRect(Vector2 a, Vector2 b, Color4 topColor, Color4 bottomColor) Parameters a Vector2 b Vector2 topColor Color4 bottomColor Color4 DrawVerticalGradientRect(Vector2, Vector2, ColorGradient) void DrawVerticalGradientRect(Vector2 a, Vector2 b, ColorGradient gradient) Parameters a Vector2 b Vector2 gradient ColorGradient DrawVerticalGradientRect(float, float, float, float, Color4, Color4) void DrawVerticalGradientRect(float x0, float y0, float x1, float y1, Color4 topColor, Color4 bottomColor) Parameters x0 float y0 float x1 float y1 float topColor Color4 bottomColor Color4 DrawVerticalGradientRect(float, float, float, float, ColorGradient) void DrawVerticalGradientRect(float x0, float y0, float x1, float y1, ColorGradient gradient) Parameters x0 float y0 float x1 float y1 float gradient ColorGradient EndFrame() void EndFrame() FixupWVP(Matrix44) Matrix44 FixupWVP(Matrix44 projection) Parameters projection Matrix44 Returns Matrix44 Flush() void Flush() MeasureTextLine(IFont, string, float, int, int, float) Vector2 MeasureTextLine(IFont font, string text, float fontHeight, int start, int length, float letterSpacing) Parameters font IFont text string fontHeight float start int length int letterSpacing float Returns Vector2 MeasureTextLine(IFont, string, float, float) Vector2 MeasureTextLine(IFont font, string text, float fontHeight, float letterSpacing) Parameters font IFont text string fontHeight float letterSpacing float Returns Vector2 MeasureTextLine(string, float, float) Vector2 MeasureTextLine(string text, float fontHeight, float letterSpacing) Parameters text string fontHeight float letterSpacing float Returns Vector2 SetOrthogonalProjection(Vector2, Vector2) void SetOrthogonalProjection(Vector2 leftTop, Vector2 rightBottom) Parameters leftTop Vector2 rightBottom Vector2 SetOrthogonalProjection(float, float, float, float) void SetOrthogonalProjection(float left, float top, float right, float bottom) Parameters left float top float right float bottom float"
  },
  "api/Lime.ISerializableAsset.html": {
    "href": "api/Lime.ISerializableAsset.html",
    "title": "Interface ISerializableAsset | Citrus Engine",
    "keywords": "Interface ISerializableAsset Namespace Lime Assembly Lime.dll public interface ISerializableAsset Properties SerializationPath [Validation.DefaultCharset] string SerializationPath { get; set; } Property Value string"
  },
  "api/Lime.ISimpleAnimationCurve.html": {
    "href": "api/Lime.ISimpleAnimationCurve.html",
    "title": "Interface ISimpleAnimationCurve | Citrus Engine",
    "keywords": "Interface ISimpleAnimationCurve Namespace Lime Assembly Lime.dll public interface ISimpleAnimationCurve : IAnimationCurve Inherited Members IAnimationCurve.IsEmpty IAnimationCurve.Duration IAnimationCurve.RefCount IAnimationCurve.AddRef() IAnimationCurve.Release() IAnimationCurve.CreateEvaluator() Properties Keys ISimpleKeyframeCollection Keys { get; } Property Value ISimpleKeyframeCollection"
  },
  "api/Lime.ISimpleKeyframe.html": {
    "href": "api/Lime.ISimpleKeyframe.html",
    "title": "Interface ISimpleKeyframe | Citrus Engine",
    "keywords": "Interface ISimpleKeyframe Namespace Lime Assembly Lime.dll public interface ISimpleKeyframe : IKeyframe Properties EasingFunction Mathf.EasingFunction EasingFunction { get; set; } Property Value Mathf.EasingFunction EasingType Mathf.EasingType EasingType { get; set; } Property Value Mathf.EasingType Frame int Frame { get; set; } Property Value int Function SimpleKeyFunction Function { get; set; } Property Value SimpleKeyFunction Params SimpleKeyframeParams Params { get; set; } Property Value SimpleKeyframeParams Value object Value { get; set; } Property Value object"
  },
  "api/Lime.ISimpleKeyframeCollection.html": {
    "href": "api/Lime.ISimpleKeyframeCollection.html",
    "title": "Interface ISimpleKeyframeCollection | Citrus Engine",
    "keywords": "Interface ISimpleKeyframeCollection Namespace Lime Assembly Lime.dll public interface ISimpleKeyframeCollection : ICollection<ISimpleKeyframe>, IEnumerable<ISimpleKeyframe>, IEnumerable Inherited Members ICollection<ISimpleKeyframe>.Add(ISimpleKeyframe) ICollection<ISimpleKeyframe>.Clear() ICollection<ISimpleKeyframe>.Contains(ISimpleKeyframe) ICollection<ISimpleKeyframe>.CopyTo(ISimpleKeyframe[], int) ICollection<ISimpleKeyframe>.Remove(ISimpleKeyframe) ICollection<ISimpleKeyframe>.Count ICollection<ISimpleKeyframe>.IsReadOnly IEnumerable<ISimpleKeyframe>.GetEnumerator() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties this[int] ISimpleKeyframe this[int index] { get; } Parameters index int Property Value ISimpleKeyframe Methods Add(int, object, SimpleKeyFunction) void Add(int frame, object value, SimpleKeyFunction function = SimpleKeyFunction.Linear) Parameters frame int value object function SimpleKeyFunction CreateKeyframe() ISimpleKeyframe CreateKeyframe() Returns ISimpleKeyframe GetByFrame(int) ISimpleKeyframe GetByFrame(int frame) Parameters frame int Returns ISimpleKeyframe"
  },
  "api/Lime.ISoftKeyboard.html": {
    "href": "api/Lime.ISoftKeyboard.html",
    "title": "Interface ISoftKeyboard | Citrus Engine",
    "keywords": "Interface ISoftKeyboard Namespace Lime Assembly Lime.dll Програмная клавиатура (для мобильных устройств) public interface ISoftKeyboard Properties Height Высота клавиатуры. Значение устанавливается, когда клавиатура показана первый раз (до этого 0). Значение может меняться float Height { get; } Property Value float Supported Возвращает true, если програмная клавиатура подерживается текущей платформой bool Supported { get; } Property Value bool Visible Возвращает true, если в данный момент клавиатура видима bool Visible { get; } Property Value bool Methods Show(bool, SoftKeyboardType) Показывает или прячет клавиатуру void Show(bool show, SoftKeyboardType type) Parameters show bool true, чтобы показать; false, чтобы спрятать type SoftKeyboardType Events Hidden Генерируется, когда клавиатура исчезла event Action Hidden Event Type Action Shown Occurs when the keyboard shown on the screen. event Action Shown Event Type Action"
  },
  "api/Lime.ISprite.html": {
    "href": "api/Lime.ISprite.html",
    "title": "Interface ISprite | Citrus Engine",
    "keywords": "Interface ISprite Namespace Lime Assembly Lime.dll public interface ISprite Extension Methods SpriteExtensions.IsTransparentPixel(ISprite, int, int) SpriteExtensions.TransformUVCoordinatesToAtlasSpace(ISprite, Vector2) SpriteExtensions.TryTransformUVCoordinatesToAtlasSpace(ISprite, Vector2, out Vector2) Properties AtlasSize Vector2 AtlasSize { get; } Property Value Vector2 AtlasTexture ITexture AtlasTexture { get; } Property Value ITexture IndexCount int IndexCount { get; } Property Value int IsRectangular bool IsRectangular { get; } Property Value bool Size Vector2 Size { get; } Property Value Vector2 VertexCount int VertexCount { get; } Property Value int Methods GetIndex(int) ushort GetIndex(int index) Parameters index int Returns ushort GetUV(int) Vector2 GetUV(int index) Parameters index int Returns Vector2 GetVertex(int) Vector2 GetVertex(int index) Parameters index int Returns Vector2 ValidateRectangular(Node, string) bool ValidateRectangular(Node node, string useContext = null) Parameters node Node useContext string Returns bool"
  },
  "api/Lime.ITangerinePreviewAnimationListener.html": {
    "href": "api/Lime.ITangerinePreviewAnimationListener.html",
    "title": "Interface ITangerinePreviewAnimationListener | Citrus Engine",
    "keywords": "Interface ITangerinePreviewAnimationListener Namespace Lime Assembly Lime.dll public interface ITangerinePreviewAnimationListener Methods OnStart() void OnStart()"
  },
  "api/Lime.IText.html": {
    "href": "api/Lime.IText.html",
    "title": "Interface IText | Citrus Engine",
    "keywords": "Interface IText Namespace Lime Assembly Lime.dll public interface IText Properties Caret ICaretPosition Caret { get; set; } Property Value ICaretPosition DisplayText string DisplayText { get; } Property Value string HAlignment HAlignment HAlignment { get; set; } Property Value HAlignment Localizable bool Localizable { get; set; } Property Value bool OverflowMode TextOverflowMode OverflowMode { get; set; } Property Value TextOverflowMode Text string Text { get; set; } Property Value string TrimWhitespaces bool TrimWhitespaces { get; set; } Property Value bool VAlignment VAlignment VAlignment { get; set; } Property Value VAlignment WordSplitAllowed bool WordSplitAllowed { get; set; } Property Value bool Methods CanDisplay(char) bool CanDisplay(char ch) Parameters ch char Returns bool GetCharPair(Vector2, out (CharPosition, CharPosition)) bool GetCharPair(Vector2 point, out (CharPosition, CharPosition) pair) Parameters point Vector2 pair (CharPosition, CharPosition) Returns bool Invalidate() void Invalidate() MeasureText() Returns the text's bounding box. Rectangle MeasureText() Returns Rectangle SetLocalizeArguments(params string[]) Arguments that will be passed into Text.Localize(...) void SetLocalizeArguments(params string[] args) Parameters args string[] Submit() void Submit() SyncCaretPosition() void SyncCaretPosition() Events Submitted event Action<string> Submitted Event Type Action<string> TextProcessor event TextProcessorDelegate TextProcessor Event Type TextProcessorDelegate"
  },
  "api/Lime.ITexture.html": {
    "href": "api/Lime.ITexture.html",
    "title": "Interface ITexture | Citrus Engine",
    "keywords": "Interface ITexture Namespace Lime Assembly Lime.dll public interface ITexture : IDisposable Inherited Members IDisposable.Dispose() Properties ImageSize Size ImageSize { get; } Property Value Size IsDisposed bool IsDisposed { get; } Property Value bool IsStubTexture bool IsStubTexture { get; } Property Value bool MemoryUsed int MemoryUsed { get; } Property Value int TextureParams TextureParams TextureParams { get; set; } Property Value TextureParams UnderlyingTexture ITexture UnderlyingTexture { get; } Property Value ITexture Methods GetPixels() Color4[] GetPixels() Returns Color4[] GetPlatformTexture() IPlatformTexture2D GetPlatformTexture() Returns IPlatformTexture2D IsTransparentPixel(int, int) bool IsTransparentPixel(int x, int y) Parameters x int y int Returns bool MaybeDiscardUnderPressure() void MaybeDiscardUnderPressure() RestoreRenderTarget() void RestoreRenderTarget() SetAsRenderTarget() void SetAsRenderTarget()"
  },
  "api/Lime.ITiledImageMaterial.html": {
    "href": "api/Lime.ITiledImageMaterial.html",
    "title": "Interface ITiledImageMaterial | Citrus Engine",
    "keywords": "Interface ITiledImageMaterial Namespace Lime Assembly Lime.dll public interface ITiledImageMaterial : IMaterial Inherited Members IMaterial.Id IMaterial.PassCount IMaterial.Apply(int) IMaterial.Invalidate() Properties TexCoordsLocalToAtlasTransform Vector4 TexCoordsLocalToAtlasTransform { get; set; } Property Value Vector4"
  },
  "api/Lime.ITopology.html": {
    "href": "api/Lime.ITopology.html",
    "title": "Interface ITopology | Citrus Engine",
    "keywords": "Interface ITopology Namespace Lime Assembly Lime.dll public interface ITopology Properties ConstrainedEdges IEnumerable<(int, int)> ConstrainedEdges { get; } Property Value IEnumerable<(int, int)> EdgeHitTestDistance float EdgeHitTestDistance { get; set; } Property Value float Faces IEnumerable<TopologyFace> Faces { get; } Property Value IEnumerable<TopologyFace> FacesWithInfo We need private information in Tangerine in order to show them to end user. In any other application there is no need to know inner information about topology. IEnumerable<(TopologyFace, TopologyFace.FaceInfo)> FacesWithInfo { get; } Property Value IEnumerable<(TopologyFace, TopologyFace.FaceInfo)> VertexHitTestRadius float VertexHitTestRadius { get; set; } Property Value float Vertices List<Vector2> Vertices { get; } Property Value List<Vector2> Methods AddVertex(Vector2) int AddVertex(Vector2 vertex) Parameters vertex Vector2 Returns int ConstructFrom(IEnumerable<Vector2>, List<TopologyEdge>, IReadOnlyList<TopologyFace>) void ConstructFrom(IEnumerable<Vector2> vertices, List<TopologyEdge> constrainedEdges, IReadOnlyList<TopologyFace> faces) Parameters vertices IEnumerable<Vector2> constrainedEdges List<TopologyEdge> faces IReadOnlyList<TopologyFace> HitTest(Vector2, float, float, out TopologyHitTestResult) Carries out a test to determine the most suitable topology primitive for a given position. bool HitTest(Vector2 position, float vertexHitRadius, float edgeHitRadius, out TopologyHitTestResult result) Parameters position Vector2 Position in local space. vertexHitRadius float Admissible radius for vertex testing. edgeHitRadius float Admissible radius for edge testing. result TopologyHitTestResult Primitive and its appropriate info if test was successful, null otherwise. Returns bool Test success verdict. InsertConstrainedEdge(int, int) bool InsertConstrainedEdge(int index0, int index1) Parameters index0 int index1 int Returns bool Locate(Vector2) IHalfEdge Locate(Vector2 point) Parameters point Vector2 Returns IHalfEdge RemoveConstrainedEdge(int, int) void RemoveConstrainedEdge(int index0, int index1) Parameters index0 int index1 int RemoveUnusedVertices() (List<int>, int) RemoveUnusedVertices() Returns (List<int>, int) RemoveVertex(int) void RemoveVertex(int index) Parameters index int Scale(Vector2) void Scale(Vector2 scale) Parameters scale Vector2 TranslateVertex(int, Vector2) bool TranslateVertex(int index, Vector2 positionDelta) Parameters index int positionDelta Vector2 Returns bool Events OnTopologyChanged event Action<ITopology> OnTopologyChanged Event Type Action<ITopology>"
  },
  "api/Lime.ITopologyPrimitive.html": {
    "href": "api/Lime.ITopologyPrimitive.html",
    "title": "Interface ITopologyPrimitive | Citrus Engine",
    "keywords": "Interface ITopologyPrimitive Namespace Lime Assembly Lime.dll public interface ITopologyPrimitive Properties Count int Count { get; } Property Value int this[int] ushort this[int index] { get; } Parameters index int Property Value ushort"
  },
  "api/Lime.ITriggerable.html": {
    "href": "api/Lime.ITriggerable.html",
    "title": "Interface ITriggerable | Citrus Engine",
    "keywords": "Interface ITriggerable Namespace Lime Assembly Lime.dll public interface ITriggerable Methods OnTrigger(string, object, double) void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string value object animationTimeCorrection double"
  },
  "api/Lime.IUpdatableNode.html": {
    "href": "api/Lime.IUpdatableNode.html",
    "title": "Interface IUpdatableNode | Citrus Engine",
    "keywords": "Interface IUpdatableNode Namespace Lime Assembly Lime.dll public interface IUpdatableNode Methods OnUpdate(float) void OnUpdate(float delta) Parameters delta float"
  },
  "api/Lime.IVectorShapeElement.html": {
    "href": "api/Lime.IVectorShapeElement.html",
    "title": "Interface IVectorShapeElement | Citrus Engine",
    "keywords": "Interface IVectorShapeElement Namespace Lime Assembly Lime.dll public interface IVectorShapeElement Methods Draw(Color4) void Draw(Color4 tint) Parameters tint Color4"
  },
  "api/Lime.IWebBrowserImplementation.html": {
    "href": "api/Lime.IWebBrowserImplementation.html",
    "title": "Interface IWebBrowserImplementation | Citrus Engine",
    "keywords": "Interface IWebBrowserImplementation Namespace Lime Assembly Lime.dll public interface IWebBrowserImplementation Properties Url Uri Url { get; set; } Property Value Uri Methods Dispose() void Dispose() OnSizeChanged(Vector2) void OnSizeChanged(Vector2 sizeDelta) Parameters sizeDelta Vector2 Render() void Render() Update(float) void Update(float delta) Parameters delta float"
  },
  "api/Lime.IWindow.html": {
    "href": "api/Lime.IWindow.html",
    "title": "Interface IWindow | Citrus Engine",
    "keywords": "Interface IWindow Namespace Lime Assembly Lime.dll Defines the interface for a window. public interface IWindow Properties Active Indicates whether the window is active. For PC, Mac it means that the window has the input focus. On mobile platforms it indicates that the application is on screen and running. bool Active { get; } Property Value bool AllowDropFiles Gets or sets a value indicating whether this IWindow allow files drop. bool AllowDropFiles { get; set; } Property Value bool AsyncRendering bool AsyncRendering { get; } Property Value bool ClientPosition Gets or sets an upper-left corner of the client area on the desktop. Vector2 ClientPosition { get; set; } Property Value Vector2 ClientSize Gets or sets a client size of this window. Vector2 ClientSize { get; set; } Property Value Vector2 Context IContext Context { get; set; } Property Value IContext Cursor Gets or sets the cursor for this window. MouseCursor Cursor { get; set; } Property Value MouseCursor DecoratedPosition Gets or sets a position of this window on the desktop. Vector2 DecoratedPosition { get; set; } Property Value Vector2 DecoratedSize Gets or sets an decorated size (including title and border) of this window. Vector2 DecoratedSize { get; set; } Property Value Vector2 Display Gets the display device containing the largest portion of this window on desktops or the default screen on devices. IDisplay Display { get; } Property Value IDisplay FPS Gets current FPS for the window. float FPS { get; } Property Value float FixedSize Gets or sets the window behavior to be resizable or not. bool FixedSize { get; set; } Property Value bool Form Form Form { get; } Property Value Form Fullscreen Gets or sets the fullscreen window state. bool Fullscreen { get; set; } Property Value bool Input Gets WindowInput for this window. WindowInput Input { get; } Property Value WindowInput IsRenderingPhase Indicates is this window in rendering phase. bool IsRenderingPhase { get; } Property Value bool MaximumDecoratedSize Vector2 MaximumDecoratedSize { get; set; } Property Value Vector2 MinimumDecoratedSize Vector2 MinimumDecoratedSize { get; set; } Property Value Vector2 PixelScale Gets the scale factor which translates virtual units to the physical pixels. float PixelScale { get; } Property Value float SafeAreaInsets Gets the safe area insets for this window. Rectangle SafeAreaInsets { get; } Property Value Rectangle State Gets or sets the window state. WindowState State { get; set; } Property Value WindowState Tag object Tag { get; set; } Property Value object Title Gets or sets the title of the window. string Title { get; set; } Property Value string UnclampedDelta Milliseconds since last update. float UnclampedDelta { get; } Property Value float UpdateMinimized bool UpdateMinimized { get; set; } Property Value bool VSync bool VSync { get; set; } Property Value bool Visible Gets or sets a value indicates whether the window is displayed. bool Visible { get; set; } Property Value bool Methods Activate() Activates this window. void Activate() CalcFPS() [Obsolete(\"Use FPS property instead\", true)] float CalcFPS() Returns float Center() Centers the game window on the current display. void Center() Close() Closes this window. void Close() DesktopToLocal(Vector2) Converts desktop coordinates into local window coordinates. Vector2 DesktopToLocal(Vector2 desktopPosition) Parameters desktopPosition Vector2 Returns Vector2 DragFiles(string[]) Initiate dragging of files supported by native controls void DragFiles(string[] filenames) Parameters filenames string[] list of paths to files Invalidate() Sets a flag indicating whether the current frame should be rendered. void Invalidate() InvokeOnRendering(Action) Executes an action at the rendering phase. void InvokeOnRendering(Action action) Parameters action Action LocalToDesktop(Vector2) Converts local window coordinates into desktop coordinates. Vector2 LocalToDesktop(Vector2 localPosition) Parameters localPosition Vector2 Returns Vector2 ShowModal() You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The window must be hidden before calling this method. void ShowModal() WaitForRendering() void WaitForRendering() Events Activated Occurs when the Active property of the window becomes true. event Action Activated Event Type Action Closed Occurs after the window has closed. event Action Closed Event Type Action Closing Occurs when the window is about to close. Returns false to cancel closing. event ClosingDelegate Closing Event Type ClosingDelegate Deactivated Occurs when the Active property of the window becomes false. event Action Deactivated Event Type Action FilesDropped Occurs when files are dropped. event Action<IEnumerable<string>> FilesDropped Event Type Action<IEnumerable<string>> Moved Occurs whenever the window is moved. event Action Moved Event Type Action Rendering Occurs when it is time to render a frame. event Action Rendering Event Type Action Resized Occurs whenever the window is resized or a device orientation has changed. event ResizeDelegate Resized Event Type ResizeDelegate SafeAreaInsetsChanged Occurs when safe area insets changed. event SafeAreaInsetsChangedDelegate SafeAreaInsetsChanged Event Type SafeAreaInsetsChangedDelegate Sync Occurs after update and before render. One can use this event to perform thread unsafe operations with the window. event Action Sync Event Type Action UnhandledExceptionOnUpdate Occurs when unhandled exception on update. event Action<Exception> UnhandledExceptionOnUpdate Event Type Action<Exception> Updating Occurs when it is time to update a frame. event UpdatingDelegate Updating Event Type UpdatingDelegate VisibleChanging Occurs when the window is about to show or hide. event VisibleChangingDelegate VisibleChanging Event Type VisibleChangingDelegate"
  },
  "api/Lime.Icon.html": {
    "href": "api/Lime.Icon.html",
    "title": "Class Icon | Citrus Engine",
    "keywords": "Class Icon Namespace Lime Assembly Lime.dll public class Icon Inheritance object Icon Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Icon(Bitmap) public Icon(Bitmap bitmap) Parameters bitmap Bitmap Icon(ITexture) public Icon(ITexture texture) Parameters texture ITexture Properties AsBitmap public Bitmap AsBitmap { get; } Property Value Bitmap AsNativeIcon public object AsNativeIcon { get; } Property Value object AsSprite public ISprite AsSprite { get; } Property Value ISprite AsTexture public ITexture AsTexture { get; } Property Value ITexture"
  },
  "api/Lime.Image.RenderObject.html": {
    "href": "api/Lime.Image.RenderObject.html",
    "title": "Class Image.RenderObject | Citrus Engine",
    "keywords": "Class Image.RenderObject Namespace Lime Assembly Lime.dll protected class Image.RenderObject : RenderObject Inheritance object RenderObject Image.RenderObject Inherited Members RenderObject.Release() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Color public Color4 Color Field Value Color4 LocalToWorldTransform public Matrix32 LocalToWorldTransform Field Value Matrix32 Material public IMaterial Material Field Value IMaterial Position public Vector2 Position Field Value Vector2 Size public Vector2 Size Field Value Vector2 Sprite public ISprite Sprite Field Value ISprite UV0 public Vector2 UV0 Field Value Vector2 UV1 public Vector2 UV1 Field Value Vector2 Methods OnRelease() protected override void OnRelease() Render() public override void Render()"
  },
  "api/Lime.Image.html": {
    "href": "api/Lime.Image.html",
    "title": "Class Image | Citrus Engine",
    "keywords": "Class Image Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Images\", null)] public class Image : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg, IMaterialComponentOwner Inheritance object Node Widget Image Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg IMaterialComponentOwner Derived VideoPlayer Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Image() public Image() Image(ISprite) public Image(ISprite sprite) Parameters sprite ISprite Image(string) public Image(string spritePath) Parameters spritePath string Properties DefaultMaterial public IMaterial DefaultMaterial { get; } Property Value IMaterial Material public IMaterial Material { get; set; } Property Value IMaterial Sprite Gets or sets a texture upon the widget. For widgets which can not have a texture returns null. [YuzuMember] [YuzuSerializeIf(\"IsNotRenderTexture\")] [TangerineKeyframeColor(15)] public override sealed ISprite Sprite { get; set; } Property Value ISprite UV0 [YuzuMember] [TangerineKeyframeColor(16)] public Vector2 UV0 { get; set; } Property Value Vector2 UV1 [YuzuMember] [TangerineKeyframeColor(17)] public Vector2 UV1 { get; set; } Property Value Vector2 Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcContentSize() public override Vector2 CalcContentSize() Returns Vector2 GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject GetRenderObject<TRenderObject>() protected virtual RenderObject GetRenderObject<TRenderObject>() where TRenderObject : Image.RenderObject, new() Returns RenderObject Type Parameters TRenderObject IsNotRenderTexture() public bool IsNotRenderTexture() Returns bool PartialHitTestByContents(ref HitTestArgs) protected override bool PartialHitTestByContents(ref HitTestArgs args) Parameters args HitTestArgs Returns bool"
  },
  "api/Lime.ImageCombiner.html": {
    "href": "api/Lime.ImageCombiner.html",
    "title": "Class ImageCombiner | Citrus Engine",
    "keywords": "Class ImageCombiner Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Images\", null)] public class ImageCombiner : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node ImageCombiner Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ImageCombiner() public ImageCombiner() Properties Blending [YuzuMember] [TangerineKeyframeColor(10)] public Blending Blending { get; set; } Property Value Blending CustomMaterial public IMaterial CustomMaterial { get; set; } Property Value IMaterial Enabled [YuzuMember] [TangerineKeyframeColor(9)] public bool Enabled { get; set; } Property Value bool Operation [YuzuMember] public ImageCombinerOperation Operation { get; set; } Property Value ImageCombinerOperation Shader [YuzuMember] [TangerineKeyframeColor(11)] public ShaderId Shader { get; set; } Property Value ShaderId Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain GetArgs(out IImageCombinerArg, out IImageCombinerArg) public bool GetArgs(out IImageCombinerArg arg1, out IImageCombinerArg arg2) Parameters arg1 IImageCombinerArg arg2 IImageCombinerArg Returns bool GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject"
  },
  "api/Lime.ImageCombinerOperation.html": {
    "href": "api/Lime.ImageCombinerOperation.html",
    "title": "Enum ImageCombinerOperation | Citrus Engine",
    "keywords": "Enum ImageCombinerOperation Namespace Lime Assembly Lime.dll public enum ImageCombinerOperation Fields CutOut = 2 Multiply = 1 None = 0"
  },
  "api/Lime.ImmediateRendererWrapper.html": {
    "href": "api/Lime.ImmediateRendererWrapper.html",
    "title": "Class ImmediateRendererWrapper | Citrus Engine",
    "keywords": "Class ImmediateRendererWrapper Namespace Lime Assembly Lime.dll public class ImmediateRendererWrapper : RendererWrapper Inheritance object RendererWrapper ImmediateRendererWrapper Inherited Members RendererWrapper.Current RendererWrapper.DrawCircle(float, float, float, int, Color4) RendererWrapper.DrawRound(Vector2, float, int, Color4) RendererWrapper.DrawRound(float, float, float, int, Color4) RendererWrapper.DrawTriangleFan(Vertex[], int) RendererWrapper.DrawTriangleFan(ITexture, Vertex[], int) RendererWrapper.DrawRect(float, float, float, float, Color4) RendererWrapper.DrawTextLine(float, float, string, float, Color4, float) RendererWrapper.DrawTextLine(Vector2, string, float, Color4, float) RendererWrapper.DrawTextLine(IFont, Vector2, string, float, Color4, float) RendererWrapper.DrawLine(float, float, float, float, Color4, float, LineCap) RendererWrapper.Clear(Color4) RendererWrapper.Clear(ClearOptions) RendererWrapper.SetOrthogonalProjection(Vector2, Vector2) RendererWrapper.RenderToTexture(RenderChain, ITexture, float, float, Matrix32, bool) RendererWrapper.RenderToTexture(Widget, ITexture, RenderChain, bool) RendererWrapper.GetBitmap(Widget, Action<Bitmap>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static readonly ImmediateRendererWrapper Instance Field Value ImmediateRendererWrapper Properties Blending public override Blending Blending { set; } Property Value Blending ColorWriteEnabled public override ColorWriteMask ColorWriteEnabled { set; } Property Value ColorWriteMask CullMode public override CullMode CullMode { set; } Property Value CullMode DepthState public override DepthState DepthState { set; } Property Value DepthState Projection public override Matrix44 Projection { set; } Property Value Matrix44 ScissorState public override ScissorState ScissorState { set; } Property Value ScissorState Shader public override ShaderId Shader { set; } Property Value ShaderId StencilState public override StencilState StencilState { set; } Property Value StencilState Transform1 public override Matrix32 Transform1 { set; } Property Value Matrix32 Transform2 public override Matrix32 Transform2 { set; } Property Value Matrix32 View public override Matrix44 View { set; } Property Value Matrix44 Viewport public override Viewport Viewport { set; } Property Value Viewport World public override Matrix44 World { set; } Property Value Matrix44 Methods BeginFrame() public override void BeginFrame() Callback(Action) public override void Callback(Action callback) Parameters callback Action Clear(ClearOptions, Color4) public override void Clear(ClearOptions options, Color4 color) Parameters options ClearOptions color Color4 DrawCircle(Vector2, float, int, Color4) public override void DrawCircle(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawDashedLine(Vector2, Vector2, Color4, Vector2) public override void DrawDashedLine(Vector2 a, Vector2 b, Color4 color, Vector2 dashSize) Parameters a Vector2 b Vector2 color Color4 dashSize Vector2 DrawLine(Vector2, Vector2, Color4, float, LineCap) public override void DrawLine(Vector2 a, Vector2 b, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters a Vector2 b Vector2 color Color4 thickness float cap LineCap DrawRect(Vector2, Vector2, Color4) public override void DrawRect(Vector2 a, Vector2 b, Color4 color) Parameters a Vector2 b Vector2 color Color4 DrawRectOutline(Vector2, Vector2, Color4, float) public override void DrawRectOutline(Vector2 a, Vector2 b, Color4 color, float thickness = 1) Parameters a Vector2 b Vector2 color Color4 thickness float DrawRenderChain(RenderChain) public override void DrawRenderChain(RenderChain renderChain) Parameters renderChain RenderChain DrawRenderObjects(RenderObjectList) public override void DrawRenderObjects(RenderObjectList renderObjects) Parameters renderObjects RenderObjectList DrawRound(Vector2, float, int, Color4, Color4) public override void DrawRound(Vector2 center, float radius, int numSegments, Color4 innerColor, Color4 outerColor) Parameters center Vector2 radius float numSegments int innerColor Color4 outerColor Color4 DrawSprite(ISprite, Color4, Vector2, Vector2) public override void DrawSprite(ISprite sprite, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite color Color4 position Vector2 size Vector2 DrawSprite(ISprite, IMaterial, Color4, Vector2, Vector2) public override void DrawSprite(ISprite sprite, IMaterial material, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite material IMaterial color Color4 position Vector2 size Vector2 DrawTextLine(IFont, Vector2, string, Color4, float, int, int, float) public override void DrawTextLine(IFont font, Vector2 position, string text, Color4 color, float fontHeight, int start, int length, float letterSpacing) Parameters font IFont position Vector2 text string color Color4 fontHeight float start int length int letterSpacing float DrawTexture(ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTexture(ITexture, ITexture, IMaterial, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public override void DrawTexture(ITexture texture1, ITexture texture2, IMaterial material, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture material IMaterial color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTriangleFan(ITexture, ITexture, Vertex[], int) public override void DrawTriangleFan(ITexture texture1, ITexture texture2, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture vertices Vertex[] numVertices int EndFrame() public override void EndFrame() Flush() public override void Flush() MultiplyTransform1(Matrix32) public override void MultiplyTransform1(Matrix32 transform) Parameters transform Matrix32 MultiplyTransform2(Matrix32) public override void MultiplyTransform2(Matrix32 transform) Parameters transform Matrix32 PopRenderTarget() public override void PopRenderTarget() PopState() public override void PopState() PushRenderTarget(ITexture) public override void PushRenderTarget(ITexture texture) Parameters texture ITexture PushState(RenderState) public override void PushState(RenderState mask) Parameters mask RenderState SetOrthogonalProjection(float, float, float, float) public override void SetOrthogonalProjection(float left, float top, float right, float bottom) Parameters left float top float right float bottom float"
  },
  "api/Lime.IndexFormat.html": {
    "href": "api/Lime.IndexFormat.html",
    "title": "Enum IndexFormat | Citrus Engine",
    "keywords": "Enum IndexFormat Namespace Lime Assembly Lime.dll public enum IndexFormat Extension Methods GraphicsExtensions.GetElementSize(IndexFormat) IndexFormatExtensions.GetSize(IndexFormat) Fields Index16Bits = 0"
  },
  "api/Lime.IndexFormatExtensions.html": {
    "href": "api/Lime.IndexFormatExtensions.html",
    "title": "Class IndexFormatExtensions | Citrus Engine",
    "keywords": "Class IndexFormatExtensions Namespace Lime Assembly Lime.dll public static class IndexFormatExtensions Inheritance object IndexFormatExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetSize(IndexFormat) public static int GetSize(this IndexFormat format) Parameters format IndexFormat Returns int"
  },
  "api/Lime.Input.InputSimulator.ProcessingPendingInputEventsDelegate.html": {
    "href": "api/Lime.Input.InputSimulator.ProcessingPendingInputEventsDelegate.html",
    "title": "Delegate Input.InputSimulator.ProcessingPendingInputEventsDelegate | Citrus Engine",
    "keywords": "Delegate Input.InputSimulator.ProcessingPendingInputEventsDelegate Namespace Lime Assembly Lime.dll public delegate void Input.InputSimulator.ProcessingPendingInputEventsDelegate()"
  },
  "api/Lime.Input.InputSimulator.html": {
    "href": "api/Lime.Input.InputSimulator.html",
    "title": "Class Input.InputSimulator | Citrus Engine",
    "keywords": "Class Input.InputSimulator Namespace Lime Assembly Lime.dll public class Input.InputSimulator Inheritance object Input.InputSimulator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InputSimulator(Input) public InputSimulator(Input input) Parameters input Input Properties ActiveRunners public int ActiveRunners { get; set; } Property Value int Methods OnBetweenFrames(float) public void OnBetweenFrames(float delta) Parameters delta float OnProcessingPendingInputEvents() public void OnProcessingPendingInputEvents() SetDesktopMousePosition(Vector2) public void SetDesktopMousePosition(Vector2 position) Parameters position Vector2 SetKeyState(Key, bool) public void SetKeyState(Key key, bool value) Parameters key Key value bool SetWindowUnderMouse(IWindow) public void SetWindowUnderMouse(IWindow window) Parameters window IWindow Events ProcessingPendingInputEvents public event Input.InputSimulator.ProcessingPendingInputEventsDelegate ProcessingPendingInputEvents Event Type Input.InputSimulator.ProcessingPendingInputEventsDelegate"
  },
  "api/Lime.Input.html": {
    "href": "api/Lime.Input.html",
    "title": "Class Input | Citrus Engine",
    "keywords": "Class Input Namespace Lime Assembly Lime.dll public class Input Inheritance object Input Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Input() public Input() Fields KeyRepeatDelay public float KeyRepeatDelay Field Value float KeyRepeatInterval public float KeyRepeatInterval Field Value float MaxTouches public const int MaxTouches = 4 Field Value int Simulator public readonly Input.InputSimulator Simulator Field Value Input.InputSimulator Properties Acceleration Gets the current acceleration in g-force units. This vector is specified in the current coordinate space, which takes into account any interface rotations in effect for the device. Therefore, the value of this property may change when the device rotates between portrait and landscape orientations. public Vector3 Acceleration { get; } Property Value Vector3 Changed public bool Changed { get; } Property Value bool DesktopMousePosition The current mouse position in desktop coordinates. (read only) public Vector2 DesktopMousePosition { get; } Property Value Vector2 NativeAcceleration Gets the current acceleration in g-force units. This vector is based on the device in a \"natural\" orientation (portrait-up on iOS and device-specific on Android). The value is not changed when switching between orientations. public Vector3 NativeAcceleration { get; } Property Value Vector3 TextInput public string TextInput { get; } Property Value string WheelScrollAmount Indicates how much the mouse wheel was moved public float WheelScrollAmount { get; } Property Value float Methods ConsumeKey(Key) public void ConsumeKey(Key key) Parameters key Key GetDesktopTouchPosition(int) public Vector2 GetDesktopTouchPosition(int index) Parameters index int Returns Vector2 GetDoubleClickByIndex(int) public static Key GetDoubleClickByIndex(int button) Parameters button int Returns Key GetModifiers() public Modifiers GetModifiers() Returns Modifiers GetMouseButtonByIndex(int) public static Key GetMouseButtonByIndex(int button) Parameters button int Returns Key GetNumTouches() public int GetNumTouches() Returns int GetTouchByIndex(int) public static Key GetTouchByIndex(int index) Parameters index int Returns Key IsKeyPressed(Key) Returns true while the user holds down the key identified by name. Think auto fire. public bool IsKeyPressed(Key key) Parameters key Key Returns bool IsMousePressed() public bool IsMousePressed() Returns bool IsMousePressed(int) public bool IsMousePressed(int button) Parameters button int Returns bool IsTouching(int) public bool IsTouching(int index) Parameters index int Returns bool WasDoubleClickPressed(int) public bool WasDoubleClickPressed(int buttonIndex) Parameters buttonIndex int Returns bool WasKeyPressed(Key) Returns true during the frame the user starts pressing down the key identified by name. public bool WasKeyPressed(Key key) Parameters key Key Returns bool WasKeyReleased(Key) Returns true during the frame the user releases the key identified by name. public bool WasKeyReleased(Key key) Parameters key Key Returns bool WasKeyRepeated(Key) Returns true during the frame the user starts pressing down the key identified by name or key event was repeated. public bool WasKeyRepeated(Key key) Parameters key Key Returns bool WasMousePressed() public bool WasMousePressed() Returns bool WasMousePressed(int) public bool WasMousePressed(int button) Parameters button int Returns bool WasMouseReleased() public bool WasMouseReleased() Returns bool WasMouseReleased(int) public bool WasMouseReleased(int button) Parameters button int Returns bool WasTouchBegan(int) public bool WasTouchBegan(int index) Parameters index int Returns bool WasTouchEnded(int) public bool WasTouchEnded(int index) Parameters index int Returns bool"
  },
  "api/Lime.IntRectangle.html": {
    "href": "api/Lime.IntRectangle.html",
    "title": "Struct IntRectangle | Citrus Engine",
    "keywords": "Struct IntRectangle Namespace Lime Assembly Lime.dll Representation of integer 2D rectangles. public struct IntRectangle : IEquatable<IntRectangle> Implements IEquatable<IntRectangle> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors IntRectangle(IntVector2, IntVector2) public IntRectangle(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 IntRectangle(int, int, int, int) public IntRectangle(int left, int top, int right, int bottom) Parameters left int top int right int bottom int Fields A Left-top corner of this rectangle. [YuzuMember(\"0\")] public IntVector2 A Field Value IntVector2 B Right-bottom corner of this rectangle. [YuzuMember(\"1\")] public IntVector2 B Field Value IntVector2 Remarks Rectangle doesn't contain this point. Empty Returns a rectangle with both corners in 0, 0. public static readonly IntRectangle Empty Field Value IntRectangle Properties Bottom public int Bottom { get; set; } Property Value int Center public IntVector2 Center { get; } Property Value IntVector2 Height public int Height { get; set; } Property Value int this[int] public int this[int component] { get; set; } Parameters component int Property Value int Left public int Left { get; set; } Property Value int Normalized Returns this rectangle with swapped coordinates of borders if width or height is negative. public IntRectangle Normalized { get; } Property Value IntRectangle Remarks Width or height can be negative if coordinates of borders are mixed up. This property returns new IntRectangle with width and height that are guaranteed to be positive. Right public int Right { get; set; } Property Value int Size public IntVector2 Size { get; } Property Value IntVector2 Top public int Top { get; set; } Property Value int Width public int Width { get; set; } Property Value int Methods Contains(IntVector2) public bool Contains(IntVector2 value) Parameters value IntVector2 Returns bool Equals(IntRectangle) Indicates whether the current object is equal to another object of the same type. public bool Equals(IntRectangle other) Parameters other IntRectangle An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Intersect(IntRectangle, IntRectangle) Creates a new IntRectangle that contains overlapping region of two other rectangles. public static IntRectangle Intersect(IntRectangle value1, IntRectangle value2) Parameters value1 IntRectangle value2 IntRectangle Returns IntRectangle OffsetBy(IntVector2) Creates a new IntRectangle that has coordinates of this rectangle shifted by specified value. public IntRectangle OffsetBy(IntVector2 value) Parameters value IntVector2 Returns IntRectangle ToString() Returns the string representation of this IntRectangle in the format: \"A.X, A.Y, B.X, B.Y\". public override string ToString() Returns string Operators operator ==(IntRectangle, IntRectangle) public static bool operator ==(IntRectangle lhs, IntRectangle rhs) Parameters lhs IntRectangle rhs IntRectangle Returns bool explicit operator Rectangle(IntRectangle) public static explicit operator Rectangle(IntRectangle value) Parameters value IntRectangle Returns Rectangle explicit operator WindowRect(IntRectangle) public static explicit operator WindowRect(IntRectangle value) Parameters value IntRectangle Returns WindowRect operator !=(IntRectangle, IntRectangle) public static bool operator !=(IntRectangle lhs, IntRectangle rhs) Parameters lhs IntRectangle rhs IntRectangle Returns bool"
  },
  "api/Lime.IntSimpleAnimationCurve.html": {
    "href": "api/Lime.IntSimpleAnimationCurve.html",
    "title": "Class IntSimpleAnimationCurve | Citrus Engine",
    "keywords": "Class IntSimpleAnimationCurve Namespace Lime Assembly Lime.dll public class IntSimpleAnimationCurve : SimpleAnimationCurve<int>, IAnimationCurve<int>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<int> Inheritance object SimpleAnimationCurve<int> IntSimpleAnimationCurve Implements IAnimationCurve<int> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<int> Inherited Members SimpleAnimationCurve<int>.Keys SimpleAnimationCurve<int>.IsEmpty SimpleAnimationCurve<int>.Duration SimpleAnimationCurve<int>.RefCount SimpleAnimationCurve<int>.AddRef() SimpleAnimationCurve<int>.Release() SimpleAnimationCurve<int>.CreateEvaluator() SimpleAnimationCurve<int>.Create(IEnumerable<SimpleKeyframe<int>>) SimpleAnimationCurve<int>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(int, int, float) protected override int InterpolateLinear(int value1, int value2, float amount) Parameters value1 int value2 int amount float Returns int InterpolateSplined(int, int, int, int, float) protected override int InterpolateSplined(int value1, int value2, int value3, int value4, float amount) Parameters value1 int value2 int value3 int value4 int amount float Returns int"
  },
  "api/Lime.IntVector2.html": {
    "href": "api/Lime.IntVector2.html",
    "title": "Struct IntVector2 | Citrus Engine",
    "keywords": "Struct IntVector2 Namespace Lime Assembly Lime.dll Representation of integer 2D vectors and points. public struct IntVector2 : IEquatable<IntVector2> Implements IEquatable<IntVector2> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors IntVector2(int) public IntVector2(int value) Parameters value int IntVector2(int, int) public IntVector2(int x, int y) Parameters x int y int Fields Down Returns a vector with components 0, 1. public static readonly IntVector2 Down Field Value IntVector2 Left Returns a vector with components -1, 0. public static readonly IntVector2 Left Field Value IntVector2 One Returns a vector with components 1, 1. public static readonly IntVector2 One Field Value IntVector2 Right Returns a vector with components 1, 0. public static readonly IntVector2 Right Field Value IntVector2 Up Returns a vector with components 0, -1. public static readonly IntVector2 Up Field Value IntVector2 X [YuzuMember(\"0\")] public int X Field Value int Y [YuzuMember(\"1\")] public int Y Field Value int Zero Returns a vector with components 0, 0. public static readonly IntVector2 Zero Field Value IntVector2 Properties this[int] Gets or sets the vector component by its index. public int this[int component] { get; set; } Parameters component int Property Value int Methods Clamp(IntVector2, IntVector2, IntVector2) public static IntVector2 Clamp(IntVector2 value, IntVector2 a, IntVector2 b) Parameters value IntVector2 a IntVector2 b IntVector2 Returns IntVector2 Equals(IntVector2) Indicates whether the current object is equal to another object of the same type. public bool Equals(IntVector2 other) Parameters other IntVector2 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Max(IntVector2, IntVector2) public static IntVector2 Max(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 Min(IntVector2, IntVector2) public static IntVector2 Min(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 ToString() Returns the string representation of this IntVector2 in the format: \"X, Y\". public override string ToString() Returns string ToVector2() public Vector2 ToVector2() Returns Vector2 Operators operator +(IntVector2, IntVector2) public static IntVector2 operator +(IntVector2 lhs, IntVector2 rhs) Parameters lhs IntVector2 rhs IntVector2 Returns IntVector2 operator /(IntVector2, IntVector2) public static IntVector2 operator /(IntVector2 lhs, IntVector2 rhs) Parameters lhs IntVector2 rhs IntVector2 Returns IntVector2 operator /(IntVector2, int) public static IntVector2 operator /(IntVector2 lhs, int rhs) Parameters lhs IntVector2 rhs int Returns IntVector2 operator ==(IntVector2, IntVector2) public static bool operator ==(IntVector2 lhs, IntVector2 rhs) Parameters lhs IntVector2 rhs IntVector2 Returns bool explicit operator Size(IntVector2) public static explicit operator Size(IntVector2 value) Parameters value IntVector2 Returns Size explicit operator Vector2(IntVector2) public static explicit operator Vector2(IntVector2 value) Parameters value IntVector2 Returns Vector2 operator !=(IntVector2, IntVector2) public static bool operator !=(IntVector2 lhs, IntVector2 rhs) Parameters lhs IntVector2 rhs IntVector2 Returns bool operator *(IntVector2, IntVector2) public static IntVector2 operator *(IntVector2 lhs, IntVector2 rhs) Parameters lhs IntVector2 rhs IntVector2 Returns IntVector2 operator *(IntVector2, int) public static IntVector2 operator *(IntVector2 lhs, int rhs) Parameters lhs IntVector2 rhs int Returns IntVector2 operator *(int, IntVector2) public static IntVector2 operator *(int lhs, IntVector2 rhs) Parameters lhs int rhs IntVector2 Returns IntVector2 operator -(IntVector2, IntVector2) public static IntVector2 operator -(IntVector2 lhs, IntVector2 rhs) Parameters lhs IntVector2 rhs IntVector2 Returns IntVector2 operator -(IntVector2) public static IntVector2 operator -(IntVector2 value) Parameters value IntVector2 Returns IntVector2"
  },
  "api/Lime.InvalidBundleVersionException.html": {
    "href": "api/Lime.InvalidBundleVersionException.html",
    "title": "Class InvalidBundleVersionException | Citrus Engine",
    "keywords": "Class InvalidBundleVersionException Namespace Lime Assembly Lime.dll public class InvalidBundleVersionException : LimeException, ISerializable Inheritance object Exception LimeException InvalidBundleVersionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidBundleVersionException(string) public InvalidBundleVersionException(string message) Parameters message string"
  },
  "api/Lime.InvalidableWindowWidget.html": {
    "href": "api/Lime.InvalidableWindowWidget.html",
    "title": "Class InvalidableWindowWidget | Citrus Engine",
    "keywords": "Class InvalidableWindowWidget Namespace Lime Assembly Lime.dll public class InvalidableWindowWidget : DefaultWindowWidget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget WindowWidget DefaultWindowWidget InvalidableWindowWidget Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedInvalidableWindowWidget Inherited Members DefaultWindowWidget.LayoutBasedWindowSize WindowWidget.renderChain WindowWidget.Window WindowWidget.WidgetContext WindowWidget.CreateManager(LayoutManager, WidgetContext) WindowWidget.PrepareToRender() WindowWidget.Update(float) WindowWidget.RenderAll() WindowWidget.GetViewport() WindowWidget.GetProjection() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors InvalidableWindowWidget(IWindow) public InvalidableWindowWidget(IWindow window) Parameters window IWindow Properties RedrawMarkVisible public bool RedrawMarkVisible { get; set; } Property Value bool Methods ContinuousRendering() protected override bool ContinuousRendering() Returns bool Render(RenderObjectList) protected override void Render(RenderObjectList renderObjects) Parameters renderObjects RenderObjectList"
  },
  "api/Lime.KerningPair.html": {
    "href": "api/Lime.KerningPair.html",
    "title": "Struct KerningPair | Citrus Engine",
    "keywords": "Struct KerningPair Namespace Lime Assembly Lime.dll public struct KerningPair Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Char [YuzuMember(\"0\")] public char Char Field Value char Kerning [YuzuMember(\"1\")] public float Kerning Field Value float"
  },
  "api/Lime.Key.html": {
    "href": "api/Lime.Key.html",
    "title": "Struct Key | Citrus Engine",
    "keywords": "Struct Key Namespace Lime Assembly Lime.dll public struct Key Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Key(int) public Key(int code) Parameters code int Fields A public static readonly Key A Field Value Key Alt public static readonly Key Alt Field Value Key B public static readonly Key B Field Value Key Back public static readonly Key Back Field Value Key BackSlash public static readonly Key BackSlash Field Value Key BackSpace public static readonly Key BackSpace Field Value Key C public static readonly Key C Field Value Key CapsLock public static readonly Key CapsLock Field Value Key Code public readonly int Code Field Value int Comma public static readonly Key Comma Field Value Key Control public static readonly Key Control Field Value Key D public static readonly Key D Field Value Key Delete public static readonly Key Delete Field Value Key DismissSoftKeyboard public static readonly Key DismissSoftKeyboard Field Value Key Down public static readonly Key Down Field Value Key E public static readonly Key E Field Value Key End public static readonly Key End Field Value Key Enter public static readonly Key Enter Field Value Key EqualsSign public static readonly Key EqualsSign Field Value Key Escape public static readonly Key Escape Field Value Key F public static readonly Key F Field Value Key F1 public static readonly Key F1 Field Value Key F10 public static readonly Key F10 Field Value Key F11 public static readonly Key F11 Field Value Key F12 public static readonly Key F12 Field Value Key F2 public static readonly Key F2 Field Value Key F3 public static readonly Key F3 Field Value Key F4 public static readonly Key F4 Field Value Key F5 public static readonly Key F5 Field Value Key F6 public static readonly Key F6 Field Value Key F7 public static readonly Key F7 Field Value Key F8 public static readonly Key F8 Field Value Key F9 public static readonly Key F9 Field Value Key G public static readonly Key G Field Value Key H public static readonly Key H Field Value Key Home public static readonly Key Home Field Value Key I public static readonly Key I Field Value Key Insert public static readonly Key Insert Field Value Key J public static readonly Key J Field Value Key K public static readonly Key K Field Value Key Keypad0 public static readonly Key Keypad0 Field Value Key Keypad1 public static readonly Key Keypad1 Field Value Key Keypad2 public static readonly Key Keypad2 Field Value Key Keypad3 public static readonly Key Keypad3 Field Value Key Keypad4 public static readonly Key Keypad4 Field Value Key Keypad5 public static readonly Key Keypad5 Field Value Key Keypad6 public static readonly Key Keypad6 Field Value Key Keypad7 public static readonly Key Keypad7 Field Value Key Keypad8 public static readonly Key Keypad8 Field Value Key Keypad9 public static readonly Key Keypad9 Field Value Key KeypadDecimal public static readonly Key KeypadDecimal Field Value Key KeypadDivide public static readonly Key KeypadDivide Field Value Key KeypadMinus public static readonly Key KeypadMinus Field Value Key KeypadMultiply public static readonly Key KeypadMultiply Field Value Key KeypadPlus public static readonly Key KeypadPlus Field Value Key L public static readonly Key L Field Value Key LBracket public static readonly Key LBracket Field Value Key LastNormal public static readonly Key LastNormal Field Value Key Left public static readonly Key Left Field Value Key M public static readonly Key M Field Value Key MaxCount public const int MaxCount = 512 Field Value int Menu public static readonly Key Menu Field Value Key Minus public static readonly Key Minus Field Value Key Mouse0 Left mouse button public static readonly Key Mouse0 Field Value Key Mouse0DoubleClick The double click with the left mouse button. public static readonly Key Mouse0DoubleClick Field Value Key Mouse1 Right mouse button public static readonly Key Mouse1 Field Value Key Mouse1DoubleClick The double click with the right mouse button. public static readonly Key Mouse1DoubleClick Field Value Key Mouse2 Middle mouse button public static readonly Key Mouse2 Field Value Key MouseBack public static readonly Key MouseBack Field Value Key MouseForward public static readonly Key MouseForward Field Value Key MouseWheelDown public static readonly Key MouseWheelDown Field Value Key MouseWheelUp public static readonly Key MouseWheelUp Field Value Key N public static readonly Key N Field Value Key Number0 public static readonly Key Number0 Field Value Key Number1 public static readonly Key Number1 Field Value Key Number2 public static readonly Key Number2 Field Value Key Number3 public static readonly Key Number3 Field Value Key Number4 public static readonly Key Number4 Field Value Key Number5 public static readonly Key Number5 Field Value Key Number6 public static readonly Key Number6 Field Value Key Number7 public static readonly Key Number7 Field Value Key Number8 public static readonly Key Number8 Field Value Key Number9 public static readonly Key Number9 Field Value Key O public static readonly Key O Field Value Key P public static readonly Key P Field Value Key PageDown public static readonly Key PageDown Field Value Key PageUp public static readonly Key PageUp Field Value Key Pause public static readonly Key Pause Field Value Key Period public static readonly Key Period Field Value Key PrintScreen public static readonly Key PrintScreen Field Value Key Q public static readonly Key Q Field Value Key Quote public static readonly Key Quote Field Value Key R public static readonly Key R Field Value Key RBracket public static readonly Key RBracket Field Value Key Right public static readonly Key Right Field Value Key S public static readonly Key S Field Value Key ScrollLock public static readonly Key ScrollLock Field Value Key Semicolon public static readonly Key Semicolon Field Value Key Shift public static readonly Key Shift Field Value Key ShortcutMap public static readonly Dictionary<Shortcut, Key> ShortcutMap Field Value Dictionary<Shortcut, Key> Slash public static readonly Key Slash Field Value Key Space public static readonly Key Space Field Value Key T public static readonly Key T Field Value Key Tab public static readonly Key Tab Field Value Key Tilde public static readonly Key Tilde Field Value Key Touch0 public static readonly Key Touch0 Field Value Key Touch1 public static readonly Key Touch1 Field Value Key Touch2 public static readonly Key Touch2 Field Value Key Touch3 public static readonly Key Touch3 Field Value Key U public static readonly Key U Field Value Key Unknown public static readonly Key Unknown Field Value Key Up public static readonly Key Up Field Value Key V public static readonly Key V Field Value Key W public static readonly Key W Field Value Key Win public static readonly Key Win Field Value Key X public static readonly Key X Field Value Key Y public static readonly Key Y Field Value Key Z public static readonly Key Z Field Value Key Properties Count public static int Count { get; } Property Value int Methods AddAlias(Modifiers, Key) public void AddAlias(Modifiers modifiers, Key main) Parameters modifiers Modifiers main Key AddAlias(Shortcut) public void AddAlias(Shortcut shortcut) Parameters shortcut Shortcut Enumerate() public static IEnumerable<Key> Enumerate() Returns IEnumerable<Key> Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetByName(string) public static Key GetByName(string name) Parameters name string Returns Key GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IsAlphanumeric() public bool IsAlphanumeric() Returns bool IsDigit() public bool IsDigit() Returns bool IsDoubleClickKey() public bool IsDoubleClickKey() Returns bool IsFunctional() public bool IsFunctional() Returns bool IsLetter() public bool IsLetter() Returns bool IsModifier() public bool IsModifier() Returns bool IsMouseKey() public bool IsMouseKey() Returns bool IsPrintable() public bool IsPrintable() Returns bool IsTextEditing() public bool IsTextEditing() Returns bool IsTextNavigation() public bool IsTextNavigation() Returns bool MapShortcut(Key) public static Key MapShortcut(Key main) Parameters main Key Returns Key MapShortcut(Modifiers, Key) public static Key MapShortcut(Modifiers modifiers, Key main) Parameters modifiers Modifiers main Key Returns Key MapShortcut(Shortcut) public static Key MapShortcut(Shortcut shortcut) Parameters shortcut Shortcut Returns Key New() public static Key New() Returns Key ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Key, Key) public static bool operator ==(Key lhs, Key rhs) Parameters lhs Key rhs Key Returns bool operator >(Key, Key) public static bool operator >(Key lhs, Key rhs) Parameters lhs Key rhs Key Returns bool operator >=(Key, Key) public static bool operator >=(Key lhs, Key rhs) Parameters lhs Key rhs Key Returns bool implicit operator int(Key) public static implicit operator int(Key key) Parameters key Key Returns int implicit operator Key(int) public static implicit operator Key(int code) Parameters code int Returns Key operator !=(Key, Key) public static bool operator !=(Key lhs, Key rhs) Parameters lhs Key rhs Key Returns bool operator <(Key, Key) public static bool operator <(Key lhs, Key rhs) Parameters lhs Key rhs Key Returns bool operator <=(Key, Key) public static bool operator <=(Key lhs, Key rhs) Parameters lhs Key rhs Key Returns bool"
  },
  "api/Lime.KeyboardFocusScope.Direction.html": {
    "href": "api/Lime.KeyboardFocusScope.Direction.html",
    "title": "Enum KeyboardFocusScope.Direction | Citrus Engine",
    "keywords": "Enum KeyboardFocusScope.Direction Namespace Lime Assembly Lime.dll public enum KeyboardFocusScope.Direction Fields Backward = -1 Forward = 1"
  },
  "api/Lime.KeyboardFocusScope.html": {
    "href": "api/Lime.KeyboardFocusScope.html",
    "title": "Class KeyboardFocusScope | Citrus Engine",
    "keywords": "Class KeyboardFocusScope Namespace Lime Assembly Lime.dll Switches keyboard focus with Tab/Shift+Tab and makes the widget focused by mouse click. public class KeyboardFocusScope Inheritance object KeyboardFocusScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeyboardFocusScope(Widget) public KeyboardFocusScope(Widget widget) Parameters widget Widget Fields FocusNext public readonly List<Key> FocusNext Field Value List<Key> FocusPrevious public readonly List<Key> FocusPrevious Field Value List<Key> Widget public readonly Widget Widget Field Value Widget Properties FocusOnMousePress public bool FocusOnMousePress { get; set; } Property Value bool LastDirection public KeyboardFocusScope.Direction LastDirection { get; } Property Value KeyboardFocusScope.Direction Methods AdvanceFocus(Direction) public void AdvanceFocus(KeyboardFocusScope.Direction direction) Parameters direction KeyboardFocusScope.Direction GetEnclosingScope(Widget) public static KeyboardFocusScope GetEnclosingScope(Widget widget) Parameters widget Widget Returns KeyboardFocusScope GetFirstFocusable() public Widget GetFirstFocusable() Returns Widget SetDefaultFocus() public void SetDefaultFocus()"
  },
  "api/Lime.LambdaEqualityComparer-1.html": {
    "href": "api/Lime.LambdaEqualityComparer-1.html",
    "title": "Class LambdaEqualityComparer<T> | Citrus Engine",
    "keywords": "Class LambdaEqualityComparer<T> Namespace Lime Assembly Lime.dll public class LambdaEqualityComparer<T> : IEqualityComparer<T> Type Parameters T Inheritance object LambdaEqualityComparer<T> Implements IEqualityComparer<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LambdaEqualityComparer(Func<T, T, bool>) public LambdaEqualityComparer(Func<T, T, bool> lambdaComparer) Parameters lambdaComparer Func<T, T, bool> LambdaEqualityComparer(Func<T, T, bool>, Func<T, int>) public LambdaEqualityComparer(Func<T, T, bool> lambdaComparer, Func<T, int> lambdaHash) Parameters lambdaComparer Func<T, T, bool> lambdaHash Func<T, int> Methods Equals(T, T) Determines whether the specified objects are equal. public bool Equals(T x, T y) Parameters x T The first object of type T to compare. y T The second object of type T to compare. Returns bool true if the specified objects are equal; otherwise, false. GetHashCode(T) Returns a hash code for the specified object. public int GetHashCode(T obj) Parameters obj T The object for which a hash code is to be returned. Returns int A hash code for the specified object. Exceptions ArgumentNullException The type of obj is a reference type and obj is null."
  },
  "api/Lime.LateTasksBehavior.html": {
    "href": "api/Lime.LateTasksBehavior.html",
    "title": "Class LateTasksBehavior | Citrus Engine",
    "keywords": "Class LateTasksBehavior Namespace Lime Assembly Lime.dll public class LateTasksBehavior : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior LateTasksBehavior Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.Update(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Order public override int Order { get; } Property Value int Tasks public TaskList Tasks { get; } Property Value TaskList Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public override void Dispose() LateUpdate(float) public override void LateUpdate(float delta) Parameters delta float OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node"
  },
  "api/Lime.LateUpdateStage.html": {
    "href": "api/Lime.LateUpdateStage.html",
    "title": "Class LateUpdateStage | Citrus Engine",
    "keywords": "Class LateUpdateStage Namespace Lime Assembly Lime.dll Identifier for late update stage. public class LateUpdateStage Inheritance object LateUpdateStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.LayerMetadata.LayerVersion.html": {
    "href": "api/Lime.LayerMetadata.LayerVersion.html",
    "title": "Class LayerMetadata.LayerVersion | Citrus Engine",
    "keywords": "Class LayerMetadata.LayerVersion Namespace Lime Assembly Lime.dll Data structure for compact serialization of layer-version pairs. public class LayerMetadata.LayerVersion Inheritance object LayerMetadata.LayerVersion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LayerVersion() Initializes a new instance of the LayerMetadata.LayerVersion class. public LayerVersion() Fields Layer Layer identifier. [YuzuRequired(\"0\")] public string Layer Field Value string Version Layer version. [YuzuRequired(\"1\")] public int Version Field Value int Methods Deconstruct(out string, out int) public void Deconstruct(out string layer, out int version) Parameters layer string version int Operators implicit operator LayerVersion((string Layer, int Version)) public static implicit operator LayerMetadata.LayerVersion((string Layer, int Version) layers) Parameters layers (string Layer, int Version) Returns LayerMetadata.LayerVersion"
  },
  "api/Lime.LayerMetadata.html": {
    "href": "api/Lime.LayerMetadata.html",
    "title": "Class LayerMetadata | Citrus Engine",
    "keywords": "Class LayerMetadata Namespace Lime Assembly Lime.dll LayerMetadata stores all layer-version pairs of a document. For example when scene is serialized it may contain Lime.Node derived types from Lime.* as well as application's types derived from Lime.Node. Thus such document's metadata should contain layer metadata for Citrus e.g. (layer: \"citrus\", version: 29) as well as layer metadata for an application (e.g. layer: \"game\", version: 17). public sealed class LayerMetadata : Metadata Inheritance object Metadata LayerMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors LayerMetadata() Initializes a new instance of the LayerMetadata class. public LayerMetadata() LayerMetadata(IEnumerable<(string Layer, int Version)>) Initializes a new instance of the LayerMetadata class. Creates layer metadata from provided enumeration of layer-version tuples. public LayerMetadata(IEnumerable<(string Layer, int Version)> layers) Parameters layers IEnumerable<(string Layer, int Version)> Enumerable of (layer, version) tuples. Properties this[string] public int this[string layer] { get; set; } Parameters layer string Property Value int Layers [YuzuMember] public List<LayerMetadata.LayerVersion> Layers { get; } Property Value List<LayerMetadata.LayerVersion> Methods GetEnumerator() public List<LayerMetadata.LayerVersion>.Enumerator GetEnumerator() Returns List<LayerMetadata.LayerVersion>.Enumerator TryGetLayerVersion(string, out int) public bool TryGetLayerVersion(string layer, out int version) Parameters layer string version int Returns bool"
  },
  "api/Lime.Layout.html": {
    "href": "api/Lime.Layout.html",
    "title": "Class Layout | Citrus Engine",
    "keywords": "Class Layout Namespace Lime Assembly Lime.dll [AllowedComponentOwnerTypes(new Type[] { typeof(Widget) })] public class Layout : NodeComponent, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout Implements IDisposable IAnimable ILayout Derived FlowLayout LinearLayout ScrollView.Layout StackLayout TableLayout Inherited Members NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors Layout() public Layout() Properties Alignment public Alignment Alignment { get; set; } Property Value Alignment ArrangementValid public bool ArrangementValid { get; protected set; } Property Value bool ColumnAlignment [YuzuMember] public VAlignment ColumnAlignment { get; set; } Property Value VAlignment ConstraintsValid public bool ConstraintsValid { get; protected set; } Property Value bool DebugRectangles public List<Rectangle> DebugRectangles { get; protected set; } Property Value List<Rectangle> IgnoreHidden [YuzuMember] public bool IgnoreHidden { get; set; } Property Value bool Owner public Widget Owner { get; set; } Property Value Widget RowAlignment [YuzuMember] public HAlignment RowAlignment { get; set; } Property Value HAlignment Methods ArrangeChildren() public virtual void ArrangeChildren() CalcAlignmentOffsetAndStride(HAlignment, float, int) protected (float offset, float stride) CalcAlignmentOffsetAndStride(HAlignment rowAlignment, float availableSpace, int widgetCount) Parameters rowAlignment HAlignment availableSpace float widgetCount int Returns (float offset, float stride) CalcAlignmentOffsetAndStride(VAlignment, float, int) protected (float offset, float stride) CalcAlignmentOffsetAndStride(VAlignment columnAlignment, float availableSpace, int widgetCount) Parameters columnAlignment VAlignment availableSpace float widgetCount int Returns (float offset, float stride) GetChildren() protected List<Widget> GetChildren() Returns List<Widget> InvalidateArrangement() public void InvalidateArrangement() InvalidateConstraintsAndArrangement() public void InvalidateConstraintsAndArrangement() MeasureSizeConstraints() public virtual void MeasureSizeConstraints() OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node OnSizeChanged(Widget, Vector2) public virtual void OnSizeChanged(Widget widget, Vector2 sizeDelta) Parameters widget Widget sizeDelta Vector2"
  },
  "api/Lime.LayoutConstraints.html": {
    "href": "api/Lime.LayoutConstraints.html",
    "title": "Class LayoutConstraints | Citrus Engine",
    "keywords": "Class LayoutConstraints Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Layout/Layout Constraints\")] [AllowedComponentOwnerTypes(new Type[] { typeof(Widget) })] public class LayoutConstraints : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent LayoutConstraints Implements IDisposable IAnimable Inherited Members NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors LayoutConstraints() public LayoutConstraints() Properties AspectRatio [YuzuMember] [TangerineTooltip(\"AspectRatio = Width / Height\")] public float? AspectRatio { get; set; } Property Value float? Ignore [YuzuMember] public bool Ignore { get; set; } Property Value bool MaxSize [Validation.Range(0, Infinity)] [YuzuMember] public Vector2 MaxSize { get; set; } Property Value Vector2 MinSize [Validation.Range(0, 3.4028235E+38)] [YuzuMember] public Vector2 MinSize { get; set; } Property Value Vector2 Owner public Widget Owner { get; set; } Property Value Widget Stretch [Validation.Range(0, Infinity)] [YuzuMember] public float Stretch { get; set; } Property Value float"
  },
  "api/Lime.LayoutDebugComponent.html": {
    "href": "api/Lime.LayoutDebugComponent.html",
    "title": "Class LayoutDebugComponent | Citrus Engine",
    "keywords": "Class LayoutDebugComponent Namespace Lime Assembly Lime.dll public class LayoutDebugComponent : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior LayoutDebugComponent Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.Order NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.LateUpdate(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Depth [YuzuMember] public int? Depth { get; set; } Property Value int? Thickness [YuzuMember] public float Thickness { get; set; } Property Value float Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.LayoutDebugPresenter.html": {
    "href": "api/Lime.LayoutDebugPresenter.html",
    "title": "Class LayoutDebugPresenter | Citrus Engine",
    "keywords": "Class LayoutDebugPresenter Namespace Lime Assembly Lime.dll Displays Layout's DebugRectangles. public class LayoutDebugPresenter : IPresenter Inheritance object LayoutDebugPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LayoutDebugPresenter(float, int) Displays Layout's DebugRectangles. public LayoutDebugPresenter(float thickness = 1, int depth = 2147483647) Parameters thickness float Rectangle line thickness. depth int Fields Depth public int Depth Field Value int Thickness public float Thickness Field Value float Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.LayoutDirection.html": {
    "href": "api/Lime.LayoutDirection.html",
    "title": "Enum LayoutDirection | Citrus Engine",
    "keywords": "Enum LayoutDirection Namespace Lime Assembly Lime.dll public enum LayoutDirection Fields LeftToRight = 0 TopToBottom = 1"
  },
  "api/Lime.LayoutManager.html": {
    "href": "api/Lime.LayoutManager.html",
    "title": "Class LayoutManager | Citrus Engine",
    "keywords": "Class LayoutManager Namespace Lime Assembly Lime.dll public class LayoutManager Inheritance object LayoutManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddToArrangeQueue(ILayout) public void AddToArrangeQueue(ILayout layout) Parameters layout ILayout AddToMeasureQueue(ILayout) public void AddToMeasureQueue(ILayout layout) Parameters layout ILayout Layout() public void Layout()"
  },
  "api/Lime.LayoutProcessor.html": {
    "href": "api/Lime.LayoutProcessor.html",
    "title": "Class LayoutProcessor | Citrus Engine",
    "keywords": "Class LayoutProcessor Namespace Lime Assembly Lime.dll public class LayoutProcessor : NodeProcessor Inheritance object NodeProcessor LayoutProcessor Inherited Members NodeProcessor.Manager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.LegacyBehaviorContainer.html": {
    "href": "api/Lime.LegacyBehaviorContainer.html",
    "title": "Class LegacyBehaviorContainer | Citrus Engine",
    "keywords": "Class LegacyBehaviorContainer Namespace Lime Assembly Lime.dll public abstract class LegacyBehaviorContainer : BehaviorComponent, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent LegacyBehaviorContainer Implements IDisposable IAnimable Derived LegacyEarlyBehaviorContainer LegacyLateBehaviorContainer Inherited Members BehaviorComponent.Suspended BehaviorComponent.Stop(Node) BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties IsEmpty public bool IsEmpty { get; } Property Value bool Methods OnOwnerFrozenChanged() Occurs when the GloballyFrozen property of the owner node changes. protected override void OnOwnerFrozenChanged() Start() Start is called on the frame in which the component had added just before Update method is called first time. Note: Start doesn't called immediately at the time it is adding. protected override void Start() Update(float) Update is called on every frame if the owner node isn't frozen and the behavior isn't suspended. protected override void Update(float delta) Parameters delta float Elapsed time between frames. UpdateBehavior(NodeBehavior, float) protected abstract void UpdateBehavior(NodeBehavior b, float delta) Parameters b NodeBehavior delta float"
  },
  "api/Lime.LegacyEarlyBehaviorContainer.html": {
    "href": "api/Lime.LegacyEarlyBehaviorContainer.html",
    "title": "Class LegacyEarlyBehaviorContainer | Citrus Engine",
    "keywords": "Class LegacyEarlyBehaviorContainer Namespace Lime Assembly Lime.dll [UpdateStage(typeof(EarlyUpdateStage))] public class LegacyEarlyBehaviorContainer : LegacyBehaviorContainer, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent LegacyBehaviorContainer LegacyEarlyBehaviorContainer Implements IDisposable IAnimable Inherited Members LegacyBehaviorContainer.IsEmpty LegacyBehaviorContainer.Start() LegacyBehaviorContainer.OnOwnerFrozenChanged() LegacyBehaviorContainer.Update(float) BehaviorComponent.Suspended BehaviorComponent.Stop(Node) BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Methods UpdateBehavior(NodeBehavior, float) protected override void UpdateBehavior(NodeBehavior b, float delta) Parameters b NodeBehavior delta float"
  },
  "api/Lime.LegacyLateBehaviorContainer.html": {
    "href": "api/Lime.LegacyLateBehaviorContainer.html",
    "title": "Class LegacyLateBehaviorContainer | Citrus Engine",
    "keywords": "Class LegacyLateBehaviorContainer Namespace Lime Assembly Lime.dll [UpdateBeforeBehavior(typeof(UpdatableNodeBehavior))] [UpdateStage(typeof(LateUpdateStage))] public class LegacyLateBehaviorContainer : LegacyBehaviorContainer, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent LegacyBehaviorContainer LegacyLateBehaviorContainer Implements IDisposable IAnimable Inherited Members LegacyBehaviorContainer.IsEmpty LegacyBehaviorContainer.Start() LegacyBehaviorContainer.OnOwnerFrozenChanged() LegacyBehaviorContainer.Update(float) BehaviorComponent.Suspended BehaviorComponent.Stop(Node) BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Methods UpdateBehavior(NodeBehavior, float) protected override void UpdateBehavior(NodeBehavior b, float delta) Parameters b NodeBehavior delta float"
  },
  "api/Lime.LimeException.html": {
    "href": "api/Lime.LimeException.html",
    "title": "Class LimeException | Citrus Engine",
    "keywords": "Class LimeException Namespace Lime Assembly Lime.dll public class LimeException : Exception, ISerializable Inheritance object Exception LimeException Implements ISerializable Derived CyclicDependencyException InvalidBundleVersionException Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LimeException(string, Exception) public LimeException(string message = null, Exception innerException = null) Parameters message string innerException Exception"
  },
  "api/Lime.LimePersistenceContext.html": {
    "href": "api/Lime.LimePersistenceContext.html",
    "title": "Class LimePersistenceContext | Citrus Engine",
    "keywords": "Class LimePersistenceContext Namespace Lime Assembly Lime.dll public class LimePersistenceContext : PersistenceContext, IPersistenceContext Inheritance object PersistenceContext LimePersistenceContext Implements IPersistenceContext Inherited Members PersistenceContext.AfterRead<T>(IPersistenceReadData, object) PersistenceContext.StoreMetadata(object, List<Metadata>) PersistenceContext.TryGetMetadata(object, out List<Metadata>) PersistenceContext.CreateDocumentHeader(object) PersistenceContext.CreateDocumentHeader<T>() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LimePersistenceContext() public LimePersistenceContext() Methods BeforeRead<T>(Persistence, AbstractDeserializer, Stream, Format) public override IPersistenceReadData BeforeRead<T>(Persistence persistence, AbstractDeserializer deserializer, Stream stream, Persistence.Format format) Parameters persistence Persistence deserializer AbstractDeserializer stream Stream format Persistence.Format Returns IPersistenceReadData Type Parameters T BeforeWrite(Persistence, AbstractWriterSerializer, Stream, object, Format) public override void BeforeWrite(Persistence persistence, AbstractWriterSerializer serializer, Stream stream, object @object, Persistence.Format format) Parameters persistence Persistence serializer AbstractWriterSerializer stream Stream object object format Persistence.Format EnumerateDataLayers() protected override IEnumerable<(string Layer, int Version)> EnumerateDataLayers() Returns IEnumerable<(string Layer, int Version)> GetDataLayersHash() public static SHA256 GetDataLayersHash() Returns SHA256 IsDocumentHeaderServiced(Type) protected override bool IsDocumentHeaderServiced(Type type) Parameters type Type Returns bool RegisterDataLayers(IEnumerable<(string Layer, int Version)>) public static void RegisterDataLayers(IEnumerable<(string Layer, int Version)> layers) Parameters layers IEnumerable<(string Layer, int Version)>"
  },
  "api/Lime.LineCap.html": {
    "href": "api/Lime.LineCap.html",
    "title": "Enum LineCap | Citrus Engine",
    "keywords": "Enum LineCap Namespace Lime Assembly Lime.dll public enum LineCap Fields Bevel = 3 Butt = 0 Miter = 4 Round = 1 Square = 2"
  },
  "api/Lime.LinearLayout.html": {
    "href": "api/Lime.LinearLayout.html",
    "title": "Class LinearLayout | Citrus Engine",
    "keywords": "Class LinearLayout Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Layout/Linear Layout\")] public class LinearLayout : Layout, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout LinearLayout Implements IDisposable IAnimable ILayout Derived HBoxLayout VBoxLayout Inherited Members Layout.Owner Layout.DebugRectangles Layout.ConstraintsValid Layout.ArrangementValid Layout.RowAlignment Layout.ColumnAlignment Layout.Alignment Layout.IgnoreHidden Layout.InvalidateConstraintsAndArrangement() Layout.InvalidateArrangement() Layout.OnSizeChanged(Widget, Vector2) Layout.GetChildren() Layout.CalcAlignmentOffsetAndStride(HAlignment, float, int) Layout.CalcAlignmentOffsetAndStride(VAlignment, float, int) Layout.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors LinearLayout() public LinearLayout() LinearLayout(LayoutDirection) public LinearLayout(LayoutDirection direction) Parameters direction LayoutDirection Properties Direction [YuzuMember] public LayoutDirection Direction { get; set; } Property Value LayoutDirection Spacing [YuzuMember] [Validation.Range(0, 3.4028235E+38)] public float Spacing { get; set; } Property Value float Methods ArrangeChildren() public override void ArrangeChildren() MeasureSizeConstraints() public override void MeasureSizeConstraints()"
  },
  "api/Lime.LinqExtensions.html": {
    "href": "api/Lime.LinqExtensions.html",
    "title": "Class LinqExtensions | Citrus Engine",
    "keywords": "Class LinqExtensions Namespace Lime Assembly Lime.dll public static class LinqExtensions Inheritance object LinqExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) Returns distinct elements from a sequence by using a specified Func to compare values. public static IEnumerable<TSource> Distinct<TSource>(this IEnumerable<TSource> source, Func<TSource, TSource, bool> comparer) Parameters source IEnumerable<TSource> The sequence to remove duplicate elements from. comparer Func<TSource, TSource, bool> A Func<TSource, TSource, bool> Returns IEnumerable<TSource> An System.Collections.Generic.IEnumerable`1 that contains distinct elements from the source sequence. Type Parameters TSource Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) Returns all items in the first collection except the ones in the second collection that match the lambda condition public static IEnumerable<TSource> Except<TSource>(this IEnumerable<TSource> first, IEnumerable<TSource> second, Func<TSource, TSource, bool> comparer) Parameters first IEnumerable<TSource> second IEnumerable<TSource> comparer Func<TSource, TSource, bool> Returns IEnumerable<TSource> The filtered list Type Parameters TSource Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Returns all items in the first collection that intersect the ones in the second collection that match the lambda condition public static IEnumerable<T> Intersect<T>(this IEnumerable<T> first, IEnumerable<T> second, Func<T, T, bool> comparer) Parameters first IEnumerable<T> The first list second IEnumerable<T> The second list comparer Func<T, T, bool> Returns IEnumerable<T> The filtered list Type Parameters T The type"
  },
  "api/Lime.ListView.html": {
    "href": "api/Lime.ListView.html",
    "title": "Class ListView | Citrus Engine",
    "keywords": "Class ListView Namespace Lime Assembly Lime.dll public class ListView : ScrollViewWithSlider, IList<Widget>, ICollection<Widget>, IEnumerable<Widget>, IEnumerable Inheritance object ScrollView ScrollViewWithSlider ListView Implements IList<Widget> ICollection<Widget> IEnumerable<Widget> IEnumerable Inherited Members ScrollViewWithSlider.SliderIsDragging ScrollViewWithSlider.ForceShowSlider(float) ScrollView.Frame ScrollView.Content ScrollView.IsBeingRefreshed ScrollView.CanScroll ScrollView.ScrollBySlider ScrollView.RejectOrtogonalSwipes ScrollView.BounceZoneThickness ScrollView.ScrollToItemVelocity ScrollView.MaxScrollToItemTime ScrollView.InertialScrollingStopVelocity ScrollView.InertialScrollingDamping ScrollView.ScrollWhenContentFits ScrollView.CenterWhenContentFits ScrollView.ExclusiveDrag ScrollView.IsDragging ScrollView.ContentLength ScrollView.ScrollPosition ScrollView.MinScrollPosition ScrollView.MaxScrollPosition ScrollView.IsItemOnscreen(Widget) ScrollView.IsItemFullyOnscreen(Widget) ScrollView.ProjectToScrollAxis(Vector2) ScrollView.SetProjectedPosition(Widget, float) ScrollView.SetProjectedSize(Widget, float) ScrollView.PositionToViewFully(Widget) ScrollView.PositionToView(float, float, float) ScrollView.SetScrollPosition(float) ScrollView.CreateContentWidget() ScrollView.ScrollTo(float, bool) ScrollView.IsScrolling() ScrollView.StopScrolling() ScrollView.AssimilateChildren() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) BoneUtils.GetBone(IEnumerable<Node>, int) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors ListView(Frame, ScrollDirection, bool) public ListView(Frame frame, ScrollDirection scrollDirection = ScrollDirection.Vertical, bool processChildrenFirst = false) Parameters frame Frame scrollDirection ScrollDirection processChildrenFirst bool ListView(Frame, Widget, ScrollDirection, bool) public ListView(Frame frame, Widget slider, ScrollDirection scrollDirection = ScrollDirection.Vertical, bool processChildrenFirst = false) Parameters frame Frame slider Widget scrollDirection ScrollDirection processChildrenFirst bool Fields ManualItemsPositioning public bool ManualItemsPositioning Field Value bool Spacing public float Spacing Field Value float Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public Widget this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value Widget The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. ScrollDirection public override ScrollDirection ScrollDirection { get; set; } Property Value ScrollDirection Methods Add(Widget) Adds an item to the ICollection<T>. public void Add(Widget item) Parameters item Widget The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. AddRange(IEnumerable<Widget>) public void AddRange(IEnumerable<Widget> items) Parameters items IEnumerable<Widget> Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Widget) Determines whether the ICollection<T> contains a specific value. public bool Contains(Widget item) Parameters item Widget The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Widget[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Widget[] array, int arrayIndex) Parameters array Widget[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<Widget> GetEnumerator() Returns IEnumerator<Widget> An enumerator that can be used to iterate through the collection. IndexOf(Widget) Determines the index of a specific item in the IList<T>. public int IndexOf(Widget item) Parameters item Widget The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, Widget) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Widget item) Parameters index int The zero-based index at which item should be inserted. item Widget The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Refresh() public void Refresh() Remove(Widget) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Widget item) Parameters item Widget The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAll(Predicate<Widget>) public int RemoveAll(Predicate<Widget> match) Parameters match Predicate<Widget> Returns int RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. ScrollToItem(Widget, bool) public void ScrollToItem(Widget widget, bool instantly = false) Parameters widget Widget instantly bool SetRefreshGesture(Widget, IEnumerable<object>) public void SetRefreshGesture(Widget animationTemplate, IEnumerable<object> refreshTask) Parameters animationTemplate Widget refreshTask IEnumerable<object>"
  },
  "api/Lime.Localization.html": {
    "href": "api/Lime.Localization.html",
    "title": "Class Localization | Citrus Engine",
    "keywords": "Class Localization Namespace Lime Assembly Lime.dll Класс, предоставляющий функции локализации public static class Localization Inheritance object Localization Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DictionariesPath Default dictionaries path relative to project assets directory. public static string DictionariesPath Field Value string Dictionary Текущий словарь локализации public static LocalizationDictionary Dictionary Field Value LocalizationDictionary Properties DebugKeys public static bool DebugKeys { get; set; } Property Value bool UseNumericKeys Устаревший. Использовать только для совместимости со старыми проектами. Раньше в словаре в качестве ключей использовались числа. Сейчас - вся строка. Этот флаг включает старый режим public static bool UseNumericKeys { get; set; } Property Value bool Methods GetCurrentCultureInfo() public static CultureInfo GetCurrentCultureInfo() Returns CultureInfo GetCurrentLanguage() Возвращает две буквы для имени текущего языка. Например \"en\" для English, \"es\" для Spanish, \"de\" для Deutch и т.п. Для более подробной информации см ссылку (особенно раздел 639-1) http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes public static string GetCurrentLanguage() Returns string GetString(string) Возвращает локализованную строку из текущего словаря по ее ключу public static string GetString(string key) Parameters key string Returns string GetString(string, params object[]) Возвращает локализованную строку из текущего словаря по ее ключу public static string GetString(string format, params object[] args) Parameters format string args object[] Returns string"
  },
  "api/Lime.LocalizationDictionary.html": {
    "href": "api/Lime.LocalizationDictionary.html",
    "title": "Class LocalizationDictionary | Citrus Engine",
    "keywords": "Class LocalizationDictionary Namespace Lime Assembly Lime.dll Словарь локализации. Используется для перевода текста на другой язык. Содержит пары ключ-значение. Строка, заданная в HotStudio является ключом, если начинается с квадратных скобок []. Словарь подменяет ее на фразу для конкретного языка public class LocalizationDictionary : IEnumerable<KeyValuePair<string, LocalizationEntry>>, IEnumerable Inheritance object LocalizationDictionary Implements IEnumerable<KeyValuePair<string, LocalizationEntry>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties Count public int Count { get; } Property Value int this[string] public LocalizationEntry this[string key] { get; set; } Parameters key string Property Value LocalizationEntry Keys public Dictionary<string, LocalizationEntry>.KeyCollection Keys { get; } Property Value Dictionary<string, LocalizationEntry>.KeyCollection Values public Dictionary<string, LocalizationEntry>.ValueCollection Values { get; } Property Value Dictionary<string, LocalizationEntry>.ValueCollection Methods Add(string, LocalizationEntry) public void Add(string key, LocalizationEntry value) Parameters key string value LocalizationEntry Add(string, string, string) Добавляет новую запись в словарь. Если запись с таким ключом уже есть, заменяет ее public void Add(string key, string text, string context) Parameters key string Ключ, по которому можно будет получить запись text string Текст context string Контекст. Аналог комментария для переводчика AddComment(string) Добавляет в словарь запись комментария public void AddComment(string comment) Parameters comment string Текст комментария Clear() public void Clear() ContainsKey(string) public bool ContainsKey(string key) Parameters key string Returns bool GetEntry(string) Получить значение по ключу public LocalizationEntry GetEntry(string key) Parameters key string Returns LocalizationEntry GetEnumerator() public Dictionary<string, LocalizationEntry>.Enumerator GetEnumerator() Returns Dictionary<string, LocalizationEntry>.Enumerator IsComment(string) Проверяет не является ли ключ специальным ключом для комментариев public static bool IsComment(string key) Parameters key string Returns bool ReadFromStream(ILocalizationDictionarySerializer, Stream) Загружает словарь из потока public void ReadFromStream(ILocalizationDictionarySerializer serializer, Stream stream) Parameters serializer ILocalizationDictionarySerializer Сериалайзер, предоставляющий функции чтения и записи словаря в файл stream Stream ReadFromStream(Stream) Загружает словарь из потока public void ReadFromStream(Stream stream) Parameters stream Stream Remove(string) public bool Remove(string key) Parameters key string Returns bool TryGetText(string, out string) Получает текст перевода по ключу. Возвращает true в случае успешной операции public bool TryGetText(string key, out string value) Parameters key string Ключ value string Переменная, в которую будет записан результат Returns bool TryGetValue(string, out LocalizationEntry) public bool TryGetValue(string key, out LocalizationEntry value) Parameters key string value LocalizationEntry Returns bool WriteToStream(ILocalizationDictionarySerializer, Stream) Записывает словарь в поток public void WriteToStream(ILocalizationDictionarySerializer serializer, Stream stream) Parameters serializer ILocalizationDictionarySerializer Сериалайзер, предоставляющий функции чтения и записи словаря в файл stream Stream WriteToStream(Stream) Записывает словарь в поток public void WriteToStream(Stream stream) Parameters stream Stream"
  },
  "api/Lime.LocalizationDictionaryTextSerializer.html": {
    "href": "api/Lime.LocalizationDictionaryTextSerializer.html",
    "title": "Class LocalizationDictionaryTextSerializer | Citrus Engine",
    "keywords": "Class LocalizationDictionaryTextSerializer Namespace Lime Assembly Lime.dll �����������, ���������� � ���������� ��������� (�������, �������������� � ����������� ��������) public class LocalizationDictionaryTextSerializer : ILocalizationDictionarySerializer Inheritance object LocalizationDictionaryTextSerializer Implements ILocalizationDictionarySerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetFileExtension() public string GetFileExtension() Returns string Read(LocalizationDictionary, Stream) public void Read(LocalizationDictionary dictionary, Stream stream) Parameters dictionary LocalizationDictionary stream Stream Write(LocalizationDictionary, Stream) public void Write(LocalizationDictionary dictionary, Stream stream) Parameters dictionary LocalizationDictionary stream Stream"
  },
  "api/Lime.LocalizationEntry.html": {
    "href": "api/Lime.LocalizationEntry.html",
    "title": "Class LocalizationEntry | Citrus Engine",
    "keywords": "Class LocalizationEntry Namespace Lime Assembly Lime.dll Запись словаря локализации public class LocalizationEntry Inheritance object LocalizationEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Context Контекст. Аналог комментария для переводчика public string Context Field Value string Text Текст перевода public string Text Field Value string"
  },
  "api/Lime.Logger.html": {
    "href": "api/Lime.Logger.html",
    "title": "Class Logger | Citrus Engine",
    "keywords": "Class Logger Namespace Lime Assembly Lime.dll public static class Logger Inheritance object Logger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Write(string) public static void Write(string msg) Parameters msg string Write(string, params object[]) public static void Write(string format, params object[] args) Parameters format string args object[] Events OnWrite public static event Action<string> OnWrite Event Type Action<string>"
  },
  "api/Lime.LongTapGesture.html": {
    "href": "api/Lime.LongTapGesture.html",
    "title": "Class LongTapGesture | Citrus Engine",
    "keywords": "Class LongTapGesture Namespace Lime Assembly Lime.dll public class LongTapGesture : TapGesture Inheritance object Gesture TapGesture LongTapGesture Inherited Members TapGesture.Threshold TapGesture.Began TapGesture.Canceled TapGesture.Recognized TapGesture.MousePressPosition TapGesture.WasBegan() TapGesture.WasCanceled() TapGesture.WasRecognized() TapGesture.WasRecognizedOrCanceled() TapGesture.ButtonIndex TapGesture.OnCancel(Gesture) TapGesture.OnUpdate() Gesture.Owner Gesture.Input object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LongTapGesture(float) public LongTapGesture(float tapDuration) Parameters tapDuration float LongTapGesture(float, Action) public LongTapGesture(float tapDuration, Action onRecognized) Parameters tapDuration float onRecognized Action LongTapGesture(float, int) public LongTapGesture(float tapDuration, int buttonIndex) Parameters tapDuration float buttonIndex int LongTapGesture(float, int, Action) public LongTapGesture(float tapDuration, int buttonIndex, Action onRecognized) Parameters tapDuration float buttonIndex int onRecognized Action"
  },
  "api/Lime.MacWindowTabbingMode.html": {
    "href": "api/Lime.MacWindowTabbingMode.html",
    "title": "Enum MacWindowTabbingMode | Citrus Engine",
    "keywords": "Enum MacWindowTabbingMode Namespace Lime Assembly Lime.dll public enum MacWindowTabbingMode Fields Automatic = 0 Disallowed = 2 Preferred = 1"
  },
  "api/Lime.Marker.html": {
    "href": "api/Lime.Marker.html",
    "title": "Class Marker | Citrus Engine",
    "keywords": "Class Marker Namespace Lime Assembly Lime.dll public class Marker Inheritance object Marker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Marker() public Marker() Marker(string, int, MarkerAction, string) public Marker(string id, int frame, MarkerAction action, string jumpTo = null) Parameters id string frame int action MarkerAction jumpTo string Properties Action [YuzuMember] public MarkerAction Action { get; set; } Property Value MarkerAction BezierEasing [YuzuMember] public BezierEasing BezierEasing { get; set; } Property Value BezierEasing CustomAction public Action CustomAction { get; set; } Property Value Action Frame [YuzuMember] public int Frame { get; set; } Property Value int Id [Validation.DefaultCharset] [YuzuMember] public string Id { get; set; } Property Value string JumpTo [YuzuMember] public string JumpTo { get; set; } Property Value string Owner public Animation Owner { get; } Property Value Animation Tags [YuzuMember] public SortedSet<Guid> Tags { get; set; } Property Value SortedSet<Guid> Time public double Time { get; } Property Value double Methods Clone() public Marker Clone() Returns Marker ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Lime.MarkerAction.html": {
    "href": "api/Lime.MarkerAction.html",
    "title": "Enum MarkerAction | Citrus Engine",
    "keywords": "Enum MarkerAction Namespace Lime Assembly Lime.dll public enum MarkerAction Fields Jump = 2 Play = 0 Stop = 1"
  },
  "api/Lime.MarkerBlending.html": {
    "href": "api/Lime.MarkerBlending.html",
    "title": "Class MarkerBlending | Citrus Engine",
    "keywords": "Class MarkerBlending Namespace Lime Assembly Lime.dll public class MarkerBlending Inheritance object MarkerBlending Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Option [YuzuMember] public BlendingOption Option { get; set; } Property Value BlendingOption SourceMarkersOptions [YuzuMember] public Dictionary<string, BlendingOption> SourceMarkersOptions { get; } Property Value Dictionary<string, BlendingOption>"
  },
  "api/Lime.MarkerList.html": {
    "href": "api/Lime.MarkerList.html",
    "title": "Class MarkerList | Citrus Engine",
    "keywords": "Class MarkerList Namespace Lime Assembly Lime.dll public class MarkerList : IList<Marker>, ICollection<Marker>, IEnumerable<Marker>, IEnumerable Inheritance object MarkerList Implements IList<Marker> ICollection<Marker> IEnumerable<Marker> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors MarkerList(Animation) public MarkerList(Animation owner) Parameters owner Animation MarkerList(Animation, int) public MarkerList(Animation owner, int capacity) Parameters owner Animation capacity int Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public Marker this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value Marker The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. this[string] public Marker this[string id] { get; } Parameters id string Property Value Marker Methods Add(Marker) Adds an item to the ICollection<T>. public void Add(Marker marker) Parameters marker Marker Exceptions NotSupportedException The ICollection<T> is read-only. AddOrdered(Marker) public void AddOrdered(Marker marker) Parameters marker Marker Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Marker) Determines whether the ICollection<T> contains a specific value. public bool Contains(Marker item) Parameters item Marker The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Marker[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Marker[] array, int arrayIndex) Parameters array Marker[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. Exists(Predicate<Marker>) public bool Exists(Predicate<Marker> match) Parameters match Predicate<Marker> Returns bool Find(string) public Marker Find(string id) Parameters id string Returns Marker FindIndex(Predicate<Marker>) public int FindIndex(Predicate<Marker> match) Parameters match Predicate<Marker> Returns int GetByFrame(int) public Marker GetByFrame(int frame) Parameters frame int Returns Marker GetEnumerator() public List<Marker>.Enumerator GetEnumerator() Returns List<Marker>.Enumerator IndexOf(Marker) Determines the index of a specific item in the IList<T>. public int IndexOf(Marker item) Parameters item Marker The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, Marker) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Marker marker) Parameters index int The zero-based index at which item should be inserted. marker Marker Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(Marker) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Marker item) Parameters item Marker The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. TryFind(string) public Marker TryFind(string id) Parameters id string Returns Marker TryFind(string, out Marker) public bool TryFind(string id, out Marker marker) Parameters id string marker Marker Returns bool"
  },
  "api/Lime.MaterialComponent-1.html": {
    "href": "api/Lime.MaterialComponent-1.html",
    "title": "Class MaterialComponent<T> | Citrus Engine",
    "keywords": "Class MaterialComponent<T> Namespace Lime Assembly Lime.dll Replace owner material with specified material public class MaterialComponent<T> : MaterialComponent, IDisposable, IAnimable where T : IMaterial, new() Type Parameters T Inheritance object Component NodeComponent MaterialComponent MaterialComponent<T> Implements IDisposable IAnimable Derived AlphaIntensityComponent DissolveComponent GradientComponent HSLComponent TwistComponent WaveComponent Inherited Members NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors MaterialComponent() public MaterialComponent() Properties CustomMaterial protected T CustomMaterial { get; } Property Value T Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node"
  },
  "api/Lime.MaterialComponent.html": {
    "href": "api/Lime.MaterialComponent.html",
    "title": "Class MaterialComponent | Citrus Engine",
    "keywords": "Class MaterialComponent Namespace Lime Assembly Lime.dll [AllowedComponentOwnerTypes(new Type[] { typeof(IMaterialComponentOwner) })] public class MaterialComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent MaterialComponent Implements IDisposable IAnimable Derived MaterialComponent<T> Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable)"
  },
  "api/Lime.Mathf.EasingFunction.html": {
    "href": "api/Lime.Mathf.EasingFunction.html",
    "title": "Enum Mathf.EasingFunction | Citrus Engine",
    "keywords": "Enum Mathf.EasingFunction Namespace Lime Assembly Lime.dll public enum Mathf.EasingFunction : byte Fields Back = 10 Bounce = 11 Circular = 7 Cubic = 3 Elastic = 9 Exponential = 8 Hermite = 1 Linear = 0 Quadratic = 2 Quartic = 4 Quintic = 5 Sine = 6"
  },
  "api/Lime.Mathf.EasingType.html": {
    "href": "api/Lime.Mathf.EasingType.html",
    "title": "Enum Mathf.EasingType | Citrus Engine",
    "keywords": "Enum Mathf.EasingType Namespace Lime Assembly Lime.dll public enum Mathf.EasingType : byte Fields In = 0 InOut = 2 Out = 1"
  },
  "api/Lime.Mathf.Easings.html": {
    "href": "api/Lime.Mathf.Easings.html",
    "title": "Class Mathf.Easings | Citrus Engine",
    "keywords": "Class Mathf.Easings Namespace Lime Assembly Lime.dll public static class Mathf.Easings Inheritance object Mathf.Easings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BackEase(float, EasingType) public static float BackEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float BackEaseIn(float) public static float BackEaseIn(float p) Parameters p float Returns float BackEaseInOut(float) public static float BackEaseInOut(float p) Parameters p float Returns float BackEaseOut(float) public static float BackEaseOut(float p) Parameters p float Returns float BounceEase(float, EasingType) public static float BounceEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float BounceEaseIn(float) public static float BounceEaseIn(float p) Parameters p float Returns float BounceEaseInOut(float) public static float BounceEaseInOut(float p) Parameters p float Returns float BounceEaseOut(float) public static float BounceEaseOut(float p) Parameters p float Returns float CircularEase(float, EasingType) public static float CircularEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float CircularEaseIn(float) public static float CircularEaseIn(float p) Parameters p float Returns float CircularEaseInOut(float) public static float CircularEaseInOut(float p) Parameters p float Returns float CircularEaseOut(float) public static float CircularEaseOut(float p) Parameters p float Returns float CubicEase(float, EasingType) public static float CubicEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float CubicEaseIn(float) public static float CubicEaseIn(float p) Parameters p float Returns float CubicEaseInOut(float) public static float CubicEaseInOut(float p) Parameters p float Returns float CubicEaseOut(float) public static float CubicEaseOut(float p) Parameters p float Returns float ElasticEase(float, EasingType) public static float ElasticEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float ElasticEaseIn(float) public static float ElasticEaseIn(float p) Parameters p float Returns float ElasticEaseInOut(float) public static float ElasticEaseInOut(float p) Parameters p float Returns float ElasticEaseOut(float) public static float ElasticEaseOut(float p) Parameters p float Returns float ExponentialEase(float, EasingType) public static float ExponentialEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float ExponentialEaseIn(float) public static float ExponentialEaseIn(float p) Parameters p float Returns float ExponentialEaseInOut(float) public static float ExponentialEaseInOut(float p) Parameters p float Returns float ExponentialEaseOut(float) public static float ExponentialEaseOut(float p) Parameters p float Returns float HermiteEase(float, EasingType) public static float HermiteEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float Interpolate(float, EasingFunction, EasingType) public static float Interpolate(float p, Mathf.EasingFunction function, Mathf.EasingType type) Parameters p float function Mathf.EasingFunction type Mathf.EasingType Returns float Linear(float) public static float Linear(float p) Parameters p float Returns float QuadraticEase(float, EasingType) public static float QuadraticEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float QuadraticEaseIn(float) public static float QuadraticEaseIn(float p) Parameters p float Returns float QuadraticEaseInOut(float) public static float QuadraticEaseInOut(float p) Parameters p float Returns float QuadraticEaseOut(float) public static float QuadraticEaseOut(float p) Parameters p float Returns float QuarticEase(float, EasingType) public static float QuarticEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float QuarticEaseIn(float) public static float QuarticEaseIn(float p) Parameters p float Returns float QuarticEaseInOut(float) public static float QuarticEaseInOut(float p) Parameters p float Returns float QuarticEaseOut(float) public static float QuarticEaseOut(float p) Parameters p float Returns float QuinticEase(float, EasingType) public static float QuinticEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float QuinticEaseIn(float) public static float QuinticEaseIn(float p) Parameters p float Returns float QuinticEaseInOut(float) public static float QuinticEaseInOut(float p) Parameters p float Returns float QuinticEaseOut(float) public static float QuinticEaseOut(float p) Parameters p float Returns float SineEase(float, EasingType) public static float SineEase(float p, Mathf.EasingType type) Parameters p float type Mathf.EasingType Returns float SineEaseIn(float) public static float SineEaseIn(float p) Parameters p float Returns float SineEaseInOut(float) public static float SineEaseInOut(float p) Parameters p float Returns float SineEaseOut(float) public static float SineEaseOut(float p) Parameters p float Returns float SmoothStepEaseIn(float) public static float SmoothStepEaseIn(float p) Parameters p float Returns float SmoothStepEaseInOut(float) public static float SmoothStepEaseInOut(float p) Parameters p float Returns float SmoothStepEaseOut(float) public static float SmoothStepEaseOut(float p) Parameters p float Returns float"
  },
  "api/Lime.Mathf.html": {
    "href": "api/Lime.Mathf.html",
    "title": "Class Mathf | Citrus Engine",
    "keywords": "Class Mathf Namespace Lime Assembly Lime.dll public static class Mathf Inheritance object Mathf Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DegToRad public const float DegToRad = 0.017453292 Field Value float E public const float E = 2.7182817 Field Value float HalfPi public const float HalfPi = 1.5707964 Field Value float Pi public const float Pi = 3.1415927 Field Value float RadToDeg public const float RadToDeg = 57.295776 Field Value float RandomGenerator public static Random RandomGenerator Field Value Random TwoPi public const float TwoPi = 6.2831855 Field Value float ZeroTolerance public const float ZeroTolerance = 1E-06 Field Value float Methods Abs(Vector2) Returns Vector2 with absolute values of corresponding components of v public static Vector2 Abs(Vector2 v) Parameters v Vector2 Returns Vector2 Abs(Vector3) Returns Vector3 with absolute values of corresponding components of v public static Vector3 Abs(Vector3 v) Parameters v Vector3 Returns Vector3 Abs(float) Returns absolute value of v. Equals to -v if v less than 0 or v otherwise. public static float Abs(float v) Parameters v float Returns float Acos(float) public static float Acos(float v) Parameters v float Returns float Asin(float) public static float Asin(float v) Parameters v float Returns float Atan2(Vector2) public static float Atan2(Vector2 v) Parameters v Vector2 Returns float Atan2(float, float) public static float Atan2(float y, float x) Parameters y float x float Returns float CalcDistanceToSegment(Vector2, Vector2, Vector2) public static float CalcDistanceToSegment(Vector2 start, Vector2 end, Vector2 point) Parameters start Vector2 end Vector2 point Vector2 Returns float CalcLowerPowerOfTwo(int) public static int CalcLowerPowerOfTwo(int x) Parameters x int Returns int CalcUpperPowerOfTwo(int) public static int CalcUpperPowerOfTwo(int x) Parameters x int Returns int CatmullRomSpline(float, Vector2, Vector2, Vector2, Vector2) public static Vector2 CatmullRomSpline(float t, Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3) Parameters t float p0 Vector2 p1 Vector2 p2 Vector2 p3 Vector2 Returns Vector2 CatmullRomSpline(float, Vector3, Vector3, Vector3, Vector3) public static Vector3 CatmullRomSpline(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3) Parameters t float p0 Vector3 p1 Vector3 p2 Vector3 p3 Vector3 Returns Vector3 CatmullRomSpline(float, float, float, float, float) public static float CatmullRomSpline(float t, float p0, float p1, float p2, float p3) Parameters t float p0 float p1 float p2 float p3 float Returns float Clamp(Vector2, Vector2, Vector2) public static Vector2 Clamp(Vector2 value, Vector2 min, Vector2 max) Parameters value Vector2 min Vector2 max Vector2 Returns Vector2 Clamp(double, double, double) public static double Clamp(double value, double min, double max) Parameters value double min double max double Returns double Clamp(int, int, int) public static int Clamp(int value, int min, int max) Parameters value int min int max int Returns int Clamp(float, float, float) public static float Clamp(float value, float min, float max) Parameters value float min float max float Returns float Cos(float) public static float Cos(float radians) Parameters radians float Returns float CubicBezier(float, Vector2, Vector2, Vector2, Vector2) public static Vector2 CubicBezier(float t, Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3) Parameters t float p0 Vector2 p1 Vector2 p2 Vector2 p3 Vector2 Returns Vector2 CubicBezier(float, Vector3, Vector3, Vector3, Vector3) public static Vector3 CubicBezier(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3) Parameters t float p0 Vector3 p1 Vector3 p2 Vector3 p3 Vector3 Returns Vector3 CubicBezier(float, float, float, float, float) public static float CubicBezier(float t, float p0, float p1, float p2, float p3) Parameters t float p0 float p1 float p2 float p3 float Returns float CubicBezierDerivative(float, Vector2, Vector2, Vector2, Vector2) public static Vector2 CubicBezierDerivative(float t, Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3) Parameters t float p0 Vector2 p1 Vector2 p2 Vector2 p3 Vector2 Returns Vector2 CubicBezierDerivative(float, Vector3, Vector3, Vector3, Vector3) public static Vector3 CubicBezierDerivative(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3) Parameters t float p0 Vector3 p1 Vector3 p2 Vector3 p3 Vector3 Returns Vector3 CubicBezierDerivative(float, float, float, float, float) public static float CubicBezierDerivative(float t, float p0, float p1, float p2, float p3) Parameters t float p0 float p1 float p2 float p3 float Returns float CubicBezierSecondDerivative(float, float, float, float, float) public static float CubicBezierSecondDerivative(float t, float p0, float p1, float p2, float p3) Parameters t float p0 float p1 float p2 float p3 float Returns float Erf(double) Gauss error function. The maximum error is below 1.5 × 10-7. public static double Erf(double x) Parameters x double Returns double Erf(float) public static float Erf(float x) Parameters x float Returns float Exp(float) public static float Exp(float x) Parameters x float Returns float FastInverseSqrt(float) public static float FastInverseSqrt(float x) Parameters x float Returns float HermiteSpline(float, Vector2, Vector2, Vector2, Vector2) public static Vector2 HermiteSpline(float t, Vector2 p0, Vector2 m0, Vector2 p1, Vector2 m1) Parameters t float p0 Vector2 m0 Vector2 p1 Vector2 m1 Vector2 Returns Vector2 HermiteSpline(float, Vector3, Vector3, Vector3, Vector3) public static Vector3 HermiteSpline(float t, Vector3 p0, Vector3 m0, Vector3 p1, Vector3 m1) Parameters t float p0 Vector3 m0 Vector3 p1 Vector3 m1 Vector3 Returns Vector3 HermiteSpline(float, float, float, float, float) public static float HermiteSpline(float t, float p0, float m0, float p1, float m1) Parameters t float p0 float m0 float p1 float m1 float Returns float HermiteSplineDerivative(float, Vector2, Vector2, Vector2, Vector2) public static Vector2 HermiteSplineDerivative(float t, Vector2 p0, Vector2 m0, Vector2 p1, Vector2 m1) Parameters t float p0 Vector2 m0 Vector2 p1 Vector2 m1 Vector2 Returns Vector2 HermiteSplineDerivative(float, float, float, float, float) public static float HermiteSplineDerivative(float t, float p0, float m0, float p1, float m1) Parameters t float p0 float m0 float p1 float m1 float Returns float InRange(float, float, float) public static bool InRange(float x, float upper, float lower) Parameters x float upper float lower float Returns bool Lerp(float, Vector2, Vector2) public static Vector2 Lerp(float amount, Vector2 value1, Vector2 value2) Parameters amount float value1 Vector2 value2 Vector2 Returns Vector2 Lerp(float, Vector3, Vector3) public static Vector3 Lerp(float amount, Vector3 value1, Vector3 value2) Parameters amount float value1 Vector3 value2 Vector3 Returns Vector3 Lerp(float, float, float) public static float Lerp(float amount, float value1, float value2) Parameters amount float value1 float value2 float Returns float Log(float) public static float Log(float x) Parameters x float Returns float Max(float, float) public static float Max(float x, float y) Parameters x float y float Returns float Min(float, float) public static float Min(float x, float y) Parameters x float y float Returns float NormalRandom(IRandom, float, float) public static float NormalRandom(this IRandom rng, float median, float dispersion) Parameters rng IRandom median float dispersion float Returns float NormalRandom(Random, float, float) public static float NormalRandom(this Random rng, float median, float dispersion) Parameters rng Random median float dispersion float Returns float NormalRandom(float, float) public static float NormalRandom(float median, float dispersion) Parameters median float dispersion float Returns float Pow(float, float) public static float Pow(float x, float y) Parameters x float y float Returns float RandomBool() public static bool RandomBool() Returns bool RandomBool(Random) public static bool RandomBool(this Random rng) Parameters rng Random Returns bool RandomDouble(IRandom, double, double) public static double RandomDouble(this IRandom rng, double min, double max) Parameters rng IRandom min double max double Returns double RandomDouble(double, double) public static double RandomDouble(double min, double max) Parameters min double max double Returns double RandomDouble(Random, double, double) public static double RandomDouble(this Random rng, double min, double max) Parameters rng Random min double max double Returns double RandomFloat() Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0. public static float RandomFloat() Returns float A single-precision floating point number that is greater than or equal to 0.0, and less than 1.0. Remarks The actual upper bound of the random number returned by this method is 0.99999999999999978. RandomFloat(IRandom) public static float RandomFloat(this IRandom rng) Parameters rng IRandom Returns float RandomFloat(IRandom, float, float) public static float RandomFloat(this IRandom rng, float min, float max) Parameters rng IRandom min float max float Returns float RandomFloat(Random) Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0 and produced by specified generator. public static float RandomFloat(this Random rng) Parameters rng Random The instance of a random generator. Returns float A single-precision floating point number that is greater than or equal to 0.0, and less than 1.0. Remarks The actual upper bound of the random number returned by this method is 0.99999999999999978. RandomFloat(Random, float, float) Returns a random floating-point number that is within a specified range and produced by specified generator. public static float RandomFloat(this Random rng, float min, float max) Parameters rng Random The instance of a random generator. min float The inclusive lower bound of the random number returned. max float The exclusive upper bound of the random number returned. Returns float A single-precision floating point number that is greater than or equal to min, and less than max. RandomFloat(float, float) Returns a random floating-point number that is within a specified range. public static float RandomFloat(float min, float max) Parameters min float The inclusive lower bound of the random number returned. max float The exclusive upper bound of the random number returned. Returns float A single-precision floating point number that is greater than or equal to min, and less than max. RandomInt(IRandom, int) public static int RandomInt(this IRandom rng, int maxValue) Parameters rng IRandom maxValue int Returns int RandomInt(int) Returns a non-negative random integer that is less than the specified maximum. public static int RandomInt(int maxValue) Parameters maxValue int The exclusive upper bound of the random number to be generated. maxValue must be greater than or equal to 0. Returns int A 32-bit signed integer that is greater than or equal to 0, and less than maxValue; that is, the range of return values ordinarily includes 0 but not maxValue. However, if maxValue equals 0, maxValue is returned. RandomInt(int, int) Returns a random integer that is within a specified range. public static int RandomInt(int min, int max) Parameters min int The inclusive lower bound of the random number returned. max int The inclusive upper bound of the random number returned. max must be greater than or equal to (min - 1). Returns int A 32-bit signed integer greater than or equal to min and not greater than max; that is, the range of return values includes both min and max. If max equals min or (min - 1), min is returned. RandomInt(Random, int) Returns a non-negative random integer that is less than the specified maximum and produced by specified generator. public static int RandomInt(this Random rng, int maxValue) Parameters rng Random The instance of a random generator. maxValue int The exclusive upper bound of the random number to be generated. maxValue must be greater than or equal to 0. Returns int A 32-bit signed integer that is greater than or equal to 0, and less than maxValue; that is, the range of return values ordinarily includes 0 but not maxValue. However, if maxValue equals 0, maxValue is returned. RandomInt(Random, int, int) Returns a random integer that is within a specified range and produced by specified generator. public static int RandomInt(this Random rng, int min, int max) Parameters rng Random The instance of a random generator. min int The inclusive lower bound of the random number returned. max int The inclusive upper bound of the random number returned. max must be greater than or equal to (min - 1). Returns int A 32-bit signed integer greater than or equal to min and not greater than max; that is, the range of return values includes both min and max. If max equals min or (min - 1), min is returned. RandomItem<T>(ICollection<T>) public static T RandomItem<T>(this ICollection<T> objects) Parameters objects ICollection<T> Returns T Type Parameters T RandomOf<T>(IRandom, ICollection<T>) public static T RandomOf<T>(this IRandom rng, ICollection<T> objects) Parameters rng IRandom objects ICollection<T> Returns T Type Parameters T RandomOf<T>(IRandom, params T[]) public static T RandomOf<T>(this IRandom rng, params T[] objects) Parameters rng IRandom objects T[] Returns T Type Parameters T RandomOf<T>(Random, ICollection<T>) public static T RandomOf<T>(this Random rng, ICollection<T> objects) Parameters rng Random objects ICollection<T> Returns T Type Parameters T RandomOf<T>(Random, params T[]) public static T RandomOf<T>(this Random rng, params T[] objects) Parameters rng Random objects T[] Returns T Type Parameters T RandomOf<T>(params T[]) public static T RandomOf<T>(params T[] objects) Parameters objects T[] Returns T Type Parameters T Shuffle<T>(IEnumerable<T>, IRandom) public static IEnumerable<T> Shuffle<T>(this IEnumerable<T> source, IRandom rng) Parameters source IEnumerable<T> rng IRandom Returns IEnumerable<T> Type Parameters T Shuffle<T>(IEnumerable<T>, Random) public static IEnumerable<T> Shuffle<T>(this IEnumerable<T> source, Random rng = null) Parameters source IEnumerable<T> rng Random Returns IEnumerable<T> Type Parameters T Sign(Vector2) public static Vector2 Sign(Vector2 x) Parameters x Vector2 Returns Vector2 Sign(float) public static int Sign(float x) Parameters x float Returns int Sin(float) public static float Sin(float radians) Parameters radians float Returns float SolveCubicBezier(float, float, float, float, float, float) Finds cubic Bezier curve parameter t in [0; 1] at which curve evaulates to v. v is also expected to be in [0; 1] public static float SolveCubicBezier(float v, float p0, float p1, float p2, float p3, float epsilon) Parameters v float p0 float p1 float p2 float p3 float epsilon float Returns float Sqr(float) public static float Sqr(float x) Parameters x float Returns float Sqrt(float) public static float Sqrt(float x) Parameters x float Returns float UniformRandom(IRandom, float, float) public static float UniformRandom(this IRandom rng, float median, float dispersion) Parameters rng IRandom median float dispersion float Returns float UniformRandom(Random, float, float) public static float UniformRandom(this Random rng, float median, float dispersion) Parameters rng Random median float dispersion float Returns float UniformRandom(float, float) public static float UniformRandom(float median, float dispersion) Parameters median float dispersion float Returns float Wrap(int, int, int) public static int Wrap(int x, int lowerBound, int upperBound) Parameters x int lowerBound int upperBound int Returns int Wrap(float, float, float) public static float Wrap(float x, float lowerBound, float upperBound) Parameters x float lowerBound float upperBound float Returns float Wrap180(float) public static float Wrap180(float angle) Parameters angle float Returns float Wrap360(float) public static float Wrap360(float angle) Parameters angle float Returns float"
  },
  "api/Lime.Matrix32.html": {
    "href": "api/Lime.Matrix32.html",
    "title": "Struct Matrix32 | Citrus Engine",
    "keywords": "Struct Matrix32 Namespace Lime Assembly Lime.dll Representation of 3x2 transformation matrix. public struct Matrix32 : IEquatable<Matrix32> Implements IEquatable<Matrix32> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Matrix32(Vector2, Vector2, Vector2) public Matrix32(Vector2 u, Vector2 v, Vector2 t) Parameters u Vector2 v Vector2 t Vector2 Fields Identity Returns the identity matrix. It doesn't move the points at all. public static readonly Matrix32 Identity Field Value Matrix32 T [YuzuMember(\"2\")] public Vector2 T Field Value Vector2 TX public float TX Field Value float TY public float TY Field Value float U [YuzuMember(\"0\")] public Vector2 U Field Value Vector2 UX public float UX Field Value float UY public float UY Field Value float V [YuzuMember(\"1\")] public Vector2 V Field Value Vector2 VX public float VX Field Value float VY public float VY Field Value float Methods CalcDeterminant() public float CalcDeterminant() Returns float CalcInversed() public Matrix32 CalcInversed() Returns Matrix32 Equals(Matrix32) Indicates whether the current object is equal to another object of the same type. public bool Equals(Matrix32 rhs) Parameters rhs Matrix32 Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IsIdentity() Checks if this matrix is identity matrix. public bool IsIdentity() Returns bool See Also Identity Lerp(float, Matrix32, Matrix32) Creates a new Matrix32 that contains linear interpolation of the specified matrices. public static Matrix32 Lerp(float amount, Matrix32 value1, Matrix32 value2) Parameters amount float Weighting value(between 0.0 and 1.0). value1 Matrix32 The first matrix. value2 Matrix32 The second matrix. Returns Matrix32 Multiply(ref Matrix32, ref Matrix32, out Matrix32) Multiplication of matrices. Combines transformations in result (this operation is non-communicative). public static void Multiply(ref Matrix32 a, ref Matrix32 b, out Matrix32 result) Parameters a Matrix32 b Matrix32 result Matrix32 Rotation(float) Returns rotation matrix. public static Matrix32 Rotation(float radians) Parameters radians float Returns Matrix32 RotationRough(float) Returns rough rotation matrix. public static Matrix32 RotationRough(float radians) Parameters radians float Returns Matrix32 Scaling(Vector2) Returns scaling matrix. public static Matrix32 Scaling(Vector2 scaling) Parameters scaling Vector2 Returns Matrix32 Scaling(float, float) Returns scaling matrix. public static Matrix32 Scaling(float x, float y) Parameters x float y float Returns Matrix32 SkewX(float) Returns skew x matrix. public static Matrix32 SkewX(float radians) Parameters radians float Returns Matrix32 SkewY(float) Returns skew y matrix. public static Matrix32 SkewY(float radians) Parameters radians float Returns Matrix32 ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. ToTransform2() public Transform2 ToTransform2() Returns Transform2 TransformRectangle(ref readonly Rectangle) public readonly Rectangle TransformRectangle(ref readonly Rectangle r) Parameters r Rectangle Returns Rectangle TransformVector(Vector2) public Vector2 TransformVector(Vector2 a) Parameters a Vector2 Returns Vector2 TransformVector(float, float) public Vector2 TransformVector(float x, float y) Parameters x float y float Returns Vector2 Transformation(Vector2, Vector2, float, Vector2) Returns the transformation matrix. public static Matrix32 Transformation(Vector2 center, Vector2 scaling, float rotation, Vector2 translation) Parameters center Vector2 Center of rotation and scaling. scaling Vector2 rotation float Rotation (in radians). translation Vector2 Returns Matrix32 TransformationRough(Vector2, Vector2, float, Vector2) Returns the rough transformation matrix. public static Matrix32 TransformationRough(Vector2 center, Vector2 scaling, float rotation, Vector2 translation) Parameters center Vector2 Center of rotation and scaling. scaling Vector2 rotation float Rotation (in radians). translation Vector2 Returns Matrix32 Translation(Vector2) Returns translation matrix. public static Matrix32 Translation(Vector2 translation) Parameters translation Vector2 Returns Matrix32 Translation(float, float) Returns translation matrix. public static Matrix32 Translation(float x, float y) Parameters x float y float Returns Matrix32 Operators explicit operator Matrix44(Matrix32) public static explicit operator Matrix44(Matrix32 m) Parameters m Matrix32 Returns Matrix44 operator *(Matrix32, Matrix32) Multiplication of matrices. Combines transformations in result (this operation is non-communicative). public static Matrix32 operator *(Matrix32 a, Matrix32 b) Parameters a Matrix32 b Matrix32 Returns Matrix32 operator *(Matrix32, Vector2) Multiplication of 3x2 matrix with 2x1 matrix (represented by a vector). public static Vector2 operator *(Matrix32 a, Vector2 b) Parameters a Matrix32 b Vector2 Returns Vector2 operator *(Vector2, Matrix32) public static Vector2 operator *(Vector2 a, Matrix32 b) Parameters a Vector2 b Matrix32 Returns Vector2"
  },
  "api/Lime.Matrix44.html": {
    "href": "api/Lime.Matrix44.html",
    "title": "Struct Matrix44 | Citrus Engine",
    "keywords": "Struct Matrix44 Namespace Lime Assembly Lime.dll public struct Matrix44 : IEquatable<Matrix44> Implements IEquatable<Matrix44> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Matrix44(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float) public Matrix44(float m11, float m12, float m13, float m14, float m21, float m22, float m23, float m24, float m31, float m32, float m33, float m34, float m41, float m42, float m43, float m44) Parameters m11 float m12 float m13 float m14 float m21 float m22 float m23 float m24 float m31 float m32 float m33 float m34 float m41 float m42 float m43 float m44 float Fields M11 [YuzuMember(\"0\")] public float M11 Field Value float M12 [YuzuMember(\"1\")] public float M12 Field Value float M13 [YuzuMember(\"2\")] public float M13 Field Value float M14 [YuzuMember(\"3\")] public float M14 Field Value float M21 [YuzuMember(\"4\")] public float M21 Field Value float M22 [YuzuMember(\"5\")] public float M22 Field Value float M23 [YuzuMember(\"6\")] public float M23 Field Value float M24 [YuzuMember(\"7\")] public float M24 Field Value float M31 [YuzuMember(\"8\")] public float M31 Field Value float M32 [YuzuMember(\"9\")] public float M32 Field Value float M33 [YuzuMember(\"A\")] public float M33 Field Value float M34 [YuzuMember(\"B\")] public float M34 Field Value float M41 [YuzuMember(\"C\")] public float M41 Field Value float M42 [YuzuMember(\"D\")] public float M42 Field Value float M43 [YuzuMember(\"E\")] public float M43 Field Value float M44 [YuzuMember(\"F\")] public float M44 Field Value float Properties Backward public Vector3 Backward { get; set; } Property Value Vector3 Down public Vector3 Down { get; set; } Property Value Vector3 Forward public Vector3 Forward { get; set; } Property Value Vector3 Identity public static Matrix44 Identity { get; } Property Value Matrix44 Left public Vector3 Left { get; set; } Property Value Vector3 Right public Vector3 Right { get; set; } Property Value Vector3 Rotation public Quaternion Rotation { get; } Property Value Quaternion Scale public Vector3 Scale { get; } Property Value Vector3 Translation public Vector3 Translation { get; set; } Property Value Vector3 Up public Vector3 Up { get; set; } Property Value Vector3 Methods CalcDeterminant() public float CalcDeterminant() Returns float CalcInverted() public Matrix44 CalcInverted() Returns Matrix44 CreateFromAxisAngle(Vector3, float) public static Matrix44 CreateFromAxisAngle(Vector3 axis, float angle) Parameters axis Vector3 angle float Returns Matrix44 CreateFromAxisAngle(ref Vector3, float, out Matrix44) public static void CreateFromAxisAngle(ref Vector3 axis, float angle, out Matrix44 result) Parameters axis Vector3 angle float result Matrix44 CreateLookAt(Vector3, Vector3, Vector3) public static Matrix44 CreateLookAt(Vector3 cameraPosition, Vector3 cameraTarget, Vector3 cameraUpVector) Parameters cameraPosition Vector3 cameraTarget Vector3 cameraUpVector Vector3 Returns Matrix44 CreateLookAt(ref Vector3, ref Vector3, ref Vector3, out Matrix44) public static void CreateLookAt(ref Vector3 cameraPosition, ref Vector3 cameraTarget, ref Vector3 cameraUpVector, out Matrix44 result) Parameters cameraPosition Vector3 cameraTarget Vector3 cameraUpVector Vector3 result Matrix44 CreateOrthographic(float, float, float, float) public static Matrix44 CreateOrthographic(float width, float height, float zNear, float zFar) Parameters width float height float zNear float zFar float Returns Matrix44 CreateOrthographicOffCenter(float, float, float, float, float, float) public static Matrix44 CreateOrthographicOffCenter(float left, float right, float bottom, float top, float zNear, float zFar) Parameters left float right float bottom float top float zNear float zFar float Returns Matrix44 CreatePerspective(float, float, float, float) public static Matrix44 CreatePerspective(float width, float height, float zNear, float zFar) Parameters width float height float zNear float zFar float Returns Matrix44 CreatePerspectiveFieldOfView(float, float, float, float) public static Matrix44 CreatePerspectiveFieldOfView(float vFov, float aspectRatio, float zNear, float zFar) Parameters vFov float aspectRatio float zNear float zFar float Returns Matrix44 CreatePerspectiveOffCenter(float, float, float, float, float, float) public static Matrix44 CreatePerspectiveOffCenter(float left, float right, float bottom, float top, float zNear, float zFar) Parameters left float right float bottom float top float zNear float zFar float Returns Matrix44 CreateReflection(Plane) public static Matrix44 CreateReflection(Plane plane) Parameters plane Plane Returns Matrix44 CreateRotation(Quaternion) public static Matrix44 CreateRotation(Quaternion quaternion) Parameters quaternion Quaternion Returns Matrix44 CreateRotation(ref Quaternion, out Matrix44) public static void CreateRotation(ref Quaternion quaternion, out Matrix44 result) Parameters quaternion Quaternion result Matrix44 CreateRotationX(float) public static Matrix44 CreateRotationX(float radians) Parameters radians float Returns Matrix44 CreateRotationX(float, out Matrix44) public static void CreateRotationX(float radians, out Matrix44 result) Parameters radians float result Matrix44 CreateRotationY(float) public static Matrix44 CreateRotationY(float radians) Parameters radians float Returns Matrix44 CreateRotationY(float, out Matrix44) public static void CreateRotationY(float radians, out Matrix44 result) Parameters radians float result Matrix44 CreateRotationZ(float) public static Matrix44 CreateRotationZ(float radians) Parameters radians float Returns Matrix44 CreateRotationZ(float, out Matrix44) public static void CreateRotationZ(float radians, out Matrix44 result) Parameters radians float result Matrix44 CreateScale(Vector3) public static Matrix44 CreateScale(Vector3 scales) Parameters scales Vector3 Returns Matrix44 CreateScale(float, float, float) public static Matrix44 CreateScale(float x, float y, float z) Parameters x float y float z float Returns Matrix44 CreateTranslation(Vector3) public static Matrix44 CreateTranslation(Vector3 position) Parameters position Vector3 Returns Matrix44 CreateTranslation(float, float, float) public static Matrix44 CreateTranslation(float x, float y, float z) Parameters x float y float z float Returns Matrix44 Decompose(out Vector3, out Matrix44, out Vector3) Decomposes a matrix into a scale, rotation, and translation. public void Decompose(out Vector3 scale, out Matrix44 rotation, out Vector3 translation) Parameters scale Vector3 When the method completes, contains the scaling component of the decomposed matrix. rotation Matrix44 When the method completes, contains the rtoation component of the decomposed matrix. translation Vector3 When the method completes, contains the translation component of the decomposed matrix. Remarks This method is designed to decompose an SRT transformation matrix only. Decompose(out Vector3, out Quaternion, out Vector3) Decomposes a matrix into a scale, rotation, and translation. public void Decompose(out Vector3 scale, out Quaternion rotation, out Vector3 translation) Parameters scale Vector3 When the method completes, contains the scaling component of the decomposed matrix. rotation Quaternion When the method completes, contains the rtoation component of the decomposed matrix. translation Vector3 When the method completes, contains the translation component of the decomposed matrix. Remarks This method is designed to decompose an SRT transformation matrix only. Equals(Matrix44) Indicates whether the current object is equal to another object of the same type. public bool Equals(Matrix44 other) Parameters other Matrix44 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. GetScale(bool) public Vector3 GetScale(bool checkReflexion) Parameters checkReflexion bool Returns Vector3 Invert(Matrix44) public static Matrix44 Invert(Matrix44 matrix) Parameters matrix Matrix44 Returns Matrix44 Invert(ref Matrix44, out Matrix44) public static void Invert(ref Matrix44 matrix, out Matrix44 result) Parameters matrix Matrix44 result Matrix44 Lerp(Matrix44, Matrix44, float) public static Matrix44 Lerp(Matrix44 value1, Matrix44 value2, float amount) Parameters value1 Matrix44 value2 Matrix44 amount float Returns Matrix44 ProjectVector(Vector2) public Vector2 ProjectVector(Vector2 position) Parameters position Vector2 Returns Vector2 ProjectVector(Vector3) public Vector3 ProjectVector(Vector3 position) Parameters position Vector3 Returns Vector3 ToFloatArray() public float[] ToFloatArray() Returns float[] ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. TransformNormal(Vector2) public Vector2 TransformNormal(Vector2 normal) Parameters normal Vector2 Returns Vector2 TransformNormal(Vector3) public Vector3 TransformNormal(Vector3 normal) Parameters normal Vector3 Returns Vector3 TransformVector(Vector2) public Vector2 TransformVector(Vector2 position) Parameters position Vector2 Returns Vector2 TransformVector(Vector3) public Vector3 TransformVector(Vector3 position) Parameters position Vector3 Returns Vector3 TransformVector(Vector4) public Vector4 TransformVector(Vector4 position) Parameters position Vector4 Returns Vector4 Transpose() public Matrix44 Transpose() Returns Matrix44 Transpose(Matrix44) public static Matrix44 Transpose(Matrix44 matrix) Parameters matrix Matrix44 Returns Matrix44 Transpose(ref Matrix44, out Matrix44) public static void Transpose(ref Matrix44 matrix, out Matrix44 result) Parameters matrix Matrix44 result Matrix44 Operators operator +(Matrix44, Matrix44) public static Matrix44 operator +(Matrix44 matrix1, Matrix44 matrix2) Parameters matrix1 Matrix44 matrix2 Matrix44 Returns Matrix44 operator ==(Matrix44, Matrix44) public static bool operator ==(Matrix44 matrix1, Matrix44 matrix2) Parameters matrix1 Matrix44 matrix2 Matrix44 Returns bool operator !=(Matrix44, Matrix44) public static bool operator !=(Matrix44 matrix1, Matrix44 matrix2) Parameters matrix1 Matrix44 matrix2 Matrix44 Returns bool operator *(Matrix44, Matrix44) public static Matrix44 operator *(Matrix44 matrix1, Matrix44 matrix2) Parameters matrix1 Matrix44 matrix2 Matrix44 Returns Matrix44 operator *(Matrix44, float) public static Matrix44 operator *(Matrix44 matrix, float scaleFactor) Parameters matrix Matrix44 scaleFactor float Returns Matrix44 operator *(Vector2, Matrix44) public static Vector2 operator *(Vector2 a, Matrix44 b) Parameters a Vector2 b Matrix44 Returns Vector2 operator *(Vector3, Matrix44) public static Vector3 operator *(Vector3 a, Matrix44 b) Parameters a Vector3 b Matrix44 Returns Vector3 operator -(Matrix44, Matrix44) public static Matrix44 operator -(Matrix44 matrix1, Matrix44 matrix2) Parameters matrix1 Matrix44 matrix2 Matrix44 Returns Matrix44 operator -(Matrix44) public static Matrix44 operator -(Matrix44 matrix) Parameters matrix Matrix44 Returns Matrix44"
  },
  "api/Lime.Matrix44SimpleAnimationCurve.html": {
    "href": "api/Lime.Matrix44SimpleAnimationCurve.html",
    "title": "Class Matrix44SimpleAnimationCurve | Citrus Engine",
    "keywords": "Class Matrix44SimpleAnimationCurve Namespace Lime Assembly Lime.dll public class Matrix44SimpleAnimationCurve : SimpleAnimationCurve<Matrix44>, IAnimationCurve<Matrix44>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Matrix44> Inheritance object SimpleAnimationCurve<Matrix44> Matrix44SimpleAnimationCurve Implements IAnimationCurve<Matrix44> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Matrix44> Inherited Members SimpleAnimationCurve<Matrix44>.Keys SimpleAnimationCurve<Matrix44>.IsEmpty SimpleAnimationCurve<Matrix44>.Duration SimpleAnimationCurve<Matrix44>.RefCount SimpleAnimationCurve<Matrix44>.AddRef() SimpleAnimationCurve<Matrix44>.Release() SimpleAnimationCurve<Matrix44>.CreateEvaluator() SimpleAnimationCurve<Matrix44>.InterpolateSplined(Matrix44, Matrix44, Matrix44, Matrix44, float) SimpleAnimationCurve<Matrix44>.Create(IEnumerable<SimpleKeyframe<Matrix44>>) SimpleAnimationCurve<Matrix44>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(Matrix44, Matrix44, float) protected override Matrix44 InterpolateLinear(Matrix44 value1, Matrix44 value2, float amount) Parameters value1 Matrix44 value2 Matrix44 amount float Returns Matrix44"
  },
  "api/Lime.Menu.Colors.html": {
    "href": "api/Lime.Menu.Colors.html",
    "title": "Class Menu.Colors | Citrus Engine",
    "keywords": "Class Menu.Colors Namespace Lime Assembly Lime.dll public class Menu.Colors : ProfessionalColorTable Inheritance object ProfessionalColorTable Menu.Colors Inherited Members ProfessionalColorTable.UseSystemColors ProfessionalColorTable.ButtonSelectedHighlight ProfessionalColorTable.ButtonSelectedHighlightBorder ProfessionalColorTable.ButtonPressedHighlight ProfessionalColorTable.ButtonPressedHighlightBorder ProfessionalColorTable.ButtonPressedBorder ProfessionalColorTable.ButtonSelectedBorder ProfessionalColorTable.ButtonSelectedGradientBegin ProfessionalColorTable.ButtonSelectedGradientMiddle ProfessionalColorTable.ButtonSelectedGradientEnd ProfessionalColorTable.ButtonPressedGradientBegin ProfessionalColorTable.ButtonPressedGradientMiddle ProfessionalColorTable.ButtonPressedGradientEnd ProfessionalColorTable.GripDark ProfessionalColorTable.GripLight ProfessionalColorTable.RaftingContainerGradientBegin ProfessionalColorTable.RaftingContainerGradientEnd ProfessionalColorTable.SeparatorDark ProfessionalColorTable.SeparatorLight ProfessionalColorTable.StatusStripBorder ProfessionalColorTable.StatusStripGradientBegin ProfessionalColorTable.StatusStripGradientEnd ProfessionalColorTable.ToolStripBorder ProfessionalColorTable.ToolStripGradientBegin ProfessionalColorTable.ToolStripGradientMiddle ProfessionalColorTable.ToolStripGradientEnd ProfessionalColorTable.ToolStripContentPanelGradientBegin ProfessionalColorTable.ToolStripContentPanelGradientEnd ProfessionalColorTable.ToolStripPanelGradientBegin ProfessionalColorTable.ToolStripPanelGradientEnd ProfessionalColorTable.OverflowButtonGradientBegin ProfessionalColorTable.OverflowButtonGradientMiddle ProfessionalColorTable.OverflowButtonGradientEnd object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Colors() public Colors() Properties ButtonCheckedGradientBegin Gets the starting color of the gradient used when the button is checked. public override Color ButtonCheckedGradientBegin { get; } Property Value Color A Color that is the starting color of the gradient used when the button is checked. ButtonCheckedGradientEnd Gets the end color of the gradient used when the button is checked. public override Color ButtonCheckedGradientEnd { get; } Property Value Color A Color that is the end color of the gradient used when the button is checked. ButtonCheckedGradientMiddle Gets the middle color of the gradient used when the button is checked. public override Color ButtonCheckedGradientMiddle { get; } Property Value Color A Color that is the middle color of the gradient used when the button is checked. ButtonCheckedHighlight Gets the solid color used when the button is checked. public override Color ButtonCheckedHighlight { get; } Property Value Color A Color that is the solid color used when the button is checked. ButtonCheckedHighlightBorder Gets the border color to use with ButtonCheckedHighlight. public override Color ButtonCheckedHighlightBorder { get; } Property Value Color A Color that is the border color to use with ButtonCheckedHighlight. CheckBackground Gets the solid color to use when the button is checked and gradients are being used. public override Color CheckBackground { get; } Property Value Color A Color that is the solid color to use when the button is checked and gradients are being used. CheckPressedBackground Gets the solid color to use when the button is checked and selected and gradients are being used. public override Color CheckPressedBackground { get; } Property Value Color A Color that is the solid color to use when the button is checked and selected and gradients are being used. CheckSelectedBackground Gets the solid color to use when the button is checked and selected and gradients are being used. public override Color CheckSelectedBackground { get; } Property Value Color A Color that is the solid color to use when the button is checked and selected and gradients are being used. Highlight public static Color Highlight { get; } Property Value Color ImageMarginGradientBegin Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu. public override Color ImageMarginGradientBegin { get; } Property Value Color A Color that is the starting color of the gradient used in the image margin of a ToolStripDropDownMenu. ImageMarginGradientEnd Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu. public override Color ImageMarginGradientEnd { get; } Property Value Color A Color that is the end color of the gradient used in the image margin of a ToolStripDropDownMenu. ImageMarginGradientMiddle Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu. public override Color ImageMarginGradientMiddle { get; } Property Value Color A Color that is the middle color of the gradient used in the image margin of a ToolStripDropDownMenu. ImageMarginRevealedGradientBegin Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed. public override Color ImageMarginRevealedGradientBegin { get; } Property Value Color A Color that is the starting color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed. ImageMarginRevealedGradientEnd Gets the end color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed. public override Color ImageMarginRevealedGradientEnd { get; } Property Value Color A Color that is the end color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed. ImageMarginRevealedGradientMiddle Gets the middle color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed. public override Color ImageMarginRevealedGradientMiddle { get; } Property Value Color A Color that is the middle color of the gradient used in the image margin of a ToolStripDropDownMenu when an item is revealed. Main public static Color Main { get; } Property Value Color MenuBorder Gets the color that is the border color to use on a MenuStrip. public override Color MenuBorder { get; } Property Value Color A Color that is the border color to use on a MenuStrip. MenuItemBorder Gets the border color to use with a ToolStripMenuItem. public override Color MenuItemBorder { get; } Property Value Color A Color that is the border color to use with a ToolStripMenuItem. MenuItemPressedGradientBegin Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed. public override Color MenuItemPressedGradientBegin { get; } Property Value Color A Color that is the starting color of the gradient used when a top-level ToolStripMenuItem is pressed. MenuItemPressedGradientEnd Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed. public override Color MenuItemPressedGradientEnd { get; } Property Value Color A Color that is the end color of the gradient used when a top-level ToolStripMenuItem is pressed. MenuItemPressedGradientMiddle Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed. public override Color MenuItemPressedGradientMiddle { get; } Property Value Color A Color that is the middle color of the gradient used when a top-level ToolStripMenuItem is pressed. MenuItemSelected Gets the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected. public override Color MenuItemSelected { get; } Property Value Color A Color that is the solid color to use when a ToolStripMenuItem other than the top-level ToolStripMenuItem is selected. MenuItemSelectedGradientBegin Gets the starting color of the gradient used when the ToolStripMenuItem is selected. public override Color MenuItemSelectedGradientBegin { get; } Property Value Color A Color that is the starting color of the gradient used when the ToolStripMenuItem is selected. MenuItemSelectedGradientEnd Gets the end color of the gradient used when the ToolStripMenuItem is selected. public override Color MenuItemSelectedGradientEnd { get; } Property Value Color A Color that is the end color of the gradient used when the ToolStripMenuItem is selected. MenuStripGradientBegin Gets the starting color of the gradient used in the MenuStrip. public override Color MenuStripGradientBegin { get; } Property Value Color A Color that is the starting color of the gradient used in the MenuStrip. MenuStripGradientEnd Gets the end color of the gradient used in the MenuStrip. public override Color MenuStripGradientEnd { get; } Property Value Color A Color that is the end color of the gradient used in the MenuStrip. Secondary public static Color Secondary { get; } Property Value Color Text public static Color Text { get; } Property Value Color ToolStripDropDownBackground Gets the solid background color of the ToolStripDropDown. public override Color ToolStripDropDownBackground { get; } Property Value Color A Color that is the solid background color of the ToolStripDropDown."
  },
  "api/Lime.Menu.Renderer.html": {
    "href": "api/Lime.Menu.Renderer.html",
    "title": "Class Menu.Renderer | Citrus Engine",
    "keywords": "Class Menu.Renderer Namespace Lime Assembly Lime.dll public class Menu.Renderer : ToolStripProfessionalRenderer Inheritance object ToolStripRenderer ToolStripProfessionalRenderer Menu.Renderer Inherited Members ToolStripProfessionalRenderer.OnRenderToolStripBackground(ToolStripRenderEventArgs) ToolStripProfessionalRenderer.OnRenderOverflowButtonBackground(ToolStripItemRenderEventArgs) ToolStripProfessionalRenderer.OnRenderDropDownButtonBackground(ToolStripItemRenderEventArgs) ToolStripProfessionalRenderer.OnRenderSeparator(ToolStripSeparatorRenderEventArgs) ToolStripProfessionalRenderer.OnRenderSplitButtonBackground(ToolStripItemRenderEventArgs) ToolStripProfessionalRenderer.OnRenderToolStripStatusLabelBackground(ToolStripItemRenderEventArgs) ToolStripProfessionalRenderer.OnRenderLabelBackground(ToolStripItemRenderEventArgs) ToolStripProfessionalRenderer.OnRenderButtonBackground(ToolStripItemRenderEventArgs) ToolStripProfessionalRenderer.OnRenderToolStripBorder(ToolStripRenderEventArgs) ToolStripProfessionalRenderer.OnRenderGrip(ToolStripGripRenderEventArgs) ToolStripProfessionalRenderer.OnRenderMenuItemBackground(ToolStripItemRenderEventArgs) ToolStripProfessionalRenderer.OnRenderImageMargin(ToolStripRenderEventArgs) ToolStripProfessionalRenderer.OnRenderItemText(ToolStripItemTextRenderEventArgs) ToolStripProfessionalRenderer.OnRenderItemImage(ToolStripItemImageRenderEventArgs) ToolStripProfessionalRenderer.OnRenderToolStripPanelBackground(ToolStripPanelRenderEventArgs) ToolStripProfessionalRenderer.OnRenderToolStripContentPanelBackground(ToolStripContentPanelRenderEventArgs) ToolStripProfessionalRenderer.ColorTable ToolStripProfessionalRenderer.RoundedEdges ToolStripRenderer.Offset2X ToolStripRenderer.Offset2Y ToolStripRenderer.CreateDisabledImage(Image) ToolStripRenderer.DrawArrow(ToolStripArrowRenderEventArgs) ToolStripRenderer.DrawToolStripBackground(ToolStripRenderEventArgs) ToolStripRenderer.DrawGrip(ToolStripGripRenderEventArgs) ToolStripRenderer.DrawItemBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawImageMargin(ToolStripRenderEventArgs) ToolStripRenderer.DrawLabelBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawButtonBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawToolStripBorder(ToolStripRenderEventArgs) ToolStripRenderer.DrawDropDownButtonBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawOverflowButtonBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawItemImage(ToolStripItemImageRenderEventArgs) ToolStripRenderer.DrawItemCheck(ToolStripItemImageRenderEventArgs) ToolStripRenderer.DrawItemText(ToolStripItemTextRenderEventArgs) ToolStripRenderer.DrawMenuItemBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawSplitButton(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawToolStripStatusLabelBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.DrawStatusStripSizingGrip(ToolStripRenderEventArgs) ToolStripRenderer.DrawSeparator(ToolStripSeparatorRenderEventArgs) ToolStripRenderer.DrawToolStripPanelBackground(ToolStripPanelRenderEventArgs) ToolStripRenderer.DrawToolStripContentPanelBackground(ToolStripContentPanelRenderEventArgs) ToolStripRenderer.Initialize(ToolStrip) ToolStripRenderer.InitializePanel(ToolStripPanel) ToolStripRenderer.InitializeContentPanel(ToolStripContentPanel) ToolStripRenderer.InitializeItem(ToolStripItem) ToolStripRenderer.ScaleArrowOffsetsIfNeeded() ToolStripRenderer.ScaleArrowOffsetsIfNeeded(int) ToolStripRenderer.OnRenderItemBackground(ToolStripItemRenderEventArgs) ToolStripRenderer.OnRenderStatusStripSizingGrip(ToolStripRenderEventArgs) ToolStripRenderer.RenderArrow ToolStripRenderer.RenderToolStripBackground ToolStripRenderer.RenderToolStripPanelBackground ToolStripRenderer.RenderToolStripContentPanelBackground ToolStripRenderer.RenderToolStripBorder ToolStripRenderer.RenderButtonBackground ToolStripRenderer.RenderDropDownButtonBackground ToolStripRenderer.RenderOverflowButtonBackground ToolStripRenderer.RenderGrip ToolStripRenderer.RenderItemBackground ToolStripRenderer.RenderItemImage ToolStripRenderer.RenderItemCheck ToolStripRenderer.RenderItemText ToolStripRenderer.RenderImageMargin ToolStripRenderer.RenderLabelBackground ToolStripRenderer.RenderMenuItemBackground ToolStripRenderer.RenderToolStripStatusLabelBackground ToolStripRenderer.RenderStatusStripSizingGrip ToolStripRenderer.RenderSplitButtonBackground ToolStripRenderer.RenderSeparator object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Renderer(ProfessionalColorTable) public Renderer(ProfessionalColorTable professionalColorTable) Parameters professionalColorTable ProfessionalColorTable Methods OnRenderArrow(ToolStripArrowRenderEventArgs) Raises the RenderArrow event. protected override void OnRenderArrow(ToolStripArrowRenderEventArgs e) Parameters e ToolStripArrowRenderEventArgs A ToolStripArrowRenderEventArgs that contains the event data. OnRenderItemCheck(ToolStripItemImageRenderEventArgs) Raises the RenderItemCheck event. protected override void OnRenderItemCheck(ToolStripItemImageRenderEventArgs e) Parameters e ToolStripItemImageRenderEventArgs A ToolStripItemImageRenderEventArgs that contains the event data."
  },
  "api/Lime.Menu.html": {
    "href": "api/Lime.Menu.html",
    "title": "Class Menu | Citrus Engine",
    "keywords": "Class Menu Namespace Lime Assembly Lime.dll public class Menu : List<ICommand>, IReadOnlyList<ICommand>, IReadOnlyCollection<ICommand>, IList, ICollection, IMenu, IList<ICommand>, ICollection<ICommand>, IEnumerable<ICommand>, IEnumerable Inheritance object List<ICommand> Menu Implements IReadOnlyList<ICommand> IReadOnlyCollection<ICommand> IList ICollection IMenu IList<ICommand> ICollection<ICommand> IEnumerable<ICommand> IEnumerable Inherited Members List<ICommand>.Add(ICommand) List<ICommand>.AddRange(IEnumerable<ICommand>) List<ICommand>.AsReadOnly() List<ICommand>.BinarySearch(int, int, ICommand, IComparer<ICommand>) List<ICommand>.BinarySearch(ICommand) List<ICommand>.BinarySearch(ICommand, IComparer<ICommand>) List<ICommand>.Clear() List<ICommand>.Contains(ICommand) List<ICommand>.ConvertAll<TOutput>(Converter<ICommand, TOutput>) List<ICommand>.CopyTo(int, ICommand[], int, int) List<ICommand>.CopyTo(ICommand[]) List<ICommand>.CopyTo(ICommand[], int) List<ICommand>.EnsureCapacity(int) List<ICommand>.Exists(Predicate<ICommand>) List<ICommand>.Find(Predicate<ICommand>) List<ICommand>.FindAll(Predicate<ICommand>) List<ICommand>.FindIndex(int, int, Predicate<ICommand>) List<ICommand>.FindIndex(int, Predicate<ICommand>) List<ICommand>.FindIndex(Predicate<ICommand>) List<ICommand>.FindLast(Predicate<ICommand>) List<ICommand>.FindLastIndex(int, int, Predicate<ICommand>) List<ICommand>.FindLastIndex(int, Predicate<ICommand>) List<ICommand>.FindLastIndex(Predicate<ICommand>) List<ICommand>.ForEach(Action<ICommand>) List<ICommand>.GetEnumerator() List<ICommand>.GetRange(int, int) List<ICommand>.IndexOf(ICommand) List<ICommand>.IndexOf(ICommand, int) List<ICommand>.IndexOf(ICommand, int, int) List<ICommand>.Insert(int, ICommand) List<ICommand>.InsertRange(int, IEnumerable<ICommand>) List<ICommand>.LastIndexOf(ICommand) List<ICommand>.LastIndexOf(ICommand, int) List<ICommand>.LastIndexOf(ICommand, int, int) List<ICommand>.Remove(ICommand) List<ICommand>.RemoveAll(Predicate<ICommand>) List<ICommand>.RemoveAt(int) List<ICommand>.RemoveRange(int, int) List<ICommand>.Reverse() List<ICommand>.Reverse(int, int) List<ICommand>.Slice(int, int) List<ICommand>.Sort() List<ICommand>.Sort(IComparer<ICommand>) List<ICommand>.Sort(Comparison<ICommand>) List<ICommand>.Sort(int, int, IComparer<ICommand>) List<ICommand>.ToArray() List<ICommand>.TrimExcess() List<ICommand>.TrueForAll(Predicate<ICommand>) List<ICommand>.Capacity List<ICommand>.Count List<ICommand>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Toolbox.RemoveTail<T>(List<T>, int) Constructors Menu(bool) public Menu(bool ignoreFirstFocusLoss = false) Parameters ignoreFirstFocusLoss bool Properties ShowImageMargin public bool ShowImageMargin { get; set; } Property Value bool Methods FindCommand(string) Returns first menu item with a given text. public ICommand FindCommand(string text) Parameters text string Returns ICommand Popup() Shows the menu at the current position of the cursor. public void Popup() Popup(IWindow, Vector2, float, ICommand) Shows the menu at the given client position of the window. public void Popup(IWindow window, Vector2 position, float minimumWidth, ICommand command) Parameters window IWindow position Vector2 The location in the window client coordinate system to display the menu item. minimumWidth float command ICommand The menu item to be positioned at the specified location in the window. Refresh() Refreshes the menu according to its internal state. public void Refresh()"
  },
  "api/Lime.Mesh-1.html": {
    "href": "api/Lime.Mesh-1.html",
    "title": "Class Mesh<T> | Citrus Engine",
    "keywords": "Class Mesh<T> Namespace Lime Assembly Lime.dll [YuzuSpecializeWith(typeof(Mesh3D.Vertex))] public class Mesh<T> : IMesh, IDisposable where T : unmanaged Type Parameters T Inheritance object Mesh<T> Implements IMesh IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AttributeLocations [YuzuMember] public int[] AttributeLocations Field Value int[] DirtyFlags public MeshDirtyFlags DirtyFlags Field Value MeshDirtyFlags IndexCount public int IndexCount Field Value int Indices [YuzuMember] [TangerineKeyframeColor(21)] public ushort[] Indices Field Value ushort[] Topology [YuzuMember] public PrimitiveTopology Topology Field Value PrimitiveTopology VertexCount public int VertexCount Field Value int Vertices [YuzuMember] public T[] Vertices Field Value T[] Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Draw(int, int) public void Draw(int startVertex, int vertexCount) Parameters startVertex int vertexCount int DrawIndexed(int, int, int) public void DrawIndexed(int startIndex, int indexCount, int baseVertex = 0) Parameters startIndex int indexCount int baseVertex int GetEffectiveIndexCount() public int GetEffectiveIndexCount() Returns int GetEffectiveVertexCount() public int GetEffectiveVertexCount() Returns int ShallowClone() public Mesh<T> ShallowClone() Returns Mesh<T>"
  },
  "api/Lime.Mesh3D.BlendIndices.html": {
    "href": "api/Lime.Mesh3D.BlendIndices.html",
    "title": "Struct Mesh3D.BlendIndices | Citrus Engine",
    "keywords": "Struct Mesh3D.BlendIndices Namespace Lime Assembly Lime.dll public struct Mesh3D.BlendIndices : IEquatable<Mesh3D.BlendIndices> Implements IEquatable<Mesh3D.BlendIndices> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Index0 [YuzuMember(\"0\")] public byte Index0 { get; set; } Property Value byte Index1 [YuzuMember(\"1\")] public byte Index1 { get; set; } Property Value byte Index2 [YuzuMember(\"2\")] public byte Index2 { get; set; } Property Value byte Index3 [YuzuMember(\"3\")] public byte Index3 { get; set; } Property Value byte Methods Equals(BlendIndices) Indicates whether the current object is equal to another object of the same type. public bool Equals(Mesh3D.BlendIndices other) Parameters other Mesh3D.BlendIndices An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToArray() public byte[] ToArray() Returns byte[]"
  },
  "api/Lime.Mesh3D.BlendWeights.html": {
    "href": "api/Lime.Mesh3D.BlendWeights.html",
    "title": "Struct Mesh3D.BlendWeights | Citrus Engine",
    "keywords": "Struct Mesh3D.BlendWeights Namespace Lime Assembly Lime.dll public struct Mesh3D.BlendWeights : IEquatable<Mesh3D.BlendWeights> Implements IEquatable<Mesh3D.BlendWeights> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Weight0 [YuzuMember(\"0\")] public float Weight0 Field Value float Weight1 [YuzuMember(\"1\")] public float Weight1 Field Value float Weight2 [YuzuMember(\"2\")] public float Weight2 Field Value float Weight3 [YuzuMember(\"3\")] public float Weight3 Field Value float Methods Equals(BlendWeights) Indicates whether the current object is equal to another object of the same type. public bool Equals(Mesh3D.BlendWeights other) Parameters other Mesh3D.BlendWeights An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToArray() public float[] ToArray() Returns float[]"
  },
  "api/Lime.Mesh3D.Vertex.html": {
    "href": "api/Lime.Mesh3D.Vertex.html",
    "title": "Struct Mesh3D.Vertex | Citrus Engine",
    "keywords": "Struct Mesh3D.Vertex Namespace Lime Assembly Lime.dll public struct Mesh3D.Vertex : IEquatable<Mesh3D.Vertex> Implements IEquatable<Mesh3D.Vertex> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BlendIndices [YuzuMember(\"3\")] public Mesh3D.BlendIndices BlendIndices Field Value Mesh3D.BlendIndices BlendWeights [YuzuMember(\"4\")] public Mesh3D.BlendWeights BlendWeights Field Value Mesh3D.BlendWeights Color [YuzuMember(\"1\")] public Color4 Color Field Value Color4 Normal [YuzuMember(\"5\")] public Vector3 Normal Field Value Vector3 Pos [YuzuMember(\"0\")] public Vector3 Pos Field Value Vector3 Tangent [YuzuMember(\"6\")] public Vector3 Tangent Field Value Vector3 UV1 [YuzuMember(\"2\")] public Vector2 UV1 Field Value Vector2 Methods Equals(Vertex) Indicates whether the current object is equal to another object of the same type. public bool Equals(Mesh3D.Vertex other) Parameters other Mesh3D.Vertex An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance."
  },
  "api/Lime.Mesh3D.html": {
    "href": "api/Lime.Mesh3D.html",
    "title": "Class Mesh3D | Citrus Engine",
    "keywords": "Class Mesh3D Namespace Lime Assembly Lime.dll public class Mesh3D : Node3D, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node Node3D Mesh3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Inherited Members Node3D.localTransform Node3D.globalTransform Node3D.globalTransformInverse Node3D.globallyVisible Node3D.globallyFreezeInvisible Node3D.globalColor Node3D.Viewport Node3D.Visible Node3D.FreezeInvisible Node3D.Scale Node3D.Rotation Node3D.Position Node3D.Color Node3D.Opaque Node3D.LocalTransform Node3D.GlobalTransform Node3D.GlobalTransformInverse Node3D.GloballyVisible Node3D.GlobalColor Node3D.RecalcGloballyFrozen() Node3D.SetGlobalTransform(Matrix44) Node3D.SetGlobalTransformInverse(Matrix44) Node3D.SetLocalTransform(Matrix44) Node3D.FindModel() Node3D.TryFindModel() Node3D.CalcTransformInSpaceOf(Node3D) Node3D.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Mesh3D() public Mesh3D() Properties BoundingSphere [YuzuMember] public BoundingSphere BoundingSphere { get; set; } Property Value BoundingSphere CastShadow public bool CastShadow { get; set; } Property Value bool Center [YuzuMember] public Vector3 Center { get; set; } Property Value Vector3 Clicked public virtual Action Clicked { get; set; } Property Value Action CullMode [YuzuMember] public CullMode CullMode { get; set; } Property Value CullMode GlobalCenter public Vector3 GlobalCenter { get; } Property Value Vector3 ProcessLightning public bool ProcessLightning { get; set; } Property Value bool RecieveShadow public bool RecieveShadow { get; set; } Property Value bool SkinningMode [YuzuMember] public SkinningMode SkinningMode { get; set; } Property Value SkinningMode SkipRender public bool SkipRender { get; set; } Property Value bool Submeshes [YuzuMember] public Submesh3DCollection Submeshes { get; } Property Value Submesh3DCollection Methods Dispose() Disposes the node and all of it components, animations, tasks, etc... public override void Dispose() GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float PartialHitTest(ref HitTestArgs) protected override bool PartialHitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool RecalcBounds() public void RecalcBounds() RecalcCenter() public void RecalcCenter()"
  },
  "api/Lime.MeshDirtyFlags.html": {
    "href": "api/Lime.MeshDirtyFlags.html",
    "title": "Enum MeshDirtyFlags | Citrus Engine",
    "keywords": "Enum MeshDirtyFlags Namespace Lime Assembly Lime.dll public enum MeshDirtyFlags Fields All = 7 AttributeLocations = 4 Indices = 2 None = 0 Vertices = 1 VerticesIndices = 3"
  },
  "api/Lime.MeshUtils.VertexProcessor-1.html": {
    "href": "api/Lime.MeshUtils.VertexProcessor-1.html",
    "title": "Delegate MeshUtils.VertexProcessor<T> | Citrus Engine",
    "keywords": "Delegate MeshUtils.VertexProcessor<T> Namespace Lime Assembly Lime.dll public delegate void MeshUtils.VertexProcessor<T>(ref T vertex) where T : unmanaged Parameters vertex T Type Parameters T"
  },
  "api/Lime.MeshUtils.html": {
    "href": "api/Lime.MeshUtils.html",
    "title": "Class MeshUtils | Citrus Engine",
    "keywords": "Class MeshUtils Namespace Lime Assembly Lime.dll public static class MeshUtils Inheritance object MeshUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Combine<T>(params Mesh<T>[]) public static Mesh<T> Combine<T>(params Mesh<T>[] meshes) where T : unmanaged Parameters meshes Mesh<T>[] Returns Mesh<T> Type Parameters T CreateCone(float, float, int, Color4) Creates a cone standing on the X-Z plane. public static Mesh<VertexPositionColor> CreateCone(float height, float radius, int tesselation, Color4 color) Parameters height float radius float tesselation int color Color4 Returns Mesh<VertexPositionColor> CreateCylinder(float, float, int, Color4) Creates a cylinder standing on the X-Z plane. public static Mesh<VertexPositionColor> CreateCylinder(float height, float radius, int tesselation, Color4 color) Parameters height float radius float tesselation int color Color4 Returns Mesh<VertexPositionColor> CreateFrustum(float, float, float, int, Color4) Creates a frustum standing on the X-Z plane. public static Mesh<VertexPositionColor> CreateFrustum(float height, float radius1, float radius2, int tesselation, Color4 color) Parameters height float radius1 float radius2 float tesselation int color Color4 Returns Mesh<VertexPositionColor> RemoveDuplicates<TVertex>(Mesh<TVertex>) public static void RemoveDuplicates<TVertex>(Mesh<TVertex> mesh) where TVertex : unmanaged Parameters mesh Mesh<TVertex> Type Parameters TVertex RemoveDuplicates<TVertex>(Mesh<TVertex>, IEqualityComparer<TVertex>) public static void RemoveDuplicates<TVertex>(Mesh<TVertex> mesh, IEqualityComparer<TVertex> comparer) where TVertex : unmanaged Parameters mesh Mesh<TVertex> comparer IEqualityComparer<TVertex> Type Parameters TVertex TransformVertices<T>(Mesh<T>, VertexProcessor<T>) public static void TransformVertices<T>(Mesh<T> mesh, MeshUtils.VertexProcessor<T> processor) where T : unmanaged Parameters mesh Mesh<T> processor MeshUtils.VertexProcessor<T> Type Parameters T"
  },
  "api/Lime.Metadata.html": {
    "href": "api/Lime.Metadata.html",
    "title": "Class Metadata | Citrus Engine",
    "keywords": "Class Metadata Namespace Lime Assembly Lime.dll Metadata for serialized documents. public abstract class Metadata Inheritance object Metadata Derived LayerMetadata PreviewMetadata LayerMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() See Also DocumentHeader"
  },
  "api/Lime.Model3D.MeshData.html": {
    "href": "api/Lime.Model3D.MeshData.html",
    "title": "Class Model3D.MeshData | Citrus Engine",
    "keywords": "Class Model3D.MeshData Namespace Lime Assembly Lime.dll public class Model3D.MeshData Inheritance object Model3D.MeshData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Meshes [YuzuMember] public List<Mesh<Mesh3D.Vertex>> Meshes { get; } Property Value List<Mesh<Mesh3D.Vertex>> Methods Load(string) public static Model3D.MeshData Load(string path) Parameters path string Returns Model3D.MeshData"
  },
  "api/Lime.Model3D.html": {
    "href": "api/Lime.Model3D.html",
    "title": "Class Model3D | Citrus Engine",
    "keywords": "Class Model3D Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"3D/Model 3D\")] [TangerineVisualHintGroup(\"/All/Nodes/3D\", null)] public class Model3D : Node3D, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Node3D Model3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node3D.localTransform Node3D.globalTransform Node3D.globalTransformInverse Node3D.globallyVisible Node3D.globallyFreezeInvisible Node3D.globalColor Node3D.Viewport Node3D.Visible Node3D.FreezeInvisible Node3D.Scale Node3D.Rotation Node3D.Position Node3D.Color Node3D.Opaque Node3D.LocalTransform Node3D.GlobalTransform Node3D.GlobalTransformInverse Node3D.GloballyVisible Node3D.GlobalColor Node3D.RecalcGloballyFrozen() Node3D.SetGlobalTransform(Matrix44) Node3D.SetGlobalTransformInverse(Matrix44) Node3D.SetLocalTransform(Matrix44) Node3D.FindModel() Node3D.TryFindModel() Node3D.CalcTransformInSpaceOf(Node3D) Node3D.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Properties MeshContentPath [YuzuMember] public string MeshContentPath { get; set; } Property Value string Methods OnAfterDeserialization() public void OnAfterDeserialization() RebuildSkeleton() public void RebuildSkeleton()"
  },
  "api/Lime.Model3DAttachment.Animation.html": {
    "href": "api/Lime.Model3DAttachment.Animation.html",
    "title": "Class Model3DAttachment.Animation | Citrus Engine",
    "keywords": "Class Model3DAttachment.Animation Namespace Lime Assembly Lime.dll public class Model3DAttachment.Animation Inheritance object Model3DAttachment.Animation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IgnoredNodes public ObservableCollection<Model3DAttachment.NodeData> IgnoredNodes Field Value ObservableCollection<Model3DAttachment.NodeData> Markers public ObservableCollection<Model3DAttachment.MarkerData> Markers Field Value ObservableCollection<Model3DAttachment.MarkerData> MarkersBlendings public readonly ObservableCollection<Model3DAttachment.MarkerBlendingData> MarkersBlendings Field Value ObservableCollection<Model3DAttachment.MarkerBlendingData> Nodes public ObservableCollection<Model3DAttachment.NodeData> Nodes Field Value ObservableCollection<Model3DAttachment.NodeData> Properties Blending public BlendingOption Blending { get; set; } Property Value BlendingOption FirstFrame public int FirstFrame { get; set; } Property Value int Id public string Id { get; set; } Property Value string LastFrame public int LastFrame { get; set; } Property Value int SourceAnimationId public string SourceAnimationId { get; set; } Property Value string Methods GetHashCodeForTrigger() public int GetHashCodeForTrigger() Returns int"
  },
  "api/Lime.Model3DAttachment.MarkerBlendingData.html": {
    "href": "api/Lime.Model3DAttachment.MarkerBlendingData.html",
    "title": "Class Model3DAttachment.MarkerBlendingData | Citrus Engine",
    "keywords": "Class Model3DAttachment.MarkerBlendingData Namespace Lime Assembly Lime.dll public class Model3DAttachment.MarkerBlendingData Inheritance object Model3DAttachment.MarkerBlendingData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Blending public BlendingOption Blending { get; set; } Property Value BlendingOption DestMarkerId public string DestMarkerId { get; set; } Property Value string SourceMarkerId public string SourceMarkerId { get; set; } Property Value string"
  },
  "api/Lime.Model3DAttachment.MarkerData.html": {
    "href": "api/Lime.Model3DAttachment.MarkerData.html",
    "title": "Class Model3DAttachment.MarkerData | Citrus Engine",
    "keywords": "Class Model3DAttachment.MarkerData Namespace Lime Assembly Lime.dll public class Model3DAttachment.MarkerData Inheritance object Model3DAttachment.MarkerData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Blending public BlendingOption Blending { get; set; } Property Value BlendingOption Marker public Marker Marker { get; set; } Property Value Marker"
  },
  "api/Lime.Model3DAttachment.MaterialRemap.html": {
    "href": "api/Lime.Model3DAttachment.MaterialRemap.html",
    "title": "Class Model3DAttachment.MaterialRemap | Citrus Engine",
    "keywords": "Class Model3DAttachment.MaterialRemap Namespace Lime Assembly Lime.dll public class Model3DAttachment.MaterialRemap Inheritance object Model3DAttachment.MaterialRemap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Material [YuzuMember] public IMaterial Material { get; set; } Property Value IMaterial SourceName [YuzuMember] public string SourceName { get; set; } Property Value string"
  },
  "api/Lime.Model3DAttachment.MeshOption.html": {
    "href": "api/Lime.Model3DAttachment.MeshOption.html",
    "title": "Class Model3DAttachment.MeshOption | Citrus Engine",
    "keywords": "Class Model3DAttachment.MeshOption Namespace Lime Assembly Lime.dll public class Model3DAttachment.MeshOption Inheritance object Model3DAttachment.MeshOption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CullMode public CullMode CullMode { get; set; } Property Value CullMode DisableMerging public bool DisableMerging { get; set; } Property Value bool HitTestTarget public bool HitTestTarget { get; set; } Property Value bool Id public string Id { get; set; } Property Value string Opaque public bool Opaque { get; set; } Property Value bool SkinningMode public SkinningMode SkinningMode { get; set; } Property Value SkinningMode"
  },
  "api/Lime.Model3DAttachment.NodeComponentCollection.html": {
    "href": "api/Lime.Model3DAttachment.NodeComponentCollection.html",
    "title": "Class Model3DAttachment.NodeComponentCollection | Citrus Engine",
    "keywords": "Class Model3DAttachment.NodeComponentCollection Namespace Lime Assembly Lime.dll public class Model3DAttachment.NodeComponentCollection Inheritance object Model3DAttachment.NodeComponentCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Components public ObservableCollection<NodeComponent> Components { get; set; } Property Value ObservableCollection<NodeComponent> IsRoot public bool IsRoot { get; set; } Property Value bool NodeId public string NodeId { get; set; } Property Value string"
  },
  "api/Lime.Model3DAttachment.NodeData.html": {
    "href": "api/Lime.Model3DAttachment.NodeData.html",
    "title": "Class Model3DAttachment.NodeData | Citrus Engine",
    "keywords": "Class Model3DAttachment.NodeData Namespace Lime Assembly Lime.dll public class Model3DAttachment.NodeData Inheritance object Model3DAttachment.NodeData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public string Id { get; set; } Property Value string"
  },
  "api/Lime.Model3DAttachment.NodeRemoval.html": {
    "href": "api/Lime.Model3DAttachment.NodeRemoval.html",
    "title": "Class Model3DAttachment.NodeRemoval | Citrus Engine",
    "keywords": "Class Model3DAttachment.NodeRemoval Namespace Lime Assembly Lime.dll public class Model3DAttachment.NodeRemoval Inheritance object Model3DAttachment.NodeRemoval Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NodeId public string NodeId { get; set; } Property Value string"
  },
  "api/Lime.Model3DAttachment.html": {
    "href": "api/Lime.Model3DAttachment.html",
    "title": "Class Model3DAttachment | Citrus Engine",
    "keywords": "Class Model3DAttachment Namespace Lime Assembly Lime.dll public class Model3DAttachment Inheritance object Model3DAttachment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Animations public readonly ObservableCollection<Model3DAttachment.Animation> Animations Field Value ObservableCollection<Model3DAttachment.Animation> DefaultPositionKeyframeError public const float DefaultPositionKeyframeError = 0.001 Field Value float DefaultRotationKeyframeError public const float DefaultRotationKeyframeError = 0.5 Field Value float DefaultScaleKeyframeError public const float DefaultScaleKeyframeError = 0.001 Field Value float FileExtension public const string FileExtension = \".Attachment.txt\" Field Value string Materials public readonly ObservableCollection<Model3DAttachment.MaterialRemap> Materials Field Value ObservableCollection<Model3DAttachment.MaterialRemap> MeshOptions public readonly ObservableCollection<Model3DAttachment.MeshOption> MeshOptions Field Value ObservableCollection<Model3DAttachment.MeshOption> NodeComponents public readonly ObservableCollection<Model3DAttachment.NodeComponentCollection> NodeComponents Field Value ObservableCollection<Model3DAttachment.NodeComponentCollection> NodeRemovals public readonly ObservableCollection<Model3DAttachment.NodeRemoval> NodeRemovals Field Value ObservableCollection<Model3DAttachment.NodeRemoval> Properties CompressAnimations public bool CompressAnimations { get; set; } Property Value bool EntryTrigger public string EntryTrigger { get; set; } Property Value string MergeMeshes public bool MergeMeshes { get; set; } Property Value bool PositionKeyframeError public float PositionKeyframeError { get; set; } Property Value float RotationKeyframeError public float RotationKeyframeError { get; set; } Property Value float ScaleFactor public float ScaleFactor { get; set; } Property Value float ScaleKeyframeError public float ScaleKeyframeError { get; set; } Property Value float Methods Apply(Model3D) public void Apply(Model3D model) Parameters model Model3D Combine(params Submesh3D[]) public static Submesh3D Combine(params Submesh3D[] submeshes) Parameters submeshes Submesh3D[] Returns Submesh3D CreateDefault() public static Model3DAttachment CreateDefault() Returns Model3DAttachment GetHashCodeForTrigger() public int GetHashCodeForTrigger() Returns int ValidateComponentType(Type, Type) public static bool ValidateComponentType(Type nodeType, Type componentType) Parameters nodeType Type componentType Type Returns bool"
  },
  "api/Lime.Model3DAttachmentParser.MeshOptionFormat.html": {
    "href": "api/Lime.Model3DAttachmentParser.MeshOptionFormat.html",
    "title": "Class Model3DAttachmentParser.MeshOptionFormat | Citrus Engine",
    "keywords": "Class Model3DAttachmentParser.MeshOptionFormat Namespace Lime Assembly Lime.dll public class Model3DAttachmentParser.MeshOptionFormat Inheritance object Model3DAttachmentParser.MeshOptionFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CullMode [YuzuMember] public string CullMode Field Value string DisableMerging [YuzuMember] public bool DisableMerging Field Value bool HitTestTarget [YuzuMember] public bool HitTestTarget Field Value bool Opaque [YuzuMember] public bool Opaque Field Value bool SkinningMode [YuzuMember] public SkinningMode SkinningMode Field Value SkinningMode"
  },
  "api/Lime.Model3DAttachmentParser.ModelAnimationFormat.html": {
    "href": "api/Lime.Model3DAttachmentParser.ModelAnimationFormat.html",
    "title": "Class Model3DAttachmentParser.ModelAnimationFormat | Citrus Engine",
    "keywords": "Class Model3DAttachmentParser.ModelAnimationFormat Namespace Lime Assembly Lime.dll public class Model3DAttachmentParser.ModelAnimationFormat Inheritance object Model3DAttachmentParser.ModelAnimationFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Blending [YuzuMember] public int? Blending Field Value int? IgnoredNodes [YuzuMember] public List<string> IgnoredNodes Field Value List<string> LastFrame [YuzuMember] [YuzuSerializeIf(\"ShouldSerializeLastFrame\")] public int LastFrame Field Value int Markers [YuzuMember] public Dictionary<string, Model3DAttachmentParser.ModelMarkerFormat> Markers Field Value Dictionary<string, Model3DAttachmentParser.ModelMarkerFormat> Nodes [YuzuMember] public List<string> Nodes Field Value List<string> SourceAnimationId [YuzuMember] public string SourceAnimationId Field Value string StartFrame [YuzuMember] [YuzuSerializeIf(\"ShouldSerializeStartFrame\")] public int StartFrame Field Value int Methods ShouldSerializeLastFrame() public bool ShouldSerializeLastFrame() Returns bool ShouldSerializeStartFrame() public bool ShouldSerializeStartFrame() Returns bool"
  },
  "api/Lime.Model3DAttachmentParser.ModelAttachmentFormat.html": {
    "href": "api/Lime.Model3DAttachmentParser.ModelAttachmentFormat.html",
    "title": "Class Model3DAttachmentParser.ModelAttachmentFormat | Citrus Engine",
    "keywords": "Class Model3DAttachmentParser.ModelAttachmentFormat Namespace Lime Assembly Lime.dll public class Model3DAttachmentParser.ModelAttachmentFormat Inheritance object Model3DAttachmentParser.ModelAttachmentFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Animations [YuzuMember] public Dictionary<string, Model3DAttachmentParser.ModelAnimationFormat> Animations Field Value Dictionary<string, Model3DAttachmentParser.ModelAnimationFormat> CompressAnimations [YuzuMember] public bool CompressAnimations Field Value bool EntryTrigger [YuzuMember] public string EntryTrigger Field Value string Materials [YuzuMember] public List<Model3DAttachment.MaterialRemap> Materials Field Value List<Model3DAttachment.MaterialRemap> MergeMeshes [YuzuMember] public bool MergeMeshes Field Value bool MeshOptions [YuzuMember] public Dictionary<string, Model3DAttachmentParser.MeshOptionFormat> MeshOptions Field Value Dictionary<string, Model3DAttachmentParser.MeshOptionFormat> NodeComponents [YuzuMember] public Dictionary<string, Model3DAttachmentParser.ModelComponentsFormat> NodeComponents Field Value Dictionary<string, Model3DAttachmentParser.ModelComponentsFormat> NodeRemovals [YuzuMember] public List<string> NodeRemovals Field Value List<string> PositionKeyframeError [YuzuMember] public float PositionKeyframeError Field Value float RotationKeyframeError [YuzuMember] public float RotationKeyframeError Field Value float ScaleFactor [YuzuMember] public float ScaleFactor Field Value float ScaleKeyframeError [YuzuMember] public float ScaleKeyframeError Field Value float UVAnimations [YuzuMember] public List<Model3DAttachmentParser.UVAnimationFormat> UVAnimations Field Value List<Model3DAttachmentParser.UVAnimationFormat> Properties SourceAnimationIds [YuzuMember] [Obsolete] public List<string> SourceAnimationIds { get; set; } Property Value List<string>"
  },
  "api/Lime.Model3DAttachmentParser.ModelComponentsFormat.html": {
    "href": "api/Lime.Model3DAttachmentParser.ModelComponentsFormat.html",
    "title": "Class Model3DAttachmentParser.ModelComponentsFormat | Citrus Engine",
    "keywords": "Class Model3DAttachmentParser.ModelComponentsFormat Namespace Lime Assembly Lime.dll public class Model3DAttachmentParser.ModelComponentsFormat Inheritance object Model3DAttachmentParser.ModelComponentsFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Components [YuzuMember] public List<NodeComponent> Components Field Value List<NodeComponent> IsRoot [YuzuMember] public bool IsRoot Field Value bool Node [YuzuMember] public string Node Field Value string"
  },
  "api/Lime.Model3DAttachmentParser.ModelMarkerFormat.html": {
    "href": "api/Lime.Model3DAttachmentParser.ModelMarkerFormat.html",
    "title": "Class Model3DAttachmentParser.ModelMarkerFormat | Citrus Engine",
    "keywords": "Class Model3DAttachmentParser.ModelMarkerFormat Namespace Lime Assembly Lime.dll public class Model3DAttachmentParser.ModelMarkerFormat Inheritance object Model3DAttachmentParser.ModelMarkerFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Action [YuzuMember] public string Action Field Value string Blending [YuzuMember] public int? Blending Field Value int? Frame [YuzuMember] public int Frame Field Value int JumpTarget [YuzuMember] public string JumpTarget Field Value string SourceMarkersBlending [YuzuMember] public Dictionary<string, int> SourceMarkersBlending Field Value Dictionary<string, int>"
  },
  "api/Lime.Model3DAttachmentParser.UVAnimationFormat.html": {
    "href": "api/Lime.Model3DAttachmentParser.UVAnimationFormat.html",
    "title": "Class Model3DAttachmentParser.UVAnimationFormat | Citrus Engine",
    "keywords": "Class Model3DAttachmentParser.UVAnimationFormat Namespace Lime Assembly Lime.dll public class Model3DAttachmentParser.UVAnimationFormat Inheritance object Model3DAttachmentParser.UVAnimationFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AnimateOverlay [YuzuMember] public bool AnimateOverlay Field Value bool AnimationSpeed [YuzuMember] public float AnimationSpeed Field Value float AnimationType [YuzuMember] public Model3DAttachmentParser.UVAnimationType AnimationType Field Value Model3DAttachmentParser.UVAnimationType BlendingMode [YuzuMember] public Model3DAttachmentParser.UVAnimationOverlayBlending BlendingMode Field Value Model3DAttachmentParser.UVAnimationOverlayBlending DiffuseTexture [YuzuMember] public string DiffuseTexture Field Value string MaskTexture [YuzuMember] public string MaskTexture Field Value string MeshName [YuzuMember] public string MeshName Field Value string OverlayTexture [YuzuMember] public string OverlayTexture Field Value string TileX [YuzuMember] public float TileX Field Value float TileY [YuzuMember] public float TileY Field Value float"
  },
  "api/Lime.Model3DAttachmentParser.UVAnimationOverlayBlending.html": {
    "href": "api/Lime.Model3DAttachmentParser.UVAnimationOverlayBlending.html",
    "title": "Enum Model3DAttachmentParser.UVAnimationOverlayBlending | Citrus Engine",
    "keywords": "Enum Model3DAttachmentParser.UVAnimationOverlayBlending Namespace Lime Assembly Lime.dll public enum Model3DAttachmentParser.UVAnimationOverlayBlending Fields Add = 2 Multiply = 0 Overlay = 1"
  },
  "api/Lime.Model3DAttachmentParser.UVAnimationType.html": {
    "href": "api/Lime.Model3DAttachmentParser.UVAnimationType.html",
    "title": "Enum Model3DAttachmentParser.UVAnimationType | Citrus Engine",
    "keywords": "Enum Model3DAttachmentParser.UVAnimationType Namespace Lime Assembly Lime.dll public enum Model3DAttachmentParser.UVAnimationType Fields Offset = 1 Rotation = 0"
  },
  "api/Lime.Model3DAttachmentParser.html": {
    "href": "api/Lime.Model3DAttachmentParser.html",
    "title": "Class Model3DAttachmentParser | Citrus Engine",
    "keywords": "Class Model3DAttachmentParser Namespace Lime Assembly Lime.dll public class Model3DAttachmentParser Inheritance object Model3DAttachmentParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertToModelAttachmentFormat(Model3DAttachment) public static Model3DAttachmentParser.ModelAttachmentFormat ConvertToModelAttachmentFormat(Model3DAttachment attachment) Parameters attachment Model3DAttachment Returns Model3DAttachmentParser.ModelAttachmentFormat GetAttachmentPath(string) public static string GetAttachmentPath(string modelPath) Parameters modelPath string Returns string GetModel3DAttachment(ModelAttachmentFormat) public static Model3DAttachment GetModel3DAttachment(Model3DAttachmentParser.ModelAttachmentFormat modelAttachmentFormat) Parameters modelAttachmentFormat Model3DAttachmentParser.ModelAttachmentFormat Returns Model3DAttachment GetModel3DAttachment(ModelAttachmentFormat, string) public static Model3DAttachment GetModel3DAttachment(Model3DAttachmentParser.ModelAttachmentFormat modelAttachmentFormat, string modelPath) Parameters modelAttachmentFormat Model3DAttachmentParser.ModelAttachmentFormat modelPath string Returns Model3DAttachment GetModel3DAttachment(string) public static Model3DAttachment GetModel3DAttachment(string modelPath) Parameters modelPath string Returns Model3DAttachment Save(Model3DAttachment, string) public static void Save(Model3DAttachment attachment, string path) Parameters attachment Model3DAttachment path string"
  },
  "api/Lime.Modifiers.html": {
    "href": "api/Lime.Modifiers.html",
    "title": "Enum Modifiers | Citrus Engine",
    "keywords": "Enum Modifiers Namespace Lime Assembly Lime.dll [Flags] public enum Modifiers Fields Alt = 1 Command = 2 Command modifier corresponds to Control on Windows and Command key on Mac. Control = 2 None = 0 Shift = 4 Win = 8"
  },
  "api/Lime.MouseCursor.html": {
    "href": "api/Lime.MouseCursor.html",
    "title": "Class MouseCursor | Citrus Engine",
    "keywords": "Class MouseCursor Namespace Lime Assembly Lime.dll public class MouseCursor Inheritance object MouseCursor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MouseCursor(Bitmap, IntVector2) public MouseCursor(Bitmap bitmap, IntVector2 hotSpot) Parameters bitmap Bitmap hotSpot IntVector2 Properties Default public static MouseCursor Default { get; } Property Value MouseCursor Empty public static MouseCursor Empty { get; } Property Value MouseCursor Hand public static MouseCursor Hand { get; } Property Value MouseCursor IBeam public static MouseCursor IBeam { get; } Property Value MouseCursor SizeAll public static MouseCursor SizeAll { get; } Property Value MouseCursor SizeNESW public static MouseCursor SizeNESW { get; } Property Value MouseCursor SizeNS Gets the two-headed vertical (north/south) sizing cursor. public static MouseCursor SizeNS { get; } Property Value MouseCursor SizeNWSE public static MouseCursor SizeNWSE { get; } Property Value MouseCursor SizeWE Gets the two-headed horizontal(west/east) sizing cursor. public static MouseCursor SizeWE { get; } Property Value MouseCursor"
  },
  "api/Lime.MouseCursorImplementation.html": {
    "href": "api/Lime.MouseCursorImplementation.html",
    "title": "Class MouseCursorImplementation | Citrus Engine",
    "keywords": "Class MouseCursorImplementation Namespace Lime Assembly Lime.dll public class MouseCursorImplementation Inheritance object MouseCursorImplementation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MouseCursorImplementation(Bitmap, IntVector2) public MouseCursorImplementation(Bitmap bitmap, IntVector2 hotSpot) Parameters bitmap Bitmap hotSpot IntVector2 MouseCursorImplementation(nint) Create a cursor from the specified Win32 cursor handle. public MouseCursorImplementation(nint handle) Parameters handle nint MouseCursorImplementation(Cursor) public MouseCursorImplementation(Cursor nativeCursor) Parameters nativeCursor Cursor Properties NativeCursor public Cursor NativeCursor { get; } Property Value Cursor"
  },
  "api/Lime.Movie.html": {
    "href": "api/Lime.Movie.html",
    "title": "Class Movie | Citrus Engine",
    "keywords": "Class Movie Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Media\", null)] public sealed class Movie : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg, IUpdatableNode Inheritance object Node Widget Movie Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg IUpdatableNode Inherited Members Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.this[string] Widget.this[string, object[]] Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.GloballyFrozen object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Movie() public Movie() Properties Action [TangerineKeyframeColor(17)] public MovieAction Action { get; set; } Property Value MovieAction Looped [YuzuMember] [TangerineKeyframeColor(7)] public bool Looped { get; set; } Property Value bool Path [YuzuMember] [TangerineKeyframeColor(8)] [TangerineFileProperty(new string[] { \"ogv\" }, null, null, true, true)] public string Path { get; set; } Property Value string Paused public bool Paused { get; } Property Value bool Sprite Gets or sets a texture upon the widget. For widgets which can not have a texture returns null. public override ISprite Sprite { get; set; } Property Value ISprite Stopped public bool Stopped { get; } Property Value bool Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcContentSize() public override Vector2 CalcContentSize() Returns Vector2 GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject IsPlaying() public bool IsPlaying() Returns bool OnTrigger(string, object, double) Invokes when the trigger property has been changed by animation. public override void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string A property name. value object A new property value. animationTimeCorrection double An animation time correction. OnUpdate(float) public void OnUpdate(float delta) Parameters delta float Pause() public void Pause() Play() public void Play() Stop() public void Stop()"
  },
  "api/Lime.MovieAction.html": {
    "href": "api/Lime.MovieAction.html",
    "title": "Enum MovieAction | Citrus Engine",
    "keywords": "Enum MovieAction Namespace Lime Assembly Lime.dll public enum MovieAction Fields Pause = 1 Play = 0 Stop = 2"
  },
  "api/Lime.MultiCaretPosition.html": {
    "href": "api/Lime.MultiCaretPosition.html",
    "title": "Class MultiCaretPosition | Citrus Engine",
    "keywords": "Class MultiCaretPosition Namespace Lime Assembly Lime.dll public class MultiCaretPosition : ICaretPosition Inheritance object MultiCaretPosition Implements ICaretPosition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Col public int Col { get; set; } Property Value int IsValid public bool IsValid { get; } Property Value bool IsVisible public bool IsVisible { get; set; } Property Value bool Line public int Line { get; set; } Property Value int TextPos public int TextPos { get; set; } Property Value int WorldPos public Vector2 WorldPos { get; set; } Property Value Vector2 Methods Add(ICaretPosition) public void Add(ICaretPosition c) Parameters c ICaretPosition AssignFrom(ICaretPosition) public void AssignFrom(ICaretPosition c) Parameters c ICaretPosition ClampCol(int) public void ClampCol(int maxCol) Parameters maxCol int ClampLine(int) public void ClampLine(int lineCount) Parameters lineCount int ClampTextPos(int) public void ClampTextPos(int textLength) Parameters textLength int Clone() public ICaretPosition Clone() Returns ICaretPosition EmptyText(Vector2) public void EmptyText(Vector2 pos) Parameters pos Vector2 FinishSync() public void FinishSync() InvalidatePreservingTextPos() public void InvalidatePreservingTextPos() NextLine() public void NextLine() StartSync() public void StartSync() Sync(int, Vector2, Vector2) public void Sync(int index, Vector2 charPos, Vector2 size) Parameters index int charPos Vector2 size Vector2"
  },
  "api/Lime.NanoVG.Context.html": {
    "href": "api/Lime.NanoVG.Context.html",
    "title": "Class Context | Citrus Engine",
    "keywords": "Class Context Namespace Lime.NanoVG Assembly Lime.dll public class Context : IDisposable Inheritance object Context Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Context(bool) public Context(bool edgeAntiAlias = true) Parameters edgeAntiAlias bool Fields Instance public static readonly Context Instance Field Value Context Methods Arc(float, float, float, float, float, Winding) public void Arc(float cx, float cy, float r, float a0, float a1, Winding dir) Parameters cx float cy float r float a0 float a1 float dir Winding ArcTo(float, float, float, float, float) public void ArcTo(float x1, float y1, float x2, float y2, float radius) Parameters x1 float y1 float x2 float y2 float radius float BeginPath() public void BeginPath() BezierTo(float, float, float, float, float, float) public void BezierTo(float c1x, float c1y, float c2x, float c2y, float x, float y) Parameters c1x float c1y float c2x float c2y float x float y float Circle(Vector2, float) public void Circle(Vector2 v, float r) Parameters v Vector2 r float Circle(float, float, float) public void Circle(float cx, float cy, float r) Parameters cx float cy float r float ClosePath() public void ClosePath() CreateImageRGBA(int, int, ImageFlags, byte[]) public int CreateImageRGBA(int w, int h, ImageFlags imageFlags, byte[] data) Parameters w int h int imageFlags ImageFlags data byte[] Returns int CurrentTransform(Matrix32) public void CurrentTransform(Matrix32 transform) Parameters transform Matrix32 DeleteImage(int) public void DeleteImage(int image) Parameters image int Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Ellipse(Vector2, float, float) public void Ellipse(Vector2 v, float rx, float ry) Parameters v Vector2 rx float ry float Ellipse(float, float, float, float) public void Ellipse(float cx, float cy, float rx, float ry) Parameters cx float cy float rx float ry float Fill() public void Fill() FillColor(Color4) public void FillColor(Color4 color) Parameters color Color4 FillPaint(Paint) public void FillPaint(Paint paint) Parameters paint Paint GlobalAlpha(float) public void GlobalAlpha(float alpha) Parameters alpha float ImageSize(int, out int, out int) public void ImageSize(int image, out int w, out int h) Parameters image int w int h int IntersectScissor(Vector2, Vector2) public void IntersectScissor(Vector2 position, Vector2 size) Parameters position Vector2 size Vector2 IntersectScissor(float, float, float, float) public void IntersectScissor(float x, float y, float w, float h) Parameters x float y float w float h float Line(Vector2, Vector2) public void Line(Vector2 a, Vector2 b) Parameters a Vector2 b Vector2 Line(float, float, float, float) public void Line(float ax, float ay, float bx, float by) Parameters ax float ay float bx float by float LineCap(LineCap) public void LineCap(LineCap cap) Parameters cap LineCap LineJoin(LineCap) public void LineJoin(LineCap join) Parameters join LineCap LineTo(Vector2) public void LineTo(Vector2 v) Parameters v Vector2 LineTo(float, float) public void LineTo(float x, float y) Parameters x float y float MiterLimit(float) public void MiterLimit(float limit) Parameters limit float MoveTo(Vector2) public void MoveTo(Vector2 v) Parameters v Vector2 MoveTo(float, float) public void MoveTo(float x, float y) Parameters x float y float PathWinding(Solidity) public void PathWinding(Solidity dir) Parameters dir Solidity QuadTo(float, float, float, float) public void QuadTo(float cx, float cy, float x, float y) Parameters cx float cy float x float y float Rect(Vector2, Vector2) public void Rect(Vector2 position, Vector2 size) Parameters position Vector2 size Vector2 Rect(float, float, float, float) public void Rect(float x, float y, float w, float h) Parameters x float y float w float h float Reset() public void Reset() ResetScissor() public void ResetScissor() ResetTransform() public void ResetTransform() Restore() public void Restore() Rotate(float) public void Rotate(float angle) Parameters angle float RoundedRect(Vector2, Vector2, float) public void RoundedRect(Vector2 position, Vector2 size, float r) Parameters position Vector2 size Vector2 r float RoundedRect(float, float, float, float, float) public void RoundedRect(float x, float y, float w, float h, float r) Parameters x float y float w float h float r float RoundedRectVarying(float, float, float, float, float, float, float, float) public void RoundedRectVarying(float x, float y, float width, float height, float radTopLeft, float radTopRight, float radBottomRight, float radBottomLeft) Parameters x float y float width float height float radTopLeft float radTopRight float radBottomRight float radBottomLeft float Save() public void Save() Scale(float, float) public void Scale(float x, float y) Parameters x float y float Scissor(Vector2, Vector2) public void Scissor(Vector2 position, Vector2 size) Parameters position Vector2 size Vector2 Scissor(float, float, float, float) public void Scissor(float x, float y, float w, float h) Parameters x float y float w float h float ShapeAntiAlias(int) public void ShapeAntiAlias(int enabled) Parameters enabled int SkewX(float) public void SkewX(float angle) Parameters angle float SkewY(float) public void SkewY(float angle) Parameters angle float Stroke() public void Stroke() StrokeColor(Color4) public void StrokeColor(Color4 color) Parameters color Color4 StrokePaint(Paint) public void StrokePaint(Paint paint) Parameters paint Paint StrokeWidth(float) public void StrokeWidth(float width) Parameters width float Transform(Matrix32) public void Transform(Matrix32 transform) Parameters transform Matrix32 Translate(float, float) public void Translate(float x, float y) Parameters x float y float UpdateImage(int, byte[]) public void UpdateImage(int image, byte[] data) Parameters image int data byte[]"
  },
  "api/Lime.NanoVG.FillParams.html": {
    "href": "api/Lime.NanoVG.FillParams.html",
    "title": "Struct FillParams | Citrus Engine",
    "keywords": "Struct FillParams Namespace Lime.NanoVG Assembly Lime.dll public struct FillParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Extent public Vector2 Extent Field Value Vector2 Feather public float Feather Field Value float InnerCol public Vector4 InnerCol Field Value Vector4 OuterCol public Vector4 OuterCol Field Value Vector4 PaintT public Vector4 PaintT Field Value Vector4 PaintU public Vector4 PaintU Field Value Vector4 PaintV public Vector4 PaintV Field Value Vector4 Radius public float Radius Field Value float ScissorExt public Vector2 ScissorExt Field Value Vector2 ScissorScale public Vector2 ScissorScale Field Value Vector2 ScissorT public Vector4 ScissorT Field Value Vector4 ScissorU public Vector4 ScissorU Field Value Vector4 ScissorV public Vector4 ScissorV Field Value Vector4 StrokeMult public float StrokeMult Field Value float StrokeThr public float StrokeThr Field Value float TexType public float TexType Field Value float Type public float Type Field Value float"
  },
  "api/Lime.NanoVG.ImageFlags.html": {
    "href": "api/Lime.NanoVG.ImageFlags.html",
    "title": "Enum ImageFlags | Citrus Engine",
    "keywords": "Enum ImageFlags Namespace Lime.NanoVG Assembly Lime.dll public enum ImageFlags Fields FlipY = 8 GenerateMipMaps = 1 Nearest = 32 Premultiplied = 16 RepeatX = 2 RepeatY = 4"
  },
  "api/Lime.NanoVG.Material.html": {
    "href": "api/Lime.NanoVG.Material.html",
    "title": "Class Material | Citrus Engine",
    "keywords": "Class Material Namespace Lime.NanoVG Assembly Lime.dll public class Material : IMaterial Inheritance object Material Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Material() public Material() Fields FillParams public FillParams FillParams Field Value FillParams Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.NanoVG.Paint.html": {
    "href": "api/Lime.NanoVG.Paint.html",
    "title": "Struct Paint | Citrus Engine",
    "keywords": "Struct Paint Namespace Lime.NanoVG Assembly Lime.dll public struct Paint Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Paint(Color4) public Paint(Color4 color) Parameters color Color4 Fields Extent public Vector2 Extent Field Value Vector2 Feather public float Feather Field Value float Image public int Image Field Value int InnerColor public Color4 InnerColor Field Value Color4 OuterColor public Color4 OuterColor Field Value Color4 Radius public float Radius Field Value float Transform public Matrix32 Transform Field Value Matrix32 Methods BoxGradient(float, float, float, float, float, float, Color4, Color4) public static Paint BoxGradient(float x, float y, float width, float height, float radius, float feather, Color4 innerColor, Color4 outerColor) Parameters x float y float width float height float radius float feather float innerColor Color4 outerColor Color4 Returns Paint ImagePattern(float, float, float, float, float, int, float) public static Paint ImagePattern(float cx, float cy, float w, float h, float angle, int image, float alpha) Parameters cx float cy float w float h float angle float image int alpha float Returns Paint LinearGradient(float, float, float, float, Color4, Color4) public static Paint LinearGradient(float startX, float startY, float endX, float endY, Color4 innerColor, Color4 outerColor) Parameters startX float startY float endX float endY float innerColor Color4 outerColor Color4 Returns Paint RadialGradient(float, float, float, float, Color4, Color4) public static Paint RadialGradient(float centerX, float centerY, float innerRadius, float outerRadius, Color4 innerColor, Color4 outerColor) Parameters centerX float centerY float innerRadius float outerRadius float innerColor Color4 outerColor Color4 Returns Paint Operators implicit operator Paint(Color4) public static implicit operator Paint(Color4 color) Parameters color Color4 Returns Paint"
  },
  "api/Lime.NanoVG.ShaderProgram.html": {
    "href": "api/Lime.NanoVG.ShaderProgram.html",
    "title": "Class ShaderProgram | Citrus Engine",
    "keywords": "Class ShaderProgram Namespace Lime.NanoVG Assembly Lime.dll public class ShaderProgram : ShaderProgram Inheritance object ShaderProgram ShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance() public static ShaderProgram GetInstance() Returns ShaderProgram"
  },
  "api/Lime.NanoVG.Solidity.html": {
    "href": "api/Lime.NanoVG.Solidity.html",
    "title": "Enum Solidity | Citrus Engine",
    "keywords": "Enum Solidity Namespace Lime.NanoVG Assembly Lime.dll public enum Solidity Fields Hole = 2 Solid = 1"
  },
  "api/Lime.NanoVG.Winding.html": {
    "href": "api/Lime.NanoVG.Winding.html",
    "title": "Enum Winding | Citrus Engine",
    "keywords": "Enum Winding Namespace Lime.NanoVG Assembly Lime.dll public enum Winding Fields ClockWise = 2 CounterClockWise = 1"
  },
  "api/Lime.NanoVG.html": {
    "href": "api/Lime.NanoVG.html",
    "title": "Namespace Lime.NanoVG | Citrus Engine",
    "keywords": "Namespace Lime.NanoVG Classes Context Material ShaderProgram Structs FillParams Paint Enums ImageFlags Solidity Winding"
  },
  "api/Lime.NineGrid.Part.html": {
    "href": "api/Lime.NineGrid.Part.html",
    "title": "Struct NineGrid.Part | Citrus Engine",
    "keywords": "Struct NineGrid.Part Namespace Lime Assembly Lime.dll public struct NineGrid.Part Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Rect public Rectangle Rect Field Value Rectangle UV public Rectangle UV Field Value Rectangle"
  },
  "api/Lime.NineGrid.html": {
    "href": "api/Lime.NineGrid.html",
    "title": "Class NineGrid | Citrus Engine",
    "keywords": "Class NineGrid Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Images\", null)] public class NineGrid : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget NineGrid Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors NineGrid() public NineGrid() Properties BottomOffset [YuzuMember] [TangerineKeyframeColor(18)] public float BottomOffset { get; set; } Property Value float LeftOffset [YuzuMember] [TangerineKeyframeColor(15)] public float LeftOffset { get; set; } Property Value float RightOffset [YuzuMember] [TangerineKeyframeColor(16)] public float RightOffset { get; set; } Property Value float Sprite Gets or sets a texture upon the widget. For widgets which can not have a texture returns null. [YuzuMember] [TangerineKeyframeColor(14)] public override ISprite Sprite { get; set; } Property Value ISprite TextureScale [YuzuMember] [TangerineKeyframeColor(18)] public float TextureScale { get; set; } Property Value float TopOffset [YuzuMember] [TangerineKeyframeColor(17)] public float TopOffset { get; set; } Property Value float Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain BuildLayout(Part[], Vector2, float, float, float, float, Vector2) public static void BuildLayout(NineGrid.Part[] layout, Vector2 spriteSize, float leftOffset, float rightOffset, float topOffset, float bottomOffset, Vector2 widgetSize) Parameters layout Part[] spriteSize Vector2 leftOffset float rightOffset float topOffset float bottomOffset float widgetSize Vector2 GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject PartialHitTestByContents(ref HitTestArgs) protected override bool PartialHitTestByContents(ref HitTestArgs args) Parameters args HitTestArgs Returns bool"
  },
  "api/Lime.Node.AssetBundlePathComponent.html": {
    "href": "api/Lime.Node.AssetBundlePathComponent.html",
    "title": "Class Node.AssetBundlePathComponent | Citrus Engine",
    "keywords": "Class Node.AssetBundlePathComponent Namespace Lime Assembly Lime.dll For each root node of deserialized node hierarchy this component will be added and set to path in asset bundle. public class Node.AssetBundlePathComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent Node.AssetBundlePathComponent Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors AssetBundlePathComponent() public AssetBundlePathComponent() AssetBundlePathComponent(string) public AssetBundlePathComponent(string path) Parameters path string Fields Path [YuzuMember] public string Path Field Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Lime.Node.DirtyFlags.html": {
    "href": "api/Lime.Node.DirtyFlags.html",
    "title": "Enum Node.DirtyFlags | Citrus Engine",
    "keywords": "Enum Node.DirtyFlags Namespace Lime Assembly Lime.dll [Flags] protected enum Node.DirtyFlags Fields All = -1 Blending = 8 BoundingRect = 256 Color = 2 EffectiveAnimationSpeed = 1024 Enabled = 512 Frozen = 2048 GlobalTransform = 64 GlobalTransformInverse = 128 LayoutManager = 16 LocalTransform = 32 Material = 4096 None = 0 ParentBoundingRect = 8192 Shader = 4 Viewport = 16384 Visible = 1"
  },
  "api/Lime.Node.SceneLoadedDelegate.html": {
    "href": "api/Lime.Node.SceneLoadedDelegate.html",
    "title": "Delegate Node.SceneLoadedDelegate | Citrus Engine",
    "keywords": "Delegate Node.SceneLoadedDelegate Namespace Lime Assembly Lime.dll public delegate void Node.SceneLoadedDelegate(string path, Node instance, bool external) Parameters path string instance Node external bool"
  },
  "api/Lime.Node.SceneLoadingDelegate.html": {
    "href": "api/Lime.Node.SceneLoadingDelegate.html",
    "title": "Delegate Node.SceneLoadingDelegate | Citrus Engine",
    "keywords": "Delegate Node.SceneLoadingDelegate Namespace Lime Assembly Lime.dll public delegate bool Node.SceneLoadingDelegate(string path, ref Node instance, bool external, bool ignoreExternals) Parameters path string instance Node external bool ignoreExternals bool Returns bool"
  },
  "api/Lime.Node.html": {
    "href": "api/Lime.Node.html",
    "title": "Class Node | Citrus Engine",
    "keywords": "Class Node Namespace Lime Assembly Lime.dll Scene tree element. public abstract class Node : IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived Audio Bone ImageCombiner Node3D ParticleModifier PointObject SplineGear SplineGear3D SplinePoint3D TextStyle Widget Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Node() Initializes a new instance of node. protected Node() Fields CreatedCount public static int CreatedCount Field Value int DirtyMask TODO: Add summary protected Node.DirtyFlags DirtyMask Field Value Node.DirtyFlags FinalizedCount public static int FinalizedCount Field Value int HitTestTarget Gets or sets the value that's indicating if the node responds the mouse/touch events. public bool HitTestTarget Field Value bool SceneLoaded public static ThreadLocal<Node.SceneLoadedDelegate> SceneLoaded Field Value ThreadLocal<Node.SceneLoadedDelegate> SceneLoading public static ThreadLocal<Node.SceneLoadingDelegate> SceneLoading Field Value ThreadLocal<Node.SceneLoadingDelegate> globallyFrozen protected bool globallyFrozen Field Value bool Properties Ancestors Enumerate all node's ancestors. public IEnumerable<Node> Ancestors { get; } Property Value IEnumerable<Node> AnimationFrame Get or sets the current animation frame. [Obsolete(\"Use AnimationUtils.SecondsToFrames(DefaultAnimation.Time)\")] public int AnimationFrame { get; set; } Property Value int AnimationSpeed Animation speed multiplier. public float AnimationSpeed { get; set; } Property Value float AnimationTime Gets or sets time of current frame of default animation (in milliseconds). [Obsolete(\"Use DefaultAnimation.Time\")] public double AnimationTime { get; set; } Property Value double Animations Gets the animations. [YuzuMember] [YuzuSerializeIf(\"NeedSerializeAnimations\")] public AnimationCollection Animations { get; } Property Value AnimationCollection Animators Collection of Animators. [YuzuMember] public AnimatorList Animators { get; } Property Value AnimatorList AsNode3D Cached result of cast to Node3D. public Node3D AsNode3D { get; } Property Value Node3D AsWidget Cached result of cast to widget. public Widget AsWidget { get; } Property Value Widget Components Gets collection of node Components. If a node component of certain type shouldn't be serialized mark the type with NodeComponentDontSerializeAttribute. In case a node component of certain type should be removed when cooking assets use RemoveOnAssetCookAttribute. [YuzuMember] public NodeComponentCollection Components { get; } Property Value NodeComponentCollection CompoundPostPresenter Makes the post presenter compound and returns it. public CompoundPresenter CompoundPostPresenter { get; } Property Value CompoundPresenter CompoundPresenter Makes the presenter compound and returns it. public CompoundPresenter CompoundPresenter { get; } Property Value CompoundPresenter ContentsPath Denotes the path to the external scene. If this path isn't null during node loading, the node children are replaced by the external scene nodes. [YuzuMember] [Validation.DefaultCharset] public string ContentsPath { get; set; } Property Value string CurrentAnimation Name of last started marker of default animation. Is set to null by default. public string CurrentAnimation { get; set; } Property Value string DefaultAnimation Returns the first animation in the animation collection or creates an animation if the collection is empty. public Animation DefaultAnimation { get; } Property Value Animation Descendants Gets a DFS-enumeration of all descendant nodes not including itself. public IEnumerable<Node> Descendants { get; } Property Value IEnumerable<Node> EffectiveAnimationSpeed Gets absolute animation speed that's product of self animation speed multiplied by parent absolute animation speed. EffectiveAnimationSpeed = AnimationSpeed * Parent.EffectiveAnimationSpeed. public float EffectiveAnimationSpeed { get; } Property Value float FirstChild Gets the cached reference to the first children node. Use it for fast iteration through nodes collection in a performance-critical code. public Node FirstChild { get; } Property Value Node Folders Gets the folder descriptors. [YuzuMember] public FolderList Folders { get; } Property Value FolderList Frozen public bool Frozen { get; set; } Property Value bool Gestures Gets the gesture recognizers. public GestureList Gestures { get; } Property Value GestureList GloballyFrozen public bool GloballyFrozen { get; } Property Value bool Id A node identifier. May be non-unique. [YuzuMember] [Validation.DefaultCharset] public string Id { get; set; } Property Value string IsRunning Returns true if this node is running animation. [Obsolete(\"Use DefaultAnimation.IsRunning\")] public bool IsRunning { get; set; } Property Value bool IsStopped Returns true if this node isn't running animation. [Obsolete(\"Use !DefaultAnimation.IsRunning\")] public bool IsStopped { get; set; } Property Value bool LateTasks Tasks that are called after Update. public TaskList LateTasks { get; } Property Value TaskList Layer Gets or sets Z-order (the rendering order). 0 - inherit Z-order from the parent node. 1 - the lowest, (RenderChain.LayerCount - 1) - the topmost. public int Layer { get; set; } Property Value int Manager Gets a manager of this node. public NodeManager Manager { get; } Property Value NodeManager Markers Markers of default animation. [Obsolete(\"Use DefaultAnimation.Markers\")] public MarkerList Markers { get; } Property Value MarkerList NextSibling Gets the cached reference to the next node in the NodeList. Use it for fast iteration through nodes collection in a performance-critical code. public Node NextSibling { get; } Property Value Node Nodes Child nodes. For enumerating all descendants use Descendants. [YuzuMember] [YuzuSerializeIf(\"ShouldSerializeNodes\")] public NodeList Nodes { get; } Property Value NodeList Parent Gets the parent node. public Node Parent { get; } Property Value Node PostPresenter The presenter used for rendering the node after rendering its children. public IPresenter PostPresenter { get; set; } Property Value IPresenter Presenter The presenter used for rendering and hit-testing the node. TODO: Add Add/RemovePresenter methods. Remove CompoundPresenter property and Presenter setter. public IPresenter Presenter { get; set; } Property Value IPresenter RenderChainBuilder Gets the render chain builder. public IRenderChainBuilder RenderChainBuilder { get; set; } Property Value IRenderChainBuilder SelfAndDescendants Gets a DFS-enumeration of all descendant nodes starting with itself. public IEnumerable<Node> SelfAndDescendants { get; } Property Value IEnumerable<Node> Tag Custom data. Can be set via Tangerine (this way it will contain path to external scene). Can't use obsolete attribute because of Yuzu Generated Binary Deserializers. But its obsolete, don't use it. Use Node Components instead. [YuzuMember] public string Tag { get; set; } Property Value string TangerineFlags Flags that are used by Tangerine. [YuzuMember] public TangerineFlags TangerineFlags { get; set; } Property Value TangerineFlags Tasks Tasks that are called before Update. public TaskList Tasks { get; } Property Value TaskList Trigger May contain the marker id of the default animation. When an animation hits a trigger keyframe, it automatically runs the child animation from the given marker id. public string Trigger { get; set; } Property Value string Updated Called after Update. public UpdateHandler Updated { get; set; } Property Value UpdateHandler Updating Called before Update. public UpdateHandler Updating { get; set; } Property Value UpdateHandler UserData Custom data. Can only be set programmatically. public object UserData { get; set; } Property Value object Methods AddNode(Node) Adds provided node to the lowermost layer of this node (i.e. it will be covered by other nodes). Provided node shouldn't belong to any node (check for Parent == null and use Unlink if needed). public void AddNode(Node node) Parameters node Node A child node. AddSelfAndChildrenToRenderChain(RenderChain, int) Add this node and it children to the render chain. public void AddSelfAndChildrenToRenderChain(RenderChain chain, int layer) Parameters chain RenderChain A render chain into which should be added. layer int A node layer. AddSelfToRenderChain(RenderChain, int) Add this node to the render chain. protected void AddSelfToRenderChain(RenderChain chain, int layer) Parameters chain RenderChain A render chain into which should be added. layer int A node layer. AddToNode(Node) Adds this node to the lowermost layer of provided node (i.e. it will be covered by other nodes). This node shouldn't belong to any node (check for Parent == null and use Unlink if needed). public void AddToNode(Node node) Parameters node Node A parent node. AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public abstract void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CleanDirtyFlags(DirtyFlags) protected bool CleanDirtyFlags(Node.DirtyFlags mask) Parameters mask Node.DirtyFlags Returns bool Clone() public virtual Node Clone() Returns Node CloneRaw() protected Node CloneRaw() Returns Node DescendantOf(Node) Checks if this node is a descendant of the specified node. public bool DescendantOf(Node node) Parameters node Node A parent node. Returns bool True if this node is a descendant of the specified node, otherwise false. Dispose() Disposes the node and all of it components, animations, tasks, etc... public virtual void Dispose() FindNode(string) Searches for node with provided path or id in this node's descendants. Throws an exception if sought-for node doesn't exist. This function is thread safe. public Node FindNode(string path) Parameters path string Id or path of Node. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). Returns Node Find<T>(string) Searches for node with provided path or id in this node's descendants. Throws an exception if sought-for node doesn't exist. This function is thread safe. public T Find<T>(string path) where T : Node Parameters path string Id or path of Node. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). Returns T Type Parameters T Type of sought-for node. Find<T>(string, params object[]) Searches for node with provided path or id in this node's descendants. Returns null if sought-for node doesn't exist. This function is thread safe. public T Find<T>(string format, params object[] args) where T : Node Parameters format string Id or path of Node. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). args object[] Returns T Type Parameters T Type of sought-for node. ForceFilterNodes() [Obsolete(\"Do not use.\")] protected void ForceFilterNodes() GetRenderObject() TODO: Add summary. protected virtual RenderObject GetRenderObject() Returns RenderObject GetRoot() Gets the root node. public Node GetRoot() Returns Node The root node. GetTangerineFlag(TangerineFlags) Retrieves the value of the specified Tangerine flag. public bool GetTangerineFlag(TangerineFlags flag) Parameters flag TangerineFlags Returns bool HasGestures() Checks if the node has at least one gesture recognizer. public bool HasGestures() Returns bool True is the node has at least one gesture recognizer, otherwise false. IsDirty(DirtyFlags) TODO: Add summary protected bool IsDirty(Node.DirtyFlags mask) Parameters mask Node.DirtyFlags Returns bool IsMouseOver() public bool IsMouseOver() Returns bool IsMouseOverThisOrDescendant() public bool IsMouseOverThisOrDescendant() Returns bool IsNotDecorated() public virtual bool IsNotDecorated() Returns bool Load(Stream, string, Node, bool) Loads node from given stream under Current public static Node Load(Stream stream, string path, Node instance = null, bool ignoreExternals = false) Parameters stream Stream Stream with serialized Node. path string Path in asset bundle. instance Node Existing instance of node. If set to null new instance is created. ignoreExternals bool Do not load prefabs. Returns Node Instance of Node loaded from given path. Load(string, Node, bool) Loads node by given path under Current public static Node Load(string path, Node instance = null, bool ignoreExternals = false) Parameters path string Path in asset bundle. instance Node Existing instance of node. If set to null new instance is created. ignoreExternals bool Do not load prefabs. Returns Node Instance of Node loaded from given path. LoadExternalScenes() public virtual void LoadExternalScenes() Load<T>(string, T, bool) Loads node by given path under Current public static T Load<T>(string path, T instance = null, bool ignoreExternals = false) where T : Node Parameters path string Path in asset bundle. instance T Existing instance of node. If set to null new instance is created. ignoreExternals bool Do not load prefabs. Returns T Instance of Node loaded from given path. Type Parameters T Expected concrete type of Node. NeedSerializeAnimations() public bool NeedSerializeAnimations() Returns bool NotifyOnBuilt() public void NotifyOnBuilt() NotifyOnBuiltSuperficial() public void NotifyOnBuiltSuperficial() OnAfterSerialization() public void OnAfterSerialization() OnBeforeSerialization() public void OnBeforeSerialization() OnBuilt() protected virtual void OnBuilt() OnParentChanged(Node) Occurs when Parent property changes. protected virtual void OnParentChanged(Node oldParent) Parameters oldParent Node OnTrigger(string, object, double) Invokes when the trigger property has been changed by animation. public virtual void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string A property name. value object A new property value. animationTimeCorrection double An animation time correction. PartialHitTest(ref HitTestArgs) protected virtual bool PartialHitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool PreloadAssets() Loads all textures, fonts and animators for this node and for all its descendants. Forces reloading of textures if they are null. public void PreloadAssets() PropagateDirtyFlags(DirtyFlags) Propagates dirty flags to all descendants by provided mask. protected void PropagateDirtyFlags(Node.DirtyFlags mask = (Node.DirtyFlags)-1) Parameters mask Node.DirtyFlags PropagateParentBoundsChanged() protected void PropagateParentBoundsChanged() PropagateParentBoundsChangedHelper() protected void PropagateParentBoundsChangedHelper() PushNode(Node) Adds provided node to the topmost layer of this node (i.e. it will cover other nodes). Provided node shouldn't belong to any node (check for Parent == null and use Unlink if needed). public void PushNode(Node node) Parameters node Node A child node. PushToNode(Node) Adds this node to the topmost layer of provided node (i.e. it will cover other nodes). This node shouldn't belong to any node (check for Parent == null and use Unlink if needed). public void PushToNode(Node node) Parameters node Node A parent node. RecalcGloballyFrozen() protected virtual void RecalcGloballyFrozen() RemoveAnimatorsForExternalAnimations() public void RemoveAnimatorsForExternalAnimations() ReplaceContent(Node) public void ReplaceContent(Node content) Parameters content Node ResolveScenePath(string) Returns path to scene if it exists in bundle. Returns null otherwise. Throws exception if there is more than one scene file with such path. public static string ResolveScenePath(string path) Parameters path string Returns string RunAnimation(string, string) Runs animation with provided Id and provided marker. Throws an exception if sought-for animation or marker doesn't exist. Returns this (to use with yield return) public Animation RunAnimation(string markerId, string animationId = null) Parameters markerId string animationId string Returns Animation SameOrDescendantOf(Node) Checks if this node is the specified node or a descendant of. public bool SameOrDescendantOf(Node node) Parameters node Node A parent node. Returns bool if this node is the specified node or a descendant of, otherwise false. Save(string, Format) Saves node to a file. public void Save(string path, Persistence.Format format) Parameters path string Path to the file. format Persistence.Format Persistence.Format Save(string, Stream, Format) Saves node to a stream. public void Save(string path, Stream stream, Persistence.Format format) Parameters path string Path to the file. Required for correct asset path shrink or expand for relative assets. stream Stream The stream. format Persistence.Format Persistence.Format SetTangerineFlag(TangerineFlags, bool) Sets the value for the specified Tangerine flag. public void SetTangerineFlag(TangerineFlags flag, bool value) Parameters flag TangerineFlags A Tangerine flag value bool A value to set. ShouldSerializeNodes() public bool ShouldSerializeNodes() Returns bool StaticScale(float, bool) TODO: Translate Этот метод масштабирует позицию и размер данного нода и всех его потомков. Метод полезен для адаптирования сцены под экраны с нестандартным DPI. Если позиция или размер виджета анинимированы, то ключи анимации также подвергаются соответствующему преобразованию. Для текстовых виджетов, размер шрифта масштабируется. public virtual void StaticScale(float ratio, bool roundCoordinates) Parameters ratio float roundCoordinates bool Если true, то после масштабирования виджета, его размер округляется, а сам виджет сдвигается таким образом, чтобы его левый верхний угол (точка (0,0) в локальных координатах виджета) перешел в целочисленную позицию. ToString() Returns the string representation of this Node. public override string ToString() Returns string TriggerMultipleAnimations(string, double) TODO: Add summary. protected void TriggerMultipleAnimations(string trigger, double animationTimeCorrection = 0) Parameters trigger string animationTimeCorrection double TryFindNode(string) Searches for node with provided path or id in this node's descendants. Returns null if sought-for node doesn't exist. This function is thread safe. public Node TryFindNode(string path) Parameters path string Id or path of Node. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). Returns Node TryFind<T>(string) Searches for node with provided path or id in this node's descendants. Returns null if sought-for node doesn't exist. This function is thread safe. public T TryFind<T>(string path) where T : Node Parameters path string Id or path of Node. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). Returns T Type Parameters T Type of sought-for node. TryFind<T>(string, params object[]) Searches for node with provided path or id in this node's descendants. Returns null if sought-for node doesn't exist. This function is thread safe. public T TryFind<T>(string format, params object[] args) where T : Node Parameters format string Id or path of Node. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). args object[] Returns T Type Parameters T Type of sought-for node. TryFind<T>(string, out T) Searches for node with provided path or id in this node's descendants. Returns null if sought-for node doesn't exist. This function is thread safe. public bool TryFind<T>(string path, out T node) where T : Node Parameters path string Id or path of Node. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). node T Returns bool Type Parameters T Type of sought-for node. TryRunAnimation(string, string, double) Runs animation with provided Id and provided marker. Returns false if sought-for animation or marker doesn't exist. public bool TryRunAnimation(string markerId, string animationId = null, double animationTimeCorrection = 0) Parameters markerId string animationId string animationTimeCorrection double Returns bool Unlink() Removes this node from children of the parent node. public void Unlink() UnlinkAndDispose() Removes this node from children of the parent node and disposes it. public void UnlinkAndDispose() UpdateAncestorBoundingRect(Widget) public virtual void UpdateAncestorBoundingRect(Widget ancestor) Parameters ancestor Widget Events AnimationStopped Is invoked after default animation has been stopped (e.g. hit \"Stop\" marker). Note: DefaultAnimation.Stopped will be set to null after invocation or after RunAnimation call. The correct usage is to call RunAnimation first and then apply any required AnimationStopped handlers. public event Action AnimationStopped Event Type Action Awoke Occurs at node first update. public event Action<Node> Awoke Event Type Action<Node>"
  },
  "api/Lime.Node3D.html": {
    "href": "api/Lime.Node3D.html",
    "title": "Class Node3D | Citrus Engine",
    "keywords": "Class Node3D Namespace Lime Assembly Lime.dll [TangerineAllowedParentTypes(new Type[] { typeof(Node3D), typeof(Viewport3D) })] [TangerineAllowedChildrenTypes(new Type[] { typeof(Node) })] [TangerineMenuPath(\"3D/Node 3D\")] [TangerineVisualHintGroup(\"/All/Nodes/Containers\", null)] public class Node3D : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Node3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived Camera3D Mesh3D Model3D Spline3D WidgetAdapter3D Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Node3D() public Node3D() Fields globalColor protected Color4 globalColor Field Value Color4 globalTransform protected Matrix44 globalTransform Field Value Matrix44 globalTransformInverse protected Matrix44 globalTransformInverse Field Value Matrix44 globallyFreezeInvisible protected bool globallyFreezeInvisible Field Value bool globallyVisible protected bool globallyVisible Field Value bool localTransform protected Matrix44 localTransform Field Value Matrix44 Properties Color [YuzuMember] [TangerineKeyframeColor(9)] public Color4 Color { get; set; } Property Value Color4 FreezeInvisible [YuzuMember] [TangerineKeyframeColor(19)] public bool FreezeInvisible { get; set; } Property Value bool GlobalColor public Color4 GlobalColor { get; } Property Value Color4 GlobalTransform public Matrix44 GlobalTransform { get; } Property Value Matrix44 GlobalTransformInverse public Matrix44 GlobalTransformInverse { get; } Property Value Matrix44 GloballyVisible public bool GloballyVisible { get; } Property Value bool LocalTransform public Matrix44 LocalTransform { get; } Property Value Matrix44 Opaque [YuzuMember] [TangerineKeyframeColor(21)] public bool Opaque { get; set; } Property Value bool Position [YuzuMember] [TangerineKeyframeColor(25)] public Vector3 Position { get; set; } Property Value Vector3 Rotation [YuzuMember] [TangerineKeyframeColor(4)] public Quaternion Rotation { get; set; } Property Value Quaternion Scale [YuzuMember] [TangerineKeyframeColor(24)] public Vector3 Scale { get; set; } Property Value Vector3 Viewport public Viewport3D Viewport { get; } Property Value Viewport3D Visible [YuzuMember] [TangerineKeyframeColor(19)] public bool Visible { get; set; } Property Value bool Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcTransformInSpaceOf(Node3D) public Matrix44 CalcTransformInSpaceOf(Node3D node) Parameters node Node3D Returns Matrix44 FindModel() public Model3D FindModel() Returns Model3D RecalcGloballyFrozen() protected override void RecalcGloballyFrozen() SetGlobalTransform(Matrix44) public void SetGlobalTransform(Matrix44 transform) Parameters transform Matrix44 SetGlobalTransformInverse(Matrix44) public void SetGlobalTransformInverse(Matrix44 transform) Parameters transform Matrix44 SetLocalTransform(Matrix44) public void SetLocalTransform(Matrix44 transform) Parameters transform Matrix44 TryFindModel() public Model3D TryFindModel() Returns Model3D"
  },
  "api/Lime.NodeBehavior.html": {
    "href": "api/Lime.NodeBehavior.html",
    "title": "Class NodeBehavior | Citrus Engine",
    "keywords": "Class NodeBehavior Namespace Lime Assembly Lime.dll public class NodeBehavior : BehaviorComponent, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior Implements IDisposable IAnimable ITriggerable Derived AudioRandomizerComponent AwakeBehavior LateTasksBehavior LayoutDebugComponent OverdrawForegroundBehavior PostProcessingComponent TasksBehavior UpdateBehavior UpdatedBehavior Inherited Members BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Order public virtual int Order { get; } Property Value int Methods LateUpdate(float) public virtual void LateUpdate(float delta) Parameters delta float OnRegister() protected virtual void OnRegister() OnTrigger(string, object, double) public virtual void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string value object animationTimeCorrection double Start() Start is called on the frame in which the component had added just before Update method is called first time. Note: Start doesn't called immediately at the time it is adding. protected override void Start() Stop(Node) Stop is called immediately after component had removed protected override void Stop(Node owner) Parameters owner Node Previous owner node. Update(float) public virtual void Update(float delta) Parameters delta float"
  },
  "api/Lime.NodeCompatibilityExtensions.html": {
    "href": "api/Lime.NodeCompatibilityExtensions.html",
    "title": "Class NodeCompatibilityExtensions | Citrus Engine",
    "keywords": "Class NodeCompatibilityExtensions Namespace Lime Assembly Lime.dll public static class NodeCompatibilityExtensions Inheritance object NodeCompatibilityExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AdvanceAnimationsRecursiveHook public static Action<Node, float> AdvanceAnimationsRecursiveHook Field Value Action<Node, float> Methods AdvanceAnimationsRecursive(Node, float) public static void AdvanceAnimationsRecursive(this Node node, float delta) Parameters node Node delta float Clone<T>(Node) Returns a clone of the node hierarchy. public static T Clone<T>(this Node node) where T : Node Parameters node Node Returns T Type Parameters T Update(Node, float) public static void Update(this Node node, float delta) Parameters node Node delta float"
  },
  "api/Lime.NodeComponent.html": {
    "href": "api/Lime.NodeComponent.html",
    "title": "Class NodeComponent | Citrus Engine",
    "keywords": "Class NodeComponent Namespace Lime Assembly Lime.dll public class NodeComponent : Component, IDisposable, IAnimable Inheritance object Component NodeComponent Implements IDisposable IAnimable Derived AnimationComponent BehaviorComponent DisableAncestralGesturesComponent EditorParams Layout LayoutConstraints MaterialComponent Node.AssetBundlePathComponent PresenterComponent ContentSizeComponent HasContentSizeComponent SignedDistanceFieldComponent TableLayoutCell ThemedTextView.TextLineMultiplicity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Owner public Node Owner { get; set; } Property Value Node Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public virtual void Dispose() IsSerializable(Type) public static bool IsSerializable(Type type) Parameters type Type Returns bool OnAfterDeserialization() public virtual void OnAfterDeserialization() OnAfterNodeSerialization() protected virtual void OnAfterNodeSerialization() OnBeforeNodeSerialization() protected virtual void OnBeforeNodeSerialization() OnBuilt() protected virtual void OnBuilt() OnOwnerChanged(Node) protected virtual void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node"
  },
  "api/Lime.NodeComponentCollection.html": {
    "href": "api/Lime.NodeComponentCollection.html",
    "title": "Class NodeComponentCollection | Citrus Engine",
    "keywords": "Class NodeComponentCollection Namespace Lime Assembly Lime.dll public class NodeComponentCollection : ComponentCollection<NodeComponent>, ICollection<NodeComponent>, IEnumerable<NodeComponent>, IEnumerable Inheritance object ComponentCollection<NodeComponent> NodeComponentCollection Implements ICollection<NodeComponent> IEnumerable<NodeComponent> IEnumerable Inherited Members ComponentCollection<NodeComponent>.Count ComponentCollection<NodeComponent>.IsReadOnly ComponentCollection<NodeComponent>.Contains<T>() ComponentCollection<NodeComponent>.Contains(Type) ComponentCollection<NodeComponent>.Get(Type) ComponentCollection<NodeComponent>.Get<T>() ComponentCollection<NodeComponent>.GetAll<T>() ComponentCollection<NodeComponent>.GetAll<T>(IList<T>) ComponentCollection<NodeComponent>.GetAll(Type) ComponentCollection<NodeComponent>.GetAll(Type, IList<NodeComponent>) ComponentCollection<NodeComponent>.TryGet<T>(out T) ComponentCollection<NodeComponent>.GetOrAdd<T>() ComponentCollection<NodeComponent>.CanAdd(Type) ComponentCollection<NodeComponent>.CanAdd<T>() ComponentCollection<NodeComponent>.Remove<T>() ComponentCollection<NodeComponent>.Remove(Type) ComponentCollection<NodeComponent>.Remove(NodeComponent) ComponentCollection<NodeComponent>.Replace<T>(T) ComponentCollection<NodeComponent>.GetEnumerator() ComponentCollection<NodeComponent>.Clear() ComponentCollection<NodeComponent>.CopyTo(NodeComponent[], int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors NodeComponentCollection(Node) public NodeComponentCollection(Node owner) Parameters owner Node Properties AnimationComponent public AnimationComponent AnimationComponent { get; } Property Value AnimationComponent Methods Add(NodeComponent) Adds an item to the ICollection<T>. public override void Add(NodeComponent component) Parameters component NodeComponent Exceptions NotSupportedException The ICollection<T> is read-only. Contains(NodeComponent) Determines whether the ICollection<T> contains a specific value. public override bool Contains(NodeComponent component) Parameters component NodeComponent Returns bool true if item is found in the ICollection<T>; otherwise, false. OnRemove(NodeComponent) protected override void OnRemove(NodeComponent component) Parameters component NodeComponent SerializeItemIf(int, object) public bool SerializeItemIf(int index, object component) Parameters index int component object Returns bool"
  },
  "api/Lime.NodeComponentDontSerializeAttribute.html": {
    "href": "api/Lime.NodeComponentDontSerializeAttribute.html",
    "title": "Class NodeComponentDontSerializeAttribute | Citrus Engine",
    "keywords": "Class NodeComponentDontSerializeAttribute Namespace Lime Assembly Lime.dll Components of type marked with this attribute will be removed from NodeComponentCollection on serialization. [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = true)] public sealed class NodeComponentDontSerializeAttribute : Attribute Inheritance object Attribute NodeComponentDontSerializeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.NodeComponentProcessor-1.html": {
    "href": "api/Lime.NodeComponentProcessor-1.html",
    "title": "Class NodeComponentProcessor<TComponent> | Citrus Engine",
    "keywords": "Class NodeComponentProcessor<TComponent> Namespace Lime Assembly Lime.dll public class NodeComponentProcessor<TComponent> : NodeComponentProcessor where TComponent : class Type Parameters TComponent Inheritance object NodeProcessor NodeComponentProcessor NodeComponentProcessor<TComponent> Derived AnimationProcessor BehaviorSetupProcessor Inherited Members NodeComponentProcessor.TargetComponentType NodeProcessor.Manager NodeProcessor.Start() NodeProcessor.Stop(NodeManager) NodeProcessor.Update(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NodeComponentProcessor() protected NodeComponentProcessor() Methods Add(TComponent, Node) protected virtual void Add(TComponent component, Node owner) Parameters component TComponent owner Node InternalAdd(NodeComponent, Node) protected override sealed void InternalAdd(NodeComponent component, Node owner) Parameters component NodeComponent owner Node InternalOnOwnerFrozenChanged(NodeComponent, Node) protected override sealed void InternalOnOwnerFrozenChanged(NodeComponent component, Node owner) Parameters component NodeComponent owner Node InternalRemove(NodeComponent, Node) protected override sealed void InternalRemove(NodeComponent component, Node owner) Parameters component NodeComponent owner Node OnOwnerFrozenChanged(TComponent, Node) protected virtual void OnOwnerFrozenChanged(TComponent component, Node owner) Parameters component TComponent owner Node Remove(TComponent, Node) protected virtual void Remove(TComponent component, Node owner) Parameters component TComponent owner Node"
  },
  "api/Lime.NodeComponentProcessor.html": {
    "href": "api/Lime.NodeComponentProcessor.html",
    "title": "Class NodeComponentProcessor | Citrus Engine",
    "keywords": "Class NodeComponentProcessor Namespace Lime Assembly Lime.dll public abstract class NodeComponentProcessor : NodeProcessor Inheritance object NodeProcessor NodeComponentProcessor Derived NodeComponentProcessor<TComponent> Inherited Members NodeProcessor.Manager NodeProcessor.Start() NodeProcessor.Stop(NodeManager) NodeProcessor.Update(float) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NodeComponentProcessor(Type) protected NodeComponentProcessor(Type targetComponentType) Parameters targetComponentType Type Properties TargetComponentType public Type TargetComponentType { get; } Property Value Type Methods InternalAdd(NodeComponent, Node) protected virtual void InternalAdd(NodeComponent component, Node owner) Parameters component NodeComponent owner Node InternalOnOwnerFrozenChanged(NodeComponent, Node) protected virtual void InternalOnOwnerFrozenChanged(NodeComponent component, Node owner) Parameters component NodeComponent owner Node InternalRemove(NodeComponent, Node) protected virtual void InternalRemove(NodeComponent component, Node owner) Parameters component NodeComponent owner Node"
  },
  "api/Lime.NodeList.Enumerator.html": {
    "href": "api/Lime.NodeList.Enumerator.html",
    "title": "Struct NodeList.Enumerator | Citrus Engine",
    "keywords": "Struct NodeList.Enumerator Namespace Lime Assembly Lime.dll public struct NodeList.Enumerator : IEnumerator<Node>, IEnumerator, IDisposable Implements IEnumerator<Node> IEnumerator IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Enumerator(Node) public Enumerator(Node first) Parameters first Node Properties Current Gets the element in the collection at the current position of the enumerator. public readonly Node Current { get; } Property Value Node The element in the collection at the current position of the enumerator. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public readonly void Dispose() MoveNext() Advances the enumerator to the next element of the collection. public bool MoveNext() Returns bool true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection. Exceptions InvalidOperationException The collection was modified after the enumerator was created. Reset() Sets the enumerator to its initial position, which is before the first element in the collection. public void Reset() Exceptions InvalidOperationException The collection was modified after the enumerator was created. NotSupportedException The enumerator does not support being reset."
  },
  "api/Lime.NodeList.html": {
    "href": "api/Lime.NodeList.html",
    "title": "Class NodeList | Citrus Engine",
    "keywords": "Class NodeList Namespace Lime Assembly Lime.dll public class NodeList : IList<Node>, ICollection<Node>, IEnumerable<Node>, IList, ICollection, IEnumerable Inheritance object NodeList Implements IList<Node> ICollection<Node> IEnumerable<Node> IList ICollection IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) BoneUtils.GetBone(IEnumerable<Node>, int) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors NodeList(Node) public NodeList(Node owner) Parameters owner Node Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public Node this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value Node The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(Node) Adds a Node to the end of this list. public void Add(Node node) Parameters node Node AddRange(params Node[]) public void AddRange(params Node[] collection) Parameters collection Node[] AddRange(IEnumerable<Node>) public void AddRange(IEnumerable<Node> collection) Parameters collection IEnumerable<Node> Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Node) Determines whether the ICollection<T> contains a specific value. public bool Contains(Node node) Parameters node Node Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Node[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Node[] array, int index) Parameters array Node[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. index int Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() Returns Enumerator for this list. This method is preferrable over IEnumerable.GetEnumerator() because it doesn't allocate new memory via boxing. public NodeList.Enumerator GetEnumerator() Returns NodeList.Enumerator IndexOf(Node) Determines the index of a specific item in the IList<T>. public int IndexOf(Node node) Parameters node Node Returns int The index of item if found in the list; otherwise, -1. Insert(int, Node) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Node node) Parameters index int The zero-based index at which item should be inserted. node Node Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Move(int, int) public void Move(int indexFrom, int indexTo) Parameters indexFrom int indexTo int Push(Node) Adds a Node to the start of this list. public void Push(Node node) Parameters node Node Remove(Node) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Node node) Parameters node Node Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAll(Predicate<Node>) public void RemoveAll(Predicate<Node> predicate) Parameters predicate Predicate<Node> RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. RemoveRange(int, int) public void RemoveRange(int index, int count) Parameters index int count int Sort(Comparison<Node>) public void Sort(Comparison<Node> comparison) Parameters comparison Comparison<Node> Swap(int, int) public void Swap(int index1, int index2) Parameters index1 int index2 int TryFind(string) Searchs for node with provided Id in this list. Returns null if this list doesn't contain sought-for node. public Node TryFind(string id) Parameters id string Returns Node"
  },
  "api/Lime.NodeManager.html": {
    "href": "api/Lime.NodeManager.html",
    "title": "Class NodeManager | Citrus Engine",
    "keywords": "Class NodeManager Namespace Lime Assembly Lime.dll public class NodeManager Inheritance object NodeManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NodeManager(IServiceProvider) public NodeManager(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Properties ActiveProcessor public NodeProcessor ActiveProcessor { get; } Property Value NodeProcessor Processors public NodeManagerProcessorCollection Processors { get; } Property Value NodeManagerProcessorCollection RootNodes public NodeManagerRootNodeCollection RootNodes { get; } Property Value NodeManagerRootNodeCollection ServiceProvider public IServiceProvider ServiceProvider { get; } Property Value IServiceProvider Methods Update(float) public void Update(float delta) Parameters delta float Events GlobalHierarchyChanged [Obsolete(\"A temporary solution to access global hierarchy changes. Will be removed later when work on Orange plugins will be finished.\")] public static event HierarchyChangedEventHandler GlobalHierarchyChanged Event Type HierarchyChangedEventHandler HierarchyChanged public event HierarchyChangedEventHandler HierarchyChanged Event Type HierarchyChangedEventHandler"
  },
  "api/Lime.NodeManagerProcessorCollection.Enumerator.html": {
    "href": "api/Lime.NodeManagerProcessorCollection.Enumerator.html",
    "title": "Struct NodeManagerProcessorCollection.Enumerator | Citrus Engine",
    "keywords": "Struct NodeManagerProcessorCollection.Enumerator Namespace Lime Assembly Lime.dll public struct NodeManagerProcessorCollection.Enumerator : IEnumerator<NodeProcessor>, IEnumerator, IDisposable Implements IEnumerator<NodeProcessor> IEnumerator IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Current Gets the element in the collection at the current position of the enumerator. public NodeProcessor Current { get; } Property Value NodeProcessor The element in the collection at the current position of the enumerator. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() MoveNext() Advances the enumerator to the next element of the collection. public bool MoveNext() Returns bool true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection. Exceptions InvalidOperationException The collection was modified after the enumerator was created."
  },
  "api/Lime.NodeManagerProcessorCollection.html": {
    "href": "api/Lime.NodeManagerProcessorCollection.html",
    "title": "Class NodeManagerProcessorCollection | Citrus Engine",
    "keywords": "Class NodeManagerProcessorCollection Namespace Lime Assembly Lime.dll public class NodeManagerProcessorCollection : IList<NodeProcessor>, ICollection<NodeProcessor>, IEnumerable<NodeProcessor>, IEnumerable Inheritance object NodeManagerProcessorCollection Implements IList<NodeProcessor> ICollection<NodeProcessor> IEnumerable<NodeProcessor> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. this[int] public NodeProcessor this[int index] { get; } Parameters index int Property Value NodeProcessor Methods Add(NodeProcessor) Adds an item to the ICollection<T>. public void Add(NodeProcessor item) Parameters item NodeProcessor The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(NodeProcessor) Determines whether the ICollection<T> contains a specific value. public bool Contains(NodeProcessor item) Parameters item NodeProcessor The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(NodeProcessor[]) public void CopyTo(NodeProcessor[] array) Parameters array NodeProcessor[] CopyTo(NodeProcessor[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(NodeProcessor[] array, int arrayIndex) Parameters array NodeProcessor[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(int, NodeProcessor[], int, int) public void CopyTo(int index, NodeProcessor[] array, int arrayIndex, int count) Parameters index int array NodeProcessor[] arrayIndex int count int GetEnumerator() public NodeManagerProcessorCollection.Enumerator GetEnumerator() Returns NodeManagerProcessorCollection.Enumerator IndexOf(NodeProcessor) Determines the index of a specific item in the IList<T>. public int IndexOf(NodeProcessor item) Parameters item NodeProcessor The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, NodeProcessor) Inserts an item to the IList<T> at the specified index. public void Insert(int index, NodeProcessor item) Parameters index int The zero-based index at which item should be inserted. item NodeProcessor The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(NodeProcessor) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(NodeProcessor item) Parameters item NodeProcessor The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.NodeManagerRootNodeCollection.Enumerator.html": {
    "href": "api/Lime.NodeManagerRootNodeCollection.Enumerator.html",
    "title": "Struct NodeManagerRootNodeCollection.Enumerator | Citrus Engine",
    "keywords": "Struct NodeManagerRootNodeCollection.Enumerator Namespace Lime Assembly Lime.dll public struct NodeManagerRootNodeCollection.Enumerator : IEnumerator<Node>, IEnumerator, IDisposable Implements IEnumerator<Node> IEnumerator IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Current Gets the element in the collection at the current position of the enumerator. public Node Current { get; } Property Value Node The element in the collection at the current position of the enumerator. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() MoveNext() Advances the enumerator to the next element of the collection. public bool MoveNext() Returns bool true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection. Exceptions InvalidOperationException The collection was modified after the enumerator was created."
  },
  "api/Lime.NodeManagerRootNodeCollection.html": {
    "href": "api/Lime.NodeManagerRootNodeCollection.html",
    "title": "Class NodeManagerRootNodeCollection | Citrus Engine",
    "keywords": "Class NodeManagerRootNodeCollection Namespace Lime Assembly Lime.dll public class NodeManagerRootNodeCollection : IList<Node>, ICollection<Node>, IEnumerable<Node>, IEnumerable Inheritance object NodeManagerRootNodeCollection Implements IList<Node> ICollection<Node> IEnumerable<Node> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) BoneUtils.GetBone(IEnumerable<Node>, int) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. this[int] public Node this[int index] { get; } Parameters index int Property Value Node Methods Add(Node) Adds an item to the ICollection<T>. public void Add(Node item) Parameters item Node The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Node) Determines whether the ICollection<T> contains a specific value. public bool Contains(Node item) Parameters item Node The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Node[]) public void CopyTo(Node[] array) Parameters array Node[] CopyTo(Node[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Node[] array, int arrayIndex) Parameters array Node[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(int, Node[], int, int) public void CopyTo(int index, Node[] array, int arrayIndex, int count) Parameters index int array Node[] arrayIndex int count int GetEnumerator() public NodeManagerRootNodeCollection.Enumerator GetEnumerator() Returns NodeManagerRootNodeCollection.Enumerator IndexOf(Node) Determines the index of a specific item in the IList<T>. public int IndexOf(Node item) Parameters item Node The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, Node) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Node item) Parameters index int The zero-based index at which item should be inserted. item Node The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(Node) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Node item) Parameters item Node The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.NodeProcessor.html": {
    "href": "api/Lime.NodeProcessor.html",
    "title": "Class NodeProcessor | Citrus Engine",
    "keywords": "Class NodeProcessor Namespace Lime Assembly Lime.dll public class NodeProcessor Inheritance object NodeProcessor Derived BehaviorUpdateProcessor CommandProcessor GestureProcessor LayoutProcessor NodeComponentProcessor ParticleLimitPostLateUpdateProcessor ParticleLimitPreLateUpdateProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Manager public NodeManager Manager { get; } Property Value NodeManager Methods Start() public virtual void Start() Stop(NodeManager) public virtual void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public virtual void Update(float delta) Parameters delta float"
  },
  "api/Lime.NodeReference-1.html": {
    "href": "api/Lime.NodeReference-1.html",
    "title": "Class NodeReference<T> | Citrus Engine",
    "keywords": "Class NodeReference<T> Namespace Lime Assembly Lime.dll A node reference is used for referencing to a node within a serialized scene by the node Id. [YuzuSpecializeWith(typeof(Camera3D))] [YuzuSpecializeWith(typeof(Spline))] [YuzuSpecializeWith(typeof(Widget))] public sealed class NodeReference<T> where T : Node Type Parameters T Inheritance object NodeReference<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors NodeReference() public NodeReference() NodeReference(string) public NodeReference(string id) Parameters id string Properties Id [YuzuMember] public string Id { get; set; } Property Value string Methods Clone() public NodeReference<T> Clone() Returns NodeReference<T> GetNode(Node) public T GetNode(Node root) Parameters root Node Returns T"
  },
  "api/Lime.NoiseMaterial.html": {
    "href": "api/Lime.NoiseMaterial.html",
    "title": "Class NoiseMaterial | Citrus Engine",
    "keywords": "Class NoiseMaterial Namespace Lime Assembly Lime.dll public class NoiseMaterial : IMaterial Inheritance object NoiseMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NoiseMaterial() public NoiseMaterial() Properties BrightThreshold [YuzuMember] public float BrightThreshold { get; set; } Property Value float DarkThreshold [YuzuMember] public float DarkThreshold { get; set; } Property Value float Id public string Id { get; set; } Property Value string Opaque [YuzuMember] public bool Opaque { get; set; } Property Value bool PassCount public int PassCount { get; } Property Value int SoftLight [YuzuMember] public float SoftLight { get; set; } Property Value float Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.NoiseShaderProgram.html": {
    "href": "api/Lime.NoiseShaderProgram.html",
    "title": "Class NoiseShaderProgram | Citrus Engine",
    "keywords": "Class NoiseShaderProgram Namespace Lime Assembly Lime.dll public class NoiseShaderProgram : ShaderProgram Inheritance object ShaderProgram NoiseShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(bool) public static NoiseShaderProgram GetInstance(bool opaque = false) Parameters opaque bool Returns NoiseShaderProgram"
  },
  "api/Lime.NullAudioChannel.html": {
    "href": "api/Lime.NullAudioChannel.html",
    "title": "Class NullAudioChannel | Citrus Engine",
    "keywords": "Class NullAudioChannel Namespace Lime Assembly Lime.dll public class NullAudioChannel : IAudioChannel Inheritance object NullAudioChannel Implements IAudioChannel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static NullAudioChannel Instance Field Value NullAudioChannel Properties Group public AudioChannelGroup Group { get; set; } Property Value AudioChannelGroup Pan public float Pan { get; set; } Property Value float Pitch public float Pitch { get; set; } Property Value float SamplePath public string SamplePath { get; set; } Property Value string Sound public Sound Sound { get; } Property Value Sound State public AudioChannelState State { get; } Property Value AudioChannelState Volume public float Volume { get; set; } Property Value float Methods Pause(float) public void Pause(float fadeoutTime = 0) Parameters fadeoutTime float Resume(float) public void Resume(float fadeinTime = 0) Parameters fadeinTime float Stop(float) public void Stop(float fadeoutTime = 0) Parameters fadeoutTime float Suspend(float) public PlayParameters Suspend(float fadeoutTime = 0) Parameters fadeoutTime float Returns PlayParameters"
  },
  "api/Lime.NumericEditBox.html": {
    "href": "api/Lime.NumericEditBox.html",
    "title": "Class NumericEditBox | Citrus Engine",
    "keywords": "Class NumericEditBox Namespace Lime Assembly Lime.dll public class NumericEditBox : CommonEditBox, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonEditBox NumericEditBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedNumericEditBox Inherited Members CommonEditBox.IsReadOnly CommonEditBox.Editor CommonEditBox.ScrollWidget CommonEditBox.TextWidget CommonEditBox.Submitted CommonEditBox.ScrollView CommonEditBox.Text CommonEditBox.OnSubmit() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Fields Step public float Step Field Value float Properties Value public float Value { get; set; } Property Value float Methods RaiseBeginSpin() public void RaiseBeginSpin() RaiseEndSpin() public void RaiseEndSpin() Events BeginSpin public event Action BeginSpin Event Type Action EndSpin public event Action EndSpin Event Type Action"
  },
  "api/Lime.NumericExtensions.html": {
    "href": "api/Lime.NumericExtensions.html",
    "title": "Class NumericExtensions | Citrus Engine",
    "keywords": "Class NumericExtensions Namespace Lime Assembly Lime.dll public static class NumericExtensions Inheritance object NumericExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Abs(int) public static int Abs(this int x) Parameters x int Returns int Abs(long) public static long Abs(this long x) Parameters x long Returns long Abs(float) public static float Abs(this float x) Parameters x float Returns float Ceiling(float) public static int Ceiling(this float x) Parameters x float Returns int Clamp(double, double, double) public static double Clamp(this double value, double min, double max) Parameters value double min double max double Returns double Clamp(int, int, int) public static int Clamp(this int value, int min, int max) Parameters value int min int max int Returns int Clamp(float, float, float) public static float Clamp(this float value, float min, float max) Parameters value float min float max float Returns float Floor(float) public static int Floor(this float x) Parameters x float Returns int InRange(float, float, float) public static bool InRange(this float x, float upper, float lower) Parameters x float upper float lower float Returns bool Lerp(float, float, float) public static float Lerp(this float amount, float value1, float value2) Parameters amount float value1 float value2 float Returns float Localize(int, string) public static string Localize(this int value, string format = \"N0\") Parameters value int format string Returns string Localize(float, string) public static string Localize(this float value, string format = \"\") Parameters value float format string Returns string Max(int, int) public static int Max(this int a, int b) Parameters a int b int Returns int Max(float, float) public static float Max(this float a, float b) Parameters a float b float Returns float Min(int, int) public static int Min(this int a, int b) Parameters a int b int Returns int Min(float, float) public static float Min(this float a, float b) Parameters a float b float Returns float Pow(float, float) public static float Pow(this float x, float y) Parameters x float y float Returns float Round(double) public static int Round(this double x) Parameters x double Returns int Round(float) public static int Round(this float x) Parameters x float Returns int Sign(int) public static int Sign(this int x) Parameters x int Returns int Sign(long) public static int Sign(this long x) Parameters x long Returns int Sign(float) public static int Sign(this float x) Parameters x float Returns int Sqr(float) public static float Sqr(this float x) Parameters x float Returns float Sqrt(float) public static float Sqrt(this float x) Parameters x float Returns float Truncate(float) public static int Truncate(this float x) Parameters x float Returns int Wrap(int, int, int) public static int Wrap(this int x, int lowerBound, int upperBound) Parameters x int lowerBound int upperBound int Returns int Wrap360(float) public static float Wrap360(this float x) Parameters x float Returns float"
  },
  "api/Lime.NumericRange.html": {
    "href": "api/Lime.NumericRange.html",
    "title": "Struct NumericRange | Citrus Engine",
    "keywords": "Struct NumericRange Namespace Lime Assembly Lime.dll Representation of numeric range of numbers around median. public struct NumericRange : IEquatable<NumericRange> Implements IEquatable<NumericRange> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors NumericRange(float, float) public NumericRange(float median, float dispersion) Parameters median float dispersion float Fields Dispersion [YuzuMember] public float Dispersion Field Value float Median [YuzuMember] public float Median Field Value float Properties this[int] Gets or sets the component by its index. public float this[int component] { get; set; } Parameters component int Property Value float Methods Equals(NumericRange) Indicates whether the current object is equal to another object of the same type. public bool Equals(NumericRange rhs) Parameters rhs NumericRange Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. NormalRandomNumber() Returns random number from a normal distribution with given median and variance (dispersion) public float NormalRandomNumber() Returns float NormalRandomNumber(IRandom) public float NormalRandomNumber(IRandom rng) Parameters rng IRandom Returns float NormalRandomNumber(Random) public float NormalRandomNumber(Random rng) Parameters rng Random Returns float ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. UniformRandomNumber() Returns random number from uniform distribution with given median and range (note that Dispersion here is not the actual variance of a distribution but half of the range). public float UniformRandomNumber() Returns float UniformRandomNumber(IRandom) public float UniformRandomNumber(IRandom rng) Parameters rng IRandom Returns float UniformRandomNumber(Random) public float UniformRandomNumber(Random rng) Parameters rng Random Returns float Operators operator ==(NumericRange, NumericRange) public static bool operator ==(NumericRange lhs, NumericRange rhs) Parameters lhs NumericRange rhs NumericRange Returns bool operator !=(NumericRange, NumericRange) public static bool operator !=(NumericRange lhs, NumericRange rhs) Parameters lhs NumericRange rhs NumericRange Returns bool"
  },
  "api/Lime.NumericRangeBezierAnimationCurve.html": {
    "href": "api/Lime.NumericRangeBezierAnimationCurve.html",
    "title": "Class NumericRangeBezierAnimationCurve | Citrus Engine",
    "keywords": "Class NumericRangeBezierAnimationCurve Namespace Lime Assembly Lime.dll public class NumericRangeBezierAnimationCurve : BezierAnimationCurve<NumericRange>, IAnimationCurve<NumericRange>, IBezierAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<NumericRange> Inheritance object BezierAnimationCurve<NumericRange> NumericRangeBezierAnimationCurve Implements IAnimationCurve<NumericRange> IBezierAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<NumericRange> Inherited Members BezierAnimationCurve<NumericRange>.IsEmpty BezierAnimationCurve<NumericRange>.Duration BezierAnimationCurve<NumericRange>.RefCount BezierAnimationCurve<NumericRange>.Keys BezierAnimationCurve<NumericRange>.AddRef() BezierAnimationCurve<NumericRange>.Release() BezierAnimationCurve<NumericRange>.CreateEvaluator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Interpolate(int, float, float) protected override NumericRange Interpolate(int index, float time, float intervalTime) Parameters index int time float intervalTime float Returns NumericRange"
  },
  "api/Lime.NumericRangeSimpleAnimationCurve.html": {
    "href": "api/Lime.NumericRangeSimpleAnimationCurve.html",
    "title": "Class NumericRangeSimpleAnimationCurve | Citrus Engine",
    "keywords": "Class NumericRangeSimpleAnimationCurve Namespace Lime Assembly Lime.dll public class NumericRangeSimpleAnimationCurve : SimpleAnimationCurve<NumericRange>, IAnimationCurve<NumericRange>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<NumericRange> Inheritance object SimpleAnimationCurve<NumericRange> NumericRangeSimpleAnimationCurve Implements IAnimationCurve<NumericRange> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<NumericRange> Inherited Members SimpleAnimationCurve<NumericRange>.Keys SimpleAnimationCurve<NumericRange>.IsEmpty SimpleAnimationCurve<NumericRange>.Duration SimpleAnimationCurve<NumericRange>.RefCount SimpleAnimationCurve<NumericRange>.AddRef() SimpleAnimationCurve<NumericRange>.Release() SimpleAnimationCurve<NumericRange>.CreateEvaluator() SimpleAnimationCurve<NumericRange>.Create(IEnumerable<SimpleKeyframe<NumericRange>>) SimpleAnimationCurve<NumericRange>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(NumericRange, NumericRange, float) protected override NumericRange InterpolateLinear(NumericRange value1, NumericRange value2, float amount) Parameters value1 NumericRange value2 NumericRange amount float Returns NumericRange InterpolateSplined(NumericRange, NumericRange, NumericRange, NumericRange, float) protected override NumericRange InterpolateSplined(NumericRange value1, NumericRange value2, NumericRange value3, NumericRange value4, float amount) Parameters value1 NumericRange value2 NumericRange value3 NumericRange value4 NumericRange amount float Returns NumericRange"
  },
  "api/Lime.OggDecoder.html": {
    "href": "api/Lime.OggDecoder.html",
    "title": "Class OggDecoder | Citrus Engine",
    "keywords": "Class OggDecoder Namespace Lime Assembly Lime.dll public class OggDecoder : IAudioDecoder, IDisposable Inheritance object OggDecoder Implements IAudioDecoder IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OggDecoder(Stream) public OggDecoder(Stream stream) Parameters stream Stream Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~OggDecoder() protected ~OggDecoder() GetBlockSize() public int GetBlockSize() Returns int GetCompressedSize() public int GetCompressedSize() Returns int GetCurrentStreamsCount() public static int GetCurrentStreamsCount() Returns int GetFormat() public AudioFormat GetFormat() Returns AudioFormat GetFrequency() public int GetFrequency() Returns int IsOggStream(Stream) public static bool IsOggStream(Stream stream) Parameters stream Stream Returns bool OggClose(int) public static int OggClose(int handle) Parameters handle int Returns int OggRead(nint, uint, uint, int) public static uint OggRead(nint buffer, uint size, uint nmemb, int handle) Parameters buffer nint size uint nmemb uint handle int Returns uint OggSeek(int, long, SeekOrigin) public static int OggSeek(int handle, long offset, SeekOrigin whence) Parameters handle int offset long whence SeekOrigin Returns int OggTell(int) public static int OggTell(int handle) Parameters handle int Returns int ReadBlocks(nint, int, int) public int ReadBlocks(nint buffer, int startIndex, int blockCount) Parameters buffer nint startIndex int blockCount int Returns int Rewind() public void Rewind() ThrowIfDisposed() protected void ThrowIfDisposed()"
  },
  "api/Lime.OgvDecoder.html": {
    "href": "api/Lime.OgvDecoder.html",
    "title": "Class OgvDecoder | Citrus Engine",
    "keywords": "Class OgvDecoder Namespace Lime Assembly Lime.dll public class OgvDecoder : IDisposable Inheritance object OgvDecoder Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OgvDecoder(Stream) public OgvDecoder(Stream stream) Parameters stream Stream Properties FrameSize public Size FrameSize { get; } Property Value Size Methods DecodeFrame() public bool DecodeFrame() Returns bool Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() FillTextureAlpha(Color4[], int, int) public void FillTextureAlpha(Color4[] pixels, int width, int height) Parameters pixels Color4[] width int height int FillTextureRGBX8(Color4[], int, int) public void FillTextureRGBX8(Color4[] pixels, int width, int height) Parameters pixels Color4[] width int height int GetCurrentStreamsCount() public static int GetCurrentStreamsCount() Returns int GetPlaybackTime() public double GetPlaybackTime() Returns double"
  },
  "api/Lime.OpacityMask.html": {
    "href": "api/Lime.OpacityMask.html",
    "title": "Class OpacityMask | Citrus Engine",
    "keywords": "Class OpacityMask Namespace Lime Assembly Lime.dll public class OpacityMask Inheritance object OpacityMask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OpacityMask(int, int) public OpacityMask(int width, int height) Parameters width int height int OpacityMask(string) public OpacityMask(string path) Parameters path string Properties Data public byte[] Data { get; } Property Value byte[] Height public int Height { get; } Property Value int Stride public int Stride { get; } Property Value int Width public int Width { get; } Property Value int Methods TestPixel(int, int) public bool TestPixel(int x, int y) Parameters x int y int Returns bool"
  },
  "api/Lime.OverdrawForegroundBehavior.html": {
    "href": "api/Lime.OverdrawForegroundBehavior.html",
    "title": "Class OverdrawForegroundBehavior | Citrus Engine",
    "keywords": "Class OverdrawForegroundBehavior Namespace Lime Assembly Lime.dll If Overdraw mode is enabled, adds owner to overdraw foreground RenderChain and disables rendering of a subtree (including owner) of child objects in the main render list. public class OverdrawForegroundBehavior : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior OverdrawForegroundBehavior Implements IDisposable IAnimable ITriggerable Derived OverdrawForegroundComponent Inherited Members NodeBehavior.Order NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.Update(float) NodeBehavior.LateUpdate(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Remarks If turning on overdraw mode does not turn off rendering of a subtree in the main render list, you are probably faced with a special case where RenderObjects are created bypassing presenters. As one possible solution, you can manually initialize RenderObject.OwnerInfo: #if PROFILER renderObject.OwnerInfo.Initialize(Node); #endif // PROFILER"
  },
  "api/Lime.OverdrawForegroundComponent.html": {
    "href": "api/Lime.OverdrawForegroundComponent.html",
    "title": "Class OverdrawForegroundComponent | Citrus Engine",
    "keywords": "Class OverdrawForegroundComponent Namespace Lime Assembly Lime.dll [AllowedComponentOwnerTypes(new Type[] { typeof(Frame), typeof(Button), typeof(Image), typeof(SimpleText), typeof(RichText) })] public class OverdrawForegroundComponent : OverdrawForegroundBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior OverdrawForegroundBehavior OverdrawForegroundComponent Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.Order NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.Update(float) NodeBehavior.LateUpdate(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable)"
  },
  "api/Lime.PackedAssetBundle.Manifest.html": {
    "href": "api/Lime.PackedAssetBundle.Manifest.html",
    "title": "Class PackedAssetBundle.Manifest | Citrus Engine",
    "keywords": "Class PackedAssetBundle.Manifest Namespace Lime Assembly Lime.dll This class contains a specific data needed for applying asset bundle patches. public sealed class PackedAssetBundle.Manifest Inheritance object PackedAssetBundle.Manifest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields FileName public const string FileName = \".manifest\" Field Value string Properties BaseBundleVersion [YuzuMember] public int? BaseBundleVersion { get; set; } Property Value int? BundleVersion [YuzuMember] public int? BundleVersion { get; set; } Property Value int? DeletedAssets [YuzuMember] public List<string> DeletedAssets { get; } Property Value List<string> Methods Create(AssetBundle) public static PackedAssetBundle.Manifest Create(AssetBundle bundle) Parameters bundle AssetBundle Returns PackedAssetBundle.Manifest Save(AssetBundle) public void Save(AssetBundle bundle) Parameters bundle AssetBundle"
  },
  "api/Lime.PackedAssetBundle.html": {
    "href": "api/Lime.PackedAssetBundle.html",
    "title": "Class PackedAssetBundle | Citrus Engine",
    "keywords": "Class PackedAssetBundle Namespace Lime Assembly Lime.dll public class PackedAssetBundle : AssetBundle, IDisposable Inheritance object AssetBundle PackedAssetBundle Implements IDisposable Inherited Members AssetBundle.Current AssetBundle.SetCurrent(AssetBundle, bool) AssetBundle.Initialized AssetBundle.ReadFile(string) AssetBundle.ReadAllText(string, Encoding) AssetBundle.ImportFile(string, string, SHA256, AssetAttributes) AssetBundle.OpenFileLocalized(string) AssetBundle.GetLocalizedPath(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PackedAssetBundle(string, AssetBundleFlags) public PackedAssetBundle(string path, AssetBundleFlags flags = AssetBundleFlags.None) Parameters path string flags AssetBundleFlags PackedAssetBundle(string, string) public PackedAssetBundle(string resourceId, string assemblyName) Parameters resourceId string assemblyName string Properties DontCleanupBundleOnDispose public bool DontCleanupBundleOnDispose { get; set; } Property Value bool DontRefreshBundleChecksumOnDispose public bool DontRefreshBundleChecksumOnDispose { get; set; } Property Value bool Path public string Path { get; } Property Value string Methods ApplyPatch(PackedAssetBundle) public void ApplyPatch(PackedAssetBundle patchBundle) Parameters patchBundle PackedAssetBundle CalcBundleChecksum(string) public static int CalcBundleChecksum(string bundlePath) Parameters bundlePath string Returns int CleanupBundle() public void CleanupBundle() DeleteFile(string) public override void DeleteFile(string path) Parameters path string Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public override void Dispose() EnumerateFiles(string, string) Enumerates all files by given path and having the given extension. Order is specific to implementation. public override IEnumerable<string> EnumerateFiles(string path = null, string extension = null) Parameters path string extension string Returns IEnumerable<string> FileExists(string) public override bool FileExists(string path) Parameters path string Returns bool FromSystemPath(string) Translates absolute system file path to the asset path. Raises UnsupportedException() for PackedAssetBundle. public override string FromSystemPath(string systemPath) Parameters systemPath string Returns string GetFileAttributes(string) public override AssetAttributes GetFileAttributes(string path) Parameters path string Returns AssetAttributes GetFileContentsHash(string) Returns SHA256 based on the file contents. public override SHA256 GetFileContentsHash(string path) Parameters path string Returns SHA256 GetFileOriginHash(string) Returns SHA256 that was passed to the ImportFile or ImportFileRaw methods. public override SHA256 GetFileOriginHash(string path) Parameters path string Returns SHA256 GetFileSize(string) public override int GetFileSize(string path) Parameters path string Returns int GetFileUnpackedSize(string) public override int GetFileUnpackedSize(string path) Parameters path string Returns int ImportFile(string, Stream, SHA256, AssetAttributes) public override void ImportFile(string destinationPath, Stream stream, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream originHash SHA256 attributes AssetAttributes ImportFileRaw(string, Stream, int, SHA256, SHA256, AssetAttributes) Imports a file assuming that the input stream is already compressed. public override void ImportFileRaw(string destinationPath, Stream stream, int unpackedSize, SHA256 hash, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream unpackedSize int hash SHA256 originHash SHA256 attributes AssetAttributes IsBundleCorrupted(string) public static bool IsBundleCorrupted(string bundlePath) Parameters bundlePath string Returns bool OpenFile(string, FileMode) public override Stream OpenFile(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream OpenFileRaw(string, FileMode) Returns file data as it stored in the asset bundle, e.g. compressed. public override Stream OpenFileRaw(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream RefreshBundleChecksum(string) public static void RefreshBundleChecksum(string bundlePath) Parameters bundlePath string ToSystemPath(string) Translates bundle path to the asset in the file system. Raises UnsupportedException() for PackedAssetBundle. public override string ToSystemPath(string bundlePath) Parameters bundlePath string Returns string"
  },
  "api/Lime.ParticleEmitter.Particle.html": {
    "href": "api/Lime.ParticleEmitter.Particle.html",
    "title": "Class ParticleEmitter.Particle | Citrus Engine",
    "keywords": "Class ParticleEmitter.Particle Namespace Lime Assembly Lime.dll public class ParticleEmitter.Particle Inheritance object ParticleEmitter.Particle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Age public float Age Field Value float AgeToAnimationTime public float AgeToAnimationTime Field Value float Angle public float Angle Field Value float AngularVelocity public float AngularVelocity Field Value float CurrentColor public Color4 CurrentColor Field Value Color4 FullDirection public float FullDirection Field Value float FullPosition public Vector2 FullPosition Field Value Vector2 GravityAcceleration public float GravityAcceleration Field Value float GravityAmount public float GravityAmount Field Value float GravityDirection public float GravityDirection Field Value float GravityVelocity public float GravityVelocity Field Value float InitialColor public Color4 InitialColor Field Value Color4 Lifetime public float Lifetime Field Value float MagnetAmountCurrent public float MagnetAmountCurrent Field Value float MagnetAmountInitial public float MagnetAmountInitial Field Value float Modifier public ParticleModifier Modifier Field Value ParticleModifier RandomMotionSpeed public float RandomMotionSpeed Field Value float RandomRayDirection public float RandomRayDirection Field Value float RandomSplineOffset public float RandomSplineOffset Field Value float RandomSplineVertex0 public Vector2 RandomSplineVertex0 Field Value Vector2 RandomSplineVertex1 public Vector2 RandomSplineVertex1 Field Value Vector2 RandomSplineVertex2 public Vector2 RandomSplineVertex2 Field Value Vector2 RandomSplineVertex3 public Vector2 RandomSplineVertex3 Field Value Vector2 RegularDirection public float RegularDirection Field Value float RegularPosition public Vector2 RegularPosition Field Value Vector2 ScaleCurrent public Vector2 ScaleCurrent Field Value Vector2 ScaleInitial public Vector2 ScaleInitial Field Value Vector2 Spin public float Spin Field Value float TextureIndex public float TextureIndex Field Value float Transform public Matrix32 Transform Field Value Matrix32 Velocity public float Velocity Field Value float WindAmount public float WindAmount Field Value float WindDirection public float WindDirection Field Value float"
  },
  "api/Lime.ParticleEmitter.html": {
    "href": "api/Lime.ParticleEmitter.html",
    "title": "Class ParticleEmitter | Citrus Engine",
    "keywords": "Class ParticleEmitter Namespace Lime Assembly Lime.dll [TangerineNodeBuilder(\"BuildForTangerine\")] [TangerineAllowedChildrenTypes(new Type[] { typeof(ParticleModifier), typeof(EmitterShapePoint) })] [TangerineVisualHintGroup(\"/All/Nodes/Particles\", null)] public class ParticleEmitter : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, ITangerinePreviewAnimationListener, IUpdatableNode, IMaterialComponentOwner Inheritance object Node Widget ParticleEmitter Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable ITangerinePreviewAnimationListener IUpdatableNode IMaterialComponentOwner Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ParticleEmitter() public ParticleEmitter() Fields GloballyEnabled public static bool GloballyEnabled Field Value bool Particles public List<ParticleEmitter.Particle> Particles Field Value List<ParticleEmitter.Particle> Properties Action [TangerineKeyframeColor(1)] public EmitterAction Action { get; set; } Property Value EmitterAction AlongPathOrientation Whether particles are oriented along track. [YuzuMember] [TangerineKeyframeColor(16)] public bool AlongPathOrientation { get; set; } Property Value bool AngularVelocity Angular velocity of emitter (degrees) [YuzuMember] [TangerineKeyframeColor(30)] public NumericRange AngularVelocity { get; set; } Property Value NumericRange AspectRatio Designates width to height ratio. [YuzuMember] [TangerineKeyframeColor(27)] public NumericRange AspectRatio { get; set; } Property Value NumericRange BurstDistance Pixel distance to trigger burst-generation of particles. When BurstDistance > 0 ParticleEmitter will generate Number particles for every BurstDistance pixels of ParticleEmitter's movement. [YuzuMember] [Validation.Range(0, Infinity)] [TangerineKeyframeColor(7)] public float BurstDistance { get; set; } Property Value float DefaultMaterial public IMaterial DefaultMaterial { get; } Property Value IMaterial Direction Rotation angle of emitter (degrees, clockwise) [YuzuMember] [TangerineKeyframeColor(24)] public NumericRange Direction { get; set; } Property Value NumericRange EmissionType [YuzuMember] [TangerineKeyframeColor(10)] public EmissionType EmissionType { get; set; } Property Value EmissionType GravityAmount [YuzuMember] [TangerineKeyframeColor(21)] public NumericRange GravityAmount { get; set; } Property Value NumericRange GravityDirection degrees (0 - right, 90 - down) [YuzuMember] [TangerineKeyframeColor(20)] public NumericRange GravityDirection { get; set; } Property Value NumericRange ImmortalParticles Particles are generated once and live forever. [YuzuMember] [TangerineKeyframeColor(8)] public bool ImmortalParticles { get; set; } Property Value bool InitialColor Initial color of the particle at the moment of birth. [YuzuMember] public Color4 InitialColor { get; set; } Property Value Color4 Lifetime Particle lifetime in seconds [YuzuMember] [TangerineKeyframeColor(25)] public NumericRange Lifetime { get; set; } Property Value NumericRange LinkageWidgetName When ParticleLinkage is Other this makes sense as name of widget particle emitter is linked to. [YuzuMember] [TangerineKeyframeColor(12)] public string LinkageWidgetName { get; set; } Property Value string MagnetAmount [YuzuMember] [TangerineKeyframeColor(22)] public NumericRange MagnetAmount { get; set; } Property Value NumericRange Material public IMaterial Material { get; set; } Property Value IMaterial Number Number of particles generated per second. [YuzuMember] [TangerineKeyframeColor(13)] public float Number { get; set; } Property Value float NumberPerBurst [YuzuMember] public bool NumberPerBurst { get; set; } Property Value bool Orientation Rotation angle of generated particles [YuzuMember] [TangerineKeyframeColor(23)] public NumericRange Orientation { get; set; } Property Value NumericRange ParticlesLinkage [YuzuMember] [TangerineKeyframeColor(11)] public ParticlesLinkage ParticlesLinkage { get; set; } Property Value ParticlesLinkage RandomMotionAspectRatio [YuzuMember] [TangerineKeyframeColor(2)] public float RandomMotionAspectRatio { get; set; } Property Value float RandomMotionRadius [YuzuMember] [TangerineKeyframeColor(31)] public NumericRange RandomMotionRadius { get; set; } Property Value NumericRange RandomMotionRotation [YuzuMember] [TangerineKeyframeColor(3)] public NumericRange RandomMotionRotation { get; set; } Property Value NumericRange RandomMotionSpeed [YuzuMember] [TangerineKeyframeColor(1)] public NumericRange RandomMotionSpeed { get; set; } Property Value NumericRange Seed public int Seed { get; set; } Property Value int Shape [YuzuMember] [TangerineKeyframeColor(9)] public EmitterShape Shape { get; set; } Property Value EmitterShape SpawnBetweenFrames [YuzuMember] public bool SpawnBetweenFrames { get; set; } Property Value bool Speed Update: delta *= Speed [YuzuMember] [TangerineKeyframeColor(15)] public float Speed { get; set; } Property Value float Spin Angular velocity of particles. [YuzuMember] [TangerineKeyframeColor(29)] public NumericRange Spin { get; set; } Property Value NumericRange TimeShift Simulate TimeShift seconds on first update. [YuzuMember] [TangerineKeyframeColor(14)] public float TimeShift { get; set; } Property Value float UV0 public Vector2 UV0 { get; } Property Value Vector2 UV1 public Vector2 UV1 { get; } Property Value Vector2 UseCustomSeed public bool UseCustomSeed { get; set; } Property Value bool Velocity [YuzuMember] [TangerineKeyframeColor(28)] public NumericRange Velocity { get; set; } Property Value NumericRange WindAmount [YuzuMember] [TangerineKeyframeColor(19)] public NumericRange WindAmount { get; set; } Property Value NumericRange WindDirection degrees (0 - right, 90 - down) [YuzuMember] [TangerineKeyframeColor(17)] public NumericRange WindDirection { get; set; } Property Value NumericRange Zoom Scale of generated particles [YuzuMember] [TangerineKeyframeColor(26)] public NumericRange Zoom { get; set; } Property Value NumericRange Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain ApplyAspectRatio(Vector2, float) public static Vector2 ApplyAspectRatio(Vector2 scale, float aspectRatio) Parameters scale Vector2 aspectRatio float Returns Vector2 ApplyAspectRatio(float, float) public static Vector2 ApplyAspectRatio(float zoom, float aspectRatio) Parameters zoom float aspectRatio float Returns Vector2 ClearParticles() public void ClearParticles() DecomposeScale(Vector2, out float, out float) public static void DecomposeScale(Vector2 scale, out float aspectRatio, out float zoom) Parameters scale Vector2 aspectRatio float zoom float DeleteAllParticles() public void DeleteAllParticles() Dispose() Stops all tasks and calls Dispose of all descendants. public override void Dispose() DrawCustomShape(Color4, Color4, Matrix32) public void DrawCustomShape(Color4 areaColor, Color4 lineColor, Matrix32 transform) Parameters areaColor Color4 lineColor Color4 transform Matrix32 GetLinkageWidget() public Widget GetLinkageWidget() Returns Widget GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject OnTrigger(string, object, double) Invokes when the trigger property has been changed by animation. public override void OnTrigger(string property, object value, double animationTimeCorrection = 0) Parameters property string A property name. value object A new property value. animationTimeCorrection double An animation time correction. OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float ResetRandom() public void ResetRandom()"
  },
  "api/Lime.ParticleLimitPostLateUpdateProcessor.html": {
    "href": "api/Lime.ParticleLimitPostLateUpdateProcessor.html",
    "title": "Class ParticleLimitPostLateUpdateProcessor | Citrus Engine",
    "keywords": "Class ParticleLimitPostLateUpdateProcessor Namespace Lime Assembly Lime.dll public class ParticleLimitPostLateUpdateProcessor : NodeProcessor Inheritance object NodeProcessor ParticleLimitPostLateUpdateProcessor Inherited Members NodeProcessor.Manager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.ParticleLimitPreLateUpdateProcessor.html": {
    "href": "api/Lime.ParticleLimitPreLateUpdateProcessor.html",
    "title": "Class ParticleLimitPreLateUpdateProcessor | Citrus Engine",
    "keywords": "Class ParticleLimitPreLateUpdateProcessor Namespace Lime Assembly Lime.dll public class ParticleLimitPreLateUpdateProcessor : NodeProcessor Inheritance object NodeProcessor ParticleLimitPreLateUpdateProcessor Inherited Members NodeProcessor.Manager object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public override void Start() Stop(NodeManager) public override void Stop(NodeManager manager) Parameters manager NodeManager Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.ParticleLimiter.html": {
    "href": "api/Lime.ParticleLimiter.html",
    "title": "Class ParticleLimiter | Citrus Engine",
    "keywords": "Class ParticleLimiter Namespace Lime Assembly Lime.dll public class ParticleLimiter Inheritance object ParticleLimiter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ParticleLimiter() public ParticleLimiter() Properties ParticleCount Total number of visible particles per given NodeManager. Calculated during LateUpdateStage. Provides previous frame value during PreLate, Late, PostLate update stages. public int ParticleCount { get; } Property Value int ParticleCountLimit Maximum number of visible particles. Use -1 for unlimited. Can be changed during any stage. public int ParticleCountLimit { get; set; } Property Value int"
  },
  "api/Lime.ParticleModifier.html": {
    "href": "api/Lime.ParticleModifier.html",
    "title": "Class ParticleModifier | Citrus Engine",
    "keywords": "Class ParticleModifier Namespace Lime Assembly Lime.dll [TangerineAllowedParentTypes(new Type[] { typeof(ParticleEmitter) })] public class ParticleModifier : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node ParticleModifier Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ParticleModifier() public ParticleModifier() Properties AngularVelocity [YuzuMember] [TangerineKeyframeColor(22)] public float AngularVelocity { get; set; } Property Value float AnimationFps [YuzuMember] [TangerineKeyframeColor(13)] public float AnimationFps { get; set; } Property Value float Color [YuzuMember] [TangerineKeyframeColor(9)] public Color4 Color { get; set; } Property Value Color4 FirstFrame [YuzuMember] [TangerineKeyframeColor(11)] public int FirstFrame { get; set; } Property Value int GravityAmount [YuzuMember] [TangerineKeyframeColor(23)] public float GravityAmount { get; set; } Property Value float LastFrame [YuzuMember] [TangerineKeyframeColor(12)] public int LastFrame { get; set; } Property Value int LoopedAnimation [YuzuMember] [TangerineKeyframeColor(14)] public bool LoopedAnimation { get; set; } Property Value bool MagnetAmount [YuzuMember] [TangerineKeyframeColor(25)] public float MagnetAmount { get; set; } Property Value float Scale [YuzuMember] [TangerineKeyframeColor(19)] public Vector2 Scale { get; set; } Property Value Vector2 Size [YuzuMember] [TangerineKeyframeColor(18)] [Validation.RatioInfo(new Type[] { typeof(ParticleModifier) })] [Validation.SizeInfo(new Type[] { typeof(ParticleModifier) })] public Vector2 Size { get; set; } Property Value Vector2 Spin [YuzuMember] [TangerineKeyframeColor(21)] public float Spin { get; set; } Property Value float Sprite [YuzuMember] [TangerineKeyframeColor(27)] public ISprite Sprite { get; set; } Property Value ISprite Velocity [YuzuMember] [TangerineKeyframeColor(20)] public float Velocity { get; set; } Property Value float WindAmount [YuzuMember] [TangerineKeyframeColor(24)] public float WindAmount { get; set; } Property Value float Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain GetSprite(int) public ISprite GetSprite(int index) Parameters index int Returns ISprite"
  },
  "api/Lime.ParticlesLinkage.html": {
    "href": "api/Lime.ParticlesLinkage.html",
    "title": "Enum ParticlesLinkage | Citrus Engine",
    "keywords": "Enum ParticlesLinkage Namespace Lime Assembly Lime.dll Particles move with widget they're linked to. public enum ParticlesLinkage Fields Other = 2 User defined widget via LinkageWidgetName Parent = 1 Emitter parent. Root = 0 No linkage (default) RootLegacy = 3 Link to WidgetContext.Current.Root."
  },
  "api/Lime.ParticlesMagnet.html": {
    "href": "api/Lime.ParticlesMagnet.html",
    "title": "Class ParticlesMagnet | Citrus Engine",
    "keywords": "Class ParticlesMagnet Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Particles\", null)] public class ParticlesMagnet : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget ParticlesMagnet Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ParticlesMagnet() public ParticlesMagnet() Properties Attenuation [YuzuMember] [TangerineKeyframeColor(28)] public float Attenuation { get; set; } Property Value float Shape [YuzuMember] [TangerineKeyframeColor(27)] public EmitterShape Shape { get; set; } Property Value EmitterShape Strength [YuzuMember] [TangerineKeyframeColor(29)] public float Strength { get; set; } Property Value float"
  },
  "api/Lime.PcmDecoder.html": {
    "href": "api/Lime.PcmDecoder.html",
    "title": "Class PcmDecoder | Citrus Engine",
    "keywords": "Class PcmDecoder Namespace Lime Assembly Lime.dll public class PcmDecoder : IAudioDecoder, IDisposable Inheritance object PcmDecoder Implements IAudioDecoder IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PcmDecoder(Stream) public PcmDecoder(Stream stream) Parameters stream Stream Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetBlockSize() public int GetBlockSize() Returns int GetCompressedSize() public int GetCompressedSize() Returns int GetFormat() public AudioFormat GetFormat() Returns AudioFormat GetFrequency() public int GetFrequency() Returns int ReadBlocks(nint, int, int) public int ReadBlocks(nint buffer, int startIndex, int blockCount) Parameters buffer nint startIndex int blockCount int Returns int Rewind() public void Rewind()"
  },
  "api/Lime.Persistence.Format.html": {
    "href": "api/Lime.Persistence.Format.html",
    "title": "Enum Persistence.Format | Citrus Engine",
    "keywords": "Enum Persistence.Format Namespace Lime Assembly Lime.dll public enum Persistence.Format Fields Binary = 1 Json = 0"
  },
  "api/Lime.Persistence.html": {
    "href": "api/Lime.Persistence.html",
    "title": "Class Persistence | Citrus Engine",
    "keywords": "Class Persistence Namespace Lime Assembly Lime.dll public class Persistence Inheritance object Persistence Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Persistence() public Persistence() Persistence(CommonOptions, JsonSerializeOptions) public Persistence(CommonOptions yuzuOptions, JsonSerializeOptions yuzuJsonOptions) Parameters yuzuOptions CommonOptions yuzuJsonOptions JsonSerializeOptions Fields Context public IPersistenceContext Context Field Value IPersistenceContext YuzuJsonOptions public readonly JsonSerializeOptions YuzuJsonOptions Field Value JsonSerializeOptions YuzuOptions public readonly CommonOptions YuzuOptions Field Value CommonOptions Methods CalcObjectCheckSum(object) public virtual int CalcObjectCheckSum(object @object) Parameters object object Returns int Clone(object) Clone object using Yuzu.Clone. public object Clone(object obj) Parameters obj object A source object to clone. Returns object Clone<T>(T) Clone object using Yuzu.Clone. public T Clone<T>(T obj) Parameters obj T A source object to clone. Returns T Type Parameters T A type of object that need to be returned. DeduceFormat(Stream) protected static Persistence.Format DeduceFormat(Stream stream) Parameters stream Stream Returns Persistence.Format ReadFromBundle<T>(AssetBundle, string, object) public virtual T ReadFromBundle<T>(AssetBundle bundle, string path, object @object = null) Parameters bundle AssetBundle path string object object Returns T Type Parameters T ReadFromCurrentBundle<T>(string, object) public T ReadFromCurrentBundle<T>(string path, object @object = null) Parameters path string object object Returns T Type Parameters T ReadFromFile<T>(string, object) public virtual T ReadFromFile<T>(string path, object @object = null) Parameters path string object object Returns T Type Parameters T ReadFromStream<T>(Stream, object) public virtual T ReadFromStream<T>(Stream stream, object @object = null) Parameters stream Stream object object Returns T Type Parameters T ReadFromString<T>(string, object) public virtual T ReadFromString<T>(string source, object @object = null) Parameters source string object object Returns T Type Parameters T ReadMetadataFromCurrentBundle(string) public IEnumerable<Metadata> ReadMetadataFromCurrentBundle(string path) Parameters path string Returns IEnumerable<Metadata> ReadMetadataFromFile(string) public IEnumerable<Metadata> ReadMetadataFromFile(string path) Parameters path string Returns IEnumerable<Metadata> ReadMetadataFromStream(Stream) public IEnumerable<Metadata> ReadMetadataFromStream(Stream stream) Parameters stream Stream Returns IEnumerable<Metadata> TryReadDocumentHeaderFromCurrentBundle(string) public DocumentHeader TryReadDocumentHeaderFromCurrentBundle(string path) Parameters path string Returns DocumentHeader TryReadDocumentHeaderFromFile(string) public DocumentHeader TryReadDocumentHeaderFromFile(string path) Parameters path string Returns DocumentHeader TryReadDocumentHeaderFromStream(Stream) public DocumentHeader TryReadDocumentHeaderFromStream(Stream stream) Parameters stream Stream Returns DocumentHeader WriteToBundle(AssetBundle, string, object, Format, SHA256, AssetAttributes) public virtual void WriteToBundle(AssetBundle bundle, string path, object @object, Persistence.Format format, SHA256 originHash, AssetAttributes attributes) Parameters bundle AssetBundle path string object object format Persistence.Format originHash SHA256 attributes AssetAttributes WriteToFile(string, object, Format) public virtual void WriteToFile(string path, object @object, Persistence.Format format) Parameters path string object object format Persistence.Format WriteToStream(Stream, object, Format) public virtual void WriteToStream(Stream stream, object @object, Persistence.Format format) Parameters stream Stream object object format Persistence.Format WriteToString(object, Format) public virtual string WriteToString(object @object, Persistence.Format format) Parameters object object format Persistence.Format Returns string"
  },
  "api/Lime.PersistenceContext.ReadData.html": {
    "href": "api/Lime.PersistenceContext.ReadData.html",
    "title": "Class PersistenceContext.ReadData | Citrus Engine",
    "keywords": "Class PersistenceContext.ReadData Namespace Lime Assembly Lime.dll protected class PersistenceContext.ReadData : IPersistenceReadData Inheritance object PersistenceContext.ReadData Implements IPersistenceReadData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DocumentHeader public DocumentHeader DocumentHeader { get; } Property Value DocumentHeader ReplacedStream public Stream ReplacedStream { get; } Property Value Stream"
  },
  "api/Lime.PersistenceContext.html": {
    "href": "api/Lime.PersistenceContext.html",
    "title": "Class PersistenceContext | Citrus Engine",
    "keywords": "Class PersistenceContext Namespace Lime Assembly Lime.dll public abstract class PersistenceContext : IPersistenceContext Inheritance object PersistenceContext Implements IPersistenceContext Derived LimePersistenceContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AfterRead<T>(IPersistenceReadData, object) public virtual void AfterRead<T>(IPersistenceReadData readData, object @object) Parameters readData IPersistenceReadData object object Type Parameters T BeforeRead<T>(Persistence, AbstractDeserializer, Stream, Format) public virtual IPersistenceReadData BeforeRead<T>(Persistence persistence, AbstractDeserializer deserializer, Stream stream, Persistence.Format format) Parameters persistence Persistence deserializer AbstractDeserializer stream Stream format Persistence.Format Returns IPersistenceReadData Type Parameters T BeforeWrite(Persistence, AbstractWriterSerializer, Stream, object, Format) public virtual void BeforeWrite(Persistence persistence, AbstractWriterSerializer serializer, Stream stream, object @object, Persistence.Format format) Parameters persistence Persistence serializer AbstractWriterSerializer stream Stream object object format Persistence.Format CreateDocumentHeader(object) protected DocumentHeader CreateDocumentHeader(object @object) Parameters object object Returns DocumentHeader CreateDocumentHeader<T>() public DocumentHeader CreateDocumentHeader<T>() Returns DocumentHeader Type Parameters T EnumerateDataLayers() protected abstract IEnumerable<(string Layer, int Version)> EnumerateDataLayers() Returns IEnumerable<(string Layer, int Version)> IsDocumentHeaderServiced(Type) protected abstract bool IsDocumentHeaderServiced(Type type) Parameters type Type Returns bool StoreMetadata(object, List<Metadata>) public void StoreMetadata(object @object, List<Metadata> metadata) Parameters object object metadata List<Metadata> TryGetMetadata(object, out List<Metadata>) public bool TryGetMetadata(object @object, out List<Metadata> metadata) Parameters object object metadata List<Metadata> Returns bool"
  },
  "api/Lime.PinchGesture.html": {
    "href": "api/Lime.PinchGesture.html",
    "title": "Class PinchGesture | Citrus Engine",
    "keywords": "Class PinchGesture Namespace Lime Assembly Lime.dll public sealed class PinchGesture : DragGesture Inheritance object Gesture DragGesture PinchGesture Inherited Members DragGesture.ButtonIndex DragGesture.Direction DragGesture.DragThreshold DragGesture.Exclusive DragGesture.MousePressPosition DragGesture.MousePosition DragGesture.TotalDragDistance DragGesture.LastDragDistance DragGesture.Began DragGesture.Recognized DragGesture.Ending DragGesture.Changed DragGesture.Ended DragGesture.WasBegan() DragGesture.WasRecognized() DragGesture.WasChanged() DragGesture.WasEnding() DragGesture.WasEnded() DragGesture.IsRecognizing() DragGesture.IsChanging() Gesture.Owner object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PinchGesture() public PinchGesture() PinchGesture(DragDirection) public PinchGesture(DragDirection dragDirection) Parameters dragDirection DragDirection PinchGesture(DragDirection, bool, float) public PinchGesture(DragDirection direction, bool exclusive, float dragThreshold) Parameters direction DragDirection exclusive bool dragThreshold float PinchGesture(bool) public PinchGesture(bool exclusive) Parameters exclusive bool Properties LastPinchScale public float LastPinchScale { get; } Property Value float TotalPinchScale public float TotalPinchScale { get; } Property Value float TouchDistance public float TouchDistance { get; } Property Value float TouchPressDistance public float TouchPressDistance { get; } Property Value float Methods CanStartDrag() protected override bool CanStartDrag() Returns bool IsDragging() protected override bool IsDragging() Returns bool OnUpdate() protected override bool OnUpdate() Returns bool TryGetDragPosition(out Vector2) protected override bool TryGetDragPosition(out Vector2 position) Parameters position Vector2 Returns bool TryGetStartDragPosition(out Vector2) protected override bool TryGetStartDragPosition(out Vector2 position) Parameters position Vector2 Returns bool"
  },
  "api/Lime.Plane.html": {
    "href": "api/Lime.Plane.html",
    "title": "Struct Plane | Citrus Engine",
    "keywords": "Struct Plane Namespace Lime Assembly Lime.dll public struct Plane : IEquatable<Plane> Implements IEquatable<Plane> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Plane(Vector3, float) public Plane(Vector3 normal, float d) Parameters normal Vector3 d float Fields D [YuzuMember] public float D Field Value float Normal [YuzuMember] public Vector3 Normal Field Value Vector3 Properties Normalized public Plane Normalized { get; } Property Value Plane Methods Dot(Vector4) public float Dot(Vector4 value) Parameters value Vector4 Returns float DotCoordinate(Vector3) public float DotCoordinate(Vector3 value) Parameters value Vector3 Returns float DotNormal(Vector3) public float DotNormal(Vector3 value) Parameters value Vector3 Returns float Equals(Plane) Indicates whether the current object is equal to another object of the same type. public bool Equals(Plane other) Parameters other Plane An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object other) Parameters other object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FromTriangle(Vector3, Vector3, Vector3) public static Plane FromTriangle(Vector3 a, Vector3 b, Vector3 c) Parameters a Vector3 b Vector3 c Vector3 Returns Plane GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Transform(Matrix44) public Plane Transform(Matrix44 matrix) Parameters matrix Matrix44 Returns Plane Operators operator ==(Plane, Plane) public static bool operator ==(Plane plane1, Plane plane2) Parameters plane1 Plane plane2 Plane Returns bool operator !=(Plane, Plane) public static bool operator !=(Plane plane1, Plane plane2) Parameters plane1 Plane plane2 Plane Returns bool"
  },
  "api/Lime.PlatformId.html": {
    "href": "api/Lime.PlatformId.html",
    "title": "Enum PlatformId | Citrus Engine",
    "keywords": "Enum PlatformId Namespace Lime Assembly Lime.dll public enum PlatformId Fields Android = 1 Mac = 2 Win = 3 iOS = 0"
  },
  "api/Lime.PlatformRenderer.html": {
    "href": "api/Lime.PlatformRenderer.html",
    "title": "Class PlatformRenderer | Citrus Engine",
    "keywords": "Class PlatformRenderer Namespace Lime Assembly Lime.dll public static class PlatformRenderer Inheritance object PlatformRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentRenderTarget public static RenderTexture CurrentRenderTarget { get; } Property Value RenderTexture DrawCount public static int DrawCount { get; } Property Value int OffscreenRendering public static bool OffscreenRendering { get; } Property Value bool PipelineCacheSupported public static bool PipelineCacheSupported { get; } Property Value bool Methods BeginFrame() public static void BeginFrame() Clear(ClearOptions, Color4) public static void Clear(ClearOptions options, Color4 color) Parameters options ClearOptions color Color4 Clear(ClearOptions, Color4, float, byte) public static void Clear(ClearOptions options, Color4 color, float depth, byte stencil) Parameters options ClearOptions color Color4 depth float stencil byte Draw(PrimitiveTopology, int, int) public static void Draw(PrimitiveTopology topology, int startVertex, int vertexCount) Parameters topology PrimitiveTopology startVertex int vertexCount int DrawIndexed(PrimitiveTopology, int, int, int) public static void DrawIndexed(PrimitiveTopology topology, int startIndex, int indexCount, int baseVertex = 0) Parameters topology PrimitiveTopology startIndex int indexCount int baseVertex int GetFormatFeatures(Format) public static FormatFeatures GetFormatFeatures(Format format) Parameters format Format Returns FormatFeatures GetPipelineCacheData() public static byte[] GetPipelineCacheData() Returns byte[] SetBlendState(BlendState) public static void SetBlendState(BlendState value) Parameters value BlendState SetColorWriteMask(ColorWriteMask) public static void SetColorWriteMask(ColorWriteMask value) Parameters value ColorWriteMask SetCullMode(CullMode) public static void SetCullMode(CullMode value) Parameters value CullMode SetDepthState(DepthState) public static void SetDepthState(DepthState value) Parameters value DepthState SetFrontFace(FrontFace) public static void SetFrontFace(FrontFace value) Parameters value FrontFace SetIndexBuffer(Buffer, int, IndexFormat) public static void SetIndexBuffer(Buffer buffer, int offset, IndexFormat format) Parameters buffer Buffer offset int format IndexFormat SetPipelineCacheData(byte[]) public static bool SetPipelineCacheData(byte[] data) Parameters data byte[] Returns bool SetScissorState(ScissorState) public static void SetScissorState(ScissorState value) Parameters value ScissorState SetShaderParams(ShaderParams[]) public static void SetShaderParams(ShaderParams[] paramsArray) Parameters paramsArray ShaderParams[] SetShaderParams(ShaderParams[], int) public static void SetShaderParams(ShaderParams[] paramsArray, int count) Parameters paramsArray ShaderParams[] count int SetShaderProgram(ShaderProgram) public static void SetShaderProgram(ShaderProgram program) Parameters program ShaderProgram SetStencilState(StencilState) public static void SetStencilState(StencilState value) Parameters value StencilState SetTexture(int, ITexture) public static void SetTexture(int slot, ITexture texture) Parameters slot int texture ITexture SetVertexBuffer(int, Buffer, int) public static void SetVertexBuffer(int slot, Buffer buffer, int offset) Parameters slot int buffer Buffer offset int SetVertexInputLayout(VertexInputLayout) public static void SetVertexInputLayout(VertexInputLayout layout) Parameters layout VertexInputLayout SetViewport(Viewport) public static void SetViewport(Viewport value) Parameters value Viewport TryGetGLInfo(out GLInfo) public static bool TryGetGLInfo(out GLInfo info) Parameters info GLInfo Returns bool Events ContextLost public static event Action ContextLost Event Type Action RenderTargetChanged public static event Action RenderTargetChanged Event Type Action"
  },
  "api/Lime.PlayParameters.html": {
    "href": "api/Lime.PlayParameters.html",
    "title": "Class PlayParameters | Citrus Engine",
    "keywords": "Class PlayParameters Namespace Lime Assembly Lime.dll public class PlayParameters : IDisposable Inheritance object PlayParameters Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Decoder public IAudioDecoder Decoder Field Value IAudioDecoder Exclusive public bool Exclusive Field Value bool FadeInTime public float FadeInTime Field Value float FadeOutTime public float FadeOutTime Field Value float Group public AudioChannelGroup Group Field Value AudioChannelGroup Looping public bool Looping Field Value bool Pan public float Pan Field Value float Path public string Path Field Value string Paused public bool Paused Field Value bool Pitch public float Pitch Field Value float Priority public float Priority Field Value float Volume public float Volume Field Value float Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.Pluralizer.html": {
    "href": "api/Lime.Pluralizer.html",
    "title": "Class Pluralizer | Citrus Engine",
    "keywords": "Class Pluralizer Namespace Lime Assembly Lime.dll public static class Pluralizer Inheritance object Pluralizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPlural(int) public static int GetPlural(int n) Parameters n int Returns int GetPlural(object) public static int GetPlural(object obj) Parameters obj object Returns int Pluralize(string, params object[]) public static string Pluralize(string s, params object[] args) Parameters s string args object[] Returns string"
  },
  "api/Lime.PointObject.html": {
    "href": "api/Lime.PointObject.html",
    "title": "Class PointObject | Citrus Engine",
    "keywords": "Class PointObject Namespace Lime Assembly Lime.dll public class PointObject : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node PointObject Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived DistortionMeshPoint EmitterShapePoint PolylinePoint SplinePoint Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors PointObject() public PointObject() Properties Offset public virtual Vector2 Offset { get; set; } Property Value Vector2 Position [YuzuMember] [TangerineKeyframeColor(27)] public Vector2 Position { get; set; } Property Value Vector2 SkinningWeights [YuzuMember] public SkinningWeights SkinningWeights { get; set; } Property Value SkinningWeights TransformedPosition public Vector2 TransformedPosition { get; } Property Value Vector2 X public float X { get; set; } Property Value float Y public float Y { get; set; } Property Value float Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcPositionInSpaceOf(Widget) public Vector2 CalcPositionInSpaceOf(Widget container) Parameters container Widget Returns Vector2 RecalcTransformedPositionIfNeeded() public void RecalcTransformedPositionIfNeeded()"
  },
  "api/Lime.Polyline.html": {
    "href": "api/Lime.Polyline.html",
    "title": "Class Polyline | Citrus Engine",
    "keywords": "Class Polyline Namespace Lime Assembly Lime.dll Ломаная линия [TangerineAllowedChildrenTypes(new Type[] { typeof(PolylinePoint) })] [TangerineVisualHintGroup(\"/All/Nodes/Splines\", null)] public class Polyline : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Polyline Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Polyline() public Polyline() Properties Closed [YuzuMember] [TangerineKeyframeColor(1)] public bool Closed { get; set; } Property Value bool StaticThickness [YuzuMember] [TangerineKeyframeColor(31)] public bool StaticThickness { get; set; } Property Value bool Thickness Толщина [YuzuMember] [TangerineKeyframeColor(30)] public float Thickness { get; set; } Property Value float Methods GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject"
  },
  "api/Lime.PolylinePoint.html": {
    "href": "api/Lime.PolylinePoint.html",
    "title": "Class PolylinePoint | Citrus Engine",
    "keywords": "Class PolylinePoint Namespace Lime Assembly Lime.dll [TangerineAllowedParentTypes(new Type[] { typeof(Polyline) })] public class PolylinePoint : PointObject, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node PointObject PolylinePoint Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members PointObject.Position PointObject.X PointObject.Y PointObject.SkinningWeights PointObject.Offset PointObject.TransformedPosition PointObject.RecalcTransformedPositionIfNeeded() PointObject.CalcPositionInSpaceOf(Widget) PointObject.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float)"
  },
  "api/Lime.PostEarlyUpdateStage.html": {
    "href": "api/Lime.PostEarlyUpdateStage.html",
    "title": "Class PostEarlyUpdateStage | Citrus Engine",
    "keywords": "Class PostEarlyUpdateStage Namespace Lime Assembly Lime.dll Identifier for post-early update stage. public class PostEarlyUpdateStage Inheritance object PostEarlyUpdateStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.PostLateUpdateStage.html": {
    "href": "api/Lime.PostLateUpdateStage.html",
    "title": "Class PostLateUpdateStage | Citrus Engine",
    "keywords": "Class PostLateUpdateStage Namespace Lime Assembly Lime.dll Identifier for post-late update stage. public class PostLateUpdateStage Inheritance object PostLateUpdateStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.PostProcessingComponent.html": {
    "href": "api/Lime.PostProcessingComponent.html",
    "title": "Class PostProcessingComponent | Citrus Engine",
    "keywords": "Class PostProcessingComponent Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Effects/Post Processing\")] [AllowedComponentOwnerTypes(new Type[] { typeof(Widget) })] public class PostProcessingComponent : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior PostProcessingComponent Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.Order NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.LateUpdate(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields CustomMaterial public IMaterial CustomMaterial Field Value IMaterial Properties ApplyPostProcessing [TangerineGroup(\"10. Source texture\")] public bool ApplyPostProcessing { get; set; } Property Value bool BloomBrightThreshold [YuzuMember] [Validation.Range(0, 100)] [TangerineGroup(\"03. Bloom\")] public float BloomBrightThreshold { get; set; } Property Value float BloomColor [YuzuMember] [TangerineGroup(\"03. Bloom\")] public Color4 BloomColor { get; set; } Property Value Color4 BloomEnabled [YuzuMember] [TangerineGroup(\"03. Bloom\")] public bool BloomEnabled { get; set; } Property Value bool BloomGammaCorrection [YuzuMember] [TangerineGroup(\"03. Bloom\")] public Vector3 BloomGammaCorrection { get; set; } Property Value Vector3 BloomShaderId [YuzuMember] [TangerineGroup(\"03. Bloom\")] public BlurShaderId BloomShaderId { get; set; } Property Value BlurShaderId BloomStrength [YuzuMember] [Validation.Range(0, 30)] [TangerineGroup(\"03. Bloom\")] public float BloomStrength { get; set; } Property Value float BloomTextureScaling [YuzuMember] [Validation.Range(1, 100)] [TangerineGroup(\"03. Bloom\")] public float BloomTextureScaling { get; set; } Property Value float BlurAlphaCorrection [YuzuMember] [TangerineGroup(\"02. Blur\")] public float BlurAlphaCorrection { get; set; } Property Value float BlurBackgroundColor [YuzuMember] public Color4 BlurBackgroundColor { get; set; } Property Value Color4 BlurEnabled [YuzuMember] [TangerineGroup(\"02. Blur\")] public bool BlurEnabled { get; set; } Property Value bool BlurRadius [YuzuMember] [Validation.Range(0, 30)] [TangerineGroup(\"02. Blur\")] public float BlurRadius { get; set; } Property Value float BlurShader [YuzuMember] [TangerineGroup(\"02. Blur\")] public BlurShaderId BlurShader { get; set; } Property Value BlurShaderId BlurTextureScaling [YuzuMember] [Validation.Range(1, 100)] [TangerineGroup(\"02. Blur\")] public float BlurTextureScaling { get; set; } Property Value float Brightness [Validation.Range(-100, 100)] [TangerineGroup(\"01. Color correction\")] public float Brightness { get; set; } Property Value float Contrast [Validation.Range(-100, 100)] [TangerineGroup(\"01. Color correction\")] public float Contrast { get; set; } Property Value float DebugViewMode [TangerineGroup(\"11. Debug view\")] public PostProcessingPresenter.DebugViewMode DebugViewMode { get; set; } Property Value PostProcessingPresenter.DebugViewMode DistortionBarrelPincushion [YuzuMember] [Validation.Range(-100, 100)] [TangerineGroup(\"05. Distortion\")] public float DistortionBarrelPincushion { get; set; } Property Value float DistortionBlue [YuzuMember] [Validation.Range(-100, 100)] [TangerineGroup(\"05. Distortion\")] public float DistortionBlue { get; set; } Property Value float DistortionChromaticAberration [YuzuMember] [Validation.Range(0, 100)] [TangerineGroup(\"05. Distortion\")] public float DistortionChromaticAberration { get; set; } Property Value float DistortionEnabled [YuzuMember] [TangerineGroup(\"05. Distortion\")] public bool DistortionEnabled { get; set; } Property Value bool DistortionGreen [YuzuMember] [Validation.Range(-100, 100)] [TangerineGroup(\"05. Distortion\")] public float DistortionGreen { get; set; } Property Value float DistortionRed [YuzuMember] [Validation.Range(-100, 100)] [TangerineGroup(\"05. Distortion\")] public float DistortionRed { get; set; } Property Value float FXAAEnabled [YuzuMember] [TangerineGroup(\"06. FXAA\")] public bool FXAAEnabled { get; set; } Property Value bool FXAALumaTreshold [YuzuMember] [Validation.Range(0, 1)] [TangerineGroup(\"06. FXAA\")] public float FXAALumaTreshold { get; set; } Property Value float FXAAMaxSpan [YuzuMember] [Validation.Range(1, 16)] [TangerineGroup(\"06. FXAA\")] public float FXAAMaxSpan { get; set; } Property Value float FXAAMinReduce [YuzuMember] [Validation.Range(1, 512)] [TangerineGroup(\"06. FXAA\")] public float FXAAMinReduce { get; set; } Property Value float FXAAMulReduce [YuzuMember] [Validation.Range(1, 256)] [TangerineGroup(\"06. FXAA\")] public float FXAAMulReduce { get; set; } Property Value float HSL [YuzuMember] public Vector3 HSL { get; set; } Property Value Vector3 HSLEnabled [YuzuMember] [TangerineGroup(\"01. Color correction\")] public bool HSLEnabled { get; set; } Property Value bool Hue [TangerineGroup(\"01. Color correction\")] public float Hue { get; set; } Property Value float Lightness [Validation.Range(-100, 100)] [TangerineGroup(\"01. Color correction\")] public float Lightness { get; set; } Property Value float NoiseBrightThreshold [YuzuMember] [Validation.Range(0, 100)] [TangerineGroup(\"07. Noise\")] public float NoiseBrightThreshold { get; set; } Property Value float NoiseDarkThreshold [YuzuMember] [Validation.Range(0, 100)] [TangerineGroup(\"07. Noise\")] public float NoiseDarkThreshold { get; set; } Property Value float NoiseEnabled [YuzuMember] [TangerineGroup(\"07. Noise\")] public bool NoiseEnabled { get; set; } Property Value bool NoiseOffset [YuzuMember] [TangerineGroup(\"07. Noise\")] public Vector2 NoiseOffset { get; set; } Property Value Vector2 NoiseScale [YuzuMember] [TangerineGroup(\"07. Noise\")] public Vector2 NoiseScale { get; set; } Property Value Vector2 NoiseSoftLight [YuzuMember] [Validation.Range(0, 100)] [TangerineGroup(\"07. Noise\")] public float NoiseSoftLight { get; set; } Property Value float NoiseTexture [YuzuMember] [TangerineGroup(\"07. Noise\")] [YuzuSerializeIf(\"RequiredSerializeNoiseTexture\")] public ITexture NoiseTexture { get; set; } Property Value ITexture OpagueRendering [YuzuMember] public bool OpagueRendering { get; set; } Property Value bool OverallImpactColor [YuzuMember] [TangerineGroup(\"09. Overall impact\")] public Color4 OverallImpactColor { get; set; } Property Value Color4 OverallImpactEnabled [YuzuMember] [TangerineGroup(\"09. Overall impact\")] public bool OverallImpactEnabled { get; set; } Property Value bool RefreshSourceRate [YuzuMember] [TangerineGroup(\"10. Source texture\")] public int RefreshSourceRate { get; set; } Property Value int RefreshSourceTexture [YuzuMember] [TangerineGroup(\"10. Source texture\")] public bool RefreshSourceTexture { get; set; } Property Value bool RequiredRefreshSource public bool RequiredRefreshSource { get; set; } Property Value bool Saturation [Validation.Range(-100, 100)] [TangerineGroup(\"01. Color correction\")] public float Saturation { get; set; } Property Value float SharpenEnabled [YuzuMember] [TangerineGroup(\"04. Sharpen\")] public bool SharpenEnabled { get; set; } Property Value bool SharpenLimit [YuzuMember] [Validation.Range(0, 1)] [TangerineGroup(\"04. Sharpen\")] public float SharpenLimit { get; set; } Property Value float SharpenStep [YuzuMember] [Validation.Range(0, 10)] [TangerineGroup(\"04. Sharpen\")] public float SharpenStep { get; set; } Property Value float SharpenStrength [YuzuMember] [Validation.Range(0, 10)] [TangerineGroup(\"04. Sharpen\")] public float SharpenStrength { get; set; } Property Value float SourceTextureHeight [Validation.Range(32, 2048)] [TangerineGroup(\"10. Source texture\")] public int SourceTextureHeight { get; set; } Property Value int SourceTextureWidth [Validation.Range(32, 2048)] [TangerineGroup(\"10. Source texture\")] public int SourceTextureWidth { get; set; } Property Value int TextureClearingColor [YuzuMember] [TangerineGroup(\"10. Source texture\")] public Color4 TextureClearingColor { get; set; } Property Value Color4 TextureSizeLimit [YuzuMember] public Size TextureSizeLimit { get; set; } Property Value Size VignetteColor [YuzuMember] [TangerineGroup(\"08. Vignette\")] public Color4 VignetteColor { get; set; } Property Value Color4 VignetteEnabled [YuzuMember] [TangerineGroup(\"08. Vignette\")] public bool VignetteEnabled { get; set; } Property Value bool VignettePivot [YuzuMember] [TangerineGroup(\"08. Vignette\")] public Vector2 VignettePivot { get; set; } Property Value Vector2 VignetteRadius [YuzuMember] [Validation.Range(0, 100)] [TangerineGroup(\"08. Vignette\")] public float VignetteRadius { get; set; } Property Value float VignetteScale [YuzuMember] [TangerineGroup(\"08. Vignette\")] public Vector2 VignetteScale { get; set; } Property Value Vector2 VignetteSoftness [YuzuMember] [Validation.Range(0, 100)] [TangerineGroup(\"08. Vignette\")] public float VignetteSoftness { get; set; } Property Value float Methods GetOwnerRenderObjects(RenderChain, RenderObjectList) public void GetOwnerRenderObjects(RenderChain renderChain, RenderObjectList roObjects) Parameters renderChain RenderChain roObjects RenderObjectList OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node RequiredSerializeNoiseTexture() public bool RequiredSerializeNoiseTexture() Returns bool Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.PostProcessingPresenter.DebugViewMode.html": {
    "href": "api/Lime.PostProcessingPresenter.DebugViewMode.html",
    "title": "Enum PostProcessingPresenter.DebugViewMode | Citrus Engine",
    "keywords": "Enum PostProcessingPresenter.DebugViewMode Namespace Lime Assembly Lime.dll public enum PostProcessingPresenter.DebugViewMode Fields Bloom = 2 None = 0 Original = 1"
  },
  "api/Lime.PostProcessingPresenter.html": {
    "href": "api/Lime.PostProcessingPresenter.html",
    "title": "Class PostProcessingPresenter | Citrus Engine",
    "keywords": "Class PostProcessingPresenter Namespace Lime Assembly Lime.dll public class PostProcessingPresenter : IPresenter Inheritance object PostProcessingPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PostProcessingPresenter() public PostProcessingPresenter() Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool SelfPartialHitTest(Widget, ref HitTestArgs) public bool SelfPartialHitTest(Widget widget, ref HitTestArgs args) Parameters widget Widget args HitTestArgs Returns bool"
  },
  "api/Lime.PostProcessingRenderChainBuilder.html": {
    "href": "api/Lime.PostProcessingRenderChainBuilder.html",
    "title": "Class PostProcessingRenderChainBuilder | Citrus Engine",
    "keywords": "Class PostProcessingRenderChainBuilder Namespace Lime Assembly Lime.dll public class PostProcessingRenderChainBuilder : IRenderChainBuilder Inheritance object PostProcessingRenderChainBuilder Implements IRenderChainBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Owner public Widget Owner { get; set; } Property Value Widget Methods AddToRenderChain(RenderChain) public void AddToRenderChain(RenderChain chain) Parameters chain RenderChain"
  },
  "api/Lime.PreEarlyUpdateStage.html": {
    "href": "api/Lime.PreEarlyUpdateStage.html",
    "title": "Class PreEarlyUpdateStage | Citrus Engine",
    "keywords": "Class PreEarlyUpdateStage Namespace Lime Assembly Lime.dll Identifier for pre-early update stage. public class PreEarlyUpdateStage Inheritance object PreEarlyUpdateStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.PreLateUpdateStage.html": {
    "href": "api/Lime.PreLateUpdateStage.html",
    "title": "Class PreLateUpdateStage | Citrus Engine",
    "keywords": "Class PreLateUpdateStage Namespace Lime Assembly Lime.dll Identifier for pre-late update stage. public class PreLateUpdateStage Inheritance object PreLateUpdateStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.PresenterComponent-1.html": {
    "href": "api/Lime.PresenterComponent-1.html",
    "title": "Class PresenterComponent<T> | Citrus Engine",
    "keywords": "Class PresenterComponent<T> Namespace Lime Assembly Lime.dll public class PresenterComponent<T> : PresenterComponent, IDisposable, IAnimable where T : IPresenter, new() Type Parameters T Inheritance object Component NodeComponent PresenterComponent PresenterComponent<T> Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors PresenterComponent() public PresenterComponent() Properties CustomPresenter protected T CustomPresenter { get; } Property Value T Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node"
  },
  "api/Lime.PresenterComponent.html": {
    "href": "api/Lime.PresenterComponent.html",
    "title": "Class PresenterComponent | Citrus Engine",
    "keywords": "Class PresenterComponent Namespace Lime Assembly Lime.dll [AllowedComponentOwnerTypes(new Type[] { typeof(Image) })] public class PresenterComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent PresenterComponent Implements IDisposable IAnimable Derived PresenterComponent<T> Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable)"
  },
  "api/Lime.PreserveAttribute.html": {
    "href": "api/Lime.PreserveAttribute.html",
    "title": "Class PreserveAttribute | Citrus Engine",
    "keywords": "Class PreserveAttribute Namespace Lime Assembly Lime.dll public sealed class PreserveAttribute : Attribute Inheritance object Attribute PreserveAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields AllMembers public bool AllMembers Field Value bool Conditional public bool Conditional Field Value bool"
  },
  "api/Lime.PreviewMetadata.html": {
    "href": "api/Lime.PreviewMetadata.html",
    "title": "Class PreviewMetadata | Citrus Engine",
    "keywords": "Class PreviewMetadata Namespace Lime Assembly Lime.dll Stores base-64 encoded document preview. public sealed class PreviewMetadata : Metadata Inheritance object Metadata PreviewMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties Preview [YuzuMember] public List<string> Preview { get; set; } Property Value List<string>"
  },
  "api/Lime.PrimitiveTopology.html": {
    "href": "api/Lime.PrimitiveTopology.html",
    "title": "Enum PrimitiveTopology | Citrus Engine",
    "keywords": "Enum PrimitiveTopology Namespace Lime Assembly Lime.dll public enum PrimitiveTopology Fields TriangleList = 0 TriangleStrip = 1"
  },
  "api/Lime.Profiler.Logger.html": {
    "href": "api/Lime.Profiler.Logger.html",
    "title": "Class Logger | Citrus Engine",
    "keywords": "Class Logger Namespace Lime.Profiler Assembly Lime.dll public class Logger Inheritance object Logger Derived TimeLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BasePath The first part of the common path for all logger files. public static string BasePath { get; } Property Value string IntermediatePath Intermediate path for all files. public static string IntermediatePath { get; set; } Property Value string ResetIndex protected static int ResetIndex { get; } Property Value int Methods CheckIntermediatePath(string) protected static void CheckIntermediatePath(string path) Parameters path string ReopenAllLoggerFiles() [Conditional(\"PROFILER\")] public static void ReopenAllLoggerFiles()"
  },
  "api/Lime.Profiler.TimeLogger.StopwatchConditionalWrapper.html": {
    "href": "api/Lime.Profiler.TimeLogger.StopwatchConditionalWrapper.html",
    "title": "Struct TimeLogger.StopwatchConditionalWrapper | Citrus Engine",
    "keywords": "Struct TimeLogger.StopwatchConditionalWrapper Namespace Lime.Profiler Assembly Lime.dll public readonly struct TimeLogger.StopwatchConditionalWrapper Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors StopwatchConditionalWrapper(Stopwatch) public StopwatchConditionalWrapper(Stopwatch stopwatch) Parameters stopwatch Stopwatch Properties Elapsed public double Elapsed { get; } Property Value double IsRunning public bool IsRunning { get; } Property Value bool Methods Restart() [Conditional(\"PROFILER\")] public void Restart() Stop() [Conditional(\"PROFILER\")] public void Stop()"
  },
  "api/Lime.Profiler.TimeLogger.WriteTotalMillisecondsOnDispose.html": {
    "href": "api/Lime.Profiler.TimeLogger.WriteTotalMillisecondsOnDispose.html",
    "title": "Struct TimeLogger.WriteTotalMillisecondsOnDispose | Citrus Engine",
    "keywords": "Struct TimeLogger.WriteTotalMillisecondsOnDispose Namespace Lime.Profiler Assembly Lime.dll public readonly struct TimeLogger.WriteTotalMillisecondsOnDispose : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors WriteTotalMillisecondsOnDispose(TimeLogger, bool) public WriteTotalMillisecondsOnDispose(TimeLogger logger, bool skip = false) Parameters logger TimeLogger skip bool Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.Profiler.TimeLogger.html": {
    "href": "api/Lime.Profiler.TimeLogger.html",
    "title": "Class TimeLogger | Citrus Engine",
    "keywords": "Class TimeLogger Namespace Lime.Profiler Assembly Lime.dll public class TimeLogger : Logger Inheritance object Logger TimeLogger Inherited Members Logger.BasePath Logger.IntermediatePath Logger.ResetIndex Logger.ReopenAllLoggerFiles() Logger.CheckIntermediatePath(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TimeLogger(string, int) public TimeLogger(string localPath, int flushRate = 60) Parameters localPath string flushRate int Fields Stopwatch public readonly TimeLogger.StopwatchConditionalWrapper Stopwatch Field Value TimeLogger.StopwatchConditionalWrapper Methods Write(double) [Conditional(\"PROFILER\")] public void Write(double value) Parameters value double WriteElapsed() [Conditional(\"PROFILER\")] public void WriteElapsed() WriteElapsedOnDispose(bool) public TimeLogger.WriteTotalMillisecondsOnDispose WriteElapsedOnDispose(bool skip = false) Parameters skip bool Returns TimeLogger.WriteTotalMillisecondsOnDispose"
  },
  "api/Lime.Profiler.html": {
    "href": "api/Lime.Profiler.html",
    "title": "Namespace Lime.Profiler | Citrus Engine",
    "keywords": "Namespace Lime.Profiler Classes Logger TimeLogger Structs TimeLogger.StopwatchConditionalWrapper TimeLogger.WriteTotalMillisecondsOnDispose"
  },
  "api/Lime.Quadrangle.html": {
    "href": "api/Lime.Quadrangle.html",
    "title": "Struct Quadrangle | Citrus Engine",
    "keywords": "Struct Quadrangle Namespace Lime Assembly Lime.dll public struct Quadrangle : IEnumerable<Vector2>, IEnumerable Implements IEnumerable<Vector2> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Fields V1 public Vector2 V1 Field Value Vector2 V2 public Vector2 V2 Field Value Vector2 V3 public Vector2 V3 Field Value Vector2 V4 public Vector2 V4 Field Value Vector2 Properties this[int] public Vector2 this[int index] { get; set; } Parameters index int Property Value Vector2 Methods Contains(Vector2) public bool Contains(Vector2 point) Parameters point Vector2 Returns bool GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<Vector2> GetEnumerator() Returns IEnumerator<Vector2> An enumerator that can be used to iterate through the collection. Intersects(Quadrangle) Returns true if one side of the first quadrangle intersects a side of the second quadrangle. public bool Intersects(Quadrangle quadrangle) Parameters quadrangle Quadrangle Returns bool Overlaps(Quadrangle) Returns true if the quadrangles have common points. public bool Overlaps(Quadrangle quadrangle) Parameters quadrangle Quadrangle Returns bool ToAABB() public Rectangle ToAABB() Returns Rectangle Transform(Matrix32) public Quadrangle Transform(Matrix32 matrix) Parameters matrix Matrix32 Returns Quadrangle Operators operator *(Quadrangle, Matrix32) public static Quadrangle operator *(Quadrangle q, Matrix32 m) Parameters q Quadrangle m Matrix32 Returns Quadrangle operator *(Quadrangle, Vector2) public static Quadrangle operator *(Quadrangle q, Vector2 v) Parameters q Quadrangle v Vector2 Returns Quadrangle"
  },
  "api/Lime.Quaternion.html": {
    "href": "api/Lime.Quaternion.html",
    "title": "Struct Quaternion | Citrus Engine",
    "keywords": "Struct Quaternion Namespace Lime Assembly Lime.dll public struct Quaternion : IEquatable<Quaternion> Implements IEquatable<Quaternion> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Quaternion(Vector3, float) Constructs a quaternion with X, Y, Z from Vector3 and rotation component from a scalar. public Quaternion(Vector3 value, float w) Parameters value Vector3 The x, y, z coordinates in 3d-space. w float The rotation component. Quaternion(float, float, float, float) Constructs a quaternion with X, Y, Z and W from four values. public Quaternion(float x, float y, float z, float w) Parameters x float The x coordinate in 3d-space. y float The y coordinate in 3d-space. z float The z coordinate in 3d-space. w float The rotation component. Fields W The rotation component of this Quaternion. [YuzuMember(\"3\")] public float W Field Value float X The x coordinate of this Quaternion. [YuzuMember(\"0\")] public float X Field Value float Y The y coordinate of this Quaternion. [YuzuMember(\"1\")] public float Y Field Value float Z The z coordinate of this Quaternion. [YuzuMember(\"2\")] public float Z Field Value float Properties Angle Gets the angle of the quaternion. public float Angle { get; } Property Value float The quaternion's angle. Axis Gets the axis components of the quaternion. public Vector3 Axis { get; } Property Value Vector3 The axis components of the quaternion. Identity Returns a quaternion representing no rotation. public static Quaternion Identity { get; } Property Value Quaternion Normalized public Quaternion Normalized { get; } Property Value Quaternion Methods Add(Quaternion, Quaternion) Creates a new Quaternion that contains the sum of two quaternions. public static Quaternion Add(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. Returns Quaternion The result of the quaternion addition. Add(ref Quaternion, ref Quaternion, out Quaternion) Creates a new Quaternion that contains the sum of two quaternions. public static void Add(ref Quaternion quaternion1, ref Quaternion quaternion2, out Quaternion result) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. result Quaternion The result of the quaternion addition as an output parameter. Concatenate(Quaternion, Quaternion) Creates a new Quaternion that contains concatenation between two quaternion. public static Quaternion Concatenate(Quaternion value1, Quaternion value2) Parameters value1 Quaternion The first Quaternion to concatenate. value2 Quaternion The second Quaternion to concatenate. Returns Quaternion The result of rotation of value1 followed by value2 rotation. Concatenate(ref Quaternion, ref Quaternion, out Quaternion) Creates a new Quaternion that contains concatenation between two quaternion. public static void Concatenate(ref Quaternion value1, ref Quaternion value2, out Quaternion result) Parameters value1 Quaternion The first Quaternion to concatenate. value2 Quaternion The second Quaternion to concatenate. result Quaternion The result of rotation of value1 followed by value2 rotation as an output parameter. Conjugate() Transforms this quaternion into its conjugated version. public void Conjugate() Conjugate(Quaternion) Creates a new Quaternion that contains conjugated version of the specified quaternion. public static Quaternion Conjugate(Quaternion value) Parameters value Quaternion The quaternion which values will be used to create the conjugated version. Returns Quaternion The conjugate version of the specified quaternion. Conjugate(ref Quaternion, out Quaternion) Creates a new Quaternion that contains conjugated version of the specified quaternion. public static void Conjugate(ref Quaternion value, out Quaternion result) Parameters value Quaternion The quaternion which values will be used to create the conjugated version. result Quaternion The conjugated version of the specified quaternion as an output parameter. CreateFromAxisAngle(Vector3, float) Creates a new Quaternion from the specified axis and angle. public static Quaternion CreateFromAxisAngle(Vector3 axis, float angle) Parameters axis Vector3 The axis of rotation. angle float The angle in radians. Returns Quaternion The new quaternion builded from axis and angle. CreateFromAxisAngle(ref Vector3, float, out Quaternion) Creates a new Quaternion from the specified axis and angle. public static void CreateFromAxisAngle(ref Vector3 axis, float angle, out Quaternion result) Parameters axis Vector3 The axis of rotation. angle float The angle in radians. result Quaternion The new quaternion builded from axis and angle as an output parameter. CreateFromEulerAngles(Vector3) Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order). public static Quaternion CreateFromEulerAngles(Vector3 angles) Parameters angles Vector3 Returns Quaternion CreateFromRotationMatrix(Matrix44) Creates a new Quaternion from the specified Matrix44. public static Quaternion CreateFromRotationMatrix(Matrix44 matrix) Parameters matrix Matrix44 The rotation matrix. Returns Quaternion A quaternion composed from the rotation part of the matrix. CreateFromRotationMatrix(ref Matrix44, out Quaternion) Fills existing Quaternion from the specified Matrix44. public static void CreateFromRotationMatrix(ref Matrix44 matrix, out Quaternion result) Parameters matrix Matrix44 The rotation matrix. result Quaternion A quaternion composed from the rotation part of the matrix as an output parameter. CreateFromYawPitchRoll(float, float, float) Creates a new Quaternion from the specified yaw, pitch and roll angles. public static Quaternion CreateFromYawPitchRoll(float yaw, float pitch, float roll) Parameters yaw float Yaw around the y axis in radians. pitch float Pitch around the x axis in radians. roll float Roll around the z axis in radians. Returns Quaternion A new quaternion from the concatenated yaw, pitch, and roll angles. Divide(Quaternion, Quaternion) Divides a Quaternion by the other Quaternion. public static Quaternion Divide(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Divisor Quaternion. Returns Quaternion The result of dividing the quaternions. Divide(ref Quaternion, ref Quaternion, out Quaternion) Divides a Quaternion by the other Quaternion. public static void Divide(ref Quaternion quaternion1, ref Quaternion quaternion2, out Quaternion result) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Divisor Quaternion. result Quaternion The result of dividing the quaternions as an output parameter. Dot(Quaternion, Quaternion) Returns a dot product of two quaternions. public static float Dot(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion The first quaternion. quaternion2 Quaternion The second quaternion. Returns float The dot product of two quaternions. Dot(ref Quaternion, ref Quaternion, out float) Returns a dot product of two quaternions. public static void Dot(ref Quaternion quaternion1, ref Quaternion quaternion2, out float result) Parameters quaternion1 Quaternion The first quaternion. quaternion2 Quaternion The second quaternion. result float The dot product of two quaternions as an output parameter. Equals(Quaternion) Compares whether current instance is equal to specified Quaternion. public bool Equals(Quaternion other) Parameters other Quaternion The Quaternion to compare. Returns bool true if the instances are equal; false otherwise. Equals(object) Compares whether current instance is equal to specified object. public override bool Equals(object obj) Parameters obj object The object to compare. Returns bool true if the instances are equal; false otherwise. GetHashCode() Gets the hash code of this Quaternion. public override int GetHashCode() Returns int Hash code of this Quaternion. Inverse(Quaternion) Returns the inverse quaternion which represents the opposite rotation. public static Quaternion Inverse(Quaternion quaternion) Parameters quaternion Quaternion Source Quaternion. Returns Quaternion The inverse quaternion. Inverse(ref Quaternion, out Quaternion) Returns the inverse quaternion which represents the opposite rotation. public static void Inverse(ref Quaternion quaternion, out Quaternion result) Parameters quaternion Quaternion Source Quaternion. result Quaternion The inverse quaternion as an output parameter. Length() Returns the magnitude of the quaternion components. public float Length() Returns float The magnitude of the quaternion components. LengthSquared() Returns the squared magnitude of the quaternion components. public float LengthSquared() Returns float The squared magnitude of the quaternion components. Lerp(Quaternion, Quaternion, float) Performs a linear blend between two quaternions. public static Quaternion Lerp(Quaternion value1, Quaternion value2, float amount) Parameters value1 Quaternion Source Quaternion. value2 Quaternion Source Quaternion. amount float The blend amount where 0 returns value1 and 1 value2. Returns Quaternion The result of linear blending between two quaternions. Lerp(ref Quaternion, ref Quaternion, float, out Quaternion) Performs a linear blend between two quaternions. public static void Lerp(ref Quaternion value1, ref Quaternion value2, float amount, out Quaternion result) Parameters value1 Quaternion Source Quaternion. value2 Quaternion Source Quaternion. amount float The blend amount where 0 returns value1 and 1 value2. result Quaternion The result of linear blending between two quaternions as an output parameter. Multiply(Quaternion, Quaternion) Creates a new Quaternion that contains a multiplication of two quaternions. public static Quaternion Multiply(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. Returns Quaternion The result of the quaternion multiplication. Multiply(Quaternion, float) Creates a new Quaternion that contains a multiplication of Quaternion and a scalar. public static Quaternion Multiply(Quaternion quaternion1, float scaleFactor) Parameters quaternion1 Quaternion Source Quaternion. scaleFactor float Scalar value. Returns Quaternion The result of the quaternion multiplication with a scalar. Multiply(ref Quaternion, ref Quaternion, out Quaternion) Creates a new Quaternion that contains a multiplication of two quaternions. public static void Multiply(ref Quaternion quaternion1, ref Quaternion quaternion2, out Quaternion result) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. result Quaternion The result of the quaternion multiplication as an output parameter. Multiply(ref Quaternion, float, out Quaternion) Creates a new Quaternion that contains a multiplication of Quaternion and a scalar. public static void Multiply(ref Quaternion quaternion1, float scaleFactor, out Quaternion result) Parameters quaternion1 Quaternion Source Quaternion. scaleFactor float Scalar value. result Quaternion The result of the quaternion multiplication with a scalar as an output parameter. Negate(Quaternion) Flips the sign of the all the quaternion components. public static Quaternion Negate(Quaternion quaternion) Parameters quaternion Quaternion Source Quaternion. Returns Quaternion The result of the quaternion negation. Negate(ref Quaternion, out Quaternion) Flips the sign of the all the quaternion components. public static void Negate(ref Quaternion quaternion, out Quaternion result) Parameters quaternion Quaternion Source Quaternion. result Quaternion The result of the quaternion negation as an output parameter. Normalize() Scales the quaternion magnitude to unit length. public void Normalize() Normalize(Quaternion) Scales the quaternion magnitude to unit length. public static Quaternion Normalize(Quaternion quaternion) Parameters quaternion Quaternion Source Quaternion. Returns Quaternion The unit length quaternion. Normalize(ref Quaternion, out Quaternion) Scales the quaternion magnitude to unit length. public static void Normalize(ref Quaternion quaternion, out Quaternion result) Parameters quaternion Quaternion Source Quaternion. result Quaternion The unit length quaternion an output parameter. Slerp(Quaternion, Quaternion, float) Performs a spherical linear blend between two quaternions. public static Quaternion Slerp(Quaternion quaternion1, Quaternion quaternion2, float amount) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. amount float The blend amount where 0 returns quaternion1 and 1 quaternion2. Returns Quaternion The result of spherical linear blending between two quaternions. Slerp(ref Quaternion, ref Quaternion, float, out Quaternion) Performs a spherical linear blend between two quaternions. public static void Slerp(ref Quaternion quaternion1, ref Quaternion quaternion2, float amount, out Quaternion result) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. amount float The blend amount where 0 returns quaternion1 and 1 quaternion2. result Quaternion The result of spherical linear blending between two quaternions as an output parameter. Subtract(Quaternion, Quaternion) Creates a new Quaternion that contains subtraction of one Quaternion from another. public static Quaternion Subtract(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. Returns Quaternion The result of the quaternion subtraction. Subtract(ref Quaternion, ref Quaternion, out Quaternion) Creates a new Quaternion that contains subtraction of one Quaternion from another. public static void Subtract(ref Quaternion quaternion1, ref Quaternion quaternion2, out Quaternion result) Parameters quaternion1 Quaternion Source Quaternion. quaternion2 Quaternion Source Quaternion. result Quaternion The result of the quaternion subtraction as an output parameter. ToEulerAngles() Returns the x, y, and z angles represent a rotation z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order). Original code taken from: https://raw.githubusercontent.com/dfelinto/blender/0a446d7276e74e3c8472453948204ca6463d158e/source/blender/blenlib/intern/math_rotation.c public Vector3 ToEulerAngles() Returns Vector3 ToString() Returns a string representation of this Quaternion in the format: {X:[X] Y:[Y] Z:[Z] W:[W]} public override string ToString() Returns string A string representation of this Quaternion. TransformVector(Vector3) public Vector3 TransformVector(Vector3 value) Parameters value Vector3 Returns Vector3 Operators operator +(Quaternion, Quaternion) Adds two quaternions. public static Quaternion operator +(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Quaternion on the left of the add sign. quaternion2 Quaternion Source Quaternion on the right of the add sign. Returns Quaternion Sum of the vectors. operator /(Quaternion, Quaternion) Divides a Quaternion by the other Quaternion. public static Quaternion operator /(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Quaternion on the left of the div sign. quaternion2 Quaternion Divisor Quaternion on the right of the div sign. Returns Quaternion The result of dividing the quaternions. operator ==(Quaternion, Quaternion) Compares whether two Quaternion instances are equal. public static bool operator ==(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Quaternion instance on the left of the equal sign. quaternion2 Quaternion Quaternion instance on the right of the equal sign. Returns bool true if the instances are equal; false otherwise. operator !=(Quaternion, Quaternion) Compares whether two Quaternion instances are not equal. public static bool operator !=(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Quaternion instance on the left of the not equal sign. quaternion2 Quaternion Quaternion instance on the right of the not equal sign. Returns bool true if the instances are not equal; false otherwise. operator *(Quaternion, Quaternion) Multiplies two quaternions. public static Quaternion operator *(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Quaternion on the left of the mul sign. quaternion2 Quaternion Source Quaternion on the right of the mul sign. Returns Quaternion Result of the quaternions multiplication. operator *(Quaternion, float) Multiplies the components of quaternion by a scalar. public static Quaternion operator *(Quaternion quaternion1, float scaleFactor) Parameters quaternion1 Quaternion Source Vector3 on the left of the mul sign. scaleFactor float Scalar value on the right of the mul sign. Returns Quaternion Result of the quaternion multiplication with a scalar. operator *(Vector3, Quaternion) public static Vector3 operator *(Vector3 a, Quaternion b) Parameters a Vector3 b Quaternion Returns Vector3 operator -(Quaternion, Quaternion) Subtracts a Quaternion from a Quaternion. public static Quaternion operator -(Quaternion quaternion1, Quaternion quaternion2) Parameters quaternion1 Quaternion Source Vector3 on the left of the sub sign. quaternion2 Quaternion Source Vector3 on the right of the sub sign. Returns Quaternion Result of the quaternion subtraction. operator -(Quaternion) Flips the sign of the all the quaternion components. public static Quaternion operator -(Quaternion quaternion) Parameters quaternion Quaternion Source Quaternion on the right of the sub sign. Returns Quaternion The result of the quaternion negation."
  },
  "api/Lime.QuaternionCompressedAnimationCurve.html": {
    "href": "api/Lime.QuaternionCompressedAnimationCurve.html",
    "title": "Class QuaternionCompressedAnimationCurve | Citrus Engine",
    "keywords": "Class QuaternionCompressedAnimationCurve Namespace Lime Assembly Lime.dll public class QuaternionCompressedAnimationCurve : CompressedAnimationCurve<Quaternion>, IAnimationCurve<Quaternion>, ICompressedAnimationCurve, IAnimationCurve Inheritance object CompressedAnimationCurve<Quaternion> QuaternionCompressedAnimationCurve Implements IAnimationCurve<Quaternion> ICompressedAnimationCurve IAnimationCurve Inherited Members CompressedAnimationCurve<Quaternion>.FrameNumberFormat CompressedAnimationCurve<Quaternion>.FrameNumberBuffer CompressedAnimationCurve<Quaternion>.ValueBuffer CompressedAnimationCurve<Quaternion>.RefCount CompressedAnimationCurve<Quaternion>.AddRef() CompressedAnimationCurve<Quaternion>.Release() CompressedAnimationCurve<Quaternion>.IsEmpty CompressedAnimationCurve<Quaternion>.Duration CompressedAnimationCurve<Quaternion>.CreateEvaluator() CompressedAnimationCurve<Quaternion>.Compress(List<int>, List<Quaternion>) CompressedAnimationCurve<Quaternion>.Create(List<int>, List<Quaternion>) CompressedAnimationCurve<Quaternion>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ValueOffset [YuzuMember] public Vector3 ValueOffset Field Value Vector3 ValueScale [YuzuMember] public Vector3 ValueScale Field Value Vector3 Methods CompressValues(Quaternion[]) protected override void CompressValues(Quaternion[] values) Parameters values Quaternion[] DecompressValue(int) protected override Quaternion DecompressValue(int index) Parameters index int Returns Quaternion Interpolate(Quaternion, Quaternion, float) protected override Quaternion Interpolate(Quaternion value1, Quaternion value2, float amount) Parameters value1 Quaternion value2 Quaternion amount float Returns Quaternion"
  },
  "api/Lime.QuaternionSimpleAnimationCurve.html": {
    "href": "api/Lime.QuaternionSimpleAnimationCurve.html",
    "title": "Class QuaternionSimpleAnimationCurve | Citrus Engine",
    "keywords": "Class QuaternionSimpleAnimationCurve Namespace Lime Assembly Lime.dll public class QuaternionSimpleAnimationCurve : SimpleAnimationCurve<Quaternion>, IAnimationCurve<Quaternion>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Quaternion> Inheritance object SimpleAnimationCurve<Quaternion> QuaternionSimpleAnimationCurve Implements IAnimationCurve<Quaternion> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Quaternion> Inherited Members SimpleAnimationCurve<Quaternion>.Keys SimpleAnimationCurve<Quaternion>.IsEmpty SimpleAnimationCurve<Quaternion>.Duration SimpleAnimationCurve<Quaternion>.RefCount SimpleAnimationCurve<Quaternion>.AddRef() SimpleAnimationCurve<Quaternion>.Release() SimpleAnimationCurve<Quaternion>.CreateEvaluator() SimpleAnimationCurve<Quaternion>.InterpolateSplined(Quaternion, Quaternion, Quaternion, Quaternion, float) SimpleAnimationCurve<Quaternion>.Create(IEnumerable<SimpleKeyframe<Quaternion>>) SimpleAnimationCurve<Quaternion>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(Quaternion, Quaternion, float) protected override Quaternion InterpolateLinear(Quaternion value1, Quaternion value2, float amount) Parameters value1 Quaternion value2 Quaternion amount float Returns Quaternion"
  },
  "api/Lime.Ray.html": {
    "href": "api/Lime.Ray.html",
    "title": "Struct Ray | Citrus Engine",
    "keywords": "Struct Ray Namespace Lime Assembly Lime.dll Representation of endless ray. public struct Ray : IEquatable<Ray> Implements IEquatable<Ray> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Ray(Vector3, Vector3) public Ray(Vector3 position, Vector3 direction) Parameters position Vector3 direction Vector3 Fields Direction [YuzuMember] public Vector3 Direction Field Value Vector3 Position [YuzuMember] public Vector3 Position Field Value Vector3 Methods Equals(Ray) Indicates whether the current object is equal to another object of the same type. public bool Equals(Ray other) Parameters other Ray An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Intersects(BoundingSphere) Calculates the distance between the center of this ray and border of sphere. public float? Intersects(BoundingSphere sphere) Parameters sphere BoundingSphere Sphere to check intersection for. Returns float? The distance between the center of this ray and border of sphere. Returns 0.0f if ray is inside of sphere. Returns null if ray is pointed away from sphere. Intersects(Plane) public float? Intersects(Plane plane) Parameters plane Plane Returns float? IntersectsTriangle(Vector3, Vector3, Vector3) public float? IntersectsTriangle(Vector3 a, Vector3 b, Vector3 c) Parameters a Vector3 b Vector3 c Vector3 Returns float? Transform(Matrix44) public Ray Transform(Matrix44 matrix) Parameters matrix Matrix44 Returns Ray Operators operator ==(Ray, Ray) public static bool operator ==(Ray a, Ray b) Parameters a Ray b Ray Returns bool operator !=(Ray, Ray) public static bool operator !=(Ray a, Ray b) Parameters a Ray b Ray Returns bool"
  },
  "api/Lime.Rectangle.html": {
    "href": "api/Lime.Rectangle.html",
    "title": "Struct Rectangle | Citrus Engine",
    "keywords": "Struct Rectangle Namespace Lime Assembly Lime.dll Representation of 2D rectangles. public struct Rectangle : IEquatable<Rectangle> Implements IEquatable<Rectangle> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Rectangle(Vector2, Vector2) public Rectangle(Vector2 a, Vector2 b) Parameters a Vector2 b Vector2 Rectangle(float, float, float, float) public Rectangle(float left, float top, float right, float bottom) Parameters left float top float right float bottom float Fields AX [YuzuMember(\"0\")] public float AX Field Value float AY [YuzuMember(\"1\")] public float AY Field Value float BX [YuzuMember(\"2\")] public float BX Field Value float BY [YuzuMember(\"3\")] public float BY Field Value float Empty Returns a rectangle with both corners in 0, 0. public static readonly Rectangle Empty Field Value Rectangle Min Returns a \"minimal\" rectangle which is inflatable by any point. public static readonly Rectangle Min Field Value Rectangle Properties A Left-top corner of this rectangle. public Vector2 A { get; set; } Property Value Vector2 B Right-bottom corner of this rectangle. public Vector2 B { get; set; } Property Value Vector2 Bottom public float Bottom { get; set; } Property Value float Center public Vector2 Center { get; } Property Value Vector2 Height public float Height { get; set; } Property Value float this[int] public float this[int component] { get; set; } Parameters component int Property Value float Left public float Left { get; set; } Property Value float Normalized Returns this rectangle with swapped coordinates of borders if width or height is negative. public Rectangle Normalized { get; } Property Value Rectangle Remarks Width or height can be negative if coordinates of borders are mixed up. This property returns new Rectangle with width and height that are guaranteed to be positive. Right public float Right { get; set; } Property Value float Size public Vector2 Size { get; } Property Value Vector2 Top public float Top { get; set; } Property Value float Width public float Width { get; set; } Property Value float Methods Bounds(Rectangle, Rectangle) Creates a new Rectangle that covers both of two other rectangles. public static Rectangle Bounds(Rectangle value1, Rectangle value2) Parameters value1 Rectangle value2 Rectangle Returns Rectangle Contains(Vector2) public bool Contains(Vector2 value) Parameters value Vector2 Returns bool Equals(Rectangle) Indicates whether the current object is equal to another object of the same type. public bool Equals(Rectangle other) Parameters other Rectangle An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. ExpandedBy(Thickness) public Rectangle ExpandedBy(Thickness padding) Parameters padding Thickness Returns Rectangle GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IncludePoints(params Vector2[]) public void IncludePoints(params Vector2[] points) Parameters points Vector2[] IncludingPoint(Vector2) Creates a new Rectangle that includes the specified Vector2. public Rectangle IncludingPoint(Vector2 value) Parameters value Vector2 Returns Rectangle Intersect(Rectangle, Rectangle) Creates a new Rectangle that contains overlapping region of two other rectangles. public static Rectangle Intersect(Rectangle value1, Rectangle value2) Parameters value1 Rectangle value2 Rectangle Returns Rectangle Normalize() Swaps rectangle coordinates of borders if width or height is negative. public void Normalize() Remarks Width or height can be negative if coordinates of borders are mixed up. After execution of this method given rectangle's width and height are guaranteed to be positive. OffsetBy(Vector2) Creates a new Rectangle that has coordinates of this rectangle shifted by specified value. public Rectangle OffsetBy(Vector2 value) Parameters value Vector2 Returns Rectangle ShrinkedBy(Thickness) public Rectangle ShrinkedBy(Thickness padding) Parameters padding Thickness Returns Rectangle ToQuadrangle() public Quadrangle ToQuadrangle() Returns Quadrangle ToString() Returns the string representation of this Rectangle in the format: \"A.X, A.Y, B.X, B.Y\". public override string ToString() Returns string Transform(Matrix32) Applies the transformation matrix to this Rectangle. public Rectangle Transform(Matrix32 value) Parameters value Matrix32 Returns Rectangle Operators operator ==(Rectangle, Rectangle) public static bool operator ==(Rectangle lhs, Rectangle rhs) Parameters lhs Rectangle rhs Rectangle Returns bool explicit operator IntRectangle(Rectangle) public static explicit operator IntRectangle(Rectangle value) Parameters value Rectangle Returns IntRectangle operator !=(Rectangle, Rectangle) public static bool operator !=(Rectangle lhs, Rectangle rhs) Parameters lhs Rectangle rhs Rectangle Returns bool"
  },
  "api/Lime.Reflection.html": {
    "href": "api/Lime.Reflection.html",
    "title": "Class Reflection | Citrus Engine",
    "keywords": "Class Reflection Namespace Lime Assembly Lime.dll public static class Reflection Inheritance object Reflection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetICollection(Type) public static Type GetICollection(Type t) Parameters t Type Returns Type GetIDictionary(Type) public static Type GetIDictionary(Type t) Parameters t Type Returns Type GetIList(Type) public static Type GetIList(Type t) Parameters t Type Returns Type"
  },
  "api/Lime.RemoveOnAssetCookAttribute.html": {
    "href": "api/Lime.RemoveOnAssetCookAttribute.html",
    "title": "Class RemoveOnAssetCookAttribute | Citrus Engine",
    "keywords": "Class RemoveOnAssetCookAttribute Namespace Lime Assembly Lime.dll Nodes and Components of type marked with this attribute will be removed from either Nodes (for nodes) or Components (for components) on asset cook. [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = true)] public sealed class RemoveOnAssetCookAttribute : Attribute Inheritance object Attribute RemoveOnAssetCookAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.RenderBatchRegion.html": {
    "href": "api/Lime.RenderBatchRegion.html",
    "title": "Struct RenderBatchRegion | Citrus Engine",
    "keywords": "Struct RenderBatchRegion Namespace Lime Assembly Lime.dll public readonly struct RenderBatchRegion Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors RenderBatchRegion(int, int, int) public RenderBatchRegion(int vertexIndex, int index, int indexCount) Parameters vertexIndex int index int indexCount int Fields IndexCount public readonly int IndexCount Field Value int StartIndex public readonly int StartIndex Field Value int StartVertex public readonly int StartVertex Field Value int"
  },
  "api/Lime.RenderChain.Item.html": {
    "href": "api/Lime.RenderChain.Item.html",
    "title": "Struct RenderChain.Item | Citrus Engine",
    "keywords": "Struct RenderChain.Item Namespace Lime Assembly Lime.dll public struct RenderChain.Item Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Node public Node Node Field Value Node Presenter public IPresenter Presenter Field Value IPresenter"
  },
  "api/Lime.RenderChain.html": {
    "href": "api/Lime.RenderChain.html",
    "title": "Class RenderChain | Citrus Engine",
    "keywords": "Class RenderChain Namespace Lime Assembly Lime.dll public class RenderChain Inheritance object RenderChain Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RenderChain() public RenderChain() Fields ClipRegion The clip region. Usually represents viewport bounds in the coordinate space of the root widget. public Rectangle ClipRegion Field Value Rectangle DefaultClipRegion public static readonly Rectangle DefaultClipRegion Field Value Rectangle LayerCount public const int LayerCount = 100 Field Value int Properties CurrentLayer public int CurrentLayer { get; set; } Property Value int Layers public List<RenderChain.Item>[] Layers { get; } Property Value List<Item>[] Methods Add(Node, IPresenter) public void Add(Node node, IPresenter presenter) Parameters node Node presenter IPresenter Clear() public void Clear() GetRenderObjects(RenderObjectList) public void GetRenderObjects(RenderObjectList list) Parameters list RenderObjectList HitTest(ref HitTestArgs) public bool HitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool"
  },
  "api/Lime.RenderObject.html": {
    "href": "api/Lime.RenderObject.html",
    "title": "Class RenderObject | Citrus Engine",
    "keywords": "Class RenderObject Namespace Lime Assembly Lime.dll public abstract class RenderObject Inheritance object RenderObject Derived Image.RenderObject RenderObject3D SDFRenderObjectList WidgetRenderObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnRelease() protected virtual void OnRelease() Release() public void Release() Render() public abstract void Render()"
  },
  "api/Lime.RenderObject3D.html": {
    "href": "api/Lime.RenderObject3D.html",
    "title": "Class RenderObject3D | Citrus Engine",
    "keywords": "Class RenderObject3D Namespace Lime Assembly Lime.dll public abstract class RenderObject3D : RenderObject Inheritance object RenderObject RenderObject3D Inherited Members RenderObject.Render() RenderObject.Release() RenderObject.OnRelease() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DistanceToCamera public float DistanceToCamera Field Value float Opaque public bool Opaque Field Value bool"
  },
  "api/Lime.RenderObjectList.html": {
    "href": "api/Lime.RenderObjectList.html",
    "title": "Class RenderObjectList | Citrus Engine",
    "keywords": "Class RenderObjectList Namespace Lime Assembly Lime.dll public class RenderObjectList : IReadOnlyList<RenderObject>, IReadOnlyCollection<RenderObject>, IEnumerable<RenderObject>, IEnumerable Inheritance object RenderObjectList Implements IReadOnlyList<RenderObject> IReadOnlyCollection<RenderObject> IEnumerable<RenderObject> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Properties Count Gets the number of elements in the collection. public int Count { get; } Property Value int The number of elements in the collection. this[int] Gets the element at the specified index in the read-only list. public RenderObject this[int index] { get; } Parameters index int The zero-based index of the element to get. Property Value RenderObject The element at the specified index in the read-only list. Methods Add(RenderObject) public void Add(RenderObject obj) Parameters obj RenderObject Clear() public void Clear() GetEnumerator() public List<RenderObject>.Enumerator GetEnumerator() Returns List<RenderObject>.Enumerator Render() public void Render()"
  },
  "api/Lime.RenderObjectPool-1.html": {
    "href": "api/Lime.RenderObjectPool-1.html",
    "title": "Class RenderObjectPool<T> | Citrus Engine",
    "keywords": "Class RenderObjectPool<T> Namespace Lime Assembly Lime.dll public static class RenderObjectPool<T> where T : RenderObject, new() Type Parameters T Inheritance object RenderObjectPool<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Acquire() public static T Acquire() Returns T"
  },
  "api/Lime.RenderOptimizer.BoundingRectCalculator.html": {
    "href": "api/Lime.RenderOptimizer.BoundingRectCalculator.html",
    "title": "Class BoundingRectCalculator | Citrus Engine",
    "keywords": "Class BoundingRectCalculator Namespace Lime.RenderOptimizer Assembly Lime.dll public class BoundingRectCalculator Inheritance object BoundingRectCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ProcessContentSize(Node) public static ContentSizeComponent ProcessContentSize(Node node) Parameters node Node Returns ContentSizeComponent"
  },
  "api/Lime.RenderOptimizer.ContentBox.html": {
    "href": "api/Lime.RenderOptimizer.ContentBox.html",
    "title": "Class ContentBox | Citrus Engine",
    "keywords": "Class ContentBox Namespace Lime.RenderOptimizer Assembly Lime.dll public class ContentBox : ContentSize Inheritance object ContentSize ContentBox Inherited Members ContentSize.ForProjection(Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data [YuzuOptional] public Bounds Data Field Value Bounds"
  },
  "api/Lime.RenderOptimizer.ContentPlane.html": {
    "href": "api/Lime.RenderOptimizer.ContentPlane.html",
    "title": "Class ContentPlane | Citrus Engine",
    "keywords": "Class ContentPlane Namespace Lime.RenderOptimizer Assembly Lime.dll public class ContentPlane : ContentSize Inheritance object ContentSize ContentPlane Inherited Members ContentSize.ForProjection(Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ContentPlane() public ContentPlane() ContentPlane(Rectangle) public ContentPlane(Rectangle contentAABB) Parameters contentAABB Rectangle Fields Data [YuzuOptional] public Vector3[] Data Field Value Vector3[]"
  },
  "api/Lime.RenderOptimizer.ContentRectangle.html": {
    "href": "api/Lime.RenderOptimizer.ContentRectangle.html",
    "title": "Class ContentRectangle | Citrus Engine",
    "keywords": "Class ContentRectangle Namespace Lime.RenderOptimizer Assembly Lime.dll public class ContentRectangle : ContentSize Inheritance object ContentSize ContentRectangle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ContentRectangle() public ContentRectangle() ContentRectangle(Rectangle) public ContentRectangle(Rectangle aabb) Parameters aabb Rectangle ContentRectangle(Rectangle, Vector2) public ContentRectangle(Rectangle aabb, Vector2 size) Parameters aabb Rectangle size Vector2 Fields Data [YuzuOptional] public Rectangle Data Field Value Rectangle Methods ForProjection(Node) public override ContentSize ForProjection(Node node) Parameters node Node Returns ContentSize"
  },
  "api/Lime.RenderOptimizer.ContentSize.html": {
    "href": "api/Lime.RenderOptimizer.ContentSize.html",
    "title": "Class ContentSize | Citrus Engine",
    "keywords": "Class ContentSize Namespace Lime.RenderOptimizer Assembly Lime.dll public class ContentSize Inheritance object ContentSize Derived ContentBox ContentPlane ContentRectangle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ForProjection(Node) public virtual ContentSize ForProjection(Node node) Parameters node Node Returns ContentSize"
  },
  "api/Lime.RenderOptimizer.ContentSizeComponent.html": {
    "href": "api/Lime.RenderOptimizer.ContentSizeComponent.html",
    "title": "Class ContentSizeComponent | Citrus Engine",
    "keywords": "Class ContentSizeComponent Namespace Lime.RenderOptimizer Assembly Lime.dll public class ContentSizeComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent ContentSizeComponent Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields Size [YuzuOptional] public ContentSize Size Field Value ContentSize Properties IsEmpty public bool IsEmpty { get; } Property Value bool"
  },
  "api/Lime.RenderOptimizer.DistortionMeshExtensions.html": {
    "href": "api/Lime.RenderOptimizer.DistortionMeshExtensions.html",
    "title": "Class DistortionMeshExtensions | Citrus Engine",
    "keywords": "Class DistortionMeshExtensions Namespace Lime.RenderOptimizer Assembly Lime.dll public static class DistortionMeshExtensions Inheritance object DistortionMeshExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetLocalAABB(DistortionMesh) public static Rectangle GetLocalAABB(this DistortionMesh mesh) Parameters mesh DistortionMesh Returns Rectangle"
  },
  "api/Lime.RenderOptimizer.HasContentSizeComponent.html": {
    "href": "api/Lime.RenderOptimizer.HasContentSizeComponent.html",
    "title": "Class HasContentSizeComponent | Citrus Engine",
    "keywords": "Class HasContentSizeComponent Namespace Lime.RenderOptimizer Assembly Lime.dll public class HasContentSizeComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent HasContentSizeComponent Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable)"
  },
  "api/Lime.RenderOptimizer.ImageCombinerItem.html": {
    "href": "api/Lime.RenderOptimizer.ImageCombinerItem.html",
    "title": "Class ImageCombinerItem | Citrus Engine",
    "keywords": "Class ImageCombinerItem Namespace Lime.RenderOptimizer Assembly Lime.dll public class ImageCombinerItem Inheritance object ImageCombinerItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Arg1 public IImageCombinerArg Arg1 Field Value IImageCombinerArg Arg2 public IImageCombinerArg Arg2 Field Value IImageCombinerArg Combiner public ImageCombiner Combiner Field Value ImageCombiner Methods TryCreate(ImageCombiner) public static ImageCombinerItem TryCreate(ImageCombiner combiner) Parameters combiner ImageCombiner Returns ImageCombinerItem"
  },
  "api/Lime.RenderOptimizer.RenderOptimizer.html": {
    "href": "api/Lime.RenderOptimizer.RenderOptimizer.html",
    "title": "Class RenderOptimizer | Citrus Engine",
    "keywords": "Class RenderOptimizer Namespace Lime.RenderOptimizer Assembly Lime.dll public class RenderOptimizer Inheritance object RenderOptimizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RenderOptimizer(Widget) public RenderOptimizer(Widget viewWidget) Parameters viewWidget Widget Methods Update(Rectangle) public void Update(Rectangle area) Parameters area Rectangle"
  },
  "api/Lime.RenderOptimizer.ViewProjector.html": {
    "href": "api/Lime.RenderOptimizer.ViewProjector.html",
    "title": "Class ViewProjector | Citrus Engine",
    "keywords": "Class ViewProjector Namespace Lime.RenderOptimizer Assembly Lime.dll public abstract class ViewProjector Inheritance object ViewProjector Derived ViewRectProjector Viewport3DProjector WidgetAdapter3DProjector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ProjectorNode public abstract Node ProjectorNode { get; } Property Value Node Methods CalcAABBInContainer(Matrix32, Matrix32, Rectangle) protected static Rectangle CalcAABBInContainer(Matrix32 containerWorldToLocal, Matrix32 contentLocalToWorld, Rectangle contentAABB) Parameters containerWorldToLocal Matrix32 contentLocalToWorld Matrix32 contentAABB Rectangle Returns Rectangle CalcAABBInContainer(Matrix32, Rectangle) protected static Rectangle CalcAABBInContainer(Matrix32 contentToContainer, Rectangle contentAABB) Parameters contentToContainer Matrix32 contentAABB Rectangle Returns Rectangle Project(Node, ContentSize) public abstract ContentSize Project(Node node, ContentSize size) Parameters node Node size ContentSize Returns ContentSize"
  },
  "api/Lime.RenderOptimizer.ViewRectProjector.html": {
    "href": "api/Lime.RenderOptimizer.ViewRectProjector.html",
    "title": "Class ViewRectProjector | Citrus Engine",
    "keywords": "Class ViewRectProjector Namespace Lime.RenderOptimizer Assembly Lime.dll public class ViewRectProjector : ViewProjector Inheritance object ViewProjector ViewRectProjector Inherited Members ViewProjector.CalcAABBInContainer(Matrix32, Matrix32, Rectangle) ViewProjector.CalcAABBInContainer(Matrix32, Rectangle) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ViewRectProjector(Widget, Rectangle) public ViewRectProjector(Widget widget, Rectangle area) Parameters widget Widget area Rectangle Fields Area public readonly Rectangle Area Field Value Rectangle Widget public readonly Widget Widget Field Value Widget Properties ProjectorNode public override Node ProjectorNode { get; } Property Value Node Methods IsOnView(ContentSize) public bool IsOnView(ContentSize size) Parameters size ContentSize Returns bool Project(Node, ContentSize) public override ContentSize Project(Node node, ContentSize size) Parameters node Node size ContentSize Returns ContentSize"
  },
  "api/Lime.RenderOptimizer.Viewport3DProjector.html": {
    "href": "api/Lime.RenderOptimizer.Viewport3DProjector.html",
    "title": "Class Viewport3DProjector | Citrus Engine",
    "keywords": "Class Viewport3DProjector Namespace Lime.RenderOptimizer Assembly Lime.dll public class Viewport3DProjector : ViewProjector Inheritance object ViewProjector Viewport3DProjector Inherited Members ViewProjector.CalcAABBInContainer(Matrix32, Matrix32, Rectangle) ViewProjector.CalcAABBInContainer(Matrix32, Rectangle) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Viewport3DProjector(Viewport3D) public Viewport3DProjector(Viewport3D viewport) Parameters viewport Viewport3D Fields Viewport public readonly Viewport3D Viewport Field Value Viewport3D Properties ProjectorNode public override Node ProjectorNode { get; } Property Value Node Methods Project(Node, ContentSize) public override ContentSize Project(Node node, ContentSize size) Parameters node Node size ContentSize Returns ContentSize"
  },
  "api/Lime.RenderOptimizer.WidgetAdapter3DProjector.html": {
    "href": "api/Lime.RenderOptimizer.WidgetAdapter3DProjector.html",
    "title": "Class WidgetAdapter3DProjector | Citrus Engine",
    "keywords": "Class WidgetAdapter3DProjector Namespace Lime.RenderOptimizer Assembly Lime.dll public class WidgetAdapter3DProjector : ViewProjector Inheritance object ViewProjector WidgetAdapter3DProjector Inherited Members ViewProjector.CalcAABBInContainer(Matrix32, Matrix32, Rectangle) ViewProjector.CalcAABBInContainer(Matrix32, Rectangle) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WidgetAdapter3DProjector(WidgetAdapter3D) public WidgetAdapter3DProjector(WidgetAdapter3D widgetAdapter) Parameters widgetAdapter WidgetAdapter3D Fields WidgetAdapter public readonly WidgetAdapter3D WidgetAdapter Field Value WidgetAdapter3D Properties ProjectorNode public override Node ProjectorNode { get; } Property Value Node Methods Project(Node, ContentSize) public override ContentSize Project(Node node, ContentSize size) Parameters node Node size ContentSize Returns ContentSize"
  },
  "api/Lime.RenderOptimizer.html": {
    "href": "api/Lime.RenderOptimizer.html",
    "title": "Namespace Lime.RenderOptimizer | Citrus Engine",
    "keywords": "Namespace Lime.RenderOptimizer Classes BoundingRectCalculator ContentBox ContentPlane ContentRectangle ContentSize ContentSizeComponent DistortionMeshExtensions HasContentSizeComponent ImageCombinerItem RenderOptimizer ViewProjector ViewRectProjector Viewport3DProjector WidgetAdapter3DProjector"
  },
  "api/Lime.RenderState.html": {
    "href": "api/Lime.RenderState.html",
    "title": "Enum RenderState | Citrus Engine",
    "keywords": "Enum RenderState Namespace Lime Assembly Lime.dll [Flags] public enum RenderState Fields All = -1 Blending = 8 ColorFactor = 1024 ColorWriteEnabled = 32 CullMode = 64 DepthState = 128 None = 0 Projection = 8192 ScissorState = 256 Shader = 16 StencilState = 512 Transform1 = 2 Transform2 = 4 View = 4096 Viewport = 1 World = 2048"
  },
  "api/Lime.RenderTarget.html": {
    "href": "api/Lime.RenderTarget.html",
    "title": "Enum RenderTarget | Citrus Engine",
    "keywords": "Enum RenderTarget Namespace Lime Assembly Lime.dll public enum RenderTarget Fields A = 1 B = 2 C = 3 D = 4 E = 5 F = 6 G = 7 None = 0"
  },
  "api/Lime.RenderTexture.html": {
    "href": "api/Lime.RenderTexture.html",
    "title": "Class RenderTexture | Citrus Engine",
    "keywords": "Class RenderTexture Namespace Lime Assembly Lime.dll public class RenderTexture : CommonTexture, ITexture, IDisposable Inheritance object CommonTexture RenderTexture Implements ITexture IDisposable Inherited Members CommonTexture.TotalMemoryUsed CommonTexture.TotalMemoryUsedMb CommonTexture.IsDisposed CommonTexture.MemoryUsed CommonTexture.MaybeDiscardUnderPressure() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RenderTexture(int, int, Format) public RenderTexture(int width, int height, Format format = Format.R8G8B8A8_UNorm) Parameters width int height int format Format Properties AlphaTexture public ITexture AlphaTexture { get; } Property Value ITexture Format public Format Format { get; } Property Value Format ImageSize public Size ImageSize { get; } Property Value Size IsStubTexture public bool IsStubTexture { get; } Property Value bool PixelCount public int PixelCount { get; } Property Value int TextureParams public TextureParams TextureParams { get; set; } Property Value TextureParams UnderlyingTexture public ITexture UnderlyingTexture { get; } Property Value ITexture Methods Dispose() public override void Dispose() ~RenderTexture() protected ~RenderTexture() GetPixels() Copies all pixels from texture. public Color4[] GetPixels() Returns Color4[] Remarks This is a very expensive method. It requires waiting for all previous render commands to complete. All previous render commands include commands from all previous frames. GetPixels(Color4[]) Copies all pixels from texture. public void GetPixels(Color4[] destinationArray) Parameters destinationArray Color4[] Remarks This is a very expensive method. It requires waiting for all previous render commands to complete. All previous render commands include commands from all previous frames. GetPlatformTexture() public IPlatformRenderTexture2D GetPlatformTexture() Returns IPlatformRenderTexture2D IsTransparentPixel(int, int) public bool IsTransparentPixel(int x, int y) Parameters x int y int Returns bool RestoreRenderTarget() public void RestoreRenderTarget() SetAsRenderTarget() public void SetAsRenderTarget() TransformUVCoordinatesToAtlasSpace(ref Vector2) public void TransformUVCoordinatesToAtlasSpace(ref Vector2 uv) Parameters uv Vector2"
  },
  "api/Lime.Renderer.html": {
    "href": "api/Lime.Renderer.html",
    "title": "Class Renderer | Citrus Engine",
    "keywords": "Class Renderer Namespace Lime Assembly Lime.dll public static class Renderer Inheritance object Renderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GlobalShaderParams public static readonly ShaderParams GlobalShaderParams Field Value ShaderParams PolyCount3d public static int PolyCount3d Field Value int Properties Blending public static Blending Blending { set; } Property Value Blending ColorFactor public static Color4 ColorFactor { get; set; } Property Value Color4 ColorWriteEnabled public static ColorWriteMask ColorWriteEnabled { set; } Property Value ColorWriteMask CullMode public static CullMode CullMode { set; } Property Value CullMode DepthState public static DepthState DepthState { set; } Property Value DepthState DrawCalls public static int DrawCalls { get; } Property Value int FrontFace public static FrontFace FrontFace { set; } Property Value FrontFace Projection public static Matrix44 Projection { get; set; } Property Value Matrix44 RenderCycle public static int RenderCycle { get; } Property Value int ScissorState public static ScissorState ScissorState { set; } Property Value ScissorState Shader public static ShaderId Shader { set; } Property Value ShaderId StencilState public static StencilState StencilState { set; } Property Value StencilState Transform1 public static Matrix32 Transform1 { set; } Property Value Matrix32 Transform2 public static Matrix32 Transform2 { get; set; } Property Value Matrix32 View public static Matrix44 View { get; set; } Property Value Matrix44 ViewProjection public static Matrix44 ViewProjection { get; } Property Value Matrix44 Viewport public static Viewport Viewport { get; set; } Property Value Viewport World public static Matrix44 World { get; set; } Property Value Matrix44 WorldView public static Matrix44 WorldView { get; } Property Value Matrix44 WorldViewProjection public static Matrix44 WorldViewProjection { get; } Property Value Matrix44 Methods BeginFrame() public static void BeginFrame() Clear(ClearOptions) public static void Clear(ClearOptions options) Parameters options ClearOptions Clear(ClearOptions, Color4) public static void Clear(ClearOptions options, Color4 color) Parameters options ClearOptions color Color4 Clear(ClearOptions, Color4, float, byte) public static void Clear(ClearOptions options, Color4 color, float depth, byte stencil) Parameters options ClearOptions color Color4 depth float stencil byte Clear(Color4) public static void Clear(Color4 color) Parameters color Color4 DrawCircle(Vector2, float, int, Color4) public static void DrawCircle(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawDashedLine(Vector2, Vector2, Color4, Vector2) public static void DrawDashedLine(Vector2 a, Vector2 b, Color4 color, Vector2 dashSize) Parameters a Vector2 b Vector2 color Color4 dashSize Vector2 DrawGlyphList(List<Glyph>, Color4) public static void DrawGlyphList(List<Glyph> glyphList, Color4 color) Parameters glyphList List<Glyph> color Color4 DrawHorizontalGradientRect(Vector2, Vector2, Color4, Color4) public static void DrawHorizontalGradientRect(Vector2 a, Vector2 b, Color4 topColor, Color4 bottomColor) Parameters a Vector2 b Vector2 topColor Color4 bottomColor Color4 DrawHorizontalGradientRect(Vector2, Vector2, ColorGradient) public static void DrawHorizontalGradientRect(Vector2 a, Vector2 b, ColorGradient gradient) Parameters a Vector2 b Vector2 gradient ColorGradient DrawHorizontalGradientRect(float, float, float, float, ColorGradient) public static void DrawHorizontalGradientRect(float x0, float y0, float x1, float y1, ColorGradient gradient) Parameters x0 float y0 float x1 float y1 float gradient ColorGradient DrawLine(Vector2, Vector2, Color4, float, LineCap) public static void DrawLine(Vector2 a, Vector2 b, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters a Vector2 b Vector2 color Color4 thickness float cap LineCap DrawLine(float, float, float, float, Color4, float, LineCap) public static void DrawLine(float x0, float y0, float x1, float y1, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters x0 float y0 float x1 float y1 float color Color4 thickness float cap LineCap DrawQuadrangle(Quadrangle, Color4) Draws the quadrangle public static void DrawQuadrangle(Quadrangle q, Color4 color) Parameters q Quadrangle color Color4 DrawQuadrangleOutline(Quadrangle, Color4, float) Draws the quadrangle outline inscribed within the given bounds. public static void DrawQuadrangleOutline(Quadrangle q, Color4 color, float thickness = 1) Parameters q Quadrangle color Color4 thickness float DrawRect(Vector2, Vector2, Color4) public static void DrawRect(Vector2 a, Vector2 b, Color4 color) Parameters a Vector2 b Vector2 color Color4 DrawRect(float, float, float, float, Color4) public static void DrawRect(float x0, float y0, float x1, float y1, Color4 color) Parameters x0 float y0 float x1 float y1 float color Color4 DrawRectOutline(Vector2, Vector2, Color4, float) Draws the rectangle outline inscribed within the given bounds. public static void DrawRectOutline(Vector2 a, Vector2 b, Color4 color, float thickness = 1) Parameters a Vector2 b Vector2 color Color4 thickness float DrawRectOutline(float, float, float, float, Color4, float) Draws the rectangle outline inscribed within the given bounds. public static void DrawRectOutline(float x0, float y0, float x1, float y1, Color4 color, float thickness = 1) Parameters x0 float y0 float x1 float y1 float color Color4 thickness float DrawRound(Vector2, float, int, Color4) public static void DrawRound(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawRound(Vector2, float, int, Color4, Color4) public static void DrawRound(Vector2 center, float radius, int numSegments, Color4 innerColor, Color4 outerColor) Parameters center Vector2 radius float numSegments int innerColor Color4 outerColor Color4 DrawSprite(ISprite, Color4, Vector2, Vector2) public static void DrawSprite(ISprite sprite, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite color Color4 position Vector2 size Vector2 DrawSprite(ISprite, IMaterial, Color4, Vector2, Vector2) public static void DrawSprite(ISprite sprite, IMaterial material, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite material IMaterial color Color4 position Vector2 size Vector2 DrawTextLine(IFont, Vector2, string, Color4, float, int, int, float) public static void DrawTextLine(IFont font, Vector2 position, string text, Color4 color, float fontHeight, int start, int length, float letterSpacing) Parameters font IFont position Vector2 text string color Color4 fontHeight float start int length int letterSpacing float DrawTextLine(IFont, Vector2, string, Color4, float, int, int, float, GlyphList, Action<int, Vector2, Vector2>, int) public static void DrawTextLine(IFont font, Vector2 position, string text, Color4 color, float fontHeight, int start, int length, float letterSpacing, GlyphList glyphList, Action<int, Vector2, Vector2> onDrawChar = null, int tag = -1) Parameters font IFont position Vector2 text string color Color4 fontHeight float start int length int letterSpacing float glyphList GlyphList onDrawChar Action<int, Vector2, Vector2> tag int DrawTextLine(IFont, Vector2, string, float, Color4, float) public static void DrawTextLine(IFont font, Vector2 position, string text, float fontHeight, Color4 color, float letterSpacing) Parameters font IFont position Vector2 text string fontHeight float color Color4 letterSpacing float DrawTextLine(Vector2, string, float, Color4, float) public static void DrawTextLine(Vector2 position, string text, float fontHeight, Color4 color, float letterSpacing) Parameters position Vector2 text string fontHeight float color Color4 letterSpacing float DrawTextLine(float, float, string, float, Color4, float) public static void DrawTextLine(float x, float y, string text, float fontHeight, Color4 color, float letterSpacing) Parameters x float y float text string fontHeight float color Color4 letterSpacing float DrawTexture(ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public static void DrawTexture(ITexture texture1, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public static void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public static void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTexture(ITexture, ITexture, IMaterial, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public static void DrawTexture(ITexture texture1, ITexture texture2, IMaterial material, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture material IMaterial color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTriangleFan(ITexture, ITexture, IMaterial, Vertex[], int, int) public static void DrawTriangleFan(ITexture texture1, ITexture texture2, IMaterial material, Vertex[] vertices, int numVertices, int offset = 0) Parameters texture1 ITexture texture2 ITexture material IMaterial vertices Vertex[] numVertices int offset int DrawTriangleFan(ITexture, ITexture, Vertex[], int) public static void DrawTriangleFan(ITexture texture1, ITexture texture2, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture vertices Vertex[] numVertices int DrawTriangleFan(ITexture, Vertex[], int) public static void DrawTriangleFan(ITexture texture1, Vertex[] vertices, int numVertices) Parameters texture1 ITexture vertices Vertex[] numVertices int DrawTriangleFan(Vertex[], int) public static void DrawTriangleFan(Vertex[] vertices, int numVertices) Parameters vertices Vertex[] numVertices int DrawTriangleStrip(ITexture, ITexture, IMaterial, Vertex[], int, int) public static void DrawTriangleStrip(ITexture texture1, ITexture texture2, IMaterial material, Vertex[] vertices, int numVertices, int offset = 0) Parameters texture1 ITexture texture2 ITexture material IMaterial vertices Vertex[] numVertices int offset int DrawTriangleStrip(ITexture, ITexture, Vertex[], int) public static void DrawTriangleStrip(ITexture texture1, ITexture texture2, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture vertices Vertex[] numVertices int DrawTriangleStrip(ITexture, Vertex[], int) public static void DrawTriangleStrip(ITexture texture1, Vertex[] vertices, int numVertices) Parameters texture1 ITexture vertices Vertex[] numVertices int DrawTriangleStrip(Vertex[], int) public static void DrawTriangleStrip(Vertex[] vertices, int numVertices) Parameters vertices Vertex[] numVertices int DrawVerticalGradientRect(Vector2, Vector2, Color4, Color4) public static void DrawVerticalGradientRect(Vector2 a, Vector2 b, Color4 topColor, Color4 bottomColor) Parameters a Vector2 b Vector2 topColor Color4 bottomColor Color4 DrawVerticalGradientRect(Vector2, Vector2, ColorGradient) public static void DrawVerticalGradientRect(Vector2 a, Vector2 b, ColorGradient gradient) Parameters a Vector2 b Vector2 gradient ColorGradient DrawVerticalGradientRect(float, float, float, float, Color4, Color4) public static void DrawVerticalGradientRect(float x0, float y0, float x1, float y1, Color4 topColor, Color4 bottomColor) Parameters x0 float y0 float x1 float y1 float topColor Color4 bottomColor Color4 DrawVerticalGradientRect(float, float, float, float, ColorGradient) public static void DrawVerticalGradientRect(float x0, float y0, float x1, float y1, ColorGradient gradient) Parameters x0 float y0 float x1 float y1 float gradient ColorGradient EndFrame() public static void EndFrame() FindMinMaxGradientPointColors(ColorGradient, out Color4, out Color4) public static void FindMinMaxGradientPointColors(ColorGradient gradient, out Color4 minPointColor, out Color4 maxPointColor) Parameters gradient ColorGradient minPointColor Color4 maxPointColor Color4 FixupFrontFace(FrontFace) public static FrontFace FixupFrontFace(FrontFace frontFace) Parameters frontFace FrontFace Returns FrontFace FixupWVP(Matrix44) public static Matrix44 FixupWVP(Matrix44 projection) Parameters projection Matrix44 Returns Matrix44 Flush() public static void Flush() MultiplyTransform1(Matrix32) public static void MultiplyTransform1(Matrix32 transform) Parameters transform Matrix32 MultiplyTransform2(Matrix32) public static void MultiplyTransform2(Matrix32 transform) Parameters transform Matrix32 PopState() public static void PopState() PushState(RenderState) public static void PushState(RenderState mask) Parameters mask RenderState SetOrthogonalProjection(Vector2, Vector2) public static void SetOrthogonalProjection(Vector2 leftTop, Vector2 rightBottom) Parameters leftTop Vector2 rightBottom Vector2 SetOrthogonalProjection(float, float, float, float) public static void SetOrthogonalProjection(float left, float top, float right, float bottom) Parameters left float top float right float bottom float SetScissorState(ScissorState, bool) public static void SetScissorState(ScissorState value, bool intersectWithCurrent = false) Parameters value ScissorState intersectWithCurrent bool"
  },
  "api/Lime.RendererNvg.html": {
    "href": "api/Lime.RendererNvg.html",
    "title": "Class RendererNvg | Citrus Engine",
    "keywords": "Class RendererNvg Namespace Lime Assembly Lime.dll public static class RendererNvg Inheritance object RendererNvg Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DrawCircle(Vector2, float, Paint, float) public static void DrawCircle(Vector2 center, float radius, Paint paint, float thickness = 1) Parameters center Vector2 radius float paint Paint thickness float DrawLine(Vector2, Vector2, Paint, float, LineCap) public static void DrawLine(Vector2 a, Vector2 b, Paint paint, float thickness = 1, LineCap cap = LineCap.Butt) Parameters a Vector2 b Vector2 paint Paint thickness float cap LineCap DrawQuadrangle(Quadrangle, Paint) public static void DrawQuadrangle(Quadrangle q, Paint paint) Parameters q Quadrangle paint Paint DrawQuadrangleOutline(Quadrangle, Paint, float) public static void DrawQuadrangleOutline(Quadrangle q, Paint paint, float thickness = 1) Parameters q Quadrangle paint Paint thickness float DrawRect(Vector2, Vector2, Paint) public static void DrawRect(Vector2 a, Vector2 b, Paint paint) Parameters a Vector2 b Vector2 paint Paint DrawRound(Vector2, float, Paint) public static void DrawRound(Vector2 center, float radius, Paint paint) Parameters center Vector2 radius float paint Paint DrawRoundedRect(Vector2, Vector2, Paint, float) public static void DrawRoundedRect(Vector2 a, Vector2 b, Paint paint, float cornerRadius) Parameters a Vector2 b Vector2 paint Paint cornerRadius float DrawRoundedRectOutline(Vector2, Vector2, Paint, float, float) public static void DrawRoundedRectOutline(Vector2 a, Vector2 b, Paint paint, float thickness, float cornerRadius) Parameters a Vector2 b Vector2 paint Paint thickness float cornerRadius float DrawRoundedRectWithBorder(Vector2, Vector2, Paint, Paint, float, float) public static void DrawRoundedRectWithBorder(Vector2 a, Vector2 b, Paint innerPaint, Paint borderPaint, float thickness, float cornerRadius) Parameters a Vector2 b Vector2 innerPaint Paint borderPaint Paint thickness float cornerRadius float"
  },
  "api/Lime.RendererWrapper.html": {
    "href": "api/Lime.RendererWrapper.html",
    "title": "Class RendererWrapper | Citrus Engine",
    "keywords": "Class RendererWrapper Namespace Lime Assembly Lime.dll public abstract class RendererWrapper Inheritance object RendererWrapper Derived DeferredRendererWrapper ImmediateRendererWrapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Blending public abstract Blending Blending { set; } Property Value Blending ColorWriteEnabled public abstract ColorWriteMask ColorWriteEnabled { set; } Property Value ColorWriteMask CullMode public abstract CullMode CullMode { set; } Property Value CullMode Current public static RendererWrapper Current { get; set; } Property Value RendererWrapper DepthState public abstract DepthState DepthState { set; } Property Value DepthState Projection public abstract Matrix44 Projection { set; } Property Value Matrix44 ScissorState public abstract ScissorState ScissorState { set; } Property Value ScissorState Shader public abstract ShaderId Shader { set; } Property Value ShaderId StencilState public abstract StencilState StencilState { set; } Property Value StencilState Transform1 public abstract Matrix32 Transform1 { set; } Property Value Matrix32 Transform2 public abstract Matrix32 Transform2 { set; } Property Value Matrix32 View public abstract Matrix44 View { set; } Property Value Matrix44 Viewport public abstract Viewport Viewport { set; } Property Value Viewport World public abstract Matrix44 World { set; } Property Value Matrix44 Methods BeginFrame() public abstract void BeginFrame() Callback(Action) public abstract void Callback(Action callback) Parameters callback Action Clear(ClearOptions) public void Clear(ClearOptions options) Parameters options ClearOptions Clear(ClearOptions, Color4) public abstract void Clear(ClearOptions options, Color4 color) Parameters options ClearOptions color Color4 Clear(Color4) public void Clear(Color4 color) Parameters color Color4 DrawCircle(Vector2, float, int, Color4) public abstract void DrawCircle(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawCircle(float, float, float, int, Color4) public void DrawCircle(float x, float y, float radius, int numSegments, Color4 color) Parameters x float y float radius float numSegments int color Color4 DrawDashedLine(Vector2, Vector2, Color4, Vector2) public abstract void DrawDashedLine(Vector2 a, Vector2 b, Color4 color, Vector2 dashSize) Parameters a Vector2 b Vector2 color Color4 dashSize Vector2 DrawLine(Vector2, Vector2, Color4, float, LineCap) public abstract void DrawLine(Vector2 a, Vector2 b, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters a Vector2 b Vector2 color Color4 thickness float cap LineCap DrawLine(float, float, float, float, Color4, float, LineCap) public void DrawLine(float x0, float y0, float x1, float y1, Color4 color, float thickness = 1, LineCap cap = LineCap.Butt) Parameters x0 float y0 float x1 float y1 float color Color4 thickness float cap LineCap DrawRect(Vector2, Vector2, Color4) public abstract void DrawRect(Vector2 a, Vector2 b, Color4 color) Parameters a Vector2 b Vector2 color Color4 DrawRect(float, float, float, float, Color4) public void DrawRect(float x0, float y0, float x1, float y1, Color4 color) Parameters x0 float y0 float x1 float y1 float color Color4 DrawRectOutline(Vector2, Vector2, Color4, float) public abstract void DrawRectOutline(Vector2 a, Vector2 b, Color4 color, float thickness = 1) Parameters a Vector2 b Vector2 color Color4 thickness float DrawRenderChain(RenderChain) public abstract void DrawRenderChain(RenderChain renderChain) Parameters renderChain RenderChain DrawRenderObjects(RenderObjectList) public abstract void DrawRenderObjects(RenderObjectList renderObjects) Parameters renderObjects RenderObjectList DrawRound(Vector2, float, int, Color4) public void DrawRound(Vector2 center, float radius, int numSegments, Color4 color) Parameters center Vector2 radius float numSegments int color Color4 DrawRound(Vector2, float, int, Color4, Color4) public abstract void DrawRound(Vector2 center, float radius, int numSegments, Color4 innerColor, Color4 outerColor) Parameters center Vector2 radius float numSegments int innerColor Color4 outerColor Color4 DrawRound(float, float, float, int, Color4) public void DrawRound(float x, float y, float radius, int numSegments, Color4 color) Parameters x float y float radius float numSegments int color Color4 DrawSprite(ISprite, Color4, Vector2, Vector2) public abstract void DrawSprite(ISprite sprite, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite color Color4 position Vector2 size Vector2 DrawSprite(ISprite, IMaterial, Color4, Vector2, Vector2) public abstract void DrawSprite(ISprite sprite, IMaterial material, Color4 color, Vector2 position, Vector2 size) Parameters sprite ISprite material IMaterial color Color4 position Vector2 size Vector2 DrawTextLine(IFont, Vector2, string, Color4, float, int, int, float) public abstract void DrawTextLine(IFont font, Vector2 position, string text, Color4 color, float fontHeight, int start, int length, float letterSpacing) Parameters font IFont position Vector2 text string color Color4 fontHeight float start int length int letterSpacing float DrawTextLine(IFont, Vector2, string, float, Color4, float) public void DrawTextLine(IFont font, Vector2 position, string text, float fontHeight, Color4 color, float letterSpacing) Parameters font IFont position Vector2 text string fontHeight float color Color4 letterSpacing float DrawTextLine(Vector2, string, float, Color4, float) public void DrawTextLine(Vector2 position, string text, float fontHeight, Color4 color, float letterSpacing) Parameters position Vector2 text string fontHeight float color Color4 letterSpacing float DrawTextLine(float, float, string, float, Color4, float) public void DrawTextLine(float x, float y, string text, float fontHeight, Color4 color, float letterSpacing) Parameters x float y float text string fontHeight float color Color4 letterSpacing float DrawTexture(ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public abstract void DrawTexture(ITexture texture1, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2) public abstract void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0, Vector2 uv1) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0 Vector2 uv1 Vector2 DrawTexture(ITexture, ITexture, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public abstract void DrawTexture(ITexture texture1, ITexture texture2, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTexture(ITexture, ITexture, IMaterial, Color4, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) public abstract void DrawTexture(ITexture texture1, ITexture texture2, IMaterial material, Color4 color, Vector2 position, Vector2 size, Vector2 uv0t1, Vector2 uv1t1, Vector2 uv0t2, Vector2 uv1t2) Parameters texture1 ITexture texture2 ITexture material IMaterial color Color4 position Vector2 size Vector2 uv0t1 Vector2 uv1t1 Vector2 uv0t2 Vector2 uv1t2 Vector2 DrawTriangleFan(ITexture, ITexture, Vertex[], int) public abstract void DrawTriangleFan(ITexture texture1, ITexture texture2, Vertex[] vertices, int numVertices) Parameters texture1 ITexture texture2 ITexture vertices Vertex[] numVertices int DrawTriangleFan(ITexture, Vertex[], int) public void DrawTriangleFan(ITexture texture1, Vertex[] vertices, int numVertices) Parameters texture1 ITexture vertices Vertex[] numVertices int DrawTriangleFan(Vertex[], int) public void DrawTriangleFan(Vertex[] vertices, int numVertices) Parameters vertices Vertex[] numVertices int EndFrame() public abstract void EndFrame() Flush() public abstract void Flush() GetBitmap(Widget, Action<Bitmap>) public void GetBitmap(Widget widget, Action<Bitmap> callback) Parameters widget Widget callback Action<Bitmap> MultiplyTransform1(Matrix32) public abstract void MultiplyTransform1(Matrix32 transform) Parameters transform Matrix32 MultiplyTransform2(Matrix32) public abstract void MultiplyTransform2(Matrix32 transform) Parameters transform Matrix32 PopRenderTarget() public abstract void PopRenderTarget() PopState() public abstract void PopState() PushRenderTarget(ITexture) public abstract void PushRenderTarget(ITexture texture) Parameters texture ITexture PushState(RenderState) public abstract void PushState(RenderState mask) Parameters mask RenderState RenderToTexture(RenderChain, ITexture, float, float, Matrix32, bool) public void RenderToTexture(RenderChain renderChain, ITexture texture, float width, float height, Matrix32 viewMatrix, bool clearRenderTarget = true) Parameters renderChain RenderChain texture ITexture width float height float viewMatrix Matrix32 clearRenderTarget bool RenderToTexture(Widget, ITexture, RenderChain, bool) public void RenderToTexture(Widget widget, ITexture texture, RenderChain renderChain, bool clearRenderTarget = true) Parameters widget Widget texture ITexture renderChain RenderChain clearRenderTarget bool SetOrthogonalProjection(Vector2, Vector2) public void SetOrthogonalProjection(Vector2 leftTop, Vector2 rightBottom) Parameters leftTop Vector2 rightBottom Vector2 SetOrthogonalProjection(float, float, float, float) public abstract void SetOrthogonalProjection(float left, float top, float right, float bottom) Parameters left float top float right float bottom float"
  },
  "api/Lime.RenderingBackend.html": {
    "href": "api/Lime.RenderingBackend.html",
    "title": "Enum RenderingBackend | Citrus Engine",
    "keywords": "Enum RenderingBackend Namespace Lime Assembly Lime.dll public enum RenderingBackend Fields ES20 = 1 OpenGL = 0 Vulkan = 2"
  },
  "api/Lime.ResizeDelegate.html": {
    "href": "api/Lime.ResizeDelegate.html",
    "title": "Delegate ResizeDelegate | Citrus Engine",
    "keywords": "Delegate ResizeDelegate Namespace Lime Assembly Lime.dll Delegate used by Resized event. public delegate void ResizeDelegate(bool deviceRotated) Parameters deviceRotated bool Defines whether resize is triggered by device rotation or not."
  },
  "api/Lime.RichText.html": {
    "href": "api/Lime.RichText.html",
    "title": "Class RichText | Citrus Engine",
    "keywords": "Class RichText Namespace Lime Assembly Lime.dll [TangerineNodeBuilder(\"BuildForTangerine\")] [TangerineAllowedChildrenTypes(new Type[] { typeof(TextStyle) })] [TangerineVisualHintGroup(\"/All/Nodes/Text\", null)] public class RichText : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IText Inheritance object Node Widget RichText Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IText Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors RichText() public RichText() Properties Caret public ICaretPosition Caret { get; set; } Property Value ICaretPosition DisplayText public string DisplayText { get; } Property Value string ErrorMessage public string ErrorMessage { get; } Property Value string HAlignment [YuzuMember] [TangerineKeyframeColor(13)] public HAlignment HAlignment { get; set; } Property Value HAlignment Localizable public bool Localizable { get; set; } Property Value bool MaxDisplayCharacters public int MaxDisplayCharacters { get; set; } Property Value int OverflowMode [YuzuMember] [TangerineKeyframeColor(15)] public TextOverflowMode OverflowMode { get; set; } Property Value TextOverflowMode Text Get or sets a label upon the widget. For widgets which can not have a label returns null. [YuzuMember] [TangerineKeyframeColor(12)] public override string Text { get; set; } Property Value string TrimWhitespaces public bool TrimWhitespaces { get; set; } Property Value bool VAlignment [YuzuMember] [TangerineKeyframeColor(14)] public VAlignment VAlignment { get; set; } Property Value VAlignment WordSplitAllowed [YuzuMember] [TangerineKeyframeColor(16)] public bool WordSplitAllowed { get; set; } Property Value bool Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcNumCharacters() public int CalcNumCharacters() Returns int CanDisplay(char) public bool CanDisplay(char ch) Parameters ch char Returns bool Dispose() Stops all tasks and calls Dispose of all descendants. public override void Dispose() Escape(string) public static string Escape(string text) Parameters text string Returns string GetCharPair(Vector2, out (CharPosition, CharPosition)) public bool GetCharPair(Vector2 point, out (CharPosition, CharPosition) pair) Parameters point Vector2 pair (CharPosition, CharPosition) Returns bool GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject HitTest(Vector2, out TextStyle) Make a hit test. Returns style of a text chunk a user hit to. TODO: implement more advanced system with tag attributes like ... public bool HitTest(Vector2 point, out TextStyle style) Parameters point Vector2 style TextStyle Returns bool Invalidate() public void Invalidate() MeasureText() Returns the text's bounding box. public Rectangle MeasureText() Returns Rectangle OnSizeChanged(Vector2) protected override void OnSizeChanged(Vector2 sizeDelta) Parameters sizeDelta Vector2 RemoveUnusedStyles() public void RemoveUnusedStyles() SetLocalizeArguments(params string[]) Arguments that will be passed into Text.Localize(...) public void SetLocalizeArguments(params string[] args) Parameters args string[] StaticScale(float, bool) TODO: Add summary public override void StaticScale(float ratio, bool roundCoordinates) Parameters ratio float roundCoordinates bool Events GlobalTextProcessor Processes a text assigned to any RichText instance. public static event TextProcessorDelegate GlobalTextProcessor Event Type TextProcessorDelegate Submitted public event Action<string> Submitted Event Type Action<string> TextProcessor Processes a text assigned to this RichText instance. public event TextProcessorDelegate TextProcessor Event Type TextProcessorDelegate"
  },
  "api/Lime.SHA256.html": {
    "href": "api/Lime.SHA256.html",
    "title": "Struct SHA256 | Citrus Engine",
    "keywords": "Struct SHA256 Namespace Lime Assembly Lime.dll public struct SHA256 : IEquatable<SHA256>, IComparable<SHA256> Implements IEquatable<SHA256> IComparable<SHA256> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields A [YuzuMember(\"0\")] public ulong A Field Value ulong B [YuzuMember(\"1\")] public ulong B Field Value ulong C [YuzuMember(\"2\")] public ulong C Field Value ulong D [YuzuMember(\"3\")] public ulong D Field Value ulong Methods CompareTo(SHA256) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(SHA256 other) Parameters other SHA256 An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other. Greater than zero This instance follows other in the sort order. Compute(string) public static SHA256 Compute(string source) Parameters source string Returns SHA256 Compute<T>(params T[]) public static SHA256 Compute<T>(params T[] source) where T : unmanaged Parameters source T[] Returns SHA256 Type Parameters T Compute<T>(T[], int, int) public static SHA256 Compute<T>(T[] source, int start, int length) where T : unmanaged Parameters source T[] start int length int Returns SHA256 Type Parameters T Equals(SHA256) Indicates whether the current object is equal to another object of the same type. public bool Equals(SHA256 other) Parameters other SHA256 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(SHA256, SHA256) public static bool operator ==(SHA256 lhs, SHA256 rhs) Parameters lhs SHA256 rhs SHA256 Returns bool operator !=(SHA256, SHA256) public static bool operator !=(SHA256 lhs, SHA256 rhs) Parameters lhs SHA256 rhs SHA256 Returns bool"
  },
  "api/Lime.SafeAreaInsetsChangedDelegate.html": {
    "href": "api/Lime.SafeAreaInsetsChangedDelegate.html",
    "title": "Delegate SafeAreaInsetsChangedDelegate | Citrus Engine",
    "keywords": "Delegate SafeAreaInsetsChangedDelegate Namespace Lime Assembly Lime.dll Delegate used by SafeAreaInsetsChanged event. New value of sinsets. public delegate void SafeAreaInsetsChangedDelegate(Rectangle safeAreaInsets) Parameters safeAreaInsets Rectangle"
  },
  "api/Lime.Schema.BasicDescriptor.html": {
    "href": "api/Lime.Schema.BasicDescriptor.html",
    "title": "Class BasicDescriptor | Citrus Engine",
    "keywords": "Class BasicDescriptor Namespace Lime.Schema Assembly Lime.dll public class BasicDescriptor Inheritance object BasicDescriptor Derived CompositeDescriptor EnumDescriptor MemberDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Name [YuzuRequired] public string Name Field Value string Properties Attributes [YuzuMember] public List<string> Attributes { get; } Property Value List<string>"
  },
  "api/Lime.Schema.CompositeDescriptor.html": {
    "href": "api/Lime.Schema.CompositeDescriptor.html",
    "title": "Class CompositeDescriptor | Citrus Engine",
    "keywords": "Class CompositeDescriptor Namespace Lime.Schema Assembly Lime.dll public class CompositeDescriptor : BasicDescriptor Inheritance object BasicDescriptor CompositeDescriptor Inherited Members BasicDescriptor.Name BasicDescriptor.Attributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BaseTypeName [YuzuMember] public string BaseTypeName Field Value string Kind [YuzuRequired] public CompositeKind Kind Field Value CompositeKind Sealed [YuzuMember] public bool Sealed Field Value bool Properties DefaultValues [YuzuMember] public Dictionary<string, string> DefaultValues { get; } Property Value Dictionary<string, string> InterfaceTypeNames [YuzuMember] public List<string> InterfaceTypeNames { get; } Property Value List<string> Members [YuzuRequired] public List<MemberDescriptor> Members { get; } Property Value List<MemberDescriptor>"
  },
  "api/Lime.Schema.CompositeKind.html": {
    "href": "api/Lime.Schema.CompositeKind.html",
    "title": "Enum CompositeKind | Citrus Engine",
    "keywords": "Enum CompositeKind Namespace Lime.Schema Assembly Lime.dll public enum CompositeKind Fields Class = 0 Interface = 2 Struct = 1"
  },
  "api/Lime.Schema.EnumDescriptor.html": {
    "href": "api/Lime.Schema.EnumDescriptor.html",
    "title": "Class EnumDescriptor | Citrus Engine",
    "keywords": "Class EnumDescriptor Namespace Lime.Schema Assembly Lime.dll public class EnumDescriptor : BasicDescriptor Inheritance object BasicDescriptor EnumDescriptor Inherited Members BasicDescriptor.Name BasicDescriptor.Attributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields UnderlyingTypeName [YuzuRequired] public string UnderlyingTypeName Field Value string Properties Items [YuzuRequired] public List<EnumValueDescriptor> Items { get; } Property Value List<EnumValueDescriptor>"
  },
  "api/Lime.Schema.EnumValueDescriptor.html": {
    "href": "api/Lime.Schema.EnumValueDescriptor.html",
    "title": "Struct EnumValueDescriptor | Citrus Engine",
    "keywords": "Struct EnumValueDescriptor Namespace Lime.Schema Assembly Lime.dll public struct EnumValueDescriptor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Name [YuzuRequired] public string Name Field Value string Value [YuzuRequired] public object Value Field Value object"
  },
  "api/Lime.Schema.LayerMetadata.LayerVersion.html": {
    "href": "api/Lime.Schema.LayerMetadata.LayerVersion.html",
    "title": "Class LayerMetadata.LayerVersion | Citrus Engine",
    "keywords": "Class LayerMetadata.LayerVersion Namespace Lime.Schema Assembly Lime.dll public class LayerMetadata.LayerVersion Inheritance object LayerMetadata.LayerVersion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LayerVersion() public LayerVersion() Fields Layer [YuzuRequired(\"0\")] public string Layer Field Value string Version [YuzuRequired(\"1\")] public int Version Field Value int Operators implicit operator LayerVersion((string Layer, int Version)) public static implicit operator LayerMetadata.LayerVersion((string Layer, int Version) layers) Parameters layers (string Layer, int Version) Returns LayerMetadata.LayerVersion"
  },
  "api/Lime.Schema.LayerMetadata.html": {
    "href": "api/Lime.Schema.LayerMetadata.html",
    "title": "Class LayerMetadata | Citrus Engine",
    "keywords": "Class LayerMetadata Namespace Lime.Schema Assembly Lime.dll public sealed class LayerMetadata : Metadata Inheritance object Metadata LayerMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors LayerMetadata() public LayerMetadata() LayerMetadata(IEnumerable<(string Layer, int Version)>) public LayerMetadata(IEnumerable<(string Layer, int Version)> layers) Parameters layers IEnumerable<(string Layer, int Version)> Properties Layers [YuzuMember] public List<LayerMetadata.LayerVersion> Layers { get; } Property Value List<LayerMetadata.LayerVersion>"
  },
  "api/Lime.Schema.MemberDescriptor.html": {
    "href": "api/Lime.Schema.MemberDescriptor.html",
    "title": "Class MemberDescriptor | Citrus Engine",
    "keywords": "Class MemberDescriptor Namespace Lime.Schema Assembly Lime.dll public class MemberDescriptor : BasicDescriptor Inheritance object BasicDescriptor MemberDescriptor Inherited Members BasicDescriptor.Name BasicDescriptor.Attributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IsSetterNonPublic [YuzuMember] public bool IsSetterNonPublic Field Value bool IsVirtual [YuzuMember] public bool IsVirtual Field Value bool MemberKind [YuzuRequired] public MemberTypes MemberKind Field Value MemberTypes TypeName [YuzuRequired] public string TypeName Field Value string"
  },
  "api/Lime.Schema.SchemaStorage.html": {
    "href": "api/Lime.Schema.SchemaStorage.html",
    "title": "Class SchemaStorage | Citrus Engine",
    "keywords": "Class SchemaStorage Namespace Lime.Schema Assembly Lime.dll public class SchemaStorage Inheritance object SchemaStorage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TypeDescriptors [YuzuRequired] public List<BasicDescriptor> TypeDescriptors { get; } Property Value List<BasicDescriptor>"
  },
  "api/Lime.Schema.html": {
    "href": "api/Lime.Schema.html",
    "title": "Namespace Lime.Schema | Citrus Engine",
    "keywords": "Namespace Lime.Schema Classes BasicDescriptor CompositeDescriptor EnumDescriptor LayerMetadata LayerMetadata.LayerVersion MemberDescriptor SchemaStorage Structs EnumValueDescriptor Enums CompositeKind"
  },
  "api/Lime.ScissorState.html": {
    "href": "api/Lime.ScissorState.html",
    "title": "Struct ScissorState | Citrus Engine",
    "keywords": "Struct ScissorState Namespace Lime Assembly Lime.dll public struct ScissorState Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ScissorState(WindowRect) public ScissorState(WindowRect bounds) Parameters bounds WindowRect Fields Bounds public WindowRect Bounds Field Value WindowRect Default public static readonly ScissorState Default Field Value ScissorState Enable public bool Enable Field Value bool ScissorDisabled public static readonly ScissorState ScissorDisabled Field Value ScissorState"
  },
  "api/Lime.ScrollDirection.html": {
    "href": "api/Lime.ScrollDirection.html",
    "title": "Enum ScrollDirection | Citrus Engine",
    "keywords": "Enum ScrollDirection Namespace Lime Assembly Lime.dll public enum ScrollDirection Fields Any = 0 Horizontal = 1 Vertical = 2"
  },
  "api/Lime.ScrollView.Layout.html": {
    "href": "api/Lime.ScrollView.Layout.html",
    "title": "Class ScrollView.Layout | Citrus Engine",
    "keywords": "Class ScrollView.Layout Namespace Lime Assembly Lime.dll protected class ScrollView.Layout : Layout, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout ScrollView.Layout Implements IDisposable IAnimable ILayout Inherited Members Layout.Owner Layout.DebugRectangles Layout.ConstraintsValid Layout.ArrangementValid Layout.RowAlignment Layout.ColumnAlignment Layout.Alignment Layout.IgnoreHidden Layout.InvalidateConstraintsAndArrangement() Layout.InvalidateArrangement() Layout.OnSizeChanged(Widget, Vector2) Layout.GetChildren() Layout.CalcAlignmentOffsetAndStride(HAlignment, float, int) Layout.CalcAlignmentOffsetAndStride(VAlignment, float, int) Layout.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors Layout(ScrollDirection, Widget) public Layout(ScrollDirection direction, Widget content) Parameters direction ScrollDirection content Widget Properties ScrollDirection public ScrollDirection ScrollDirection { get; set; } Property Value ScrollDirection Methods ArrangeChildren() public override void ArrangeChildren() MeasureSizeConstraints() public override void MeasureSizeConstraints()"
  },
  "api/Lime.ScrollView.ScrollViewContentWidget.html": {
    "href": "api/Lime.ScrollView.ScrollViewContentWidget.html",
    "title": "Class ScrollView.ScrollViewContentWidget | Citrus Engine",
    "keywords": "Class ScrollView.ScrollViewContentWidget Namespace Lime Assembly Lime.dll public class ScrollView.ScrollViewContentWidget : Frame, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg Inheritance object Node Widget Frame ScrollView.ScrollViewContentWidget Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg Inherited Members Frame.ClipChildren Frame.ClipByWidget Frame.RenderTarget Frame.IsRenderedToTexture() Frame.PartialHitTest(ref HitTestArgs) Frame.GetRenderObject() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Fields ReverseOrderRendering public bool ReverseOrderRendering Field Value bool ScrollDirection public ScrollDirection ScrollDirection Field Value ScrollDirection Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain IsItemFullyOnscreen(Widget) public virtual bool IsItemFullyOnscreen(Widget item) Parameters item Widget Returns bool IsItemOnscreen(Widget) public virtual bool IsItemOnscreen(Widget item) Parameters item Widget Returns bool"
  },
  "api/Lime.ScrollView.html": {
    "href": "api/Lime.ScrollView.html",
    "title": "Class ScrollView | Citrus Engine",
    "keywords": "Class ScrollView Namespace Lime Assembly Lime.dll public class ScrollView Inheritance object ScrollView Derived ScrollViewWithSlider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ScrollView(Frame, ScrollDirection, bool, ScrollViewContentWidget) public ScrollView(Frame frame, ScrollDirection scrollDirection = ScrollDirection.Vertical, bool processChildrenFirst = false, ScrollView.ScrollViewContentWidget overriddenContent = null) Parameters frame Frame scrollDirection ScrollDirection processChildrenFirst bool overriddenContent ScrollView.ScrollViewContentWidget Fields BounceZoneThickness public float BounceZoneThickness Field Value float Content public readonly ScrollView.ScrollViewContentWidget Content Field Value ScrollView.ScrollViewContentWidget Frame public readonly Frame Frame Field Value Frame InertialScrollingDamping public float InertialScrollingDamping Field Value float InertialScrollingStopVelocity public float InertialScrollingStopVelocity Field Value float MaxScrollToItemTime public float MaxScrollToItemTime Field Value float ScrollToItemVelocity public float ScrollToItemVelocity Field Value float ScrollWhenContentFits public bool ScrollWhenContentFits Field Value bool Properties CanScroll public bool CanScroll { get; set; } Property Value bool CenterWhenContentFits public bool CenterWhenContentFits { get; set; } Property Value bool ContentLength public float ContentLength { get; set; } Property Value float ExclusiveDrag public bool ExclusiveDrag { get; set; } Property Value bool IsBeingRefreshed protected bool IsBeingRefreshed { get; set; } Property Value bool IsDragging public virtual bool IsDragging { get; protected set; } Property Value bool MaxScrollPosition public float MaxScrollPosition { get; } Property Value float MinScrollPosition public float MinScrollPosition { get; } Property Value float RejectOrtogonalSwipes public bool RejectOrtogonalSwipes { get; set; } Property Value bool ScrollBySlider public bool ScrollBySlider { get; set; } Property Value bool ScrollDirection public virtual ScrollDirection ScrollDirection { get; set; } Property Value ScrollDirection ScrollPosition public float ScrollPosition { get; set; } Property Value float Methods AssimilateChildren() public void AssimilateChildren() CreateContentWidget() protected virtual ScrollView.ScrollViewContentWidget CreateContentWidget() Returns ScrollView.ScrollViewContentWidget IsItemFullyOnscreen(Widget) public bool IsItemFullyOnscreen(Widget item) Parameters item Widget Returns bool IsItemOnscreen(Widget) public bool IsItemOnscreen(Widget item) Parameters item Widget Returns bool IsScrolling() public bool IsScrolling() Returns bool PositionToView(float, float, float) public float PositionToView(float pos, float paddingBefore = 0, float paddingAfter = 0) Parameters pos float paddingBefore float paddingAfter float Returns float PositionToViewFully(Widget) Include whole widget into frame. If the widget is too large, display top part. public float PositionToViewFully(Widget w) Parameters w Widget Returns float ProjectToScrollAxis(Vector2) public float ProjectToScrollAxis(Vector2 vector) Parameters vector Vector2 Returns float ScrollTo(float, bool) public void ScrollTo(float position, bool instantly = false) Parameters position float instantly bool SetProjectedPosition(Widget, float) public void SetProjectedPosition(Widget w, float position) Parameters w Widget position float SetProjectedSize(Widget, float) public void SetProjectedSize(Widget w, float position) Parameters w Widget position float SetScrollPosition(float) protected virtual void SetScrollPosition(float value) Parameters value float StopScrolling() public void StopScrolling()"
  },
  "api/Lime.ScrollViewWithSlider.html": {
    "href": "api/Lime.ScrollViewWithSlider.html",
    "title": "Class ScrollViewWithSlider | Citrus Engine",
    "keywords": "Class ScrollViewWithSlider Namespace Lime Assembly Lime.dll public class ScrollViewWithSlider : ScrollView Inheritance object ScrollView ScrollViewWithSlider Derived ListView Inherited Members ScrollView.Frame ScrollView.Content ScrollView.IsBeingRefreshed ScrollView.CanScroll ScrollView.ScrollBySlider ScrollView.RejectOrtogonalSwipes ScrollView.BounceZoneThickness ScrollView.ScrollToItemVelocity ScrollView.MaxScrollToItemTime ScrollView.InertialScrollingStopVelocity ScrollView.InertialScrollingDamping ScrollView.ScrollWhenContentFits ScrollView.CenterWhenContentFits ScrollView.ExclusiveDrag ScrollView.IsDragging ScrollView.ContentLength ScrollView.ScrollPosition ScrollView.MinScrollPosition ScrollView.MaxScrollPosition ScrollView.IsItemOnscreen(Widget) ScrollView.IsItemFullyOnscreen(Widget) ScrollView.ProjectToScrollAxis(Vector2) ScrollView.SetProjectedPosition(Widget, float) ScrollView.SetProjectedSize(Widget, float) ScrollView.PositionToViewFully(Widget) ScrollView.PositionToView(float, float, float) ScrollView.SetScrollPosition(float) ScrollView.CreateContentWidget() ScrollView.ScrollTo(float, bool) ScrollView.IsScrolling() ScrollView.StopScrolling() ScrollView.AssimilateChildren() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ScrollViewWithSlider(Frame, Widget, ScrollDirection, bool) public ScrollViewWithSlider(Frame frame, Widget slider = null, ScrollDirection scrollDirection = ScrollDirection.Vertical, bool processChildrenFirst = false) Parameters frame Frame slider Widget scrollDirection ScrollDirection processChildrenFirst bool Fields SliderIsDragging public bool SliderIsDragging Field Value bool Properties ScrollDirection public override ScrollDirection ScrollDirection { get; set; } Property Value ScrollDirection Methods ForceShowSlider(float) public void ForceShowSlider(float time = 1) Parameters time float"
  },
  "api/Lime.SelectionParams.html": {
    "href": "api/Lime.SelectionParams.html",
    "title": "Class SelectionParams | Citrus Engine",
    "keywords": "Class SelectionParams Namespace Lime Assembly Lime.dll public class SelectionParams Inheritance object SelectionParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Color public Color4 Color { get; set; } Property Value Color4 OutlineColor public Color4 OutlineColor { get; set; } Property Value Color4 OutlineThickness public float OutlineThickness { get; set; } Property Value float Padding public Thickness Padding { get; set; } Property Value Thickness"
  },
  "api/Lime.SelectionPresenter.html": {
    "href": "api/Lime.SelectionPresenter.html",
    "title": "Class SelectionPresenter | Citrus Engine",
    "keywords": "Class SelectionPresenter Namespace Lime Assembly Lime.dll public class SelectionPresenter : IPresenter Inheritance object SelectionPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SelectionPresenter(Widget, ICaretPosition, ICaretPosition, SelectionParams) public SelectionPresenter(Widget container, ICaretPosition selectionStart, ICaretPosition selectionEnd, SelectionParams selectionParams) Parameters container Widget selectionStart ICaretPosition selectionEnd ICaretPosition selectionParams SelectionParams Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.SerializableAssetAttribute.html": {
    "href": "api/Lime.SerializableAssetAttribute.html",
    "title": "Class SerializableAssetAttribute | Citrus Engine",
    "keywords": "Class SerializableAssetAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class)] public class SerializableAssetAttribute : Attribute Inheritance object Attribute SerializableAssetAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SerializableAssetAttribute(string[]) public SerializableAssetAttribute(string[] extensions) Parameters extensions string[] Properties Extensions public string[] Extensions { get; } Property Value string[]"
  },
  "api/Lime.SerializableCompoundFont.html": {
    "href": "api/Lime.SerializableCompoundFont.html",
    "title": "Class SerializableCompoundFont | Citrus Engine",
    "keywords": "Class SerializableCompoundFont Namespace Lime Assembly Lime.dll public class SerializableCompoundFont : IFont, IDisposable Inheritance object SerializableCompoundFont Implements IFont IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FontExtensions.MeasureTextLine(IFont, string, float, int, int, float) FontExtensions.MeasureTextLine(IFont, string, float, float) Properties About public string About { get; } Property Value string CharSource public IFontCharSource CharSource { get; } Property Value IFontCharSource FontNames [YuzuMember] public List<string> FontNames { get; } Property Value List<string> RoundCoordinates public bool RoundCoordinates { get; } Property Value bool Spacing public float Spacing { get; } Property Value float Methods ClearCache() public void ClearCache() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.SerializableFont.html": {
    "href": "api/Lime.SerializableFont.html",
    "title": "Class SerializableFont | Citrus Engine",
    "keywords": "Class SerializableFont Namespace Lime Assembly Lime.dll [SerializableAsset(new string[] { \"tft\", \"cft\" })] public class SerializableFont : IFont, IDisposable, ISerializableAsset Inheritance object SerializableFont Implements IFont IDisposable ISerializableAsset Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FontExtensions.MeasureTextLine(IFont, string, float, int, int, float) FontExtensions.MeasureTextLine(IFont, string, float, float) Constructors SerializableFont() public SerializableFont() SerializableFont(string) public SerializableFont(string name) Parameters name string Properties About public string About { get; } Property Value string CharSource public IFontCharSource CharSource { get; } Property Value IFontCharSource Name [YuzuMember] public string Name { get; set; } Property Value string RoundCoordinates public bool RoundCoordinates { get; } Property Value bool Spacing public float Spacing { get; } Property Value float Methods ClearCache() public void ClearCache() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Lime.SerializableSample.html": {
    "href": "api/Lime.SerializableSample.html",
    "title": "Class SerializableSample | Citrus Engine",
    "keywords": "Class SerializableSample Namespace Lime Assembly Lime.dll [SerializableAsset(new string[] { \"ogg\", \"sound\" })] public class SerializableSample : Animable, IAnimable, ISerializableAsset Inheritance object Animable SerializableSample Implements IAnimable ISerializableAsset Inherited Members Animable.Owner Animable.OnOwnerChanged(IAnimable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors SerializableSample() public SerializableSample() SerializableSample(string) public SerializableSample(string path) Parameters path string Fields Path public string Path Field Value string Properties SerializationPath [YuzuMember] public string SerializationPath { get; set; } Property Value string Methods Play(AudioChannelGroup, bool, float, bool, float, float, float, float, bool, float) public Sound Play(AudioChannelGroup group, bool paused, float fadeInTime = 0, bool looping = false, float priority = 0.5, float volume = 1, float pan = 0, float pitch = 1, bool exclusive = false, float fadeOutTime = 0) Parameters group AudioChannelGroup paused bool fadeInTime float looping bool priority float volume float pan float pitch float exclusive bool fadeOutTime float Returns Sound"
  },
  "api/Lime.SerializableSprite.html": {
    "href": "api/Lime.SerializableSprite.html",
    "title": "Class SerializableSprite | Citrus Engine",
    "keywords": "Class SerializableSprite Namespace Lime Assembly Lime.dll [SerializableAsset(new string[] { \"png\" })] public sealed class SerializableSprite : ISprite, ISerializableAsset Inheritance object SerializableSprite Implements ISprite ISerializableAsset Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Extension Methods SpriteExtensions.IsTransparentPixel(ISprite, int, int) SpriteExtensions.TransformUVCoordinatesToAtlasSpace(ISprite, Vector2) SpriteExtensions.TryTransformUVCoordinatesToAtlasSpace(ISprite, Vector2, out Vector2) Constructors SerializableSprite() public SerializableSprite() SerializableSprite(string) public SerializableSprite(string path) Parameters path string Properties AtlasSize public Vector2 AtlasSize { get; } Property Value Vector2 AtlasTexture public ITexture AtlasTexture { get; } Property Value ITexture IndexCount public int IndexCount { get; } Property Value int IsRectangular public bool IsRectangular { get; } Property Value bool SerializationPath [YuzuMember] public string SerializationPath { get; set; } Property Value string Size public Vector2 Size { get; } Property Value Vector2 VertexCount public int VertexCount { get; } Property Value int Methods GetIndex(int) public ushort GetIndex(int index) Parameters index int Returns ushort GetUV(int) public Vector2 GetUV(int index) Parameters index int Returns Vector2 GetVertex(int) public Vector2 GetVertex(int index) Parameters index int Returns Vector2 ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. ValidateRectangular(Node, string) public bool ValidateRectangular(Node node, string useContext) Parameters node Node useContext string Returns bool"
  },
  "api/Lime.SerializableTexture.html": {
    "href": "api/Lime.SerializableTexture.html",
    "title": "Class SerializableTexture | Citrus Engine",
    "keywords": "Class SerializableTexture Namespace Lime Assembly Lime.dll [SerializableAsset(new string[] { \"png\" })] public class SerializableTexture : CommonTexture, ITexture, IDisposable, ISerializableAsset Inheritance object CommonTexture SerializableTexture Implements ITexture IDisposable ISerializableAsset Inherited Members CommonTexture.TotalMemoryUsed CommonTexture.TotalMemoryUsedMb CommonTexture.IsDisposed CommonTexture.MemoryUsed CommonTexture.MaybeDiscardUnderPressure() CommonTexture.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SerializableTexture() public SerializableTexture() SerializableTexture(string) public SerializableTexture(string path) Parameters path string SerializableTexture(string, params object[]) public SerializableTexture(string format, params object[] args) Parameters format string args object[] Properties ImageSize public Size ImageSize { get; } Property Value Size IsStubTexture public bool IsStubTexture { get; } Property Value bool SerializationPath [YuzuMember] public string SerializationPath { get; set; } Property Value string TextureParams public TextureParams TextureParams { get; set; } Property Value TextureParams UnderlyingTexture public ITexture UnderlyingTexture { get; } Property Value ITexture Methods ExpandPath(string) public static string ExpandPath(string path) Parameters path string Returns string GetPixels() public Color4[] GetPixels() Returns Color4[] GetPlatformTexture() public IPlatformTexture2D GetPlatformTexture() Returns IPlatformTexture2D IsTransparentPixel(int, int) public bool IsTransparentPixel(int x, int y) Parameters x int y int Returns bool RestoreRenderTarget() public void RestoreRenderTarget() SetAsRenderTarget() public void SetAsRenderTarget() ShrinkPath(string) public static string ShrinkPath(string path) Parameters path string Returns string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Lime.ServiceProviderExtensions.html": {
    "href": "api/Lime.ServiceProviderExtensions.html",
    "title": "Class ServiceProviderExtensions | Citrus Engine",
    "keywords": "Class ServiceProviderExtensions Namespace Lime Assembly Lime.dll public static class ServiceProviderExtensions Inheritance object ServiceProviderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetService<T>(IServiceProvider) public static T GetService<T>(this IServiceProvider provider) where T : class Parameters provider IServiceProvider Returns T Type Parameters T RequireService<T>(IServiceProvider) public static T RequireService<T>(this IServiceProvider provider) where T : class Parameters provider IServiceProvider Returns T Type Parameters T TryGetService<T>(IServiceProvider, out T) public static bool TryGetService<T>(this IServiceProvider provider, out T service) where T : class Parameters provider IServiceProvider service T Returns bool Type Parameters T"
  },
  "api/Lime.ServiceRegistry.html": {
    "href": "api/Lime.ServiceRegistry.html",
    "title": "Class ServiceRegistry | Citrus Engine",
    "keywords": "Class ServiceRegistry Namespace Lime Assembly Lime.dll public class ServiceRegistry : IServiceProvider Inheritance object ServiceRegistry Implements IServiceProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ServiceProviderExtensions.GetService<T>(IServiceProvider) ServiceProviderExtensions.RequireService<T>(IServiceProvider) ServiceProviderExtensions.TryGetService<T>(IServiceProvider, out T) Methods Add<T>(T) public void Add<T>(T service) where T : class Parameters service T Type Parameters T GetService(Type) Gets the service object of the specified type. public object GetService(Type type) Parameters type Type Returns object A service object of type serviceType. -or- null if there is no service object of type serviceType. Remove(Type) public bool Remove(Type type) Parameters type Type Returns bool Remove<T>() public bool Remove<T>() where T : class Returns bool Type Parameters T"
  },
  "api/Lime.Shader.html": {
    "href": "api/Lime.Shader.html",
    "title": "Class Shader | Citrus Engine",
    "keywords": "Class Shader Namespace Lime Assembly Lime.dll public class Shader : IDisposable Inheritance object Shader Implements IDisposable Derived FragmentShader VertexShader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Shader(ShaderStageMask, string) protected Shader(ShaderStageMask stage, string source) Parameters stage ShaderStageMask source string Properties Source public string Source { get; } Property Value string Stage public ShaderStageMask Stage { get; } Property Value ShaderStageMask Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~Shader() protected ~Shader()"
  },
  "api/Lime.ShaderId.html": {
    "href": "api/Lime.ShaderId.html",
    "title": "Enum ShaderId | Citrus Engine",
    "keywords": "Enum ShaderId Namespace Lime Assembly Lime.dll public enum ShaderId Fields Diffuse = 2 Inherited = 1 InversedSilhouette = 4 None = 0 Silhouette = 3"
  },
  "api/Lime.ShaderOptions.html": {
    "href": "api/Lime.ShaderOptions.html",
    "title": "Enum ShaderOptions | Citrus Engine",
    "keywords": "Enum ShaderOptions Namespace Lime Assembly Lime.dll [Flags] public enum ShaderOptions Fields CutOutTextureBlending = 4 Last = 16 None = 0 PremultiplyAlpha = 1 Tiled = 8 VertexAnimation = 2"
  },
  "api/Lime.ShaderParamKey-1.html": {
    "href": "api/Lime.ShaderParamKey-1.html",
    "title": "Struct ShaderParamKey<T> | Citrus Engine",
    "keywords": "Struct ShaderParamKey<T> Namespace Lime Assembly Lime.dll public struct ShaderParamKey<T> Type Parameters T Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/Lime.ShaderParams.html": {
    "href": "api/Lime.ShaderParams.html",
    "title": "Class ShaderParams | Citrus Engine",
    "keywords": "Class ShaderParams Namespace Lime Assembly Lime.dll public class ShaderParams Inheritance object ShaderParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetParamKey<T>(string) public ShaderParamKey<T> GetParamKey<T>(string name) Parameters name string Returns ShaderParamKey<T> Type Parameters T Set<T>(ShaderParamKey<T>, T) public void Set<T>(ShaderParamKey<T> key, T value) Parameters key ShaderParamKey<T> value T Type Parameters T Set<T>(ShaderParamKey<T>, T*, int) public void Set<T>(ShaderParamKey<T> key, T* value, int count) where T : unmanaged Parameters key ShaderParamKey<T> value T* count int Type Parameters T Set<T>(ShaderParamKey<T>, T[], int) public void Set<T>(ShaderParamKey<T> key, T[] value, int count) Parameters key ShaderParamKey<T> value T[] count int Type Parameters T"
  },
  "api/Lime.ShaderProgram.AttribLocation.html": {
    "href": "api/Lime.ShaderProgram.AttribLocation.html",
    "title": "Class ShaderProgram.AttribLocation | Citrus Engine",
    "keywords": "Class ShaderProgram.AttribLocation Namespace Lime Assembly Lime.dll public class ShaderProgram.AttribLocation Inheritance object ShaderProgram.AttribLocation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Index public int Index Field Value int Name public string Name Field Value string"
  },
  "api/Lime.ShaderProgram.Sampler.html": {
    "href": "api/Lime.ShaderProgram.Sampler.html",
    "title": "Class ShaderProgram.Sampler | Citrus Engine",
    "keywords": "Class ShaderProgram.Sampler Namespace Lime Assembly Lime.dll public class ShaderProgram.Sampler Inheritance object ShaderProgram.Sampler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Name public string Name Field Value string Stage public int Stage Field Value int"
  },
  "api/Lime.ShaderProgram.html": {
    "href": "api/Lime.ShaderProgram.html",
    "title": "Class ShaderProgram | Citrus Engine",
    "keywords": "Class ShaderProgram Namespace Lime Assembly Lime.dll public class ShaderProgram Inheritance object ShaderProgram Derived AlphaIntensityMaterial.AlphaIntensityShaderProgram BloomShaderProgram BlurShaderProgram ColorCorrectionShaderProgram DissolveMaterial.DissolveMaterialShaderProgram DistortionShaderProgram FXAAShaderProgram GradientShaderProgram ShaderProgram NoiseShaderProgram ShaderPrograms.ColorfulTextShaderProgram ShaderPrograms.DashedLineShaderProgram SharpenShaderProgram SDFInnerShadowShaderProgram SDFShaderProgram SDFShadowShaderProgram TwistMaterial.TwistShaderProgram VignetteShaderProgram WaveShaderProgram Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShaderProgram(IEnumerable<Shader>, IEnumerable<AttribLocation>, IEnumerable<Sampler>, ShaderProgram) public ShaderProgram(IEnumerable<Shader> shaders, IEnumerable<ShaderProgram.AttribLocation> attribLocations, IEnumerable<ShaderProgram.Sampler> samplers, ShaderProgram overdrawShaderProgram = null) Parameters shaders IEnumerable<Shader> attribLocations IEnumerable<ShaderProgram.AttribLocation> samplers IEnumerable<ShaderProgram.Sampler> overdrawShaderProgram ShaderProgram Fields Empty public static readonly ShaderProgram Empty Field Value ShaderProgram Methods Dispose() public void Dispose() ~ShaderProgram() protected ~ShaderProgram()"
  },
  "api/Lime.ShaderPrograms.Attributes.html": {
    "href": "api/Lime.ShaderPrograms.Attributes.html",
    "title": "Class ShaderPrograms.Attributes | Citrus Engine",
    "keywords": "Class ShaderPrograms.Attributes Namespace Lime Assembly Lime.dll public static class ShaderPrograms.Attributes Inheritance object ShaderPrograms.Attributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BlendIndices public const int BlendIndices = 6 Field Value int BlendWeights public const int BlendWeights = 7 Field Value int Color1 public const int Color1 = 1 Field Value int Color2 public const int Color2 = 9 Field Value int Normal public const int Normal = 10 Field Value int Pos1 public const int Pos1 = 0 Field Value int Pos2 public const int Pos2 = 8 Field Value int Tangent public const int Tangent = 11 Field Value int UV1 public const int UV1 = 2 Field Value int UV2 public const int UV2 = 3 Field Value int UV3 public const int UV3 = 4 Field Value int UV4 public const int UV4 = 5 Field Value int Methods GetLocations() public static IEnumerable<ShaderProgram.AttribLocation> GetLocations() Returns IEnumerable<ShaderProgram.AttribLocation>"
  },
  "api/Lime.ShaderPrograms.ColorfulTextShaderProgram.html": {
    "href": "api/Lime.ShaderPrograms.ColorfulTextShaderProgram.html",
    "title": "Class ShaderPrograms.ColorfulTextShaderProgram | Citrus Engine",
    "keywords": "Class ShaderPrograms.ColorfulTextShaderProgram Namespace Lime Assembly Lime.dll Colorizes SimpleText's or RichText's grayscale font. public class ShaderPrograms.ColorfulTextShaderProgram : ShaderProgram Inheritance object ShaderProgram ShaderPrograms.ColorfulTextShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To apply this shader you need: Data/Fonts/GradientMap.png file with size of 256x256 and ARGB8 compression. Use Tag field of SimpleText or TextStyle to specify color row from this file. Constructors ColorfulTextShaderProgram() public ColorfulTextShaderProgram() Fields GradientMapTextureSize public const int GradientMapTextureSize = 256 Field Value int Properties GradientRampTexture public static ITexture GradientRampTexture { get; } Property Value ITexture Methods GetInstance() public static ShaderPrograms.ColorfulTextShaderProgram GetInstance() Returns ShaderPrograms.ColorfulTextShaderProgram StyleIndexToColorIndex(int) public static float StyleIndexToColorIndex(int styleIndex) Parameters styleIndex int Returns float"
  },
  "api/Lime.ShaderPrograms.DashedLineShaderProgram.html": {
    "href": "api/Lime.ShaderPrograms.DashedLineShaderProgram.html",
    "title": "Class ShaderPrograms.DashedLineShaderProgram | Citrus Engine",
    "keywords": "Class ShaderPrograms.DashedLineShaderProgram Namespace Lime Assembly Lime.dll public class ShaderPrograms.DashedLineShaderProgram : ShaderProgram Inheritance object ShaderProgram ShaderPrograms.DashedLineShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance() public static ShaderPrograms.DashedLineShaderProgram GetInstance() Returns ShaderPrograms.DashedLineShaderProgram"
  },
  "api/Lime.ShaderPrograms.html": {
    "href": "api/Lime.ShaderPrograms.html",
    "title": "Class ShaderPrograms | Citrus Engine",
    "keywords": "Class ShaderPrograms Namespace Lime Assembly Lime.dll public class ShaderPrograms Inheritance object ShaderPrograms Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static ShaderPrograms Instance Field Value ShaderPrograms Methods GetSamplers() public static IEnumerable<ShaderProgram.Sampler> GetSamplers() Returns IEnumerable<ShaderProgram.Sampler> GetShaderProgram(ShaderId, ITexture, ITexture, ShaderOptions) public ShaderProgram GetShaderProgram(ShaderId shader, ITexture texture1, ITexture texture2, ShaderOptions options) Parameters shader ShaderId texture1 ITexture texture2 ITexture options ShaderOptions Returns ShaderProgram GetShaderProgram(ShaderId, int, ShaderOptions) public ShaderProgram GetShaderProgram(ShaderId shader, int numTextures, ShaderOptions options) Parameters shader ShaderId numTextures int options ShaderOptions Returns ShaderProgram"
  },
  "api/Lime.ShadowParams.html": {
    "href": "api/Lime.ShadowParams.html",
    "title": "Class ShadowParams | Citrus Engine",
    "keywords": "Class ShadowParams Namespace Lime Assembly Lime.dll public class ShadowParams : Animable, IAnimable Inheritance object Animable ShadowParams Implements IAnimable Inherited Members Animable.Owner object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 Dilate [YuzuMember] [Validation.Range(-40, 40)] public float Dilate { get; set; } Property Value float Enabled [YuzuMember] public bool Enabled { get; set; } Property Value bool OffsetX [YuzuMember] public int OffsetX { get; set; } Property Value int OffsetY [YuzuMember] public int OffsetY { get; set; } Property Value int Softness [YuzuMember] [Validation.Range(0, 100)] public float Softness { get; set; } Property Value float Methods InvalidateMaterial() public void InvalidateMaterial() OnOwnerChanged(IAnimable) protected override void OnOwnerChanged(IAnimable previousOwner) Parameters previousOwner IAnimable"
  },
  "api/Lime.SharpenMaterial.html": {
    "href": "api/Lime.SharpenMaterial.html",
    "title": "Class SharpenMaterial | Citrus Engine",
    "keywords": "Class SharpenMaterial Namespace Lime Assembly Lime.dll public class SharpenMaterial : IMaterial Inheritance object SharpenMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SharpenMaterial() public SharpenMaterial() SharpenMaterial(Blending) public SharpenMaterial(Blending blending) Parameters blending Blending Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Id public string Id { get; set; } Property Value string Limit [YuzuMember] public float Limit { get; set; } Property Value float Opaque [YuzuMember] public bool Opaque { get; set; } Property Value bool PassCount public int PassCount { get; } Property Value int Step [YuzuMember] public Vector2 Step { get; set; } Property Value Vector2 Strength [YuzuMember] public float Strength { get; set; } Property Value float Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.SharpenShaderProgram.html": {
    "href": "api/Lime.SharpenShaderProgram.html",
    "title": "Class SharpenShaderProgram | Citrus Engine",
    "keywords": "Class SharpenShaderProgram Namespace Lime Assembly Lime.dll public class SharpenShaderProgram : ShaderProgram Inheritance object ShaderProgram SharpenShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(bool) public static SharpenShaderProgram GetInstance(bool opaque = false) Parameters opaque bool Returns SharpenShaderProgram"
  },
  "api/Lime.Shortcut.html": {
    "href": "api/Lime.Shortcut.html",
    "title": "Struct Shortcut | Citrus Engine",
    "keywords": "Struct Shortcut Namespace Lime Assembly Lime.dll Represents combination of a key with keyboard modifiers used to trigger an action. public struct Shortcut Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Shortcut(Key) public Shortcut(Key main) Parameters main Key Shortcut(Modifiers, Key) public Shortcut(Modifiers modifiers, Key main) Parameters modifiers Modifiers main Key Shortcut(string) public Shortcut(string text) Parameters text string Fields Main public readonly Key Main Field Value Key Modifiers public readonly Modifiers Modifiers Field Value Modifiers Methods Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. ValidateMainKey(Key) public static bool ValidateMainKey(Key key) Parameters key Key Returns bool Operators operator ==(Shortcut, Shortcut) public static bool operator ==(Shortcut lhs, Shortcut rhs) Parameters lhs Shortcut rhs Shortcut Returns bool implicit operator Shortcut(Key) public static implicit operator Shortcut(Key main) Parameters main Key Returns Shortcut operator !=(Shortcut, Shortcut) public static bool operator !=(Shortcut lhs, Shortcut rhs) Parameters lhs Shortcut rhs Shortcut Returns bool"
  },
  "api/Lime.SignedDistanceField.SDFInnerShadowMaterial.html": {
    "href": "api/Lime.SignedDistanceField.SDFInnerShadowMaterial.html",
    "title": "Class SDFInnerShadowMaterial | Citrus Engine",
    "keywords": "Class SDFInnerShadowMaterial Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFInnerShadowMaterial : IMaterial Inheritance object SDFInnerShadowMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SDFInnerShadowMaterial() public SDFInnerShadowMaterial() SDFInnerShadowMaterial(Blending) public SDFInnerShadowMaterial(Blending blending) Parameters blending Blending Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 Dilate [YuzuMember] public float Dilate { get; set; } Property Value float Id public string Id { get; set; } Property Value string Offset [YuzuMember] public Vector2 Offset { get; set; } Property Value Vector2 PassCount public int PassCount { get; } Property Value int Softness [YuzuMember] public float Softness { get; set; } Property Value float TextDilate [YuzuMember] public float TextDilate { get; set; } Property Value float Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.SignedDistanceField.SDFInnerShadowMaterialProvider.html": {
    "href": "api/Lime.SignedDistanceField.SDFInnerShadowMaterialProvider.html",
    "title": "Class SDFInnerShadowMaterialProvider | Citrus Engine",
    "keywords": "Class SDFInnerShadowMaterialProvider Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFInnerShadowMaterialProvider : IGlyphMaterialProvider Inheritance object SDFInnerShadowMaterialProvider Implements IGlyphMaterialProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Material public SDFInnerShadowMaterial Material Field Value SDFInnerShadowMaterial Methods Clone() public IGlyphMaterialProvider Clone() Returns IGlyphMaterialProvider GetMaterial(int) public IMaterial GetMaterial(int tag) Parameters tag int Returns IMaterial ProcessGlyph(Glyph) public Glyph ProcessGlyph(Glyph s) Parameters s Glyph Returns Glyph"
  },
  "api/Lime.SignedDistanceField.SDFInnerShadowShaderProgram.html": {
    "href": "api/Lime.SignedDistanceField.SDFInnerShadowShaderProgram.html",
    "title": "Class SDFInnerShadowShaderProgram | Citrus Engine",
    "keywords": "Class SDFInnerShadowShaderProgram Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFInnerShadowShaderProgram : ShaderProgram Inheritance object ShaderProgram SDFInnerShadowShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance() public static SDFInnerShadowShaderProgram GetInstance() Returns SDFInnerShadowShaderProgram"
  },
  "api/Lime.SignedDistanceField.SDFMaterialProvider.html": {
    "href": "api/Lime.SignedDistanceField.SDFMaterialProvider.html",
    "title": "Class SDFMaterialProvider | Citrus Engine",
    "keywords": "Class SDFMaterialProvider Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFMaterialProvider : IGlyphMaterialProvider Inheritance object SDFMaterialProvider Implements IGlyphMaterialProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Material public SignedDistanceFieldMaterial Material Field Value SignedDistanceFieldMaterial Methods Clone() public IGlyphMaterialProvider Clone() Returns IGlyphMaterialProvider GetMaterial(int) public IMaterial GetMaterial(int tag) Parameters tag int Returns IMaterial ProcessGlyph(Glyph) public Glyph ProcessGlyph(Glyph s) Parameters s Glyph Returns Glyph"
  },
  "api/Lime.SignedDistanceField.SDFRenderObjectList.html": {
    "href": "api/Lime.SignedDistanceField.SDFRenderObjectList.html",
    "title": "Class SDFRenderObjectList | Citrus Engine",
    "keywords": "Class SDFRenderObjectList Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFRenderObjectList : RenderObject Inheritance object RenderObject SDFRenderObjectList Inherited Members RenderObject.Release() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Objects public List<TextRenderObject> Objects Field Value List<TextRenderObject> Methods OnRelease() protected override void OnRelease() Render() public override void Render()"
  },
  "api/Lime.SignedDistanceField.SDFShaderProgram.html": {
    "href": "api/Lime.SignedDistanceField.SDFShaderProgram.html",
    "title": "Class SDFShaderProgram | Citrus Engine",
    "keywords": "Class SDFShaderProgram Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFShaderProgram : ShaderProgram Inheritance object ShaderProgram SDFShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(bool, bool) public static SDFShaderProgram GetInstance(bool gradient = false, bool outline = false) Parameters gradient bool outline bool Returns SDFShaderProgram"
  },
  "api/Lime.SignedDistanceField.SDFShadowMaterial.html": {
    "href": "api/Lime.SignedDistanceField.SDFShadowMaterial.html",
    "title": "Class SDFShadowMaterial | Citrus Engine",
    "keywords": "Class SDFShadowMaterial Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFShadowMaterial : IMaterial Inheritance object SDFShadowMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SDFShadowMaterial() public SDFShadowMaterial() SDFShadowMaterial(Blending) public SDFShadowMaterial(Blending blending) Parameters blending Blending Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 Dilate [YuzuMember] public float Dilate { get; set; } Property Value float Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Softness [YuzuMember] public float Softness { get; set; } Property Value float Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.SignedDistanceField.SDFShadowMaterialProvider.html": {
    "href": "api/Lime.SignedDistanceField.SDFShadowMaterialProvider.html",
    "title": "Class SDFShadowMaterialProvider | Citrus Engine",
    "keywords": "Class SDFShadowMaterialProvider Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFShadowMaterialProvider : IGlyphMaterialProvider Inheritance object SDFShadowMaterialProvider Implements IGlyphMaterialProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Material public SDFShadowMaterial Material Field Value SDFShadowMaterial Properties Offset public Vector2 Offset { get; set; } Property Value Vector2 Methods Clone() public IGlyphMaterialProvider Clone() Returns IGlyphMaterialProvider GetMaterial(int) public IMaterial GetMaterial(int tag) Parameters tag int Returns IMaterial ProcessGlyph(Glyph) public Glyph ProcessGlyph(Glyph s) Parameters s Glyph Returns Glyph"
  },
  "api/Lime.SignedDistanceField.SDFShadowShaderProgram.html": {
    "href": "api/Lime.SignedDistanceField.SDFShadowShaderProgram.html",
    "title": "Class SDFShadowShaderProgram | Citrus Engine",
    "keywords": "Class SDFShadowShaderProgram Namespace Lime.SignedDistanceField Assembly Lime.dll public class SDFShadowShaderProgram : ShaderProgram Inheritance object ShaderProgram SDFShadowShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance() public static SDFShadowShaderProgram GetInstance() Returns SDFShadowShaderProgram"
  },
  "api/Lime.SignedDistanceField.SignedDistanceFieldMaterial.html": {
    "href": "api/Lime.SignedDistanceField.SignedDistanceFieldMaterial.html",
    "title": "Class SignedDistanceFieldMaterial | Citrus Engine",
    "keywords": "Class SignedDistanceFieldMaterial Namespace Lime.SignedDistanceField Assembly Lime.dll public class SignedDistanceFieldMaterial : IMaterial Inheritance object SignedDistanceFieldMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SignedDistanceFieldMaterial() public SignedDistanceFieldMaterial() SignedDistanceFieldMaterial(Blending) public SignedDistanceFieldMaterial(Blending blending) Parameters blending Blending Properties BaseColor [YuzuMember] public Color4 BaseColor { get; set; } Property Value Color4 Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Dilate [YuzuMember] public float Dilate { get; set; } Property Value float Gradient [YuzuMember] public ColorGradient Gradient { get; set; } Property Value ColorGradient GradientAngle [YuzuMember] public float GradientAngle { get; set; } Property Value float GradientEnabled [YuzuMember] public bool GradientEnabled { get; set; } Property Value bool GradientTexture public Texture2D GradientTexture { get; } Property Value Texture2D Id public string Id { get; set; } Property Value string OutlineColor [YuzuMember] public Color4 OutlineColor { get; set; } Property Value Color4 PassCount public int PassCount { get; } Property Value int Softness [YuzuMember] public float Softness { get; set; } Property Value float Thickness [YuzuMember] public float Thickness { get; set; } Property Value float Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.SignedDistanceField.html": {
    "href": "api/Lime.SignedDistanceField.html",
    "title": "Namespace Lime.SignedDistanceField | Citrus Engine",
    "keywords": "Namespace Lime.SignedDistanceField Classes SDFInnerShadowMaterial SDFInnerShadowMaterialProvider SDFInnerShadowShaderProgram SDFMaterialProvider SDFRenderObjectList SDFShaderProgram SDFShadowMaterial SDFShadowMaterialProvider SDFShadowShaderProgram SignedDistanceFieldMaterial"
  },
  "api/Lime.SignedDistanceFieldComponent.ShadowCollection.html": {
    "href": "api/Lime.SignedDistanceFieldComponent.ShadowCollection.html",
    "title": "Class SignedDistanceFieldComponent.ShadowCollection | Citrus Engine",
    "keywords": "Class SignedDistanceFieldComponent.ShadowCollection Namespace Lime Assembly Lime.dll public class SignedDistanceFieldComponent.ShadowCollection : AnimableList<ShadowParams>, IAnimable, IList<ShadowParams>, ICollection<ShadowParams>, IEnumerable<ShadowParams>, IList, ICollection, IEnumerable Inheritance object Animable AnimableList<ShadowParams> SignedDistanceFieldComponent.ShadowCollection Implements IAnimable IList<ShadowParams> ICollection<ShadowParams> IEnumerable<ShadowParams> IList ICollection IEnumerable Inherited Members AnimableList<ShadowParams>.this[int] AnimableList<ShadowParams>.Count AnimableList<ShadowParams>.IsReadOnly AnimableList<ShadowParams>.Add(ShadowParams) AnimableList<ShadowParams>.Clear() AnimableList<ShadowParams>.Contains(ShadowParams) AnimableList<ShadowParams>.CopyTo(ShadowParams[], int) AnimableList<ShadowParams>.IndexOf(ShadowParams) AnimableList<ShadowParams>.Insert(int, ShadowParams) AnimableList<ShadowParams>.Remove(ShadowParams) AnimableList<ShadowParams>.RemoveAt(int) AnimableList<ShadowParams>.GetEnumerator() Animable.Owner Animable.OnOwnerChanged(IAnimable) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random)"
  },
  "api/Lime.SignedDistanceFieldComponent.html": {
    "href": "api/Lime.SignedDistanceFieldComponent.html",
    "title": "Class SignedDistanceFieldComponent | Citrus Engine",
    "keywords": "Class SignedDistanceFieldComponent Namespace Lime Assembly Lime.dll [AllowedComponentOwnerTypes(new Type[] { typeof(SimpleText), typeof(TextStyle) })] public class SignedDistanceFieldComponent : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent SignedDistanceFieldComponent Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors SignedDistanceFieldComponent() public SignedDistanceFieldComponent() Properties BaseColor [YuzuMember] [TangerineGroup(\"01. Base\")] public Color4 BaseColor { get; set; } Property Value Color4 Dilate [YuzuMember] [TangerineGroup(\"01. Base\")] [Validation.Range(-30, 30)] public float Dilate { get; set; } Property Value float Gradient [YuzuMember] [TangerineGroup(\"03. Gradient\")] public ColorGradient Gradient { get; set; } Property Value ColorGradient GradientAngle [YuzuMember] [TangerineGroup(\"03. Gradient\")] public float GradientAngle { get; set; } Property Value float GradientEnabled [YuzuMember] [TangerineGroup(\"03. Gradient\")] public bool GradientEnabled { get; set; } Property Value bool InnerShadows [YuzuMember] [TangerineGroup(\"04. Shadows\")] public SignedDistanceFieldComponent.ShadowCollection InnerShadows { get; } Property Value SignedDistanceFieldComponent.ShadowCollection OutlineColor [YuzuMember] [TangerineGroup(\"02. Outline\")] public Color4 OutlineColor { get; set; } Property Value Color4 Overlays [YuzuMember] [TangerineGroup(\"04. Shadows\")] public SignedDistanceFieldComponent.ShadowCollection Overlays { get; } Property Value SignedDistanceFieldComponent.ShadowCollection Shadows [YuzuMember] [TangerineGroup(\"04. Shadows\")] public SignedDistanceFieldComponent.ShadowCollection Shadows { get; } Property Value SignedDistanceFieldComponent.ShadowCollection Softness [YuzuMember] [TangerineGroup(\"01. Base\")] [Validation.Range(0, 40)] public float Softness { get; set; } Property Value float Thickness [YuzuMember] [TangerineGroup(\"02. Outline\")] [Validation.Range(0, 30)] public float Thickness { get; set; } Property Value float Methods GetRenderObject() public SDFRenderObjectList GetRenderObject() Returns SDFRenderObjectList"
  },
  "api/Lime.SimpleAnimationCurve-1.html": {
    "href": "api/Lime.SimpleAnimationCurve-1.html",
    "title": "Class SimpleAnimationCurve<T> | Citrus Engine",
    "keywords": "Class SimpleAnimationCurve<T> Namespace Lime Assembly Lime.dll public class SimpleAnimationCurve<T> : IAnimationCurve<T>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<T> Type Parameters T Inheritance object SimpleAnimationCurve<T> Implements IAnimationCurve<T> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<T> Derived Color4SimpleAnimationCurve FloatSimpleAnimationCurve IntSimpleAnimationCurve Matrix44SimpleAnimationCurve NumericRangeSimpleAnimationCurve QuaternionSimpleAnimationCurve SkinnedVertexListSimpleAnimationCurve ThicknessSimpleAnimationCurve Vector2SimpleAnimationCurve Vector3SimpleAnimationCurve Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SimpleAnimationCurve() public SimpleAnimationCurve() Properties Duration public int Duration { get; } Property Value int IsEmpty public bool IsEmpty { get; } Property Value bool Keys [YuzuMember] public SimpleKeyframeCollection<T> Keys { get; } Property Value SimpleKeyframeCollection<T> RefCount public int RefCount { get; } Property Value int Methods AddRef() public void AddRef() Create() public static SimpleAnimationCurve<T> Create() Returns SimpleAnimationCurve<T> Create(IEnumerable<SimpleKeyframe<T>>) public static SimpleAnimationCurve<T> Create(IEnumerable<SimpleKeyframe<T>> keys) Parameters keys IEnumerable<SimpleKeyframe<T>> Returns SimpleAnimationCurve<T> CreateEvaluator() public IAnimationCurveEvaluator<T> CreateEvaluator() Returns IAnimationCurveEvaluator<T> InterpolateLinear(T, T, float) protected virtual T InterpolateLinear(T value1, T value2, float amount) Parameters value1 T value2 T amount float Returns T InterpolateSplined(T, T, T, T, float) protected virtual T InterpolateSplined(T value1, T value2, T value3, T value4, float amount) Parameters value1 T value2 T value3 T value4 T amount float Returns T Release() public void Release()"
  },
  "api/Lime.SimpleKeyFunction.html": {
    "href": "api/Lime.SimpleKeyFunction.html",
    "title": "Enum SimpleKeyFunction | Citrus Engine",
    "keywords": "Enum SimpleKeyFunction Namespace Lime Assembly Lime.dll public enum SimpleKeyFunction : byte Fields ClosedSpline = 3 Linear = 0 Spline = 2 Step = 1"
  },
  "api/Lime.SimpleKeyframe-1.html": {
    "href": "api/Lime.SimpleKeyframe-1.html",
    "title": "Class SimpleKeyframe<T> | Citrus Engine",
    "keywords": "Class SimpleKeyframe<T> Namespace Lime Assembly Lime.dll public class SimpleKeyframe<T> : ISimpleKeyframe, IKeyframe<T>, IKeyframe Type Parameters T Inheritance object SimpleKeyframe<T> Implements ISimpleKeyframe IKeyframe<T> IKeyframe Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SimpleKeyframe() public SimpleKeyframe() SimpleKeyframe(int, T) public SimpleKeyframe(int frame, T value) Parameters frame int value T SimpleKeyframe(int, T, SimpleKeyFunction) public SimpleKeyframe(int frame, T value, SimpleKeyFunction function) Parameters frame int value T function SimpleKeyFunction Properties EasingFunction public Mathf.EasingFunction EasingFunction { get; set; } Property Value Mathf.EasingFunction EasingType public Mathf.EasingType EasingType { get; set; } Property Value Mathf.EasingType Frame [YuzuMember] public int Frame { get; set; } Property Value int Function public SimpleKeyFunction Function { get; set; } Property Value SimpleKeyFunction PackedParams [YuzuMember] public int PackedParams { get; set; } Property Value int Params public SimpleKeyframeParams Params { get; set; } Property Value SimpleKeyframeParams Value [YuzuMember] public T Value { get; set; } Property Value T"
  },
  "api/Lime.SimpleKeyframeCollection-1.html": {
    "href": "api/Lime.SimpleKeyframeCollection-1.html",
    "title": "Class SimpleKeyframeCollection<T> | Citrus Engine",
    "keywords": "Class SimpleKeyframeCollection<T> Namespace Lime Assembly Lime.dll public class SimpleKeyframeCollection<T> : ICollection<SimpleKeyframe<T>>, IEnumerable<SimpleKeyframe<T>>, IKeyframeCollection, ICollection<IKeyframe>, IEnumerable<IKeyframe>, IKeyframeCollection<T>, ICollection<IKeyframe<T>>, IEnumerable<IKeyframe<T>>, ISimpleKeyframeCollection, ICollection<ISimpleKeyframe>, IEnumerable<ISimpleKeyframe>, IEnumerable Type Parameters T Inheritance object SimpleKeyframeCollection<T> Implements ICollection<SimpleKeyframe<T>> IEnumerable<SimpleKeyframe<T>> IKeyframeCollection ICollection<IKeyframe> IEnumerable<IKeyframe> IKeyframeCollection<T> ICollection<IKeyframe<T>> IEnumerable<IKeyframe<T>> ISimpleKeyframeCollection ICollection<ISimpleKeyframe> IEnumerable<ISimpleKeyframe> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SimpleKeyframeCollection() public SimpleKeyframeCollection() SimpleKeyframeCollection(int) public SimpleKeyframeCollection(int capacity) Parameters capacity int Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] public SimpleKeyframe<T> this[int index] { get; } Parameters index int Property Value SimpleKeyframe<T> Methods Add(IKeyframe) Adds an item to the ICollection<T>. public void Add(IKeyframe item) Parameters item IKeyframe The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(IKeyframe<T>) Adds an item to the ICollection<T>. public void Add(IKeyframe<T> item) Parameters item IKeyframe<T> The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(ISimpleKeyframe) Adds an item to the ICollection<T>. public void Add(ISimpleKeyframe item) Parameters item ISimpleKeyframe The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(SimpleKeyframe<T>) Adds an item to the ICollection<T>. public void Add(SimpleKeyframe<T> item) Parameters item SimpleKeyframe<T> The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Add(int, object) public void Add(int frame, object value) Parameters frame int value object Add(int, object, SimpleKeyFunction) public void Add(int frame, object value, SimpleKeyFunction function = SimpleKeyFunction.Linear) Parameters frame int value object function SimpleKeyFunction Add(int, T) public void Add(int frame, T value) Parameters frame int value T Add(int, T, SimpleKeyFunction) public void Add(int frame, T value, SimpleKeyFunction function = SimpleKeyFunction.Linear) Parameters frame int value T function SimpleKeyFunction AddRange(IEnumerable<IKeyframe<T>>) public void AddRange(IEnumerable<IKeyframe<T>> keyframes) Parameters keyframes IEnumerable<IKeyframe<T>> AddRange(IEnumerable<IKeyframe>) public void AddRange(IEnumerable<IKeyframe> keyframes) Parameters keyframes IEnumerable<IKeyframe> AddRange(IEnumerable<SimpleKeyframe<T>>) public void AddRange(IEnumerable<SimpleKeyframe<T>> collection) Parameters collection IEnumerable<SimpleKeyframe<T>> Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(IKeyframe) Determines whether the ICollection<T> contains a specific value. public bool Contains(IKeyframe item) Parameters item IKeyframe The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(IKeyframe<T>) Determines whether the ICollection<T> contains a specific value. public bool Contains(IKeyframe<T> item) Parameters item IKeyframe<T> The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(ISimpleKeyframe) Determines whether the ICollection<T> contains a specific value. public bool Contains(ISimpleKeyframe item) Parameters item ISimpleKeyframe The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(SimpleKeyframe<T>) Determines whether the ICollection<T> contains a specific value. public bool Contains(SimpleKeyframe<T> item) Parameters item SimpleKeyframe<T> The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. Contains(int) public bool Contains(int frame) Parameters frame int Returns bool CopyTo(IKeyframe[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(IKeyframe[] array, int arrayIndex) Parameters array IKeyframe[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(IKeyframe<T>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(IKeyframe<T>[] array, int arrayIndex) Parameters array IKeyframe<T>[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(ISimpleKeyframe[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(ISimpleKeyframe[] array, int arrayIndex) Parameters array ISimpleKeyframe[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CopyTo(SimpleKeyframe<T>[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(SimpleKeyframe<T>[] array, int arrayIndex) Parameters array SimpleKeyframe<T>[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. CreateKeyframe() public SimpleKeyframe<T> CreateKeyframe() Returns SimpleKeyframe<T> FindIndex(Predicate<SimpleKeyframe<T>>) public int FindIndex(Predicate<SimpleKeyframe<T>> match) Parameters match Predicate<SimpleKeyframe<T>> Returns int FindLastIndex(Predicate<SimpleKeyframe<T>>) public int FindLastIndex(Predicate<SimpleKeyframe<T>> match) Parameters match Predicate<SimpleKeyframe<T>> Returns int GetByFrame(int) public SimpleKeyframe<T> GetByFrame(int frame) Parameters frame int Returns SimpleKeyframe<T> GetEnumerator() public List<SimpleKeyframe<T>>.Enumerator GetEnumerator() Returns List<SimpleKeyframe<T>>.Enumerator IndexOf(int) public int IndexOf(int frame) Parameters frame int Returns int Remove(IKeyframe) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(IKeyframe item) Parameters item IKeyframe The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(IKeyframe<T>) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(IKeyframe<T> item) Parameters item IKeyframe<T> The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(ISimpleKeyframe) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(ISimpleKeyframe item) Parameters item ISimpleKeyframe The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(SimpleKeyframe<T>) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(SimpleKeyframe<T> item) Parameters item SimpleKeyframe<T> The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Remove(int) public bool Remove(int frame) Parameters frame int Returns bool RemoveAt(int) public void RemoveAt(int index) Parameters index int Update(int, IKeyframe<T>) public void Update(int index, IKeyframe<T> keyframe) Parameters index int keyframe IKeyframe<T> Update(int, T, int) public void Update(int index, T value, int packedParams) Parameters index int value T packedParams int"
  },
  "api/Lime.SimpleKeyframeParams.html": {
    "href": "api/Lime.SimpleKeyframeParams.html",
    "title": "Struct SimpleKeyframeParams | Citrus Engine",
    "keywords": "Struct SimpleKeyframeParams Namespace Lime Assembly Lime.dll public struct SimpleKeyframeParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields EasingFunction public Mathf.EasingFunction EasingFunction Field Value Mathf.EasingFunction EasingType public Mathf.EasingType EasingType Field Value Mathf.EasingType Function public SimpleKeyFunction Function Field Value SimpleKeyFunction Packed public int Packed Field Value int"
  },
  "api/Lime.SimpleText.html": {
    "href": "api/Lime.SimpleText.html",
    "title": "Class SimpleText | Citrus Engine",
    "keywords": "Class SimpleText Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Text\", null)] public class SimpleText : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IText Inheritance object Node Widget SimpleText Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IText Derived ThemedSimpleText Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors SimpleText() public SimpleText() Properties Caret public ICaretPosition Caret { get; set; } Property Value ICaretPosition DisplayText public string DisplayText { get; } Property Value string EffectiveMaxSize public override Vector2 EffectiveMaxSize { get; } Property Value Vector2 EffectiveMinSize public override Vector2 EffectiveMinSize { get; } Property Value Vector2 Font [YuzuMember] [TangerineKeyframeColor(29)] public SerializableFont Font { get; set; } Property Value SerializableFont FontHeight [YuzuMember] [TangerineKeyframeColor(31)] [Validation.Range(0, 3.4028235E+38)] public float FontHeight { get; set; } Property Value float ForceUncutText [YuzuMember] public bool ForceUncutText { get; set; } Property Value bool GradientMapIndex [YuzuMember] public int GradientMapIndex { get; set; } Property Value int HAlignment [YuzuMember] [TangerineKeyframeColor(2)] public HAlignment HAlignment { get; set; } Property Value HAlignment LetterSpacing [YuzuMember] [TangerineKeyframeColor(7)] public float LetterSpacing { get; set; } Property Value float Localizable public bool Localizable { get; set; } Property Value bool OverflowMode [YuzuMember] [TangerineKeyframeColor(4)] public TextOverflowMode OverflowMode { get; set; } Property Value TextOverflowMode RenderMode public TextRenderingMode RenderMode { get; set; } Property Value TextRenderingMode Spacing [YuzuMember] [TangerineKeyframeColor(1)] public float Spacing { get; set; } Property Value float Text Get or sets a label upon the widget. For widgets which can not have a label returns null. [YuzuMember] [TangerineKeyframeColor(30)] public override string Text { get; set; } Property Value string TextColor [YuzuMember] [TangerineKeyframeColor(6)] public Color4 TextColor { get; set; } Property Value Color4 TrimWhitespaces public bool TrimWhitespaces { get; set; } Property Value bool VAlignment [YuzuMember] [TangerineKeyframeColor(3)] public VAlignment VAlignment { get; set; } Property Value VAlignment WordSplitAllowed [YuzuMember] [TangerineKeyframeColor(5)] public bool WordSplitAllowed { get; set; } Property Value bool Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CanDisplay(char) public bool CanDisplay(char ch) Parameters ch char Returns bool FitTextInsideWidgetArea(float) Changes FontHeight and Spacing to make the text inside widget's area. public void FitTextInsideWidgetArea(float minFontHeight = 10) Parameters minFontHeight float GetCharPair(Vector2, out (CharPosition, CharPosition)) public bool GetCharPair(Vector2 point, out (CharPosition, CharPosition) pair) Parameters point Vector2 pair (CharPosition, CharPosition) Returns bool GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject Invalidate() public void Invalidate() MeasureText() Gets the text's bounding box. public Rectangle MeasureText() Returns Rectangle MeasureUncutText() public Vector2 MeasureUncutText() Returns Vector2 OnSizeChanged(Vector2) protected override void OnSizeChanged(Vector2 sizeDelta) Parameters sizeDelta Vector2 SetLocalizeArguments(params string[]) Arguments that will be passed into Text.Localize(...) public void SetLocalizeArguments(params string[] args) Parameters args string[] StaticScale(float, bool) TODO: Add summary public override void StaticScale(float ratio, bool roundCoordinates) Parameters ratio float roundCoordinates bool Events GlobalTextProcessor Processes a text assigned to any SimpleText instance. public static event TextProcessorDelegate GlobalTextProcessor Event Type TextProcessorDelegate Submitted public event Action<string> Submitted Event Type Action<string> TextProcessor Processes a text assigned to this SimpleText instance. public event TextProcessorDelegate TextProcessor Event Type TextProcessorDelegate"
  },
  "api/Lime.Size.html": {
    "href": "api/Lime.Size.html",
    "title": "Struct Size | Citrus Engine",
    "keywords": "Struct Size Namespace Lime Assembly Lime.dll Representation of width and height. public struct Size : IEquatable<Size> Implements IEquatable<Size> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Size(int, int) public Size(int width, int height) Parameters width int height int Fields Height [YuzuMember(\"1\")] public int Height Field Value int Width [YuzuMember(\"0\")] public int Width Field Value int Zero Returns a size with zero width and height. public static readonly Size Zero Field Value Size Methods Equals(Size) Indicates whether the current object is equal to another object of the same type. public bool Equals(Size rhs) Parameters rhs Size Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object o) Parameters o object Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns string representation of this Size in the format: \"Width, Height\". public override string ToString() Returns string Operators operator ==(Size, Size) public static bool operator ==(Size lhs, Size rhs) Parameters lhs Size rhs Size Returns bool explicit operator IntVector2(Size) public static explicit operator IntVector2(Size size) Parameters size Size Returns IntVector2 explicit operator Vector2(Size) public static explicit operator Vector2(Size size) Parameters size Size Returns Vector2 operator !=(Size, Size) public static bool operator !=(Size lhs, Size rhs) Parameters lhs Size rhs Size Returns bool"
  },
  "api/Lime.SkinnedVertexListSimpleAnimationCurve.html": {
    "href": "api/Lime.SkinnedVertexListSimpleAnimationCurve.html",
    "title": "Class SkinnedVertexListSimpleAnimationCurve | Citrus Engine",
    "keywords": "Class SkinnedVertexListSimpleAnimationCurve Namespace Lime Assembly Lime.dll public class SkinnedVertexListSimpleAnimationCurve : SimpleAnimationCurve<List<Animesh.SkinnedVertex>>, IAnimationCurve<List<Animesh.SkinnedVertex>>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<List<Animesh.SkinnedVertex>> Inheritance object SimpleAnimationCurve<List<Animesh.SkinnedVertex>> SkinnedVertexListSimpleAnimationCurve Implements IAnimationCurve<List<Animesh.SkinnedVertex>> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<List<Animesh.SkinnedVertex>> Inherited Members SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.Keys SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.IsEmpty SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.Duration SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.RefCount SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.AddRef() SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.Release() SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.CreateEvaluator() SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.InterpolateSplined(List<Animesh.SkinnedVertex>, List<Animesh.SkinnedVertex>, List<Animesh.SkinnedVertex>, List<Animesh.SkinnedVertex>, float) SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.Create(IEnumerable<SimpleKeyframe<List<Animesh.SkinnedVertex>>>) SimpleAnimationCurve<List<Animesh.SkinnedVertex>>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(List<SkinnedVertex>, List<SkinnedVertex>, float) protected override List<Animesh.SkinnedVertex> InterpolateLinear(List<Animesh.SkinnedVertex> value1, List<Animesh.SkinnedVertex> value2, float amount) Parameters value1 List<Animesh.SkinnedVertex> value2 List<Animesh.SkinnedVertex> amount float Returns List<Animesh.SkinnedVertex>"
  },
  "api/Lime.SkinningMode.html": {
    "href": "api/Lime.SkinningMode.html",
    "title": "Enum SkinningMode | Citrus Engine",
    "keywords": "Enum SkinningMode Namespace Lime Assembly Lime.dll public enum SkinningMode Fields Default = 0 DualQuaternion = 2 Linear = 1"
  },
  "api/Lime.SkinningWeights.html": {
    "href": "api/Lime.SkinningWeights.html",
    "title": "Class SkinningWeights | Citrus Engine",
    "keywords": "Class SkinningWeights Namespace Lime Assembly Lime.dll public class SkinningWeights Inheritance object SkinningWeights Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bone0 [YuzuMember(\"0\")] public BoneWeight Bone0 Field Value BoneWeight Bone1 [YuzuMember(\"1\")] public BoneWeight Bone1 Field Value BoneWeight Bone2 [YuzuMember(\"2\")] public BoneWeight Bone2 Field Value BoneWeight Bone3 [YuzuMember(\"3\")] public BoneWeight Bone3 Field Value BoneWeight Properties this[int] public BoneWeight this[int index] { get; set; } Parameters index int Property Value BoneWeight Methods Clone() public SkinningWeights Clone() Returns SkinningWeights IsEmpty() public bool IsEmpty() Returns bool Release(params int[]) public SkinningWeights Release(params int[] boneIndices) Parameters boneIndices int[] Returns SkinningWeights"
  },
  "api/Lime.Slider.html": {
    "href": "api/Lime.Slider.html",
    "title": "Class Slider | Citrus Engine",
    "keywords": "Class Slider Namespace Lime Assembly Lime.dll [TangerineAllowedChildrenTypes(new Type[] { typeof(Node) })] [TangerineVisualHintGroup(\"/All/Nodes/Containers\", null)] public class Slider : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node Widget Slider Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Derived ThemedSlider Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Slider() public Slider() Fields allowDrag protected bool allowDrag Field Value bool Properties RangeMax [YuzuMember] [TangerineKeyframeColor(8)] public float RangeMax { get; set; } Property Value float RangeMin [YuzuMember] [TangerineKeyframeColor(7)] public float RangeMin { get; set; } Property Value float Step [YuzuMember] [TangerineKeyframeColor(10)] public float Step { get; set; } Property Value float Thumb public Widget Thumb { get; } Property Value Widget Value [YuzuMember] [TangerineKeyframeColor(9)] public float Value { get; set; } Property Value float Methods OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float RaiseChanged() protected void RaiseChanged() SetValue(float) public void SetValue(float newValue) Parameters newValue float Events Changed public event Action Changed Event Type Action DragEnded public event Action DragEnded Event Type Action DragStarted public event Action DragStarted Event Type Action"
  },
  "api/Lime.SoftKeyboardType.html": {
    "href": "api/Lime.SoftKeyboardType.html",
    "title": "Enum SoftKeyboardType | Citrus Engine",
    "keywords": "Enum SoftKeyboardType Namespace Lime Assembly Lime.dll public enum SoftKeyboardType Fields Default = 0 Numeric = 1"
  },
  "api/Lime.Sound.html": {
    "href": "api/Lime.Sound.html",
    "title": "Class Sound | Citrus Engine",
    "keywords": "Class Sound Namespace Lime Assembly Lime.dll public class Sound Inheritance object Sound Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Sound() public Sound() Fields StopChecker public Func<bool> StopChecker Field Value Func<bool> Properties Channel public IAudioChannel Channel { get; } Property Value IAudioChannel IsLoading public bool IsLoading { get; } Property Value bool IsPaused public bool IsPaused { get; } Property Value bool IsStopped public bool IsStopped { get; } Property Value bool Pan public float Pan { get; set; } Property Value float Pitch public float Pitch { get; set; } Property Value float Volume public float Volume { get; set; } Property Value float Methods Pause(float) public void Pause(float fadeOutTime = 0) Parameters fadeOutTime float Resume(float) public void Resume(float fadeInTime = 0) Parameters fadeInTime float Stop(float) public void Stop(float fadeOutTime = 0) Parameters fadeOutTime float Suspend(float) public PlayParameters Suspend(float fadeOutTime = 0) Parameters fadeOutTime float Returns PlayParameters"
  },
  "api/Lime.Source.Profilers.NodeProfilerHelpers.ResultExporter.html": {
    "href": "api/Lime.Source.Profilers.NodeProfilerHelpers.ResultExporter.html",
    "title": "Class ResultExporter | Citrus Engine",
    "keywords": "Class ResultExporter Namespace Lime.Source.Profilers.NodeProfilerHelpers Assembly Lime.dll public static class ResultExporter Inheritance object ResultExporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCloneForSerialization(Node, long, long, Action<Node>, Action<Node>) public static Node CreateCloneForSerialization(Node node, long totalRenderTicks, long totalUpdateTicks, Action<Node> calculateUsageSummary, Action<Node> customOperation = null) Parameters node Node totalRenderTicks long totalUpdateTicks long calculateUsageSummary Action<Node> customOperation Action<Node> Returns Node"
  },
  "api/Lime.Source.Profilers.NodeProfilerHelpers.html": {
    "href": "api/Lime.Source.Profilers.NodeProfilerHelpers.html",
    "title": "Namespace Lime.Source.Profilers.NodeProfilerHelpers | Citrus Engine",
    "keywords": "Namespace Lime.Source.Profilers.NodeProfilerHelpers Classes ResultExporter"
  },
  "api/Lime.Spline.html": {
    "href": "api/Lime.Spline.html",
    "title": "Class Spline | Citrus Engine",
    "keywords": "Class Spline Namespace Lime Assembly Lime.dll [TangerineAllowedChildrenTypes(new Type[] { typeof(SplinePoint) })] [TangerineVisualHintGroup(\"/All/Nodes/Splines\", null)] public class Spline : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Spline Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Spline() public Spline() Properties Closed [YuzuMember] [TangerineKeyframeColor(22)] public bool Closed { get; set; } Property Value bool Methods ApproximateByPolyline(int) public List<Vector2> ApproximateByPolyline(int approximateCount) Parameters approximateCount int Returns List<Vector2> CalcDerivative(float) public Vector2 CalcDerivative(float polylineLengthFromBeginning) Parameters polylineLengthFromBeginning float Returns Vector2 CalcDerivativeViaParameter(float) public Vector2 CalcDerivativeViaParameter(float parameter) Parameters parameter float Returns Vector2 CalcLengthAccurate(int) Calculate approximated length of a spline by approximating each subspline with \"approximateCount\" segments. public float CalcLengthAccurate(int approximateCount) Parameters approximateCount int Returns float CalcLengthUsingGaussLegendreQuadrature() public float CalcLengthUsingGaussLegendreQuadrature() Returns float CalcParamForLength(float) public float CalcParamForLength(float length) Parameters length float Returns float CalcPoint(float) public Vector2 CalcPoint(float polylineLengthFromBeginning) Parameters polylineLengthFromBeginning float Returns Vector2 CalcPointViaParameter(float) public Vector2 CalcPointViaParameter(float parameter) Parameters parameter float Returns Vector2 CalcPoints(float) public IEnumerable<Vector2> CalcPoints(float step) Parameters step float Returns IEnumerable<Vector2> CalcPolylineLength() Calculate length of a polyline comprised of spline points. Takes spline closedness into account. public float CalcPolylineLength() Returns float CalcSplineLengthToNearestPoint(Vector2) public float CalcSplineLengthToNearestPoint(Vector2 point) Parameters point Vector2 Returns float GetSegmentCount() public int GetSegmentCount() Returns int"
  },
  "api/Lime.Spline3D.html": {
    "href": "api/Lime.Spline3D.html",
    "title": "Class Spline3D | Citrus Engine",
    "keywords": "Class Spline3D Namespace Lime Assembly Lime.dll [TangerineAllowedChildrenTypes(new Type[] { typeof(SplinePoint3D) })] [TangerineMenuPath(\"3D/Spline 3D\")] [TangerineVisualHintGroup(\"/All/Nodes/Splines\", null)] public class Spline3D : Node3D, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Node3D Spline3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node3D.localTransform Node3D.globalTransform Node3D.globalTransformInverse Node3D.globallyVisible Node3D.globallyFreezeInvisible Node3D.globalColor Node3D.Viewport Node3D.Visible Node3D.FreezeInvisible Node3D.Scale Node3D.Rotation Node3D.Position Node3D.Color Node3D.Opaque Node3D.LocalTransform Node3D.GlobalTransform Node3D.GlobalTransformInverse Node3D.GloballyVisible Node3D.GlobalColor Node3D.RecalcGloballyFrozen() Node3D.SetGlobalTransform(Matrix44) Node3D.SetGlobalTransformInverse(Matrix44) Node3D.SetLocalTransform(Matrix44) Node3D.FindModel() Node3D.TryFindModel() Node3D.CalcTransformInSpaceOf(Node3D) Node3D.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Spline3D() public Spline3D() Properties Closed [YuzuMember] [TangerineKeyframeColor(25)] public bool Closed { get; set; } Property Value bool Methods CalcLengthAccurate(int) public float CalcLengthAccurate(int approximateCount) Parameters approximateCount int Returns float CalcLengthRough() public float CalcLengthRough() Returns float CalcPointTransform(float) public Matrix44 CalcPointTransform(float amount) Parameters amount float Returns Matrix44 CalcPointTransformInSpaceOf(float, Node3D) public Matrix44 CalcPointTransformInSpaceOf(float amount, Node3D node) Parameters amount float node Node3D Returns Matrix44 GetSegmentCount() public int GetSegmentCount() Returns int"
  },
  "api/Lime.SplineGear.html": {
    "href": "api/Lime.SplineGear.html",
    "title": "Class SplineGear | Citrus Engine",
    "keywords": "Class SplineGear Namespace Lime Assembly Lime.dll public class SplineGear : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node SplineGear Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors SplineGear() public SplineGear() Properties AlongPathOrientation [YuzuMember] [TangerineKeyframeColor(7)] public bool AlongPathOrientation { get; set; } Property Value bool Spline public Spline Spline { get; } Property Value Spline SplineOffset [YuzuMember] [TangerineKeyframeColor(6)] [Validation.Range(0, 1)] public float SplineOffset { get; set; } Property Value float SplineRef [YuzuMember] [TangerineKeyframeColor(5)] public NodeReference<Spline> SplineRef { get; set; } Property Value NodeReference<Spline> Widget public Widget Widget { get; } Property Value Widget WidgetRef [YuzuMember] [TangerineKeyframeColor(4)] public NodeReference<Widget> WidgetRef { get; set; } Property Value NodeReference<Widget> Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float"
  },
  "api/Lime.SplineGear3D.html": {
    "href": "api/Lime.SplineGear3D.html",
    "title": "Class SplineGear3D | Citrus Engine",
    "keywords": "Class SplineGear3D Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"3D/Spline Gear 3D\")] [TangerineAllowedParentTypes(new Type[] { typeof(Node3D), typeof(Viewport3D) })] public class SplineGear3D : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node SplineGear3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors SplineGear3D() public SplineGear3D() Properties Node public Node3D Node { get; } Property Value Node3D NodeRef [YuzuMember] [TangerineKeyframeColor(2)] public NodeReference<Node3D> NodeRef { get; set; } Property Value NodeReference<Node3D> Spline public Spline3D Spline { get; } Property Value Spline3D SplineOffset [YuzuMember] [TangerineKeyframeColor(4)] [Validation.Range(0, 1)] public float SplineOffset { get; set; } Property Value float SplineRef [YuzuMember] [TangerineKeyframeColor(3)] public NodeReference<Spline3D> SplineRef { get; set; } Property Value NodeReference<Spline3D> Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float"
  },
  "api/Lime.SplineInterpolation.html": {
    "href": "api/Lime.SplineInterpolation.html",
    "title": "Enum SplineInterpolation | Citrus Engine",
    "keywords": "Enum SplineInterpolation Namespace Lime Assembly Lime.dll public enum SplineInterpolation Fields Bezier = 1 Linear = 0"
  },
  "api/Lime.SplinePoint.html": {
    "href": "api/Lime.SplinePoint.html",
    "title": "Class SplinePoint | Citrus Engine",
    "keywords": "Class SplinePoint Namespace Lime Assembly Lime.dll [TangerineAllowedParentTypes(new Type[] { typeof(Spline) })] public class SplinePoint : PointObject, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node PointObject SplinePoint Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members PointObject.Position PointObject.X PointObject.Y PointObject.SkinningWeights PointObject.Offset PointObject.TransformedPosition PointObject.RecalcTransformedPositionIfNeeded() PointObject.CalcPositionInSpaceOf(Widget) PointObject.AddToRenderChain(RenderChain) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors SplinePoint() public SplinePoint() Properties Straight [YuzuMember] [TangerineKeyframeColor(11)] public bool Straight { get; set; } Property Value bool TangentAngle [YuzuMember] [TangerineKeyframeColor(12)] public float TangentAngle { get; set; } Property Value float TangentWeight [YuzuMember] [TangerineKeyframeColor(13)] public float TangentWeight { get; set; } Property Value float"
  },
  "api/Lime.SplinePoint3D.html": {
    "href": "api/Lime.SplinePoint3D.html",
    "title": "Class SplinePoint3D | Citrus Engine",
    "keywords": "Class SplinePoint3D Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"3D/Spline Point 3D\")] [TangerineAllowedParentTypes(new Type[] { typeof(Spline3D) })] public class SplinePoint3D : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node SplinePoint3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors SplinePoint3D() public SplinePoint3D() Properties Interpolation [YuzuMember] public SplineInterpolation Interpolation { get; set; } Property Value SplineInterpolation Position [YuzuMember] public Vector3 Position { get; set; } Property Value Vector3 TangentA [YuzuMember] public Vector3 TangentA { get; set; } Property Value Vector3 TangentB [YuzuMember] public Vector3 TangentB { get; set; } Property Value Vector3 Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcGlobalPosition() public Vector3 CalcGlobalPosition() Returns Vector3"
  },
  "api/Lime.Splitter.SeparatorsRenderPresenterBase.SplitterLine.html": {
    "href": "api/Lime.Splitter.SeparatorsRenderPresenterBase.SplitterLine.html",
    "title": "Struct Splitter.SeparatorsRenderPresenterBase.SplitterLine | Citrus Engine",
    "keywords": "Struct Splitter.SeparatorsRenderPresenterBase.SplitterLine Namespace Lime Assembly Lime.dll public struct Splitter.SeparatorsRenderPresenterBase.SplitterLine Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields End public Vector2 End Field Value Vector2 Start public Vector2 Start Field Value Vector2 State public SplitterLineState State Field Value SplitterLineState"
  },
  "api/Lime.Splitter.SeparatorsRenderPresenterBase.html": {
    "href": "api/Lime.Splitter.SeparatorsRenderPresenterBase.html",
    "title": "Class Splitter.SeparatorsRenderPresenterBase | Citrus Engine",
    "keywords": "Class Splitter.SeparatorsRenderPresenterBase Namespace Lime Assembly Lime.dll protected abstract class Splitter.SeparatorsRenderPresenterBase : IPresenter Inheritance object Splitter.SeparatorsRenderPresenterBase Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetLines(Splitter, List<SplitterLine>) protected abstract void GetLines(Splitter splitter, List<Splitter.SeparatorsRenderPresenterBase.SplitterLine> lines) Parameters splitter Splitter lines List<Splitter.SeparatorsRenderPresenterBase.SplitterLine> GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.Splitter.html": {
    "href": "api/Lime.Splitter.html",
    "title": "Class Splitter | Citrus Engine",
    "keywords": "Class Splitter Namespace Lime Assembly Lime.dll [TangerineAllowedChildrenTypes(new Type[] { typeof(Node) })] public abstract class Splitter : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Splitter Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived HSplitter VSplitter Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Fields SeparatorActiveAreaWidth public float SeparatorActiveAreaWidth Field Value float SeparatorColor public Color4 SeparatorColor Field Value Color4 SeparatorDragColor public Color4 SeparatorDragColor Field Value Color4 SeparatorHighlightColor public Color4 SeparatorHighlightColor Field Value Color4 Properties IsLocked public bool IsLocked { get; set; } Property Value bool SeparatorWidth public abstract float SeparatorWidth { get; set; } Property Value float Stretches public List<float> Stretches { get; set; } Property Value List<float> Methods GetStretchesList(List<float>, params float[]) public static List<float> GetStretchesList(List<float> stretches, params float[] defaults) Parameters stretches List<float> defaults float[] Returns List<float> RaiseDragEnded() protected void RaiseDragEnded() RaiseDragStarted() protected void RaiseDragStarted() Events DragEnded public event Action DragEnded Event Type Action DragStarted public event Action DragStarted Event Type Action"
  },
  "api/Lime.SplitterLineState.html": {
    "href": "api/Lime.SplitterLineState.html",
    "title": "Enum SplitterLineState | Citrus Engine",
    "keywords": "Enum SplitterLineState Namespace Lime Assembly Lime.dll public enum SplitterLineState Fields Default = 0 Drag = 2 Highlight = 1"
  },
  "api/Lime.Sprite.Vertex.html": {
    "href": "api/Lime.Sprite.Vertex.html",
    "title": "Struct Sprite.Vertex | Citrus Engine",
    "keywords": "Struct Sprite.Vertex Namespace Lime Assembly Lime.dll public struct Sprite.Vertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Position [YuzuMember(\"0\")] public Vector2 Position Field Value Vector2 Uv [YuzuMember(\"1\")] public Vector2 Uv Field Value Vector2"
  },
  "api/Lime.Sprite.html": {
    "href": "api/Lime.Sprite.html",
    "title": "Class Sprite | Citrus Engine",
    "keywords": "Class Sprite Namespace Lime Assembly Lime.dll public sealed class Sprite : ISprite Inheritance object Sprite Implements ISprite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods SpriteExtensions.IsTransparentPixel(ISprite, int, int) SpriteExtensions.TransformUVCoordinatesToAtlasSpace(ISprite, Vector2) SpriteExtensions.TryTransformUVCoordinatesToAtlasSpace(ISprite, Vector2, out Vector2) Constructors Sprite(SpriteData) public Sprite(SpriteData data) Parameters data SpriteData Properties AtlasSize public Vector2 AtlasSize { get; } Property Value Vector2 AtlasTexture public ITexture AtlasTexture { get; } Property Value ITexture IndexCount public int IndexCount { get; } Property Value int IsRectangular public bool IsRectangular { get; } Property Value bool Size public Vector2 Size { get; } Property Value Vector2 VertexCount public int VertexCount { get; } Property Value int Methods GetIndex(int) public ushort GetIndex(int index) Parameters index int Returns ushort GetUV(int) public Vector2 GetUV(int index) Parameters index int Returns Vector2 GetVertex(int) public Vector2 GetVertex(int index) Parameters index int Returns Vector2 ValidateRectangular(Node, string) public bool ValidateRectangular(Node node, string useContext) Parameters node Node useContext string Returns bool"
  },
  "api/Lime.SpriteData.html": {
    "href": "api/Lime.SpriteData.html",
    "title": "Class SpriteData | Citrus Engine",
    "keywords": "Class SpriteData Namespace Lime Assembly Lime.dll public sealed class SpriteData Inheritance object SpriteData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields AtlasSize [YuzuMember] public Size AtlasSize Field Value Size AtlasTexture [YuzuMember] public ITexture AtlasTexture Field Value ITexture Indices [YuzuMember] public ushort[] Indices Field Value ushort[] IsRectangular [YuzuMember] public bool IsRectangular Field Value bool Size [YuzuMember] public Size Size Field Value Size Vertices [YuzuMember] public Sprite.Vertex[] Vertices Field Value Vertex[] Methods CreateRectangularFromTexture(ITexture) public static SpriteData CreateRectangularFromTexture(ITexture texture) Parameters texture ITexture Returns SpriteData CreateRectangularFromTexture(ITexture, IntRectangle) public static SpriteData CreateRectangularFromTexture(ITexture texture, IntRectangle rectangle) Parameters texture ITexture rectangle IntRectangle Returns SpriteData"
  },
  "api/Lime.SpriteExtensions.html": {
    "href": "api/Lime.SpriteExtensions.html",
    "title": "Class SpriteExtensions | Citrus Engine",
    "keywords": "Class SpriteExtensions Namespace Lime Assembly Lime.dll public static class SpriteExtensions Inheritance object SpriteExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsTransparentPixel(ISprite, int, int) public static bool IsTransparentPixel(this ISprite sprite, int x, int y) Parameters sprite ISprite x int y int Returns bool TransformUVCoordinatesToAtlasSpace(ISprite, Vector2) public static Vector2 TransformUVCoordinatesToAtlasSpace(this ISprite sprite, Vector2 uv) Parameters sprite ISprite uv Vector2 Returns Vector2 TryGetAtlasPoint(ISprite, Vector2, out Vector2) public static bool TryGetAtlasPoint(ISprite sprite, Vector2 p, out Vector2 result) Parameters sprite ISprite p Vector2 result Vector2 Returns bool TryTransformUVCoordinatesToAtlasSpace(ISprite, Vector2, out Vector2) public static bool TryTransformUVCoordinatesToAtlasSpace(this ISprite sprite, Vector2 uv, out Vector2 result) Parameters sprite ISprite uv Vector2 result Vector2 Returns bool"
  },
  "api/Lime.SpritePool.html": {
    "href": "api/Lime.SpritePool.html",
    "title": "Class SpritePool | Citrus Engine",
    "keywords": "Class SpritePool Namespace Lime Assembly Lime.dll public sealed class SpritePool Inheritance object SpritePool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static readonly SpritePool Instance Field Value SpritePool Properties NullSprite public ISprite NullSprite { get; } Property Value ISprite Methods GetSprite(string) public ISprite GetSprite(string path) Parameters path string Returns ISprite Reset() public void Reset()"
  },
  "api/Lime.StackLayout.html": {
    "href": "api/Lime.StackLayout.html",
    "title": "Class StackLayout | Citrus Engine",
    "keywords": "Class StackLayout Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Layout/Stack Layout\")] public class StackLayout : Layout, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout StackLayout Implements IDisposable IAnimable ILayout Inherited Members Layout.Owner Layout.DebugRectangles Layout.ConstraintsValid Layout.ArrangementValid Layout.RowAlignment Layout.ColumnAlignment Layout.Alignment Layout.IgnoreHidden Layout.InvalidateConstraintsAndArrangement() Layout.InvalidateArrangement() Layout.OnSizeChanged(Widget, Vector2) Layout.GetChildren() Layout.CalcAlignmentOffsetAndStride(HAlignment, float, int) Layout.CalcAlignmentOffsetAndStride(VAlignment, float, int) Layout.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors StackLayout() public StackLayout() Properties HorizontallySizeable [YuzuMember] public bool HorizontallySizeable { get; set; } Property Value bool UseScale [YuzuMember] public bool UseScale { get; set; } Property Value bool VerticallySizeable [YuzuMember] public bool VerticallySizeable { get; set; } Property Value bool Methods ArrangeChildren() public override void ArrangeChildren() MeasureSizeConstraints() public override void MeasureSizeConstraints()"
  },
  "api/Lime.StencilOp.html": {
    "href": "api/Lime.StencilOp.html",
    "title": "Enum StencilOp | Citrus Engine",
    "keywords": "Enum StencilOp Namespace Lime Assembly Lime.dll public enum StencilOp Fields Decrement = 5 DecrementSaturation = 6 Increment = 3 IncrementSaturation = 4 Invert = 7 Keep = 0 Replace = 2 Zero = 1"
  },
  "api/Lime.StencilState.html": {
    "href": "api/Lime.StencilState.html",
    "title": "Struct StencilState | Citrus Engine",
    "keywords": "Struct StencilState Namespace Lime Assembly Lime.dll public struct StencilState Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BackFaceComparison public CompareFunc BackFaceComparison Field Value CompareFunc BackFaceDepthFail public StencilOp BackFaceDepthFail Field Value StencilOp BackFaceFail public StencilOp BackFaceFail Field Value StencilOp BackFacePass public StencilOp BackFacePass Field Value StencilOp Default public static StencilState Default Field Value StencilState Enable public bool Enable Field Value bool FrontFaceComparison public CompareFunc FrontFaceComparison Field Value CompareFunc FrontFaceDepthFail public StencilOp FrontFaceDepthFail Field Value StencilOp FrontFaceFail public StencilOp FrontFaceFail Field Value StencilOp FrontFacePass public StencilOp FrontFacePass Field Value StencilOp ReadMask public byte ReadMask Field Value byte ReferenceValue public byte ReferenceValue Field Value byte WriteMask public byte WriteMask Field Value byte Properties Comparison public CompareFunc Comparison { set; } Property Value CompareFunc DepthFail public StencilOp DepthFail { set; } Property Value StencilOp Fail public StencilOp Fail { set; } Property Value StencilOp Pass public StencilOp Pass { set; } Property Value StencilOp"
  },
  "api/Lime.StringExtensions.html": {
    "href": "api/Lime.StringExtensions.html",
    "title": "Class StringExtensions | Citrus Engine",
    "keywords": "Class StringExtensions Namespace Lime Assembly Lime.dll public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Format(string, params object[]) Функция, аналогичная String.Format, но сделанная в виде функции-расширения public static string Format(this string format, params object[] args) Parameters format string args object[] Returns string HasJapaneseChineseSymbols(string, int, int) public static bool HasJapaneseChineseSymbols(this string text, int start = 0, int length = -1) Parameters text string start int length int Returns bool Localize(string) Локализует строку для текущего языка (с качестве ключа для словаря используется вся строка) public static string Localize(this string text) Parameters text string Returns string Localize(string, params object[]) Локализует строку для текущего языка (с качестве ключа для словаря используется вся строка) public static string Localize(this string format, params object[] args) Parameters format string args object[] Returns string"
  },
  "api/Lime.Submesh3D.html": {
    "href": "api/Lime.Submesh3D.html",
    "title": "Class Submesh3D | Citrus Engine",
    "keywords": "Class Submesh3D Namespace Lime Assembly Lime.dll public class Submesh3D Inheritance object Submesh3D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Submesh3D() public Submesh3D() Fields Material [YuzuMember] public IMaterial Material Field Value IMaterial Properties BoneBindPoses [YuzuMember] public List<Matrix44> BoneBindPoses { get; } Property Value List<Matrix44> BoneNames [YuzuMember] public List<string> BoneNames { get; } Property Value List<string> Bones public List<Node3D> Bones { get; } Property Value List<Node3D> Mesh [YuzuMember] public Mesh<Mesh3D.Vertex> Mesh { get; set; } Property Value Mesh<Mesh3D.Vertex> Owner public Mesh3D Owner { get; } Property Value Mesh3D Methods RebuildSkeleton() public void RebuildSkeleton()"
  },
  "api/Lime.Submesh3DCollection.html": {
    "href": "api/Lime.Submesh3DCollection.html",
    "title": "Class Submesh3DCollection | Citrus Engine",
    "keywords": "Class Submesh3DCollection Namespace Lime Assembly Lime.dll public class Submesh3DCollection : IList<Submesh3D>, ICollection<Submesh3D>, IEnumerable<Submesh3D>, IEnumerable Inheritance object Submesh3DCollection Implements IList<Submesh3D> ICollection<Submesh3D> IEnumerable<Submesh3D> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Constructors Submesh3DCollection() public Submesh3DCollection() Submesh3DCollection(Mesh3D) public Submesh3DCollection(Mesh3D owner) Parameters owner Mesh3D Properties Count Gets the number of elements contained in the ICollection<T>. public int Count { get; } Property Value int The number of elements contained in the ICollection<T>. IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. public bool IsReadOnly { get; } Property Value bool true if the ICollection<T> is read-only; otherwise, false. this[int] Gets or sets the element at the specified index. public Submesh3D this[int index] { get; set; } Parameters index int The zero-based index of the element to get or set. Property Value Submesh3D The element at the specified index. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The property is set and the IList<T> is read-only. Methods Add(Submesh3D) Adds an item to the ICollection<T>. public void Add(Submesh3D item) Parameters item Submesh3D The object to add to the ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. Clear() Removes all items from the ICollection<T>. public void Clear() Exceptions NotSupportedException The ICollection<T> is read-only. Contains(Submesh3D) Determines whether the ICollection<T> contains a specific value. public bool Contains(Submesh3D item) Parameters item Submesh3D The object to locate in the ICollection<T>. Returns bool true if item is found in the ICollection<T>; otherwise, false. CopyTo(Submesh3D[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. public void CopyTo(Submesh3D[] array, int arrayIndex) Parameters array Submesh3D[] The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. arrayIndex int The zero-based index in array at which copying begins. Exceptions ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array. GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<Submesh3D> GetEnumerator() Returns IEnumerator<Submesh3D> An enumerator that can be used to iterate through the collection. IndexOf(Submesh3D) Determines the index of a specific item in the IList<T>. public int IndexOf(Submesh3D item) Parameters item Submesh3D The object to locate in the IList<T>. Returns int The index of item if found in the list; otherwise, -1. Insert(int, Submesh3D) Inserts an item to the IList<T> at the specified index. public void Insert(int index, Submesh3D item) Parameters index int The zero-based index at which item should be inserted. item Submesh3D The object to insert into the IList<T>. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only. Remove(Submesh3D) Removes the first occurrence of a specific object from the ICollection<T>. public bool Remove(Submesh3D item) Parameters item Submesh3D The object to remove from the ICollection<T>. Returns bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. Exceptions NotSupportedException The ICollection<T> is read-only. RemoveAt(int) Removes the IList<T> item at the specified index. public void RemoveAt(int index) Parameters index int The zero-based index of the item to remove. Exceptions ArgumentOutOfRangeException index is not a valid index in the IList<T>. NotSupportedException The IList<T> is read-only."
  },
  "api/Lime.SurrogateBitmap.html": {
    "href": "api/Lime.SurrogateBitmap.html",
    "title": "Class SurrogateBitmap | Citrus Engine",
    "keywords": "Class SurrogateBitmap Namespace Lime Assembly Lime.dll Serves for Bitmap serialization only. You don't need to create instance of this class. public class SurrogateBitmap Inheritance object SurrogateBitmap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SerializationData Gets or sets a byte array with png-compressed image data. public byte[] SerializationData { get; set; } Property Value byte[] Operators implicit operator SurrogateBitmap(Bitmap) public static implicit operator SurrogateBitmap(Bitmap bitmap) Parameters bitmap Bitmap Returns SurrogateBitmap implicit operator Bitmap(SurrogateBitmap) public static implicit operator Bitmap(SurrogateBitmap surrogate) Parameters surrogate SurrogateBitmap Returns Bitmap"
  },
  "api/Lime.Tab.html": {
    "href": "api/Lime.Tab.html",
    "title": "Class Tab | Citrus Engine",
    "keywords": "Class Tab Namespace Lime Assembly Lime.dll [TangerineAllowedChildrenTypes(new Type[] { typeof(Node) })] public class Tab : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node Widget Tab Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Derived ThemedTab Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Tab() public Tab() Properties Active public bool Active { get; set; } Property Value bool Closable public bool Closable { get; set; } Property Value bool Text Get or sets a label upon the widget. For widgets which can not have a label returns null. public override string Text { get; set; } Property Value string Methods OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float Events Closing public event Action Closing Event Type Action"
  },
  "api/Lime.TabBar.ReorderEventArgs.html": {
    "href": "api/Lime.TabBar.ReorderEventArgs.html",
    "title": "Class TabBar.ReorderEventArgs | Citrus Engine",
    "keywords": "Class TabBar.ReorderEventArgs Namespace Lime Assembly Lime.dll public class TabBar.ReorderEventArgs Inheritance object TabBar.ReorderEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IndexFrom public int IndexFrom { get; set; } Property Value int IndexTo public int IndexTo { get; set; } Property Value int"
  },
  "api/Lime.TabBar.html": {
    "href": "api/Lime.TabBar.html",
    "title": "Class TabBar | Citrus Engine",
    "keywords": "Class TabBar Namespace Lime Assembly Lime.dll public class TabBar : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget TabBar Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedTabBar Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors TabBar() public TabBar() Properties AllowReordering public bool AllowReordering { get; set; } Property Value bool Methods ActivateTab(Tab) public void ActivateTab(Tab tab) Parameters tab Tab Events OnReordered Occurs when position of a tab changed and users has finished dragging. public event Action<TabBar.ReorderEventArgs> OnReordered Event Type Action<TabBar.ReorderEventArgs> OnReordering Occurs when position of a tab has changed. public event Action<TabBar.ReorderEventArgs> OnReordering Event Type Action<TabBar.ReorderEventArgs>"
  },
  "api/Lime.TabTraversable.html": {
    "href": "api/Lime.TabTraversable.html",
    "title": "Class TabTraversable | Citrus Engine",
    "keywords": "Class TabTraversable Namespace Lime Assembly Lime.dll Controls whether a widget could be traversed with Tab or Shift+Tab. public class TabTraversable Inheritance object TabTraversable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order public int Order { get; set; } Property Value int"
  },
  "api/Lime.TableLayout.html": {
    "href": "api/Lime.TableLayout.html",
    "title": "Class TableLayout | Citrus Engine",
    "keywords": "Class TableLayout Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Layout/Table Layout\")] public class TableLayout : Layout, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout TableLayout Implements IDisposable IAnimable ILayout Inherited Members Layout.Owner Layout.DebugRectangles Layout.ConstraintsValid Layout.ArrangementValid Layout.RowAlignment Layout.ColumnAlignment Layout.Alignment Layout.IgnoreHidden Layout.InvalidateConstraintsAndArrangement() Layout.InvalidateArrangement() Layout.OnSizeChanged(Widget, Vector2) Layout.GetChildren() Layout.CalcAlignmentOffsetAndStride(HAlignment, float, int) Layout.CalcAlignmentOffsetAndStride(VAlignment, float, int) Layout.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors TableLayout() public TableLayout() Properties ColumnCount [YuzuMember] [Validation.Range(0, 2147483647)] public int ColumnCount { get; set; } Property Value int ColumnSpacing [YuzuMember] [Validation.Range(0, 3.4028235E+38)] public float ColumnSpacing { get; set; } Property Value float Columns [YuzuMember] public AnimableList<TableLayoutColumn> Columns { get; } Property Value AnimableList<TableLayoutColumn> RowCount [YuzuMember] [Validation.Range(0, 2147483647)] public int RowCount { get; set; } Property Value int RowSpacing [YuzuMember] [Validation.Range(0, 3.4028235E+38)] public float RowSpacing { get; set; } Property Value float Rows [YuzuMember] public AnimableList<TableLayoutRow> Rows { get; } Property Value AnimableList<TableLayoutRow> Spacing public float Spacing { set; } Property Value float Methods ArrangeChildren() public override void ArrangeChildren() EffectiveLayoutCell(Widget) protected TableLayoutCell EffectiveLayoutCell(Widget widget) Parameters widget Widget Returns TableLayoutCell MeasureSizeConstraints() public override void MeasureSizeConstraints()"
  },
  "api/Lime.TableLayoutCell.html": {
    "href": "api/Lime.TableLayoutCell.html",
    "title": "Class TableLayoutCell | Citrus Engine",
    "keywords": "Class TableLayoutCell Namespace Lime Assembly Lime.dll [AllowedComponentOwnerTypes(new Type[] { typeof(Widget) })] [TangerineMenuPath(\"Layout/Table Layout Cell\")] public class TableLayoutCell : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent TableLayoutCell Implements IDisposable IAnimable Inherited Members NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors TableLayoutCell() public TableLayoutCell() Fields Default public static readonly TableLayoutCell Default Field Value TableLayoutCell Properties ColumnSpan [Validation.Range(1, 2147483647)] [YuzuMember] public int ColumnSpan { get; set; } Property Value int Owner public Widget Owner { get; set; } Property Value Widget RowSpan [Validation.Range(1, 2147483647)] [YuzuMember] public int RowSpan { get; set; } Property Value int Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node"
  },
  "api/Lime.TableLayoutColumn.html": {
    "href": "api/Lime.TableLayoutColumn.html",
    "title": "Class TableLayoutColumn | Citrus Engine",
    "keywords": "Class TableLayoutColumn Namespace Lime Assembly Lime.dll public class TableLayoutColumn : Animable, IAnimable Inheritance object Animable TableLayoutColumn Implements IAnimable Inherited Members Animable.Owner object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields Default public static readonly TableLayoutColumn Default Field Value TableLayoutColumn Properties Alignment [YuzuMember] public HAlignment Alignment { get; set; } Property Value HAlignment MaxWidth [Validation.Range(0, Infinity)] [YuzuMember] public float MaxWidth { get; set; } Property Value float MinWidth [Validation.Range(0, Infinity)] [YuzuMember] public float MinWidth { get; set; } Property Value float Stretch [Validation.Range(0, Infinity)] [YuzuMember] public float Stretch { get; set; } Property Value float Methods OnOwnerChanged(IAnimable) protected override void OnOwnerChanged(IAnimable previousOwner) Parameters previousOwner IAnimable"
  },
  "api/Lime.TableLayoutRow.html": {
    "href": "api/Lime.TableLayoutRow.html",
    "title": "Class TableLayoutRow | Citrus Engine",
    "keywords": "Class TableLayoutRow Namespace Lime Assembly Lime.dll public class TableLayoutRow : Animable, IAnimable Inheritance object Animable TableLayoutRow Implements IAnimable Inherited Members Animable.Owner object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields Default public static readonly TableLayoutRow Default Field Value TableLayoutRow Properties Alignment [YuzuMember] public VAlignment Alignment { get; set; } Property Value VAlignment MaxHeight [Validation.Range(0, Infinity)] [YuzuMember] public float MaxHeight { get; set; } Property Value float MinHeight [Validation.Range(0, Infinity)] [YuzuMember] public float MinHeight { get; set; } Property Value float Stretch [Validation.Range(0, Infinity)] [YuzuMember] public float Stretch { get; set; } Property Value float Methods OnOwnerChanged(IAnimable) protected override void OnOwnerChanged(IAnimable previousOwner) Parameters previousOwner IAnimable"
  },
  "api/Lime.TangerineAllowedChildrenTypes.html": {
    "href": "api/Lime.TangerineAllowedChildrenTypes.html",
    "title": "Class TangerineAllowedChildrenTypes | Citrus Engine",
    "keywords": "Class TangerineAllowedChildrenTypes Namespace Lime Assembly Lime.dll public sealed class TangerineAllowedChildrenTypes : Attribute Inheritance object Attribute TangerineAllowedChildrenTypes Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineAllowedChildrenTypes(params Type[]) public TangerineAllowedChildrenTypes(params Type[] types) Parameters types Type[] Fields Types public Type[] Types Field Value Type[]"
  },
  "api/Lime.TangerineAllowedParentTypes.html": {
    "href": "api/Lime.TangerineAllowedParentTypes.html",
    "title": "Class TangerineAllowedParentTypes | Citrus Engine",
    "keywords": "Class TangerineAllowedParentTypes Namespace Lime Assembly Lime.dll public sealed class TangerineAllowedParentTypes : Attribute Inheritance object Attribute TangerineAllowedParentTypes Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineAllowedParentTypes(params Type[]) public TangerineAllowedParentTypes(params Type[] types) Parameters types Type[] Fields Types public Type[] Types Field Value Type[]"
  },
  "api/Lime.TangerineBase64IconAttribute.html": {
    "href": "api/Lime.TangerineBase64IconAttribute.html",
    "title": "Class TangerineBase64IconAttribute | Citrus Engine",
    "keywords": "Class TangerineBase64IconAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class)] public sealed class TangerineBase64IconAttribute : TangerineCustomIconAttribute Inheritance object Attribute TangerineCustomIconAttribute TangerineBase64IconAttribute Inherited Members TangerineCustomIconAttribute.Priority Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineBase64IconAttribute(string, int) public TangerineBase64IconAttribute(string base64, int priority = 0) Parameters base64 string Base64 encoded PNG image. priority int Properties Base64 public string Base64 { get; } Property Value string"
  },
  "api/Lime.TangerineCreateButtonAttribute.html": {
    "href": "api/Lime.TangerineCreateButtonAttribute.html",
    "title": "Class TangerineCreateButtonAttribute | Citrus Engine",
    "keywords": "Class TangerineCreateButtonAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class TangerineCreateButtonAttribute : Attribute Inheritance object Attribute TangerineCreateButtonAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Name public string Name Field Value string"
  },
  "api/Lime.TangerineCustomIconAttribute.html": {
    "href": "api/Lime.TangerineCustomIconAttribute.html",
    "title": "Class TangerineCustomIconAttribute | Citrus Engine",
    "keywords": "Class TangerineCustomIconAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class)] public abstract class TangerineCustomIconAttribute : Attribute Inheritance object Attribute TangerineCustomIconAttribute Derived TangerineBase64IconAttribute TangerineIconGenerationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineCustomIconAttribute(int) protected TangerineCustomIconAttribute(int priority) Parameters priority int Properties Priority public int Priority { get; } Property Value int"
  },
  "api/Lime.TangerineDirectoryPropertyAttribute.html": {
    "href": "api/Lime.TangerineDirectoryPropertyAttribute.html",
    "title": "Class TangerineDirectoryPropertyAttribute | Citrus Engine",
    "keywords": "Class TangerineDirectoryPropertyAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineDirectoryPropertyAttribute : Attribute Inheritance object Attribute TangerineDirectoryPropertyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields IsRelativeToAssetDirectory public bool IsRelativeToAssetDirectory Field Value bool Properties ShowPrefix public bool ShowPrefix { get; set; } Property Value bool"
  },
  "api/Lime.TangerineDisplayNameAttribute.html": {
    "href": "api/Lime.TangerineDisplayNameAttribute.html",
    "title": "Class TangerineDisplayNameAttribute | Citrus Engine",
    "keywords": "Class TangerineDisplayNameAttribute Namespace Lime Assembly Lime.dll public sealed class TangerineDisplayNameAttribute : Attribute Inheritance object Attribute TangerineDisplayNameAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineDisplayNameAttribute(string) public TangerineDisplayNameAttribute(string displayName) Parameters displayName string Fields DisplayName public readonly string DisplayName Field Value string"
  },
  "api/Lime.TangerineDropDownListPropertyEditorAttribute.html": {
    "href": "api/Lime.TangerineDropDownListPropertyEditorAttribute.html",
    "title": "Class TangerineDropDownListPropertyEditorAttribute | Citrus Engine",
    "keywords": "Class TangerineDropDownListPropertyEditorAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineDropDownListPropertyEditorAttribute : Attribute Inheritance object Attribute TangerineDropDownListPropertyEditorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineDropDownListPropertyEditorAttribute(string) public TangerineDropDownListPropertyEditorAttribute(string enumerateItemsMethodName) Parameters enumerateItemsMethodName string Methods EnumerateItems(object) public IEnumerable<(string, object)> EnumerateItems(object @object) Parameters object object Returns IEnumerable<(string, object)>"
  },
  "api/Lime.TangerineFilePropertyAttribute.html": {
    "href": "api/Lime.TangerineFilePropertyAttribute.html",
    "title": "Class TangerineFilePropertyAttribute | Citrus Engine",
    "keywords": "Class TangerineFilePropertyAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineFilePropertyAttribute : Attribute Inheritance object Attribute TangerineFilePropertyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineFilePropertyAttribute(string[], string, string, bool, bool) public TangerineFilePropertyAttribute(string[] allowedFileTypes, string valueToStringMethodName = null, string stringToValueMethodName = null, bool trimExtension = true, bool isRelativeToAssetDirectory = true) Parameters allowedFileTypes string[] valueToStringMethodName string stringToValueMethodName string trimExtension bool isRelativeToAssetDirectory bool Fields AllowedFileTypes public readonly string[] AllowedFileTypes Field Value string[] IsRelativeToAssetDirectory public readonly bool IsRelativeToAssetDirectory Field Value bool TrimExtension public readonly bool TrimExtension Field Value bool Methods ConvertStringToValue(Type, string) public object ConvertStringToValue(Type type, string s) Parameters type Type s string Returns object ConvertValueToString(Type, object) public string ConvertValueToString(Type type, object value) Parameters type Type value object Returns string"
  },
  "api/Lime.TangerineFlags.html": {
    "href": "api/Lime.TangerineFlags.html",
    "title": "Enum TangerineFlags | Citrus Engine",
    "keywords": "Enum TangerineFlags Namespace Lime Assembly Lime.dll [Flags] public enum TangerineFlags Fields ColorBit1 = 256 ColorBit2 = 512 ColorBit3 = 1024 DisplayContent = 128 Hidden = 1 HiddenOnExposition = 32 Locked = 2 None = 0 SceneNode = 2048 SerializableMask = Hidden | Locked | Shown | ColorBit1 | ColorBit2 | ColorBit3 Shown = 4 Unused1 = 8 Unused2 = 16"
  },
  "api/Lime.TangerineGroupAttribute.html": {
    "href": "api/Lime.TangerineGroupAttribute.html",
    "title": "Class TangerineGroupAttribute | Citrus Engine",
    "keywords": "Class TangerineGroupAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineGroupAttribute : Attribute Inheritance object Attribute TangerineGroupAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineGroupAttribute(string) public TangerineGroupAttribute(string name) Parameters name string Fields Name public readonly string Name Field Value string"
  },
  "api/Lime.TangerineIconGenerationAttribute.html": {
    "href": "api/Lime.TangerineIconGenerationAttribute.html",
    "title": "Class TangerineIconGenerationAttribute | Citrus Engine",
    "keywords": "Class TangerineIconGenerationAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class)] public sealed class TangerineIconGenerationAttribute : TangerineCustomIconAttribute Inheritance object Attribute TangerineCustomIconAttribute TangerineIconGenerationAttribute Inherited Members TangerineCustomIconAttribute.Priority Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineIconGenerationAttribute(int) public TangerineIconGenerationAttribute(int priority = 0) Parameters priority int TangerineIconGenerationAttribute(string, int) public TangerineIconGenerationAttribute(string abbreviation, int priority = 0) Parameters abbreviation string priority int TangerineIconGenerationAttribute(string, string, int) public TangerineIconGenerationAttribute(string commonColor, string secondaryColor, int priority = 0) Parameters commonColor string secondaryColor string priority int TangerineIconGenerationAttribute(string, string, string, int) public TangerineIconGenerationAttribute(string abbreviation, string commonColor, string secondaryColor, int priority = 0) Parameters abbreviation string commonColor string secondaryColor string priority int Properties Abbreviation public string Abbreviation { get; } Property Value string CommonColor public Color4? CommonColor { get; } Property Value Color4? SecondaryColor public Color4? SecondaryColor { get; } Property Value Color4?"
  },
  "api/Lime.TangerineIgnoreAttribute.html": {
    "href": "api/Lime.TangerineIgnoreAttribute.html",
    "title": "Class TangerineIgnoreAttribute | Citrus Engine",
    "keywords": "Class TangerineIgnoreAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineIgnoreAttribute : Attribute Inheritance object Attribute TangerineIgnoreAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.TangerineIgnoreIfAttribute.html": {
    "href": "api/Lime.TangerineIgnoreIfAttribute.html",
    "title": "Class TangerineIgnoreIfAttribute | Citrus Engine",
    "keywords": "Class TangerineIgnoreIfAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineIgnoreIfAttribute : Attribute Inheritance object Attribute TangerineIgnoreIfAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineIgnoreIfAttribute(string) public TangerineIgnoreIfAttribute(string method) Parameters method string Fields Method public readonly string Method Field Value string Methods Check(object) public bool Check(object obj) Parameters obj object Returns bool"
  },
  "api/Lime.TangerineInspectAttribute.html": {
    "href": "api/Lime.TangerineInspectAttribute.html",
    "title": "Class TangerineInspectAttribute | Citrus Engine",
    "keywords": "Class TangerineInspectAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineInspectAttribute : Attribute Inheritance object Attribute TangerineInspectAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.TangerineKeyframeColorAttribute.html": {
    "href": "api/Lime.TangerineKeyframeColorAttribute.html",
    "title": "Class TangerineKeyframeColorAttribute | Citrus Engine",
    "keywords": "Class TangerineKeyframeColorAttribute Namespace Lime Assembly Lime.dll public sealed class TangerineKeyframeColorAttribute : Attribute Inheritance object Attribute TangerineKeyframeColorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineKeyframeColorAttribute(int) public TangerineKeyframeColorAttribute(int colorIndex) Parameters colorIndex int Fields ColorIndex public int ColorIndex Field Value int"
  },
  "api/Lime.TangerineLockChildrenNodeList.html": {
    "href": "api/Lime.TangerineLockChildrenNodeList.html",
    "title": "Class TangerineLockChildrenNodeList | Citrus Engine",
    "keywords": "Class TangerineLockChildrenNodeList Namespace Lime Assembly Lime.dll public sealed class TangerineLockChildrenNodeList : Attribute Inheritance object Attribute TangerineLockChildrenNodeList Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.TangerineMenuPathAttribute.html": {
    "href": "api/Lime.TangerineMenuPathAttribute.html",
    "title": "Class TangerineMenuPathAttribute | Citrus Engine",
    "keywords": "Class TangerineMenuPathAttribute Namespace Lime Assembly Lime.dll '/' Separated path to either component or node create command in menu. If path ends with '/' the command Text will be taken as is and last part of path will be treated as last nested menu for the command. Otherwise last part of the path will be assigned to command.Text. Tangerine.Core.MenuExtensions.InsertCommandAlongPath [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public sealed class TangerineMenuPathAttribute : Attribute Inheritance object Attribute TangerineMenuPathAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineMenuPathAttribute(string) '/' Separated path to either component or node create command in menu. If path ends with '/' the command Text will be taken as is and last part of path will be treated as last nested menu for the command. Otherwise last part of the path will be assigned to command.Text. Tangerine.Core.MenuExtensions.InsertCommandAlongPath public TangerineMenuPathAttribute(string path) Parameters path string Fields Path public string Path Field Value string"
  },
  "api/Lime.TangerineNodeBuilderAttribute.html": {
    "href": "api/Lime.TangerineNodeBuilderAttribute.html",
    "title": "Class TangerineNodeBuilderAttribute | Citrus Engine",
    "keywords": "Class TangerineNodeBuilderAttribute Namespace Lime Assembly Lime.dll public sealed class TangerineNodeBuilderAttribute : Attribute Inheritance object Attribute TangerineNodeBuilderAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineNodeBuilderAttribute(string) public TangerineNodeBuilderAttribute(string methodName) Parameters methodName string Properties MethodName public string MethodName { get; } Property Value string"
  },
  "api/Lime.TangerineNumericEditBoxStepAttribute.html": {
    "href": "api/Lime.TangerineNumericEditBoxStepAttribute.html",
    "title": "Class TangerineNumericEditBoxStepAttribute | Citrus Engine",
    "keywords": "Class TangerineNumericEditBoxStepAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class TangerineNumericEditBoxStepAttribute : Attribute Inheritance object Attribute TangerineNumericEditBoxStepAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineNumericEditBoxStepAttribute(float) public TangerineNumericEditBoxStepAttribute(float step) Parameters step float Fields Step public readonly float Step Field Value float Methods SetProperty(object) public void SetProperty(object editBox) Parameters editBox object"
  },
  "api/Lime.TangerineOnPropertySetAttribute.html": {
    "href": "api/Lime.TangerineOnPropertySetAttribute.html",
    "title": "Class TangerineOnPropertySetAttribute | Citrus Engine",
    "keywords": "Class TangerineOnPropertySetAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class TangerineOnPropertySetAttribute : Attribute Inheritance object Attribute TangerineOnPropertySetAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineOnPropertySetAttribute(string) public TangerineOnPropertySetAttribute(string methodName) Parameters methodName string Methods Invoke(object) public void Invoke(object o) Parameters o object"
  },
  "api/Lime.TangerinePropertyDefaultValueAttribute.html": {
    "href": "api/Lime.TangerinePropertyDefaultValueAttribute.html",
    "title": "Class TangerinePropertyDefaultValueAttribute | Citrus Engine",
    "keywords": "Class TangerinePropertyDefaultValueAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class TangerinePropertyDefaultValueAttribute : Attribute Inheritance object Attribute TangerinePropertyDefaultValueAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TangerinePropertyDefaultValueAttribute(Type, string) public TangerinePropertyDefaultValueAttribute(Type type, string method) Parameters type Type method string Methods GetValue() public object GetValue() Returns object"
  },
  "api/Lime.TangerineReadOnlyAttribute.html": {
    "href": "api/Lime.TangerineReadOnlyAttribute.html",
    "title": "Class TangerineReadOnlyAttribute | Citrus Engine",
    "keywords": "Class TangerineReadOnlyAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineReadOnlyAttribute : Attribute Inheritance object Attribute TangerineReadOnlyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.TangerineReadOnlyPropertiesAttribute.html": {
    "href": "api/Lime.TangerineReadOnlyPropertiesAttribute.html",
    "title": "Class TangerineReadOnlyPropertiesAttribute | Citrus Engine",
    "keywords": "Class TangerineReadOnlyPropertiesAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public sealed class TangerineReadOnlyPropertiesAttribute : Attribute Inheritance object Attribute TangerineReadOnlyPropertiesAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineReadOnlyPropertiesAttribute(params string[]) public TangerineReadOnlyPropertiesAttribute(params string[] propertyNames) Parameters propertyNames string[] Methods Contains(string) public bool Contains(string propertyName) Parameters propertyName string Returns bool"
  },
  "api/Lime.TangerineRegisterComponentAttribute.html": {
    "href": "api/Lime.TangerineRegisterComponentAttribute.html",
    "title": "Class TangerineRegisterComponentAttribute | Citrus Engine",
    "keywords": "Class TangerineRegisterComponentAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public sealed class TangerineRegisterComponentAttribute : Attribute Inheritance object Attribute TangerineRegisterComponentAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.TangerineRegisterNodeAttribute.html": {
    "href": "api/Lime.TangerineRegisterNodeAttribute.html",
    "title": "Class TangerineRegisterNodeAttribute | Citrus Engine",
    "keywords": "Class TangerineRegisterNodeAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public sealed class TangerineRegisterNodeAttribute : Attribute Inheritance object Attribute TangerineRegisterNodeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields CanBeRoot public bool CanBeRoot Field Value bool Order public int Order Field Value int"
  },
  "api/Lime.TangerineStaticPropertyAttribute.html": {
    "href": "api/Lime.TangerineStaticPropertyAttribute.html",
    "title": "Class TangerineStaticPropertyAttribute | Citrus Engine",
    "keywords": "Class TangerineStaticPropertyAttribute Namespace Lime Assembly Lime.dll Denotes a property which can not be animated with Tangerine. [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public sealed class TangerineStaticPropertyAttribute : Attribute Inheritance object Attribute TangerineStaticPropertyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.TangerineToStringAttribute.html": {
    "href": "api/Lime.TangerineToStringAttribute.html",
    "title": "Class TangerineToStringAttribute | Citrus Engine",
    "keywords": "Class TangerineToStringAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct, AllowMultiple = false)] public abstract class TangerineToStringAttribute : Attribute Inheritance object Attribute TangerineToStringAttribute Derived TangerineToStringUsingMethodAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NullText protected const string NullText = \"<null>\" Field Value string Methods GetText(object) public virtual string GetText(object obj) Parameters obj object Returns string"
  },
  "api/Lime.TangerineToStringUsingMethodAttribute.html": {
    "href": "api/Lime.TangerineToStringUsingMethodAttribute.html",
    "title": "Class TangerineToStringUsingMethodAttribute | Citrus Engine",
    "keywords": "Class TangerineToStringUsingMethodAttribute Namespace Lime Assembly Lime.dll public class TangerineToStringUsingMethodAttribute : TangerineToStringAttribute Inheritance object Attribute TangerineToStringAttribute TangerineToStringUsingMethodAttribute Inherited Members TangerineToStringAttribute.NullText Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineToStringUsingMethodAttribute(string) public TangerineToStringUsingMethodAttribute(string methodName) Parameters methodName string Methods GetText(object) public override string GetText(object obj) Parameters obj object Returns string"
  },
  "api/Lime.TangerineTooltipAttribute.html": {
    "href": "api/Lime.TangerineTooltipAttribute.html",
    "title": "Class TangerineTooltipAttribute | Citrus Engine",
    "keywords": "Class TangerineTooltipAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.All, AllowMultiple = false, Inherited = false)] public sealed class TangerineTooltipAttribute : Attribute Inheritance object Attribute TangerineTooltipAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineTooltipAttribute(string) public TangerineTooltipAttribute(string text) Parameters text string Fields Text public readonly string Text Field Value string"
  },
  "api/Lime.TangerineVisualHintGroupAttribute.html": {
    "href": "api/Lime.TangerineVisualHintGroupAttribute.html",
    "title": "Class TangerineVisualHintGroupAttribute | Citrus Engine",
    "keywords": "Class TangerineVisualHintGroupAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public sealed class TangerineVisualHintGroupAttribute : Attribute Inheritance object Attribute TangerineVisualHintGroupAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TangerineVisualHintGroupAttribute(string, string) public TangerineVisualHintGroupAttribute(string group, string aliasTypeName = null) Parameters group string aliasTypeName string Fields AliasTypeName public readonly string AliasTypeName Field Value string Group public readonly string Group Field Value string"
  },
  "api/Lime.TapGesture.html": {
    "href": "api/Lime.TapGesture.html",
    "title": "Class TapGesture | Citrus Engine",
    "keywords": "Class TapGesture Namespace Lime Assembly Lime.dll public abstract class TapGesture : Gesture Inheritance object Gesture TapGesture Derived ClickGesture LongTapGesture Inherited Members Gesture.Owner Gesture.Input object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TapGesture(Action, TapGestureOptions) public TapGesture(Action onRecognized, TapGestureOptions options) Parameters onRecognized Action options TapGestureOptions Fields Threshold public static float Threshold Field Value float Properties ButtonIndex public int ButtonIndex { get; } Property Value int MousePressPosition public Vector2 MousePressPosition { get; } Property Value Vector2 Methods OnCancel(Gesture) protected override void OnCancel(Gesture sender) Parameters sender Gesture OnUpdate() protected override bool OnUpdate() Returns bool WasBegan() public bool WasBegan() Returns bool WasCanceled() public bool WasCanceled() Returns bool WasRecognized() public bool WasRecognized() Returns bool WasRecognizedOrCanceled() public bool WasRecognizedOrCanceled() Returns bool Events Began Occurs if a user has touched upon the widget. If the widget lies within a scrollable panel, the began event might be deferred in order to give the priority to drag gesture. public event Action Began Event Type Action Canceled Occurs if click was canceled by drag gesture. public event Action Canceled Event Type Action Recognized Occurs when the gesture is fully recognized. public event Action Recognized Event Type Action"
  },
  "api/Lime.TapGestureOptions.html": {
    "href": "api/Lime.TapGestureOptions.html",
    "title": "Struct TapGestureOptions | Citrus Engine",
    "keywords": "Struct TapGestureOptions Namespace Lime Assembly Lime.dll public struct TapGestureOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ButtonIndex public int ButtonIndex Field Value int CanRecognizeByTapDuration public bool CanRecognizeByTapDuration Field Value bool MinTapDuration public float MinTapDuration Field Value float"
  },
  "api/Lime.Task.html": {
    "href": "api/Lime.Task.html",
    "title": "Class Task | Citrus Engine",
    "keywords": "Class Task Namespace Lime Assembly Lime.dll Sequence of actions, based on IEnumerators. public class Task : IDisposable Inheritance object Task Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Task(IEnumerator<object>, object) public Task(IEnumerator<object> e, object tag = null) Parameters e IEnumerator<object> tag object Properties Completed public bool Completed { get; } Property Value bool Current public static Task Current { get; } Property Value Task Delta Time delta since last Update. public float Delta { get; } Property Value float InitialEnumeratorType public Type InitialEnumeratorType { get; } Property Value Type Tag public object Tag { get; set; } Property Value object Methods Advance(float) Advances task to the next step of enumerator. public void Advance(float delta) Parameters delta float Delay(Func<bool>, Action) Wait while predicate is true before executing an action. public static IEnumerator<object> Delay(Func<bool> predicate, Action action) Parameters predicate Func<bool> action Action Returns IEnumerator<object> Delay(float, Action) public static IEnumerator<object> Delay(float time, Action action) Parameters time float action Action Returns IEnumerator<object> Dispose() Exits from all IEnumerators. public void Dispose() ExecuteAsync(Action, Action) Invokes asyncAction asynchronously using Run(Action) and yields null until task is either completed, canceled or faulted. After that executes finishAction if it's not null. public static IEnumerator<object> ExecuteAsync(Action asyncAction, Action finishAction = null) Parameters asyncAction Action Action to execute asynchronously. finishAction Action Action to execute afterasyncAction is done. Returns IEnumerator<object> An enumerator you can add to Tasks. LinearMotion(float, float, float) Returns a sequence of numbers, linear interpolated in specified time period. Advances by using Current.Delta. public static IEnumerable<float> LinearMotion(float timePeriod, float from, float to) Parameters timePeriod float from float to float Returns IEnumerable<float> Repeat(Func<bool>) public static IEnumerator<object> Repeat(Func<bool> f) Parameters f Func<bool> Returns IEnumerator<object> Sequence(params IEnumerator<object>[]) Creates a new Task executing all provided enumerators in sequential order public static Task Sequence(params IEnumerator<object>[] args) Parameters args IEnumerator<object>[] Returns Task SinMotion(float, float, float) Returns a sequence of numbers, interpolated as sine in specified time period. Advances by using Current.Delta. public static IEnumerable<float> SinMotion(float timePeriod, float from, float to) Parameters timePeriod float from float to float Returns IEnumerable<float> SqrtMotion(float, float, float) Returns a sequence of numbers, interpolated as square root in specified time period. Advances by using Current.Delta. public static IEnumerable<float> SqrtMotion(float timePeriod, float from, float to) Parameters timePeriod float from float to float Returns IEnumerable<float> ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WaitForAnimation(Animation) Proceeds while specified node is running animation. public static WaitPredicate WaitForAnimation(Animation animation) Parameters animation Animation Returns WaitPredicate WaitForInput() Proceeds while there is no keystroke on the current window. public static WaitPredicate WaitForInput() Returns WaitPredicate WaitWhile(Func<bool>) Proceeds while specified predicate returns true. public static WaitPredicate WaitWhile(Func<bool> predicate) Parameters predicate Func<bool> Returns WaitPredicate WaitWhile(Func<float, bool>) Proceeds while specified predicate returns true. Argument of the predicate is time, that accumulates on Advance. public static WaitPredicate WaitWhile(Func<float, bool> timePredicate) Parameters timePredicate Func<float, bool> Returns WaitPredicate"
  },
  "api/Lime.TaskList.html": {
    "href": "api/Lime.TaskList.html",
    "title": "Class TaskList | Citrus Engine",
    "keywords": "Class TaskList Namespace Lime Assembly Lime.dll public class TaskList : List<Task>, IList<Task>, ICollection<Task>, IReadOnlyList<Task>, IReadOnlyCollection<Task>, IEnumerable<Task>, IList, ICollection, IEnumerable Inheritance object List<Task> TaskList Implements IList<Task> ICollection<Task> IReadOnlyList<Task> IReadOnlyCollection<Task> IEnumerable<Task> IList ICollection IEnumerable Inherited Members List<Task>.Add(Task) List<Task>.AddRange(IEnumerable<Task>) List<Task>.AsReadOnly() List<Task>.BinarySearch(int, int, Task, IComparer<Task>) List<Task>.BinarySearch(Task) List<Task>.BinarySearch(Task, IComparer<Task>) List<Task>.Clear() List<Task>.Contains(Task) List<Task>.ConvertAll<TOutput>(Converter<Task, TOutput>) List<Task>.CopyTo(int, Task[], int, int) List<Task>.CopyTo(Task[]) List<Task>.CopyTo(Task[], int) List<Task>.EnsureCapacity(int) List<Task>.Exists(Predicate<Task>) List<Task>.Find(Predicate<Task>) List<Task>.FindAll(Predicate<Task>) List<Task>.FindIndex(int, int, Predicate<Task>) List<Task>.FindIndex(int, Predicate<Task>) List<Task>.FindIndex(Predicate<Task>) List<Task>.FindLast(Predicate<Task>) List<Task>.FindLastIndex(int, int, Predicate<Task>) List<Task>.FindLastIndex(int, Predicate<Task>) List<Task>.FindLastIndex(Predicate<Task>) List<Task>.ForEach(Action<Task>) List<Task>.GetEnumerator() List<Task>.GetRange(int, int) List<Task>.IndexOf(Task) List<Task>.IndexOf(Task, int) List<Task>.IndexOf(Task, int, int) List<Task>.Insert(int, Task) List<Task>.InsertRange(int, IEnumerable<Task>) List<Task>.LastIndexOf(Task) List<Task>.LastIndexOf(Task, int) List<Task>.LastIndexOf(Task, int, int) List<Task>.Remove(Task) List<Task>.RemoveAll(Predicate<Task>) List<Task>.RemoveAt(int) List<Task>.RemoveRange(int, int) List<Task>.Reverse() List<Task>.Reverse(int, int) List<Task>.Slice(int, int) List<Task>.Sort() List<Task>.Sort(IComparer<Task>) List<Task>.Sort(Comparison<Task>) List<Task>.Sort(int, int, IComparer<Task>) List<Task>.ToArray() List<Task>.TrimExcess() List<Task>.TrueForAll(Predicate<Task>) List<Task>.Capacity List<Task>.Count List<Task>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Toolbox.RemoveTail<T>(List<T>, int) Constructors TaskList() public TaskList() TaskList(Node) public TaskList(Node node) Parameters node Node Properties Current Currently processing TaskList. public static TaskList Current { get; } Property Value TaskList Node Gets the widget this instance belongs to. public Node Node { get; } Property Value Node Methods Add(IEnumerator<object>, object) Adds task to the end of this list. public Task Add(IEnumerator<object> e, object tag = null) Parameters e IEnumerator<object> tag object Returns Task Add(Func<IEnumerator<object>>, object) Adds task to the end of this list. public Task Add(Func<IEnumerator<object>> e, object tag = null) Parameters e Func<IEnumerator<object>> tag object Returns Task AddConcurrent(params IEnumerator<object>[]) public List<Task> AddConcurrent(params IEnumerator<object>[] args) Parameters args IEnumerator<object>[] Returns List<Task> AddLoop(Action, object) public Task AddLoop(Action action, object tag = null) Parameters action Action tag object Returns Task AddSequence(params IEnumerator<object>[]) public Task AddSequence(params IEnumerator<object>[] args) Parameters args IEnumerator<object>[] Returns Task AnyTagged(object) public bool AnyTagged(object tag) Parameters tag object Returns bool Stop() Stops all tasks. public void Stop() Stop(Predicate<Task>) Stops all tasks that match the conditions defined by the specified predicate. public void Stop(Predicate<Task> match) Parameters match Predicate<Task> StopByTag(object) Stops all tasks with specified tag (null is also a tag). public void StopByTag(object tag) Parameters tag object Update(float) Advances tasks by provided delta and removes completed ones. public void Update(float delta) Parameters delta float Time delta since last Update."
  },
  "api/Lime.TaskResult-1.html": {
    "href": "api/Lime.TaskResult-1.html",
    "title": "Class TaskResult<T> | Citrus Engine",
    "keywords": "Class TaskResult<T> Namespace Lime Assembly Lime.dll public class TaskResult<T> Type Parameters T Inheritance object TaskResult<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Value public T Value Field Value T"
  },
  "api/Lime.TaskResult-2.html": {
    "href": "api/Lime.TaskResult-2.html",
    "title": "Class TaskResult<T1, T2> | Citrus Engine",
    "keywords": "Class TaskResult<T1, T2> Namespace Lime Assembly Lime.dll public class TaskResult<T1, T2> Type Parameters T1 T2 Inheritance object TaskResult<T1, T2> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Value1 public T1 Value1 Field Value T1 Value2 public T2 Value2 Field Value T2"
  },
  "api/Lime.TasksBehavior.html": {
    "href": "api/Lime.TasksBehavior.html",
    "title": "Class TasksBehavior | Citrus Engine",
    "keywords": "Class TasksBehavior Namespace Lime Assembly Lime.dll public class TasksBehavior : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior TasksBehavior Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.LateUpdate(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Order public override int Order { get; } Property Value int Tasks public TaskList Tasks { get; } Property Value TaskList Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public override void Dispose() OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.TextOverflowMode.html": {
    "href": "api/Lime.TextOverflowMode.html",
    "title": "Enum TextOverflowMode | Citrus Engine",
    "keywords": "Enum TextOverflowMode Namespace Lime Assembly Lime.dll Types of text overflow handling. public enum TextOverflowMode Fields Default = 0 Carry overflowed text on the next line. Ellipsis = 2 Add ellipsis (\"...\") in place of overflowed part of text. Ignore = 3 Ignore text overflowing. Minify = 1 Reduce font size until text is not overflowing."
  },
  "api/Lime.TextProcessorDelegate.html": {
    "href": "api/Lime.TextProcessorDelegate.html",
    "title": "Delegate TextProcessorDelegate | Citrus Engine",
    "keywords": "Delegate TextProcessorDelegate Namespace Lime Assembly Lime.dll public delegate void TextProcessorDelegate(ref string text, Widget widget) Parameters text string widget Widget"
  },
  "api/Lime.TextRenderObject.html": {
    "href": "api/Lime.TextRenderObject.html",
    "title": "Class TextRenderObject | Citrus Engine",
    "keywords": "Class TextRenderObject Namespace Lime Assembly Lime.dll public class TextRenderObject : WidgetRenderObject Inheritance object RenderObject WidgetRenderObject TextRenderObject Inherited Members WidgetRenderObject.LocalToWorldTransform WidgetRenderObject.Blending WidgetRenderObject.Shader WidgetRenderObject.CaptureRenderState(Widget) WidgetRenderObject.PrepareRenderState() RenderObject.Release() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Color public Color4 Color Field Value Color4 GlyphList public GlyphList GlyphList Field Value GlyphList GradientMapIndex public int GradientMapIndex Field Value int RenderMode public TextRenderingMode RenderMode Field Value TextRenderingMode Methods OnRelease() protected override void OnRelease() Render() public override void Render()"
  },
  "api/Lime.TextRenderingMode.html": {
    "href": "api/Lime.TextRenderingMode.html",
    "title": "Enum TextRenderingMode | Citrus Engine",
    "keywords": "Enum TextRenderingMode Namespace Lime Assembly Lime.dll public enum TextRenderingMode Fields Common = 0 OnePassWithOutline = 2 OnePassWithoutOutline = 1 TwoPasses = 3"
  },
  "api/Lime.TextStyle.ImageUsageEnum.html": {
    "href": "api/Lime.TextStyle.ImageUsageEnum.html",
    "title": "Enum TextStyle.ImageUsageEnum | Citrus Engine",
    "keywords": "Enum TextStyle.ImageUsageEnum Namespace Lime Assembly Lime.dll public enum TextStyle.ImageUsageEnum Fields Bullet = 0 Overlay = 1"
  },
  "api/Lime.TextStyle.html": {
    "href": "api/Lime.TextStyle.html",
    "title": "Class TextStyle | Citrus Engine",
    "keywords": "Class TextStyle Namespace Lime Assembly Lime.dll [TangerineAllowedParentTypes(new Type[] { typeof(RichText) })] public class TextStyle : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node TextStyle Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.PartialHitTest(ref HitTestArgs) Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.RecalcGloballyFrozen() Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors TextStyle() public TextStyle() Fields Default public static TextStyle Default Field Value TextStyle Properties Bold [YuzuMember] [TangerineKeyframeColor(2)] public bool Bold { get; set; } Property Value bool CastShadow [YuzuMember] [TangerineKeyframeColor(3)] public bool CastShadow { get; set; } Property Value bool Font [YuzuMember] [TangerineKeyframeColor(30)] public SerializableFont Font { get; set; } Property Value SerializableFont GradientMapIndex [YuzuMember] public int GradientMapIndex { get; set; } Property Value int ImageSize [YuzuMember] [TangerineKeyframeColor(29)] public Vector2 ImageSize { get; set; } Property Value Vector2 ImageSprite [YuzuMember] [TangerineKeyframeColor(28)] public ISprite ImageSprite { get; set; } Property Value ISprite ImageUsage [YuzuMember] public TextStyle.ImageUsageEnum ImageUsage { get; set; } Property Value TextStyle.ImageUsageEnum LetterSpacing [YuzuMember] [TangerineKeyframeColor(7)] public float LetterSpacing { get; set; } Property Value float ShadowColor [YuzuMember] [TangerineKeyframeColor(6)] public Color4 ShadowColor { get; set; } Property Value Color4 ShadowOffset [YuzuMember] [TangerineKeyframeColor(4)] public Vector2 ShadowOffset { get; set; } Property Value Vector2 Size [YuzuMember] [TangerineKeyframeColor(31)] [Validation.Range(0, 3.4028235E+38)] public float Size { get; set; } Property Value float SpaceAfter [YuzuMember] [TangerineKeyframeColor(1)] public float SpaceAfter { get; set; } Property Value float TextColor [YuzuMember] [TangerineKeyframeColor(5)] public Color4 TextColor { get; set; } Property Value Color4 Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain OnParentChanged(Node) Occurs when Parent property changes. protected override void OnParentChanged(Node oldParent) Parameters oldParent Node"
  },
  "api/Lime.Texture2D.TextureMissingDelegate.html": {
    "href": "api/Lime.Texture2D.TextureMissingDelegate.html",
    "title": "Delegate Texture2D.TextureMissingDelegate | Citrus Engine",
    "keywords": "Delegate Texture2D.TextureMissingDelegate Namespace Lime Assembly Lime.dll public delegate void Texture2D.TextureMissingDelegate(string path) Parameters path string"
  },
  "api/Lime.Texture2D.html": {
    "href": "api/Lime.Texture2D.html",
    "title": "Class Texture2D | Citrus Engine",
    "keywords": "Class Texture2D Namespace Lime Assembly Lime.dll Represents 2D texture public class Texture2D : CommonTexture, ITexture, IDisposable Inheritance object CommonTexture Texture2D Implements ITexture IDisposable Inherited Members CommonTexture.TotalMemoryUsed CommonTexture.TotalMemoryUsedMb CommonTexture.IsDisposed CommonTexture.MemoryUsed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ImageSize public Size ImageSize { get; protected set; } Property Value Size IsStubTexture public bool IsStubTexture { get; } Property Value bool OpacityMask public OpacityMask OpacityMask { get; } Property Value OpacityMask TextureParams public TextureParams TextureParams { get; set; } Property Value TextureParams UnderlyingTexture public ITexture UnderlyingTexture { get; } Property Value ITexture Methods Dispose() public override void Dispose() ~Texture2D() protected ~Texture2D() GetPixels() public virtual Color4[] GetPixels() Returns Color4[] GetPlatformTexture() public virtual IPlatformTexture2D GetPlatformTexture() Returns IPlatformTexture2D IsTransparentPixel(int, int) Checks pixel transparency at given coordinates. public bool IsTransparentPixel(int x, int y) Parameters x int x-coordinate of pixel. y int y-coordinate of pixel. Returns bool LoadImage(Bitmap) public void LoadImage(Bitmap bitmap) Parameters bitmap Bitmap LoadImage(Color4[], int, int) Create texture from pixel array public void LoadImage(Color4[] pixels, int width, int height) Parameters pixels Color4[] width int height int LoadImage(byte[]) public void LoadImage(byte[] data) Parameters data byte[] LoadImage(Stream) public void LoadImage(Stream stream) Parameters stream Stream LoadImage(string, TextureMissingDelegate) public void LoadImage(string path, Texture2D.TextureMissingDelegate onTextureMissing = null) Parameters path string onTextureMissing Texture2D.TextureMissingDelegate LoadSubImage(Color4[], int, int, int, int) Load subtexture from pixel array Warning: this method doesn't support automatic texture reload after restoring graphics context public void LoadSubImage(Color4[] pixels, int x, int y, int width, int height) Parameters pixels Color4[] x int y int width int height int MaybeDiscardUnderPressure() public override void MaybeDiscardUnderPressure() RestoreRenderTarget() Restores default render target(backbuffer). public void RestoreRenderTarget() SetAsRenderTarget() Sets texture as a render target public void SetAsRenderTarget() TransformUVCoordinatesToAtlasSpace(ref Vector2) public void TransformUVCoordinatesToAtlasSpace(ref Vector2 uv) Parameters uv Vector2 TryLocateTextureInCurrentBundle(string, out string) public static bool TryLocateTextureInCurrentBundle(string pathWithoutExtension, out string completePath) Parameters pathWithoutExtension string completePath string Returns bool"
  },
  "api/Lime.TextureBlending.html": {
    "href": "api/Lime.TextureBlending.html",
    "title": "Enum TextureBlending | Citrus Engine",
    "keywords": "Enum TextureBlending Namespace Lime Assembly Lime.dll public enum TextureBlending Fields CutOut = 2 Multiply = 1 None = 0"
  },
  "api/Lime.TextureFilter.html": {
    "href": "api/Lime.TextureFilter.html",
    "title": "Enum TextureFilter | Citrus Engine",
    "keywords": "Enum TextureFilter Namespace Lime Assembly Lime.dll public enum TextureFilter Fields Linear = 0 Nearest = 1"
  },
  "api/Lime.TextureMipmapMode.html": {
    "href": "api/Lime.TextureMipmapMode.html",
    "title": "Enum TextureMipmapMode | Citrus Engine",
    "keywords": "Enum TextureMipmapMode Namespace Lime Assembly Lime.dll public enum TextureMipmapMode Fields Linear = 0 Nearest = 1"
  },
  "api/Lime.TextureParams.html": {
    "href": "api/Lime.TextureParams.html",
    "title": "Class TextureParams | Citrus Engine",
    "keywords": "Class TextureParams Namespace Lime Assembly Lime.dll public sealed class TextureParams : IEquatable<TextureParams> Inheritance object TextureParams Implements IEquatable<TextureParams> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields Default public static TextureParams Default Field Value TextureParams Properties MagFilter [YuzuMember] public TextureFilter MagFilter { get; set; } Property Value TextureFilter MinFilter [YuzuMember] public TextureFilter MinFilter { get; set; } Property Value TextureFilter MinMagFilter public TextureFilter MinMagFilter { set; } Property Value TextureFilter MipmapMode [YuzuMember] public TextureMipmapMode MipmapMode { get; set; } Property Value TextureMipmapMode WrapMode public TextureWrapMode WrapMode { set; } Property Value TextureWrapMode WrapModeU [YuzuMember] [TangerineKeyframeColor(5)] public TextureWrapMode WrapModeU { get; set; } Property Value TextureWrapMode WrapModeV [YuzuMember] [TangerineKeyframeColor(6)] public TextureWrapMode WrapModeV { get; set; } Property Value TextureWrapMode Methods Equals(TextureParams) Indicates whether the current object is equal to another object of the same type. public bool Equals(TextureParams other) Parameters other TextureParams An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false."
  },
  "api/Lime.TexturePathUtility.html": {
    "href": "api/Lime.TexturePathUtility.html",
    "title": "Class TexturePathUtility | Citrus Engine",
    "keywords": "Class TexturePathUtility Namespace Lime Assembly Lime.dll public static class TexturePathUtility Inheritance object TexturePathUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRenderTarget(string) public static RenderTarget GetRenderTarget(string id) Parameters id string Returns RenderTarget"
  },
  "api/Lime.TexturePool.TextureCreatedDelegate.html": {
    "href": "api/Lime.TexturePool.TextureCreatedDelegate.html",
    "title": "Delegate TexturePool.TextureCreatedDelegate | Citrus Engine",
    "keywords": "Delegate TexturePool.TextureCreatedDelegate Namespace Lime Assembly Lime.dll public delegate void TexturePool.TextureCreatedDelegate(string path, ITexture texture) Parameters path string texture ITexture"
  },
  "api/Lime.TexturePool.TextureCreatingDelegate.html": {
    "href": "api/Lime.TexturePool.TextureCreatingDelegate.html",
    "title": "Delegate TexturePool.TextureCreatingDelegate | Citrus Engine",
    "keywords": "Delegate TexturePool.TextureCreatingDelegate Namespace Lime Assembly Lime.dll public delegate void TexturePool.TextureCreatingDelegate(string path) Parameters path string"
  },
  "api/Lime.TexturePool.html": {
    "href": "api/Lime.TexturePool.html",
    "title": "Class TexturePool | Citrus Engine",
    "keywords": "Class TexturePool Namespace Lime Assembly Lime.dll public sealed class TexturePool Inheritance object TexturePool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static readonly TexturePool Instance Field Value TexturePool Methods DiscardAllStubTextures() public void DiscardAllStubTextures() DiscardAllTextures() public void DiscardAllTextures() DiscardTexturesUnderPressure() public void DiscardTexturesUnderPressure() GetTexture(string) public ITexture GetTexture(string path) Parameters path string Returns ITexture Events TextureCreated public event TexturePool.TextureCreatedDelegate TextureCreated Event Type TexturePool.TextureCreatedDelegate TextureCreating public event TexturePool.TextureCreatingDelegate TextureCreating Event Type TexturePool.TextureCreatingDelegate TextureMissing public static event Texture2D.TextureMissingDelegate TextureMissing Event Type Texture2D.TextureMissingDelegate"
  },
  "api/Lime.TextureWrapMode.html": {
    "href": "api/Lime.TextureWrapMode.html",
    "title": "Enum TextureWrapMode | Citrus Engine",
    "keywords": "Enum TextureWrapMode Namespace Lime Assembly Lime.dll public enum TextureWrapMode Fields Clamp = 0 MirroredRepeat = 2 Repeat = 1"
  },
  "api/Lime.Theme.ColorTheme.html": {
    "href": "api/Lime.Theme.ColorTheme.html",
    "title": "Class Theme.ColorTheme | Citrus Engine",
    "keywords": "Class Theme.ColorTheme Namespace Lime Assembly Lime.dll public class Theme.ColorTheme : Theme.DefaultColors Inheritance object Theme.DefaultColors Theme.ColorTheme Inherited Members Theme.DefaultColors.DefaultColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AnimeshAnimatedVertexColor [YuzuOptional] public Color4 AnimeshAnimatedVertexColor { get; set; } Property Value Color4 AnimeshFixedEdgeBackgroundColor [YuzuOptional] public Color4 AnimeshFixedEdgeBackgroundColor { get; set; } Property Value Color4 AnimeshFixedEdgeColor [YuzuOptional] public Color4 AnimeshFixedEdgeColor { get; set; } Property Value Color4 AnimeshFramingEdgeBackgroundColor [YuzuOptional] public Color4 AnimeshFramingEdgeBackgroundColor { get; set; } Property Value Color4 AnimeshFramingEdgeColor [YuzuOptional] public Color4 AnimeshFramingEdgeColor { get; set; } Property Value Color4 AnimeshHoverColor [YuzuOptional] public Color4 AnimeshHoverColor { get; set; } Property Value Color4 AnimeshInnerEdgeBackgroundColor [YuzuOptional] public Color4 AnimeshInnerEdgeBackgroundColor { get; set; } Property Value Color4 AnimeshInnerEdgeColor [YuzuOptional] public Color4 AnimeshInnerEdgeColor { get; set; } Property Value Color4 AnimeshRemovalColor [YuzuOptional] public Color4 AnimeshRemovalColor { get; set; } Property Value Color4 AnimeshVertexBackgroundColor [YuzuOptional] public Color4 AnimeshVertexBackgroundColor { get; set; } Property Value Color4 AnimeshVertexColor [YuzuOptional] public Color4 AnimeshVertexColor { get; set; } Property Value Color4 BlackText [YuzuOptional] public Color4 BlackText { get; set; } Property Value Color4 ButtonDefault [YuzuOptional] public ColorGradient ButtonDefault { get; set; } Property Value ColorGradient ButtonDisable [YuzuOptional] public ColorGradient ButtonDisable { get; set; } Property Value ColorGradient ButtonHover [YuzuOptional] public ColorGradient ButtonHover { get; set; } Property Value ColorGradient ButtonPress [YuzuOptional] public ColorGradient ButtonPress { get; set; } Property Value ColorGradient CloseButtonFocusBorderHovered [YuzuOptional] public Color4 CloseButtonFocusBorderHovered { get; set; } Property Value Color4 CloseButtonFocusBorderNormal [YuzuOptional] public Color4 CloseButtonFocusBorderNormal { get; set; } Property Value Color4 CloseButtonHovered [YuzuOptional] public Color4 CloseButtonHovered { get; set; } Property Value Color4 CloseButtonNormal [YuzuOptional] public Color4 CloseButtonNormal { get; set; } Property Value Color4 CloseButtonPressed [YuzuOptional] public Color4 CloseButtonPressed { get; set; } Property Value Color4 ControlBorder [YuzuOptional] public Color4 ControlBorder { get; set; } Property Value Color4 DirectoryPickerBackground [YuzuOptional] public Color4 DirectoryPickerBackground { get; set; } Property Value Color4 DirectoryPickerItemHoveredBackground [YuzuOptional] public Color4 DirectoryPickerItemHoveredBackground { get; set; } Property Value Color4 DirectoryPickerOutline [YuzuOptional] public Color4 DirectoryPickerOutline { get; set; } Property Value Color4 DisabledBackground [YuzuOptional] public Color4 DisabledBackground { get; set; } Property Value Color4 ExpandButtonDefault [YuzuOptional] public ColorGradient ExpandButtonDefault { get; set; } Property Value ColorGradient ExpandButtonDisable [YuzuOptional] public ColorGradient ExpandButtonDisable { get; set; } Property Value ColorGradient ExpandButtonHover [YuzuOptional] public ColorGradient ExpandButtonHover { get; set; } Property Value ColorGradient ExpandButtonPress [YuzuOptional] public ColorGradient ExpandButtonPress { get; set; } Property Value ColorGradient GrayBackground [YuzuOptional] public Color4 GrayBackground { get; set; } Property Value Color4 GrayText [YuzuOptional] public Color4 GrayText { get; set; } Property Value Color4 HoveredBackground [YuzuOptional] public Color4 HoveredBackground { get; set; } Property Value Color4 KeyboardFocusBorder [YuzuOptional] public Color4 KeyboardFocusBorder { get; set; } Property Value Color4 PathBarButtonHover [YuzuOptional] public ColorGradient PathBarButtonHover { get; set; } Property Value ColorGradient PathBarButtonNormal [YuzuOptional] public ColorGradient PathBarButtonNormal { get; set; } Property Value ColorGradient PathBarButtonOutlineHover [YuzuOptional] public Color4 PathBarButtonOutlineHover { get; set; } Property Value Color4 PathBarButtonOutlineNormal [YuzuOptional] public Color4 PathBarButtonOutlineNormal { get; set; } Property Value Color4 PathBarButtonOutlinePress [YuzuOptional] public Color4 PathBarButtonOutlinePress { get; set; } Property Value Color4 PathBarButtonPress [YuzuOptional] public ColorGradient PathBarButtonPress { get; set; } Property Value ColorGradient RedText [YuzuOptional] public Color4 RedText { get; set; } Property Value Color4 ScrollbarBackground [YuzuOptional] public Color4 ScrollbarBackground { get; set; } Property Value Color4 ScrollbarThumb [YuzuOptional] public Color4 ScrollbarThumb { get; set; } Property Value Color4 SelectedBackground [YuzuOptional] public Color4 SelectedBackground { get; set; } Property Value Color4 SelectedBorder [YuzuOptional] public Color4 SelectedBorder { get; set; } Property Value Color4 SelectedInactiveBackground [YuzuOptional] public Color4 SelectedInactiveBackground { get; set; } Property Value Color4 SeparatorColor [YuzuOptional] public Color4 SeparatorColor { get; set; } Property Value Color4 SeparatorDragColor [YuzuOptional] public Color4 SeparatorDragColor { get; set; } Property Value Color4 SeparatorHighlightColor [YuzuOptional] public Color4 SeparatorHighlightColor { get; set; } Property Value Color4 TabActive [YuzuOptional] public Color4 TabActive { get; set; } Property Value Color4 TabNormal [YuzuOptional] public Color4 TabNormal { get; set; } Property Value Color4 TextCaret [YuzuOptional] public Color4 TextCaret { get; set; } Property Value Color4 TextSelection [YuzuOptional] public Color4 TextSelection { get; set; } Property Value Color4 WarningBackground [YuzuOptional] public Color4 WarningBackground { get; set; } Property Value Color4 WhiteBackground [YuzuOptional] public Color4 WhiteBackground { get; set; } Property Value Color4 ZebraColor1 [YuzuOptional] public Color4 ZebraColor1 { get; set; } Property Value Color4 ZebraColor2 [YuzuOptional] public Color4 ZebraColor2 { get; set; } Property Value Color4 Methods Clone() public Theme.ColorTheme Clone() Returns Theme.ColorTheme CreateDarkTheme() public static Theme.ColorTheme CreateDarkTheme() Returns Theme.ColorTheme CreateLightTheme() public static Theme.ColorTheme CreateLightTheme() Returns Theme.ColorTheme"
  },
  "api/Lime.Theme.DefaultColors.html": {
    "href": "api/Lime.Theme.DefaultColors.html",
    "title": "Class Theme.DefaultColors | Citrus Engine",
    "keywords": "Class Theme.DefaultColors Namespace Lime Assembly Lime.dll public class Theme.DefaultColors Inheritance object Theme.DefaultColors Derived Theme.ColorTheme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultColors() public DefaultColors() Properties DefaultColor public static Color4 DefaultColor { get; set; } Property Value Color4"
  },
  "api/Lime.Theme.KeyboardFocusBorderPresenter.html": {
    "href": "api/Lime.Theme.KeyboardFocusBorderPresenter.html",
    "title": "Class Theme.KeyboardFocusBorderPresenter | Citrus Engine",
    "keywords": "Class Theme.KeyboardFocusBorderPresenter Namespace Lime Assembly Lime.dll public class Theme.KeyboardFocusBorderPresenter : IPresenter Inheritance object Theme.KeyboardFocusBorderPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeyboardFocusBorderPresenter(float, bool) public KeyboardFocusBorderPresenter(float thikness = 1, bool rounded = false) Parameters thikness float rounded bool Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.Theme.Metrics.html": {
    "href": "api/Lime.Theme.Metrics.html",
    "title": "Class Theme.Metrics | Citrus Engine",
    "keywords": "Class Theme.Metrics Namespace Lime Assembly Lime.dll public static class Theme.Metrics Inheritance object Theme.Metrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AnimeshBackgroundEdgeThickness public static readonly float AnimeshBackgroundEdgeThickness Field Value float AnimeshBackgroundVertexRadius public static readonly float AnimeshBackgroundVertexRadius Field Value float AnimeshEdgeHitTestRadius public static readonly float AnimeshEdgeHitTestRadius Field Value float AnimeshEdgeThickness public static readonly float AnimeshEdgeThickness Field Value float AnimeshVertexHitTestRadius public static readonly float AnimeshVertexHitTestRadius Field Value float AnimeshVertexRadius public static readonly float AnimeshVertexRadius Field Value float CheckBoxSize public static readonly Vector2 CheckBoxSize Field Value Vector2 CloseButtonSize public static readonly Vector2 CloseButtonSize Field Value Vector2 ControlsPadding public static readonly Thickness ControlsPadding Field Value Thickness DefaultButtonSize public static readonly Vector2 DefaultButtonSize Field Value Vector2 DefaultEditBoxSize public static readonly Vector2 DefaultEditBoxSize Field Value Vector2 DefaultToolbarButtonSize public static readonly Vector2 DefaultToolbarButtonSize Field Value Vector2 MaxTabSize public static readonly Vector2 MaxTabSize Field Value Vector2 MinTabSize public static readonly Vector2 MinTabSize Field Value Vector2 SliderThumbWidth public static readonly float SliderThumbWidth Field Value float TextHeight public static readonly int TextHeight Field Value int"
  },
  "api/Lime.Theme.html": {
    "href": "api/Lime.Theme.html",
    "title": "Class Theme | Citrus Engine",
    "keywords": "Class Theme Namespace Lime Assembly Lime.dll public static class Theme Inheritance object Theme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Colors public static Theme.ColorTheme Colors Field Value Theme.ColorTheme Methods MouseHoverInvalidationTask(Widget) public static IEnumerator<object> MouseHoverInvalidationTask(Widget widget) Parameters widget Widget Returns IEnumerator<object>"
  },
  "api/Lime.ThemedButton.ButtonPresenter.html": {
    "href": "api/Lime.ThemedButton.ButtonPresenter.html",
    "title": "Class ThemedButton.ButtonPresenter | Citrus Engine",
    "keywords": "Class ThemedButton.ButtonPresenter Namespace Lime Assembly Lime.dll public class ThemedButton.ButtonPresenter : IPresenter, ThemedButton.IButtonPresenter Inheritance object ThemedButton.ButtonPresenter Implements IPresenter ThemedButton.IButtonPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ButtonPresenter() public ButtonPresenter() Methods GetRenderObject(Node) public virtual RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool SetState(string) public virtual void SetState(string state) Parameters state string"
  },
  "api/Lime.ThemedButton.IButtonPresenter.html": {
    "href": "api/Lime.ThemedButton.IButtonPresenter.html",
    "title": "Interface ThemedButton.IButtonPresenter | Citrus Engine",
    "keywords": "Interface ThemedButton.IButtonPresenter Namespace Lime Assembly Lime.dll public interface ThemedButton.IButtonPresenter Methods SetState(string) void SetState(string state) Parameters state string"
  },
  "api/Lime.ThemedButton.html": {
    "href": "api/Lime.ThemedButton.html",
    "title": "Class ThemedButton | Citrus Engine",
    "keywords": "Class ThemedButton Namespace Lime Assembly Lime.dll public class ThemedButton : Button, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Button ThemedButton Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Button.EnableMask Button.Text Button.Enabled Button.Clicked Button.WasClicked() Button.OnAwake() Button.OnUpdate(float) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedButton() public ThemedButton() ThemedButton(string) public ThemedButton(string caption) Parameters caption string Properties TextWidget public SimpleText TextWidget { get; } Property Value SimpleText Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedCheckBox.html": {
    "href": "api/Lime.ThemedCheckBox.html",
    "title": "Class ThemedCheckBox | Citrus Engine",
    "keywords": "Class ThemedCheckBox Namespace Lime Assembly Lime.dll public class ThemedCheckBox : CheckBox, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CheckBox ThemedCheckBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members CheckBox.State CheckBox.Changed CheckBox.Checked CheckBox.Toggle() CheckBox.RiseChanged(bool) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedCheckBox() public ThemedCheckBox() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedComboBox.html": {
    "href": "api/Lime.ThemedComboBox.html",
    "title": "Class ThemedComboBox | Citrus Engine",
    "keywords": "Class ThemedComboBox Namespace Lime Assembly Lime.dll public class ThemedComboBox : ComboBox, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonDropDownList ComboBox ThemedComboBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members ComboBox.ShouldHandleSpacebar() CommonDropDownList.Changed CommonDropDownList.ShowingDropDownList CommonDropDownList.Items CommonDropDownList.TextWidgetRef CommonDropDownList.TextWidget CommonDropDownList.userValue CommonDropDownList.Index CommonDropDownList.Text CommonDropDownList.Value CommonDropDownList.RaiseChanged(bool) CommonDropDownList.RefreshTextWidget() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedComboBox() public ThemedComboBox() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedDefaultWindowWidget.html": {
    "href": "api/Lime.ThemedDefaultWindowWidget.html",
    "title": "Class ThemedDefaultWindowWidget | Citrus Engine",
    "keywords": "Class ThemedDefaultWindowWidget Namespace Lime Assembly Lime.dll public class ThemedDefaultWindowWidget : DefaultWindowWidget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget WindowWidget DefaultWindowWidget ThemedDefaultWindowWidget Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members DefaultWindowWidget.LayoutBasedWindowSize WindowWidget.renderChain WindowWidget.Window WindowWidget.WidgetContext WindowWidget.CreateManager(LayoutManager, WidgetContext) WindowWidget.ContinuousRendering() WindowWidget.PrepareToRender() WindowWidget.Update(float) WindowWidget.RenderAll() WindowWidget.Render(RenderObjectList) WindowWidget.GetViewport() WindowWidget.GetProjection() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedDefaultWindowWidget(IWindow) public ThemedDefaultWindowWidget(IWindow window) Parameters window IWindow Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedDropDownList.html": {
    "href": "api/Lime.ThemedDropDownList.html",
    "title": "Class ThemedDropDownList | Citrus Engine",
    "keywords": "Class ThemedDropDownList Namespace Lime Assembly Lime.dll public class ThemedDropDownList : DropDownList, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonDropDownList DropDownList ThemedDropDownList Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members DropDownList.ShouldHandleSpacebar() CommonDropDownList.Changed CommonDropDownList.ShowingDropDownList CommonDropDownList.Items CommonDropDownList.TextWidgetRef CommonDropDownList.TextWidget CommonDropDownList.userValue CommonDropDownList.Index CommonDropDownList.Text CommonDropDownList.Value CommonDropDownList.RaiseChanged(bool) CommonDropDownList.RefreshTextWidget() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedDropDownList() public ThemedDropDownList() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedEditBox.html": {
    "href": "api/Lime.ThemedEditBox.html",
    "title": "Class ThemedEditBox | Citrus Engine",
    "keywords": "Class ThemedEditBox Namespace Lime Assembly Lime.dll public class ThemedEditBox : EditBox, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonEditBox EditBox ThemedEditBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members CommonEditBox.IsReadOnly CommonEditBox.Editor CommonEditBox.ScrollWidget CommonEditBox.TextWidget CommonEditBox.Submitted CommonEditBox.ScrollView CommonEditBox.Text CommonEditBox.OnSubmit() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedEditBox() public ThemedEditBox() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedFileChooserButton.html": {
    "href": "api/Lime.ThemedFileChooserButton.html",
    "title": "Class ThemedFileChooserButton | Citrus Engine",
    "keywords": "Class ThemedFileChooserButton Namespace Lime Assembly Lime.dll public class ThemedFileChooserButton : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget ThemedFileChooserButton Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedFileChooserButton() public ThemedFileChooserButton() Properties FileDialog public IFileDialog FileDialog { get; } Property Value IFileDialog FileName public string FileName { get; set; } Property Value string Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedFrame.html": {
    "href": "api/Lime.ThemedFrame.html",
    "title": "Class ThemedFrame | Citrus Engine",
    "keywords": "Class ThemedFrame Namespace Lime Assembly Lime.dll public class ThemedFrame : Frame, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg Inheritance object Node Widget Frame ThemedFrame Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg Inherited Members Frame.ClipChildren Frame.ClipByWidget Frame.RenderTarget Frame.IsRenderedToTexture() Frame.PartialHitTest(ref HitTestArgs) Frame.AddToRenderChain(RenderChain) Frame.GetRenderObject() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedFrame() public ThemedFrame() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedFramePresenter.html": {
    "href": "api/Lime.ThemedFramePresenter.html",
    "title": "Class ThemedFramePresenter | Citrus Engine",
    "keywords": "Class ThemedFramePresenter Namespace Lime Assembly Lime.dll public class ThemedFramePresenter : IPresenter Inheritance object ThemedFramePresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ThemedFramePresenter(Color4, Color4) public ThemedFramePresenter(Color4 innerColor, Color4 borderColor) Parameters innerColor Color4 borderColor Color4 Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.ThemedHSplitter.html": {
    "href": "api/Lime.ThemedHSplitter.html",
    "title": "Class ThemedHSplitter | Citrus Engine",
    "keywords": "Class ThemedHSplitter Namespace Lime Assembly Lime.dll public class ThemedHSplitter : HSplitter, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Splitter HSplitter ThemedHSplitter Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members HSplitter.SeparatorWidth Splitter.SeparatorActiveAreaWidth Splitter.SeparatorColor Splitter.SeparatorHighlightColor Splitter.SeparatorDragColor Splitter.IsLocked Splitter.Stretches Splitter.DragStarted Splitter.DragEnded Splitter.RaiseDragStarted() Splitter.RaiseDragEnded() Splitter.GetStretchesList(List<float>, params float[]) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedHSplitter() public ThemedHSplitter() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedInvalidableWindowWidget.html": {
    "href": "api/Lime.ThemedInvalidableWindowWidget.html",
    "title": "Class ThemedInvalidableWindowWidget | Citrus Engine",
    "keywords": "Class ThemedInvalidableWindowWidget Namespace Lime Assembly Lime.dll public class ThemedInvalidableWindowWidget : InvalidableWindowWidget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget WindowWidget DefaultWindowWidget InvalidableWindowWidget ThemedInvalidableWindowWidget Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members InvalidableWindowWidget.RedrawMarkVisible InvalidableWindowWidget.ContinuousRendering() InvalidableWindowWidget.Render(RenderObjectList) DefaultWindowWidget.LayoutBasedWindowSize WindowWidget.renderChain WindowWidget.Window WindowWidget.WidgetContext WindowWidget.CreateManager(LayoutManager, WidgetContext) WindowWidget.PrepareToRender() WindowWidget.Update(float) WindowWidget.RenderAll() WindowWidget.GetViewport() WindowWidget.GetProjection() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedInvalidableWindowWidget(IWindow) public ThemedInvalidableWindowWidget(IWindow window) Parameters window IWindow Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedNumericEditBox.html": {
    "href": "api/Lime.ThemedNumericEditBox.html",
    "title": "Class ThemedNumericEditBox | Citrus Engine",
    "keywords": "Class ThemedNumericEditBox Namespace Lime Assembly Lime.dll public class ThemedNumericEditBox : NumericEditBox, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget CommonEditBox NumericEditBox ThemedNumericEditBox Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members NumericEditBox.Step NumericEditBox.BeginSpin NumericEditBox.EndSpin NumericEditBox.Value NumericEditBox.RaiseBeginSpin() NumericEditBox.RaiseEndSpin() CommonEditBox.IsReadOnly CommonEditBox.Editor CommonEditBox.ScrollWidget CommonEditBox.TextWidget CommonEditBox.Submitted CommonEditBox.ScrollView CommonEditBox.Text CommonEditBox.OnSubmit() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedNumericEditBox() public ThemedNumericEditBox() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedScrollView.SliderPresenter.html": {
    "href": "api/Lime.ThemedScrollView.SliderPresenter.html",
    "title": "Class ThemedScrollView.SliderPresenter | Citrus Engine",
    "keywords": "Class ThemedScrollView.SliderPresenter Namespace Lime Assembly Lime.dll public class ThemedScrollView.SliderPresenter : IPresenter Inheritance object ThemedScrollView.SliderPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SliderPresenter(ThemedScrollView) public SliderPresenter(ThemedScrollView scrollView) Parameters scrollView ThemedScrollView Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.ThemedScrollView.html": {
    "href": "api/Lime.ThemedScrollView.html",
    "title": "Class ThemedScrollView | Citrus Engine",
    "keywords": "Class ThemedScrollView Namespace Lime Assembly Lime.dll public class ThemedScrollView : Frame, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg Inheritance object Node Widget Frame ThemedScrollView Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg Derived ThemedTextView Inherited Members Frame.ClipChildren Frame.ClipByWidget Frame.RenderTarget Frame.IsRenderedToTexture() Frame.PartialHitTest(ref HitTestArgs) Frame.AddToRenderChain(RenderChain) Frame.GetRenderObject() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedScrollView(ScrollDirection) public ThemedScrollView(ScrollDirection scrollDirection = ScrollDirection.Vertical) Parameters scrollDirection ScrollDirection Properties Behavior public ScrollView Behavior { get; set; } Property Value ScrollView Content public Widget Content { get; } Property Value Widget Direction public ScrollDirection Direction { get; set; } Property Value ScrollDirection MaxScrollPosition public float MaxScrollPosition { get; } Property Value float MinScrollPosition public float MinScrollPosition { get; } Property Value float ScrollPosition public float ScrollPosition { get; set; } Property Value float Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedSimpleText.html": {
    "href": "api/Lime.ThemedSimpleText.html",
    "title": "Class ThemedSimpleText | Citrus Engine",
    "keywords": "Class ThemedSimpleText Namespace Lime Assembly Lime.dll public class ThemedSimpleText : SimpleText, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IText Inheritance object Node Widget SimpleText ThemedSimpleText Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IText Inherited Members SimpleText.GlobalTextProcessor SimpleText.TextProcessor SimpleText.Font SimpleText.Text SimpleText.DisplayText SimpleText.FontHeight SimpleText.Spacing SimpleText.HAlignment SimpleText.VAlignment SimpleText.OverflowMode SimpleText.WordSplitAllowed SimpleText.TextColor SimpleText.GradientMapIndex SimpleText.LetterSpacing SimpleText.ForceUncutText SimpleText.RenderMode SimpleText.EffectiveMinSize SimpleText.EffectiveMaxSize SimpleText.TrimWhitespaces SimpleText.Caret SimpleText.Submitted SimpleText.Localizable SimpleText.AddToRenderChain(RenderChain) SimpleText.CanDisplay(char) SimpleText.OnSizeChanged(Vector2) SimpleText.GetRenderObject() SimpleText.MeasureText() SimpleText.MeasureUncutText() SimpleText.StaticScale(float, bool) SimpleText.FitTextInsideWidgetArea(float) SimpleText.Invalidate() SimpleText.GetCharPair(Vector2, out (CharPosition, CharPosition)) SimpleText.SetLocalizeArguments(params string[]) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedSimpleText() public ThemedSimpleText() ThemedSimpleText(string) public ThemedSimpleText(string text) Parameters text string Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedSlider.html": {
    "href": "api/Lime.ThemedSlider.html",
    "title": "Class ThemedSlider | Citrus Engine",
    "keywords": "Class ThemedSlider Namespace Lime Assembly Lime.dll public class ThemedSlider : Slider, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node Widget Slider ThemedSlider Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Inherited Members Slider.RangeMin Slider.RangeMax Slider.Value Slider.Step Slider.DragStarted Slider.DragEnded Slider.Changed Slider.allowDrag Slider.Thumb Slider.OnUpdate(float) Slider.RaiseChanged() Slider.SetValue(float) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedSlider() public ThemedSlider() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedTab.html": {
    "href": "api/Lime.ThemedTab.html",
    "title": "Class ThemedTab | Citrus Engine",
    "keywords": "Class ThemedTab Namespace Lime Assembly Lime.dll public class ThemedTab : Tab, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node Widget Tab ThemedTab Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Inherited Members Tab.Closing Tab.Text Tab.Closable Tab.Active Tab.OnUpdate(float) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedTab() public ThemedTab() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedTabBar.html": {
    "href": "api/Lime.ThemedTabBar.html",
    "title": "Class ThemedTabBar | Citrus Engine",
    "keywords": "Class ThemedTabBar Namespace Lime Assembly Lime.dll public class ThemedTabBar : TabBar, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget TabBar ThemedTabBar Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members TabBar.AllowReordering TabBar.OnReordering TabBar.OnReordered TabBar.ActivateTab(Tab) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedTabBar() public ThemedTabBar() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.ThemedTabCloseButton.html": {
    "href": "api/Lime.ThemedTabCloseButton.html",
    "title": "Class ThemedTabCloseButton | Citrus Engine",
    "keywords": "Class ThemedTabCloseButton Namespace Lime Assembly Lime.dll public class ThemedTabCloseButton : Button, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Button ThemedTabCloseButton Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Button.EnableMask Button.Text Button.Enabled Button.Clicked Button.WasClicked() Button.OnAwake() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedTabCloseButton() public ThemedTabCloseButton() Properties FocusColor public Color4 FocusColor { set; } Property Value Color4 NormalColor public Color4 NormalColor { set; } Property Value Color4 PressedColor public Color4 PressedColor { set; } Property Value Color4 Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool OnUpdate(float) public override void OnUpdate(float delta) Parameters delta float"
  },
  "api/Lime.ThemedTextView.TextLineMultiplicity.html": {
    "href": "api/Lime.ThemedTextView.TextLineMultiplicity.html",
    "title": "Class ThemedTextView.TextLineMultiplicity | Citrus Engine",
    "keywords": "Class ThemedTextView.TextLineMultiplicity Namespace Lime Assembly Lime.dll public class ThemedTextView.TextLineMultiplicity : NodeComponent, IDisposable, IAnimable Inheritance object Component NodeComponent ThemedTextView.TextLineMultiplicity Implements IDisposable IAnimable Inherited Members NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields Multiplicity public int Multiplicity Field Value int"
  },
  "api/Lime.ThemedTextView.html": {
    "href": "api/Lime.ThemedTextView.html",
    "title": "Class ThemedTextView | Citrus Engine",
    "keywords": "Class ThemedTextView Namespace Lime Assembly Lime.dll public class ThemedTextView : ThemedScrollView, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg Inheritance object Node Widget Frame ThemedScrollView ThemedTextView Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg Inherited Members ThemedScrollView.Behavior ThemedScrollView.Direction ThemedScrollView.ScrollPosition ThemedScrollView.MinScrollPosition ThemedScrollView.MaxScrollPosition ThemedScrollView.Content Frame.ClipChildren Frame.ClipByWidget Frame.RenderTarget Frame.IsRenderedToTexture() Frame.PartialHitTest(ref HitTestArgs) Frame.AddToRenderChain(RenderChain) Frame.GetRenderObject() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedTextView() public ThemedTextView() Properties DisplayText public string DisplayText { get; set; } Property Value string IsEmpty public bool IsEmpty { get; } Property Value bool LastLine public SimpleText LastLine { get; } Property Value SimpleText SquashDuplicateLines public bool SquashDuplicateLines { get; set; } Property Value bool Text Get or sets a label upon the widget. For widgets which can not have a label returns null. public override string Text { get; set; } Property Value string TrimWhitespaces public bool TrimWhitespaces { get; set; } Property Value bool Methods Append(string) public void Append(string text) Parameters text string Clear() public void Clear() IsNotDecorated() public override bool IsNotDecorated() Returns bool ScrollToEnd() public void ScrollToEnd()"
  },
  "api/Lime.ThemedVSplitter.html": {
    "href": "api/Lime.ThemedVSplitter.html",
    "title": "Class ThemedVSplitter | Citrus Engine",
    "keywords": "Class ThemedVSplitter Namespace Lime Assembly Lime.dll public class ThemedVSplitter : VSplitter, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Splitter VSplitter ThemedVSplitter Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members VSplitter.SeparatorWidth Splitter.SeparatorActiveAreaWidth Splitter.SeparatorColor Splitter.SeparatorHighlightColor Splitter.SeparatorDragColor Splitter.IsLocked Splitter.Stretches Splitter.DragStarted Splitter.DragEnded Splitter.RaiseDragStarted() Splitter.RaiseDragEnded() Splitter.GetStretchesList(List<float>, params float[]) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors ThemedVSplitter() public ThemedVSplitter() Methods IsNotDecorated() public override bool IsNotDecorated() Returns bool"
  },
  "api/Lime.Thickness.html": {
    "href": "api/Lime.Thickness.html",
    "title": "Struct Thickness | Citrus Engine",
    "keywords": "Struct Thickness Namespace Lime Assembly Lime.dll public struct Thickness Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Thickness(float) public Thickness(float overall) Parameters overall float Thickness(float, float) public Thickness(float horizontal, float vertical) Parameters horizontal float vertical float Thickness(float, float, float, float) public Thickness(float left = 0, float right = 0, float top = 0, float bottom = 0) Parameters left float right float top float bottom float Fields Bottom [YuzuMember(\"3\")] public float Bottom Field Value float Left [YuzuMember(\"0\")] public float Left Field Value float Right [YuzuMember(\"1\")] public float Right Field Value float Top [YuzuMember(\"2\")] public float Top Field Value float Zero public static Thickness Zero Field Value Thickness Properties LeftTop public Vector2 LeftTop { get; set; } Property Value Vector2 RightBottom public Vector2 RightBottom { get; set; } Property Value Vector2 Methods ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator +(Thickness, Thickness) public static Thickness operator +(Thickness lhs, Thickness rhs) Parameters lhs Thickness rhs Thickness Returns Thickness operator +(Vector2, Thickness) public static Vector2 operator +(Vector2 size, Thickness padding) Parameters size Vector2 padding Thickness Returns Vector2 operator ==(Thickness, Thickness) public static bool operator ==(Thickness lhs, Thickness rhs) Parameters lhs Thickness rhs Thickness Returns bool operator !=(Thickness, Thickness) public static bool operator !=(Thickness lhs, Thickness rhs) Parameters lhs Thickness rhs Thickness Returns bool operator -(Thickness, Thickness) public static Thickness operator -(Thickness lhs, Thickness rhs) Parameters lhs Thickness rhs Thickness Returns Thickness operator -(Vector2, Thickness) public static Vector2 operator -(Vector2 size, Thickness padding) Parameters size Vector2 padding Thickness Returns Vector2"
  },
  "api/Lime.ThicknessSimpleAnimationCurve.html": {
    "href": "api/Lime.ThicknessSimpleAnimationCurve.html",
    "title": "Class ThicknessSimpleAnimationCurve | Citrus Engine",
    "keywords": "Class ThicknessSimpleAnimationCurve Namespace Lime Assembly Lime.dll public class ThicknessSimpleAnimationCurve : SimpleAnimationCurve<Thickness>, IAnimationCurve<Thickness>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Thickness> Inheritance object SimpleAnimationCurve<Thickness> ThicknessSimpleAnimationCurve Implements IAnimationCurve<Thickness> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Thickness> Inherited Members SimpleAnimationCurve<Thickness>.Keys SimpleAnimationCurve<Thickness>.IsEmpty SimpleAnimationCurve<Thickness>.Duration SimpleAnimationCurve<Thickness>.RefCount SimpleAnimationCurve<Thickness>.AddRef() SimpleAnimationCurve<Thickness>.Release() SimpleAnimationCurve<Thickness>.CreateEvaluator() SimpleAnimationCurve<Thickness>.InterpolateSplined(Thickness, Thickness, Thickness, Thickness, float) SimpleAnimationCurve<Thickness>.Create(IEnumerable<SimpleKeyframe<Thickness>>) SimpleAnimationCurve<Thickness>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(Thickness, Thickness, float) protected override Thickness InterpolateLinear(Thickness value1, Thickness value2, float amount) Parameters value1 Thickness value2 Thickness amount float Returns Thickness"
  },
  "api/Lime.TiledImage.html": {
    "href": "api/Lime.TiledImage.html",
    "title": "Class TiledImage | Citrus Engine",
    "keywords": "Class TiledImage Namespace Lime Assembly Lime.dll [TangerineVisualHintGroup(\"/All/Nodes/Images\", null)] public class TiledImage : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget TiledImage Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors TiledImage() public TiledImage() TiledImage(ISprite) public TiledImage(ISprite sprite) Parameters sprite ISprite TiledImage(string) public TiledImage(string spritePath) Parameters spritePath string Properties CustomMaterial public IMaterial CustomMaterial { get; set; } Property Value IMaterial Sprite Gets or sets a texture upon the widget. For widgets which can not have a texture returns null. [YuzuMember] [YuzuSerializeIf(\"IsNotRenderTexture\")] public override sealed ISprite Sprite { get; set; } Property Value ISprite TileOffset [YuzuMember] [TangerineKeyframeColor(17)] public Vector2 TileOffset { get; set; } Property Value Vector2 TileRounding [YuzuMember] [TangerineKeyframeColor(18)] public bool TileRounding { get; set; } Property Value bool TileSize [YuzuMember] [TangerineKeyframeColor(16)] [Validation.RatioInfo(new Type[] { typeof(TiledImage) })] [Validation.SizeInfo(new Type[] { typeof(TiledImage) })] public Vector2 TileSize { get; set; } Property Value Vector2 Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain CalcContentSize() public override Vector2 CalcContentSize() Returns Vector2 GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject IsNotRenderTexture() public bool IsNotRenderTexture() Returns bool PartialHitTestByContents(ref HitTestArgs) protected override bool PartialHitTestByContents(ref HitTestArgs args) Parameters args HitTestArgs Returns bool"
  },
  "api/Lime.ToolForm.html": {
    "href": "api/Lime.ToolForm.html",
    "title": "Class ToolForm | Citrus Engine",
    "keywords": "Class ToolForm Namespace Lime Assembly Lime.dll public class ToolForm : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form ToolForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.Dispose(bool) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ToolForm() public ToolForm() Properties CreateParams Gets the required creation parameters when the control handle is created. protected override CreateParams CreateParams { get; } Property Value CreateParams A CreateParams that contains the required creation parameters when the handle to the control is created."
  },
  "api/Lime.ToolTipForm.html": {
    "href": "api/Lime.ToolTipForm.html",
    "title": "Class ToolTipForm | Citrus Engine",
    "keywords": "Class ToolTipForm Namespace Lime Assembly Lime.dll public class ToolTipForm : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form ToolTipForm Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.Dispose(bool) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ToolTipForm() public ToolTipForm() Properties CreateParams Gets the required creation parameters when the control handle is created. protected override CreateParams CreateParams { get; } Property Value CreateParams A CreateParams that contains the required creation parameters when the handle to the control is created. ShowWithoutActivation Gets a value indicating whether the window will be activated when it is shown. protected override bool ShowWithoutActivation { get; } Property Value bool true if the window will not be activated when it is shown; otherwise, false. The default is false."
  },
  "api/Lime.Toolbox.StringUniqueCodeGenerator.html": {
    "href": "api/Lime.Toolbox.StringUniqueCodeGenerator.html",
    "title": "Class Toolbox.StringUniqueCodeGenerator | Citrus Engine",
    "keywords": "Class Toolbox.StringUniqueCodeGenerator Namespace Lime Assembly Lime.dll public static class Toolbox.StringUniqueCodeGenerator Inheritance object Toolbox.StringUniqueCodeGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Generate(string) public static int Generate(string s) Parameters s string Returns int"
  },
  "api/Lime.Toolbox.html": {
    "href": "api/Lime.Toolbox.html",
    "title": "Class Toolbox | Citrus Engine",
    "keywords": "Class Toolbox Namespace Lime Assembly Lime.dll public static class Toolbox Inheritance object Toolbox Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clone<T>(List<T>) public static List<T> Clone<T>(List<T> list) Parameters list List<T> Returns List<T> Type Parameters T ComputeHash(byte[], int) public static int ComputeHash(byte[] data, int length) Parameters data byte[] length int Returns int Deconstruct<T1, T2>(KeyValuePair<T1, T2>, out T1, out T2) public static void Deconstruct<T1, T2>(this KeyValuePair<T1, T2> tuple, out T1 key, out T2 value) Parameters tuple KeyValuePair<T1, T2> key T1 value T2 Type Parameters T1 T2 IsFloatingPointType(Type) public static bool IsFloatingPointType(Type type) Parameters type Type Returns bool IsIntegralType(Type) public static bool IsIntegralType(Type type) Parameters type Type Returns bool IsMouseWheelSupported() public static bool IsMouseWheelSupported() Returns bool IsNullOrWhiteSpace(string) public static bool IsNullOrWhiteSpace(this string value) Parameters value string Returns bool IsNumericType(Type) public static bool IsNumericType(Type type) Parameters type Type Returns bool RemoveTail<T>(List<T>, int) Removes from the list all elements whose index is greater than or equal to the specified index. public static void RemoveTail<T>(this List<T> list, int startIndex) Parameters list List<T> startIndex int Type Parameters T ResetEnumerator<T>(ref T) public static void ResetEnumerator<T>(ref T enumerator) where T : IEnumerator Parameters enumerator T Type Parameters T Swap<T>(IList<T>, int, int) public static void Swap<T>(IList<T> list, int lhsIndex, int rhsIndex) Parameters list IList<T> lhsIndex int rhsIndex int Type Parameters T Swap<T>(ref T, ref T) public static void Swap<T>(ref T lhs, ref T rhs) Parameters lhs T rhs T Type Parameters T"
  },
  "api/Lime.TopologyEdge.EdgeInfo.html": {
    "href": "api/Lime.TopologyEdge.EdgeInfo.html",
    "title": "Class TopologyEdge.EdgeInfo | Citrus Engine",
    "keywords": "Class TopologyEdge.EdgeInfo Namespace Lime Assembly Lime.dll public class TopologyEdge.EdgeInfo Inheritance object TopologyEdge.EdgeInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IsConstrained public bool IsConstrained Field Value bool IsFraming public bool IsFraming Field Value bool"
  },
  "api/Lime.TopologyEdge.html": {
    "href": "api/Lime.TopologyEdge.html",
    "title": "Struct TopologyEdge | Citrus Engine",
    "keywords": "Struct TopologyEdge Namespace Lime Assembly Lime.dll public struct TopologyEdge : IEquatable<TopologyEdge>, ITopologyPrimitive Implements IEquatable<TopologyEdge> ITopologyPrimitive Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TopologyEdge(ushort, ushort) public TopologyEdge(ushort index0, ushort index1) Parameters index0 ushort index1 ushort Fields Index0 [YuzuMember(\"0\")] public ushort Index0 Field Value ushort Index1 [YuzuMember(\"1\")] public ushort Index1 Field Value ushort Properties Count public int Count { get; } Property Value int this[int] public ushort this[int index] { get; } Parameters index int Property Value ushort Methods Equals(TopologyEdge) Indicates whether the current object is equal to another object of the same type. public bool Equals(TopologyEdge other) Parameters other TopologyEdge An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance."
  },
  "api/Lime.TopologyFace.FaceInfo.html": {
    "href": "api/Lime.TopologyFace.FaceInfo.html",
    "title": "Class TopologyFace.FaceInfo | Citrus Engine",
    "keywords": "Class TopologyFace.FaceInfo Namespace Lime Assembly Lime.dll public class TopologyFace.FaceInfo Inheritance object TopologyFace.FaceInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IsConstrained0 public bool IsConstrained0 Field Value bool IsConstrained1 public bool IsConstrained1 Field Value bool IsConstrained2 public bool IsConstrained2 Field Value bool IsFraming0 public bool IsFraming0 Field Value bool IsFraming1 public bool IsFraming1 Field Value bool IsFraming2 public bool IsFraming2 Field Value bool Properties this[int] public (bool IsFraming, bool IsConstrained) this[int index] { get; } Parameters index int Property Value (bool IsFraming, bool IsConstrained)"
  },
  "api/Lime.TopologyFace.html": {
    "href": "api/Lime.TopologyFace.html",
    "title": "Struct TopologyFace | Citrus Engine",
    "keywords": "Struct TopologyFace Namespace Lime Assembly Lime.dll public struct TopologyFace : IEquatable<TopologyFace>, ITopologyPrimitive Implements IEquatable<TopologyFace> ITopologyPrimitive Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TopologyFace(ushort, ushort, ushort) public TopologyFace(ushort index0, ushort index1, ushort index2) Parameters index0 ushort index1 ushort index2 ushort Fields Index0 [YuzuMember(\"0\")] public ushort Index0 Field Value ushort Index1 [YuzuMember(\"1\")] public ushort Index1 Field Value ushort Index2 [YuzuMember(\"2\")] public ushort Index2 Field Value ushort Properties Count public int Count { get; } Property Value int this[int] public ushort this[int index] { get; } Parameters index int Property Value ushort Methods Equals(TopologyFace) Indicates whether the current object is equal to another object of the same type. public bool Equals(TopologyFace other) Parameters other TopologyFace An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/Lime.TopologyHitTestResult.html": {
    "href": "api/Lime.TopologyHitTestResult.html",
    "title": "Class TopologyHitTestResult | Citrus Engine",
    "keywords": "Class TopologyHitTestResult Namespace Lime Assembly Lime.dll public class TopologyHitTestResult Inheritance object TopologyHitTestResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Info public object Info Field Value object Target public ITopologyPrimitive Target Field Value ITopologyPrimitive"
  },
  "api/Lime.TopologyVertex.html": {
    "href": "api/Lime.TopologyVertex.html",
    "title": "Struct TopologyVertex | Citrus Engine",
    "keywords": "Struct TopologyVertex Namespace Lime Assembly Lime.dll public struct TopologyVertex : ITopologyPrimitive Implements ITopologyPrimitive Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Index public ushort Index Field Value ushort Properties Count public int Count { get; } Property Value int this[int] public ushort this[int index] { get; } Parameters index int Property Value ushort"
  },
  "api/Lime.Transform2.html": {
    "href": "api/Lime.Transform2.html",
    "title": "Struct Transform2 | Citrus Engine",
    "keywords": "Struct Transform2 Namespace Lime Assembly Lime.dll public struct Transform2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Rotation public float Rotation Field Value float Scale public Vector2 Scale Field Value Vector2 Translation public Vector2 Translation Field Value Vector2 Methods Lerp(float, Transform2, Transform2) public static Transform2 Lerp(float t, Transform2 a, Transform2 b) Parameters t float a Transform2 b Transform2 Returns Transform2 ToMatrix32() public Matrix32 ToMatrix32() Returns Matrix32"
  },
  "api/Lime.TriggerAttribute.html": {
    "href": "api/Lime.TriggerAttribute.html",
    "title": "Class TriggerAttribute | Citrus Engine",
    "keywords": "Class TriggerAttribute Namespace Lime Assembly Lime.dll public sealed class TriggerAttribute : Attribute Inheritance object Attribute TriggerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.TwistComponent.html": {
    "href": "api/Lime.TwistComponent.html",
    "title": "Class TwistComponent | Citrus Engine",
    "keywords": "Class TwistComponent Namespace Lime Assembly Lime.dll [TangerineMenuPath(\"Effects/Twist\")] public class TwistComponent : MaterialComponent<TwistMaterial>, IDisposable, IAnimable Inheritance object Component NodeComponent MaterialComponent MaterialComponent<TwistMaterial> TwistComponent Implements IDisposable IAnimable Inherited Members MaterialComponent<TwistMaterial>.CustomMaterial NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Angle [YuzuMember] public float Angle { get; set; } Property Value float Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Pivot [YuzuMember] public Vector2 Pivot { get; set; } Property Value Vector2 Radius [YuzuMember] [Validation.Range(0, Infinity)] public float Radius { get; set; } Property Value float Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node"
  },
  "api/Lime.TwistMaterial.TwistShaderProgram.html": {
    "href": "api/Lime.TwistMaterial.TwistShaderProgram.html",
    "title": "Class TwistMaterial.TwistShaderProgram | Citrus Engine",
    "keywords": "Class TwistMaterial.TwistShaderProgram Namespace Lime Assembly Lime.dll public class TwistMaterial.TwistShaderProgram : ShaderProgram Inheritance object ShaderProgram TwistMaterial.TwistShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Instance public static TwistMaterial.TwistShaderProgram Instance { get; } Property Value TwistMaterial.TwistShaderProgram"
  },
  "api/Lime.TwistMaterial.html": {
    "href": "api/Lime.TwistMaterial.html",
    "title": "Class TwistMaterial | Citrus Engine",
    "keywords": "Class TwistMaterial Namespace Lime Assembly Lime.dll public class TwistMaterial : IMaterial Inheritance object TwistMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TwistMaterial() public TwistMaterial() Fields Angle [YuzuMember] public float Angle Field Value float Blending [YuzuMember] public Blending Blending Field Value Blending Pivot [YuzuMember] public Vector2 Pivot Field Value Vector2 Radius [YuzuMember] [Validation.Range(0, Infinity)] public float Radius Field Value float UV0 [YuzuMember] public Vector2 UV0 Field Value Vector2 UV1 [YuzuMember] public Vector2 UV1 Field Value Vector2 Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.UndoHistory-1.html": {
    "href": "api/Lime.UndoHistory-1.html",
    "title": "Class UndoHistory<T> | Citrus Engine",
    "keywords": "Class UndoHistory<T> Namespace Lime Assembly Lime.dll public class UndoHistory<T> where T : IEquatable<T> Type Parameters T Inheritance object UndoHistory<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MaxDepth public int MaxDepth { get; set; } Property Value int Methods Add(T) public void Add(T item) Parameters item T CanRedo() public bool CanRedo() Returns bool CanUndo() public bool CanUndo() Returns bool Clear() public void Clear() ClearAndRestore() public T ClearAndRestore() Returns T Redo() public T Redo() Returns T Undo(T) public T Undo(T item) Parameters item T Returns T"
  },
  "api/Lime.UpdatableNodeBehavior.html": {
    "href": "api/Lime.UpdatableNodeBehavior.html",
    "title": "Class UpdatableNodeBehavior | Citrus Engine",
    "keywords": "Class UpdatableNodeBehavior Namespace Lime Assembly Lime.dll [UpdateStage(typeof(LateUpdateStage))] public class UpdatableNodeBehavior : BehaviorComponent, IDisposable, IAnimable Inheritance object Component NodeComponent BehaviorComponent UpdatableNodeBehavior Implements IDisposable IAnimable Inherited Members BehaviorComponent.Suspended BehaviorComponent.Stop(Node) BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Methods Start() Start is called on the frame in which the component had added just before Update method is called first time. Note: Start doesn't called immediately at the time it is adding. protected override void Start() Update(float) Update is called on every frame if the owner node isn't frozen and the behavior isn't suspended. protected override void Update(float delta) Parameters delta float Elapsed time between frames."
  },
  "api/Lime.UpdateAfterBehaviorAttribute.html": {
    "href": "api/Lime.UpdateAfterBehaviorAttribute.html",
    "title": "Class UpdateAfterBehaviorAttribute | Citrus Engine",
    "keywords": "Class UpdateAfterBehaviorAttribute Namespace Lime Assembly Lime.dll Defines dependencies between behaviors to control update order inside stage. [AttributeUsage(AttributeTargets.Class)] public class UpdateAfterBehaviorAttribute : Attribute Inheritance object Attribute UpdateAfterBehaviorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateAfterBehaviorAttribute(Type) Initializes a new instance of UpdateAfterBehaviorAttribute. public UpdateAfterBehaviorAttribute(Type behaviorType) Parameters behaviorType Type A behavior type that target behavior dependent on. Properties BehaviorType The behavior type that target behavior depenent on. public Type BehaviorType { get; } Property Value Type"
  },
  "api/Lime.UpdateBeforeBehaviorAttribute.html": {
    "href": "api/Lime.UpdateBeforeBehaviorAttribute.html",
    "title": "Class UpdateBeforeBehaviorAttribute | Citrus Engine",
    "keywords": "Class UpdateBeforeBehaviorAttribute Namespace Lime Assembly Lime.dll Defines dependencies between behaviors to control update order inside stage. [AttributeUsage(AttributeTargets.Class)] public class UpdateBeforeBehaviorAttribute : Attribute Inheritance object Attribute UpdateBeforeBehaviorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateBeforeBehaviorAttribute(Type) Initializes a new instance of UpdateBeforeBehaviorAttribute. public UpdateBeforeBehaviorAttribute(Type behaviorType) Parameters behaviorType Type A behavior type that target behavior dependent on. Properties BehaviorType The behavior type that target behavior depenent on. public Type BehaviorType { get; } Property Value Type"
  },
  "api/Lime.UpdateBehavior.html": {
    "href": "api/Lime.UpdateBehavior.html",
    "title": "Class UpdateBehavior | Citrus Engine",
    "keywords": "Class UpdateBehavior Namespace Lime Assembly Lime.dll public class UpdateBehavior : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior UpdateBehavior Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.LateUpdate(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields Updating public UpdateHandler Updating Field Value UpdateHandler Properties Order public override int Order { get; } Property Value int Methods Update(float) public override void Update(float delta) Parameters delta float"
  },
  "api/Lime.UpdateFrozenAttribute.html": {
    "href": "api/Lime.UpdateFrozenAttribute.html",
    "title": "Class UpdateFrozenAttribute | Citrus Engine",
    "keywords": "Class UpdateFrozenAttribute Namespace Lime Assembly Lime.dll Specifies that behavior should be updated even if node is frozen. [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class UpdateFrozenAttribute : Attribute Inheritance object Attribute UpdateFrozenAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.UpdateHandler.html": {
    "href": "api/Lime.UpdateHandler.html",
    "title": "Delegate UpdateHandler | Citrus Engine",
    "keywords": "Delegate UpdateHandler Namespace Lime Assembly Lime.dll public delegate void UpdateHandler(float delta) Parameters delta float"
  },
  "api/Lime.UpdateStageAttribute.html": {
    "href": "api/Lime.UpdateStageAttribute.html",
    "title": "Class UpdateStageAttribute | Citrus Engine",
    "keywords": "Class UpdateStageAttribute Namespace Lime Assembly Lime.dll Specifies update stage for BehaviorComponent. [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class UpdateStageAttribute : Attribute Inheritance object Attribute UpdateStageAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateStageAttribute(Type) Initializes a new instance of UpdateStageAttribute with an update stage identifier. public UpdateStageAttribute(Type stageType) Parameters stageType Type An identifier of update stage. Properties StageType Update stage identifier. public Type StageType { get; } Property Value Type"
  },
  "api/Lime.UpdatedBehavior.html": {
    "href": "api/Lime.UpdatedBehavior.html",
    "title": "Class UpdatedBehavior | Citrus Engine",
    "keywords": "Class UpdatedBehavior Namespace Lime Assembly Lime.dll public class UpdatedBehavior : NodeBehavior, IDisposable, IAnimable, ITriggerable Inheritance object Component NodeComponent BehaviorComponent NodeBehavior UpdatedBehavior Implements IDisposable IAnimable ITriggerable Inherited Members NodeBehavior.OnRegister() NodeBehavior.Start() NodeBehavior.Stop(Node) NodeBehavior.Update(float) NodeBehavior.OnTrigger(string, object, double) BehaviorComponent.Suspended BehaviorComponent.OnOwnerFrozenChanged() BehaviorComponent.Suspend() BehaviorComponent.Resume() NodeComponent.Owner NodeComponent.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Fields Updated public UpdateHandler Updated Field Value UpdateHandler Properties Order public override int Order { get; } Property Value int Methods LateUpdate(float) public override void LateUpdate(float delta) Parameters delta float"
  },
  "api/Lime.UpdatingDelegate.html": {
    "href": "api/Lime.UpdatingDelegate.html",
    "title": "Delegate UpdatingDelegate | Citrus Engine",
    "keywords": "Delegate UpdatingDelegate Namespace Lime Assembly Lime.dll Delegate used by Updating event. public delegate void UpdatingDelegate(float delta) Parameters delta float Time delta since last update."
  },
  "api/Lime.VAlignment.html": {
    "href": "api/Lime.VAlignment.html",
    "title": "Enum VAlignment | Citrus Engine",
    "keywords": "Enum VAlignment Namespace Lime Assembly Lime.dll Types of vertical alignment. public enum VAlignment Fields Bottom = 2 Center = 1 Justify = 3 Top = 0"
  },
  "api/Lime.VBoxLayout.html": {
    "href": "api/Lime.VBoxLayout.html",
    "title": "Class VBoxLayout | Citrus Engine",
    "keywords": "Class VBoxLayout Namespace Lime Assembly Lime.dll public class VBoxLayout : LinearLayout, IDisposable, IAnimable, ILayout Inheritance object Component NodeComponent Layout LinearLayout VBoxLayout Implements IDisposable IAnimable ILayout Inherited Members LinearLayout.Spacing LinearLayout.Direction LinearLayout.ArrangeChildren() LinearLayout.MeasureSizeConstraints() Layout.Owner Layout.DebugRectangles Layout.ConstraintsValid Layout.ArrangementValid Layout.RowAlignment Layout.ColumnAlignment Layout.Alignment Layout.IgnoreHidden Layout.InvalidateConstraintsAndArrangement() Layout.InvalidateArrangement() Layout.OnSizeChanged(Widget, Vector2) Layout.GetChildren() Layout.CalcAlignmentOffsetAndStride(HAlignment, float, int) Layout.CalcAlignmentOffsetAndStride(VAlignment, float, int) Layout.OnOwnerChanged(Node) NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Constructors VBoxLayout() public VBoxLayout()"
  },
  "api/Lime.VSplitter.html": {
    "href": "api/Lime.VSplitter.html",
    "title": "Class VSplitter | Citrus Engine",
    "keywords": "Class VSplitter Namespace Lime Assembly Lime.dll public class VSplitter : Splitter, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Splitter VSplitter Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived ThemedVSplitter Inherited Members Splitter.SeparatorActiveAreaWidth Splitter.SeparatorColor Splitter.SeparatorHighlightColor Splitter.SeparatorDragColor Splitter.IsLocked Splitter.Stretches Splitter.DragStarted Splitter.DragEnded Splitter.RaiseDragStarted() Splitter.RaiseDragEnded() Splitter.GetStretchesList(List<float>, params float[]) Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors VSplitter() public VSplitter() Properties SeparatorWidth public override float SeparatorWidth { get; set; } Property Value float"
  },
  "api/Lime.Validation.ContentsPathAttribute.html": {
    "href": "api/Lime.Validation.ContentsPathAttribute.html",
    "title": "Class Validation.ContentsPathAttribute | Citrus Engine",
    "keywords": "Class Validation.ContentsPathAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property)] public class Validation.ContentsPathAttribute : Attribute, Validation.IValidator<string>, Validation.IValidator Inheritance object Attribute Validation.ContentsPathAttribute Implements Validation.IValidator<string> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(string) public IEnumerable<(Validation.Result Result, string Message)> Validate(string path) Parameters path string Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.DefaultCharsetAttribute.html": {
    "href": "api/Lime.Validation.DefaultCharsetAttribute.html",
    "title": "Class Validation.DefaultCharsetAttribute | Citrus Engine",
    "keywords": "Class Validation.DefaultCharsetAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] public class Validation.DefaultCharsetAttribute : Validation.MatchRegexAttribute, Validation.IValidator<string>, Validation.IValidator, Validation.IPassThroughEnumerable Inheritance object Attribute Validation.MatchRegexAttribute Validation.DefaultCharsetAttribute Implements Validation.IValidator<string> Validation.IValidator Validation.IPassThroughEnumerable Inherited Members Validation.MatchRegexAttribute.Validate(string) Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultCharsetAttribute() public DefaultCharsetAttribute() Methods IsValid(string, out string) public static bool IsValid(string path, out string message) Parameters path string message string Returns bool"
  },
  "api/Lime.Validation.EnsureKeyframeListOrderAttribute.html": {
    "href": "api/Lime.Validation.EnsureKeyframeListOrderAttribute.html",
    "title": "Class Validation.EnsureKeyframeListOrderAttribute | Citrus Engine",
    "keywords": "Class Validation.EnsureKeyframeListOrderAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property)] public class Validation.EnsureKeyframeListOrderAttribute : Attribute, Validation.IValidator<ISimpleKeyframeCollection>, Validation.IValidator Inheritance object Attribute Validation.EnsureKeyframeListOrderAttribute Implements Validation.IValidator<ISimpleKeyframeCollection> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(ISimpleKeyframeCollection) public IEnumerable<(Validation.Result Result, string Message)> Validate(ISimpleKeyframeCollection keyframeList) Parameters keyframeList ISimpleKeyframeCollection Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.EnsureMarkerListOrderAttribute.html": {
    "href": "api/Lime.Validation.EnsureMarkerListOrderAttribute.html",
    "title": "Class Validation.EnsureMarkerListOrderAttribute | Citrus Engine",
    "keywords": "Class Validation.EnsureMarkerListOrderAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property)] public class Validation.EnsureMarkerListOrderAttribute : Attribute, Validation.IValidator<MarkerList>, Validation.IValidator Inheritance object Attribute Validation.EnsureMarkerListOrderAttribute Implements Validation.IValidator<MarkerList> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(MarkerList) public IEnumerable<(Validation.Result Result, string Message)> Validate(MarkerList markerList) Parameters markerList MarkerList Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.EnsureOnlyOneAnimatorPerPropertyAttribute.html": {
    "href": "api/Lime.Validation.EnsureOnlyOneAnimatorPerPropertyAttribute.html",
    "title": "Class Validation.EnsureOnlyOneAnimatorPerPropertyAttribute | Citrus Engine",
    "keywords": "Class Validation.EnsureOnlyOneAnimatorPerPropertyAttribute Namespace Lime Assembly Lime.dll public class Validation.EnsureOnlyOneAnimatorPerPropertyAttribute : Attribute, Validation.IValidator<AnimatorList>, Validation.IValidator Inheritance object Attribute Validation.EnsureOnlyOneAnimatorPerPropertyAttribute Implements Validation.IValidator<AnimatorList> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(AnimatorList) public IEnumerable<(Validation.Result Result, string Message)> Validate(AnimatorList animators) Parameters animators AnimatorList Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.FilePathExistsAttribute.html": {
    "href": "api/Lime.Validation.FilePathExistsAttribute.html",
    "title": "Class Validation.FilePathExistsAttribute | Citrus Engine",
    "keywords": "Class Validation.FilePathExistsAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property)] public class Validation.FilePathExistsAttribute : Attribute, Validation.IValidator<string>, Validation.IValidator Inheritance object Attribute Validation.FilePathExistsAttribute Implements Validation.IValidator<string> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(string) public IEnumerable<(Validation.Result Result, string Message)> Validate(string path) Parameters path string Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.IFixingValidator-1.html": {
    "href": "api/Lime.Validation.IFixingValidator-1.html",
    "title": "Interface Validation.IFixingValidator<T> | Citrus Engine",
    "keywords": "Interface Validation.IFixingValidator<T> Namespace Lime Assembly Lime.dll If it is possible to fix invalid data implement this interface. public interface Validation.IFixingValidator<T> : Validation.IFixingValidator Type Parameters T Inherited Members Validation.IFixingValidator.TryFix(object, out object) Methods TryFix(T, out T) bool TryFix(T value, out T fixedValue) Parameters value T fixedValue T Returns bool"
  },
  "api/Lime.Validation.IFixingValidator.html": {
    "href": "api/Lime.Validation.IFixingValidator.html",
    "title": "Interface Validation.IFixingValidator | Citrus Engine",
    "keywords": "Interface Validation.IFixingValidator Namespace Lime Assembly Lime.dll public interface Validation.IFixingValidator Methods TryFix(object, out object) bool TryFix(object value, out object fixedValue) Parameters value object fixedValue object Returns bool"
  },
  "api/Lime.Validation.IPassThroughEnumerable.html": {
    "href": "api/Lime.Validation.IPassThroughEnumerable.html",
    "title": "Interface Validation.IPassThroughEnumerable | Citrus Engine",
    "keywords": "Interface Validation.IPassThroughEnumerable Namespace Lime Assembly Lime.dll If validation attribute is set up upon a property which implements IEnumerable PassThroughEnumerable will decide if validation should be applied to the property itself or to each of it's elements. This stands true for nested IEnumerables. Doesn't make much sense for class validator. public interface Validation.IPassThroughEnumerable"
  },
  "api/Lime.Validation.IRequireOwner-1.html": {
    "href": "api/Lime.Validation.IRequireOwner-1.html",
    "title": "Interface Validation.IRequireOwner<T> | Citrus Engine",
    "keywords": "Interface Validation.IRequireOwner<T> Namespace Lime Assembly Lime.dll public interface Validation.IRequireOwner<T> : Validation.IRequireOwner Type Parameters T Inherited Members Validation.IRequireOwner.SetOwner(object) Properties Owner T Owner { get; set; } Property Value T"
  },
  "api/Lime.Validation.IRequireOwner.html": {
    "href": "api/Lime.Validation.IRequireOwner.html",
    "title": "Interface Validation.IRequireOwner | Citrus Engine",
    "keywords": "Interface Validation.IRequireOwner Namespace Lime Assembly Lime.dll Implement this interface for you validator if it requires owner to perform validation. public interface Validation.IRequireOwner Methods SetOwner(object) void SetOwner(object owner) Parameters owner object"
  },
  "api/Lime.Validation.IValidator-1.html": {
    "href": "api/Lime.Validation.IValidator-1.html",
    "title": "Interface Validation.IValidator<T> | Citrus Engine",
    "keywords": "Interface Validation.IValidator<T> Namespace Lime Assembly Lime.dll public interface Validation.IValidator<T> : Validation.IValidator Type Parameters T Inherited Members Validation.IValidator.Validate(object) Validation.IValidator.IsValueTypeCompatible(object, Type) Methods Validate(T) IEnumerable<(Validation.Result Result, string Message)> Validate(T value) Parameters value T Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.IValidator.html": {
    "href": "api/Lime.Validation.IValidator.html",
    "title": "Interface Validation.IValidator | Citrus Engine",
    "keywords": "Interface Validation.IValidator Namespace Lime Assembly Lime.dll public interface Validation.IValidator Methods IsValueTypeCompatible(object, Type) bool IsValueTypeCompatible(object value, Type valueType) Parameters value object valueType Type Returns bool Validate(object) IEnumerable<(Validation.Result Result, string Message)> Validate(object value) Parameters value object Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.KeyframePropertyValuesAttribute.html": {
    "href": "api/Lime.Validation.KeyframePropertyValuesAttribute.html",
    "title": "Class Validation.KeyframePropertyValuesAttribute | Citrus Engine",
    "keywords": "Class Validation.KeyframePropertyValuesAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Interface)] public class Validation.KeyframePropertyValuesAttribute : Attribute, Validation.IValidator<IAnimator>, Validation.IValidator Inheritance object Attribute Validation.KeyframePropertyValuesAttribute Implements Validation.IValidator<IAnimator> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(IAnimator) public IEnumerable<(Validation.Result, string)> Validate(IAnimator animator) Parameters animator IAnimator Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.MatchRegexAttribute.html": {
    "href": "api/Lime.Validation.MatchRegexAttribute.html",
    "title": "Class Validation.MatchRegexAttribute | Citrus Engine",
    "keywords": "Class Validation.MatchRegexAttribute Namespace Lime Assembly Lime.dll Validation will fail with Result.Error if string property doesn't match provided regular expression. [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] public class Validation.MatchRegexAttribute : Attribute, Validation.IValidator<string>, Validation.IValidator, Validation.IPassThroughEnumerable Inheritance object Attribute Validation.MatchRegexAttribute Implements Validation.IValidator<string> Validation.IValidator Validation.IPassThroughEnumerable Derived Validation.DefaultCharsetAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MatchRegexAttribute(string) public MatchRegexAttribute(string regularExpression) Parameters regularExpression string Methods Validate(string) public IEnumerable<(Validation.Result Result, string Message)> Validate(string value) Parameters value string Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.NodeChildrenCompositionAttribute.html": {
    "href": "api/Lime.Validation.NodeChildrenCompositionAttribute.html",
    "title": "Class Validation.NodeChildrenCompositionAttribute | Citrus Engine",
    "keywords": "Class Validation.NodeChildrenCompositionAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property)] public class Validation.NodeChildrenCompositionAttribute : Attribute, Validation.IPassThroughEnumerable, Validation.IValidator<Node>, Validation.IValidator Inheritance object Attribute Validation.NodeChildrenCompositionAttribute Implements Validation.IPassThroughEnumerable Validation.IValidator<Node> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanHaveChildren(Type, out TangerineAllowedChildrenTypes) public static bool CanHaveChildren(Type type, out TangerineAllowedChildrenTypes a) Parameters type Type a TangerineAllowedChildrenTypes Returns bool Validate(Node) public IEnumerable<(Validation.Result Result, string Message)> Validate(Node value) Parameters value Node Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.NodeComponentOwnerCompositionAttribute.html": {
    "href": "api/Lime.Validation.NodeComponentOwnerCompositionAttribute.html",
    "title": "Class Validation.NodeComponentOwnerCompositionAttribute | Citrus Engine",
    "keywords": "Class Validation.NodeComponentOwnerCompositionAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property)] public class Validation.NodeComponentOwnerCompositionAttribute : Attribute, Validation.IPassThroughEnumerable, Validation.IValidator<NodeComponent>, Validation.IValidator Inheritance object Attribute Validation.NodeComponentOwnerCompositionAttribute Implements Validation.IPassThroughEnumerable Validation.IValidator<NodeComponent> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(NodeComponent) public IEnumerable<(Validation.Result Result, string Message)> Validate(NodeComponent component) Parameters component NodeComponent Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.NodeParentCompositionAttribute.html": {
    "href": "api/Lime.Validation.NodeParentCompositionAttribute.html",
    "title": "Class Validation.NodeParentCompositionAttribute | Citrus Engine",
    "keywords": "Class Validation.NodeParentCompositionAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Property)] public class Validation.NodeParentCompositionAttribute : Attribute, Validation.IPassThroughEnumerable, Validation.IValidator<Node>, Validation.IValidator Inheritance object Attribute Validation.NodeParentCompositionAttribute Implements Validation.IPassThroughEnumerable Validation.IValidator<Node> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(Node) public IEnumerable<(Validation.Result Result, string Message)> Validate(Node value) Parameters value Node Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.RangeAttribute.html": {
    "href": "api/Lime.Validation.RangeAttribute.html",
    "title": "Class Validation.RangeAttribute | Citrus Engine",
    "keywords": "Class Validation.RangeAttribute Namespace Lime Assembly Lime.dll public class Validation.RangeAttribute : Attribute, Validation.IValidator<object>, Validation.IValidator Inheritance object Attribute Validation.RangeAttribute Implements Validation.IValidator<object> Validation.IValidator Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RangeAttribute(int, int) public RangeAttribute(int minimum, int maximum) Parameters minimum int maximum int RangeAttribute(float, float) public RangeAttribute(float minimum, float maximum) Parameters minimum float maximum float Fields WarningLevel public Validation.Result WarningLevel Field Value Validation.Result Properties Maximum public object Maximum { get; } Property Value object Minimum public object Minimum { get; } Property Value object Methods Validate(object) public IEnumerable<(Validation.Result Result, string Message)> Validate(object value) Parameters value object Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.RatioInfoAttribute.html": {
    "href": "api/Lime.Validation.RatioInfoAttribute.html",
    "title": "Class Validation.RatioInfoAttribute | Citrus Engine",
    "keywords": "Class Validation.RatioInfoAttribute Namespace Lime Assembly Lime.dll public class Validation.RatioInfoAttribute : Validation.TextureInfoAttribute, Validation.IRequireOwner<Node>, Validation.IRequireOwner, Validation.IValidator<Vector2>, Validation.IValidator Inheritance object Attribute Validation.TextureInfoAttribute Validation.RatioInfoAttribute Implements Validation.IRequireOwner<Node> Validation.IRequireOwner Validation.IValidator<Vector2> Validation.IValidator Inherited Members Validation.TextureInfoAttribute.Owner Validation.TextureInfoAttribute.Validate(Vector2) Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RatioInfoAttribute(params Type[]) public RatioInfoAttribute(params Type[] validatableTypes) Parameters validatableTypes Type[] Methods Validate(ISprite, Vector2) protected override IEnumerable<(Validation.Result, string)> Validate(ISprite sprite, Vector2 size) Parameters sprite ISprite size Vector2 Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.Result.html": {
    "href": "api/Lime.Validation.Result.html",
    "title": "Enum Validation.Result | Citrus Engine",
    "keywords": "Enum Validation.Result Namespace Lime Assembly Lime.dll Denotes severity level of a validation. public enum Validation.Result Fields Error = 2 Info = 0 Warning = 1"
  },
  "api/Lime.Validation.SerializableAssetExistsAttribute.html": {
    "href": "api/Lime.Validation.SerializableAssetExistsAttribute.html",
    "title": "Class Validation.SerializableAssetExistsAttribute | Citrus Engine",
    "keywords": "Class Validation.SerializableAssetExistsAttribute Namespace Lime Assembly Lime.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Interface)] public class Validation.SerializableAssetExistsAttribute : Attribute, Validation.IValidator<ISerializableAsset>, Validation.IValidator, Validation.IPassThroughEnumerable Inheritance object Attribute Validation.SerializableAssetExistsAttribute Implements Validation.IValidator<ISerializableAsset> Validation.IValidator Validation.IPassThroughEnumerable Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate(ISerializableAsset) public IEnumerable<(Validation.Result Result, string Message)> Validate(ISerializableAsset serializableAsset) Parameters serializableAsset ISerializableAsset Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.SizeInfoAttribute.html": {
    "href": "api/Lime.Validation.SizeInfoAttribute.html",
    "title": "Class Validation.SizeInfoAttribute | Citrus Engine",
    "keywords": "Class Validation.SizeInfoAttribute Namespace Lime Assembly Lime.dll public class Validation.SizeInfoAttribute : Validation.TextureInfoAttribute, Validation.IRequireOwner<Node>, Validation.IRequireOwner, Validation.IValidator<Vector2>, Validation.IValidator Inheritance object Attribute Validation.TextureInfoAttribute Validation.SizeInfoAttribute Implements Validation.IRequireOwner<Node> Validation.IRequireOwner Validation.IValidator<Vector2> Validation.IValidator Inherited Members Validation.TextureInfoAttribute.Owner Validation.TextureInfoAttribute.Validate(Vector2) Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SizeInfoAttribute(params Type[]) public SizeInfoAttribute(params Type[] validatableTypes) Parameters validatableTypes Type[] Methods Validate(ISprite, Vector2) protected override IEnumerable<(Validation.Result, string)> Validate(ISprite sprite, Vector2 size) Parameters sprite ISprite size Vector2 Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.TextureInfoAttribute.html": {
    "href": "api/Lime.Validation.TextureInfoAttribute.html",
    "title": "Class Validation.TextureInfoAttribute | Citrus Engine",
    "keywords": "Class Validation.TextureInfoAttribute Namespace Lime Assembly Lime.dll public abstract class Validation.TextureInfoAttribute : Attribute, Validation.IRequireOwner<Node>, Validation.IRequireOwner, Validation.IValidator<Vector2>, Validation.IValidator Inheritance object Attribute Validation.TextureInfoAttribute Implements Validation.IRequireOwner<Node> Validation.IRequireOwner Validation.IValidator<Vector2> Validation.IValidator Derived Validation.RatioInfoAttribute Validation.SizeInfoAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TextureInfoAttribute(params Type[]) public TextureInfoAttribute(params Type[] validatableTypes) Parameters validatableTypes Type[] Properties Owner public Node Owner { get; set; } Property Value Node Methods Validate(ISprite, Vector2) protected abstract IEnumerable<(Validation.Result, string)> Validate(ISprite sprite, Vector2 size) Parameters sprite ISprite size Vector2 Returns IEnumerable<(Validation.Result Result, string Message)> Validate(Vector2) public IEnumerable<(Validation.Result Result, string Message)> Validate(Vector2 size) Parameters size Vector2 Returns IEnumerable<(Validation.Result Result, string Message)>"
  },
  "api/Lime.Validation.html": {
    "href": "api/Lime.Validation.html",
    "title": "Class Validation | Citrus Engine",
    "keywords": "Class Validation Namespace Lime Assembly Lime.dll public static class Validation Inheritance object Validation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.ValueAccessor.html": {
    "href": "api/Lime.ValueAccessor.html",
    "title": "Struct ValueAccessor | Citrus Engine",
    "keywords": "Struct ValueAccessor Namespace Lime Assembly Lime.dll public readonly struct ValueAccessor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ValueAccessor(MemberInfo) public ValueAccessor(MemberInfo memberInfo) Parameters memberInfo MemberInfo ValueAccessor(MemberInfo, object[]) public ValueAccessor(MemberInfo memberInfo, object[] indexArguments) Parameters memberInfo MemberInfo indexArguments object[] Properties IndexArguments public object[] IndexArguments { get; } Property Value object[] IsValueMember public bool IsValueMember { get; } Property Value bool IsYuzuField public bool IsYuzuField { get; } Property Value bool MemberInfo public MemberInfo MemberInfo { get; } Property Value MemberInfo Name public string Name { get; } Property Value string Type public Type Type { get; } Property Value Type Methods GetAttribute<T>(bool) public T GetAttribute<T>(bool inherit = false) where T : Attribute Parameters inherit bool Returns T Type Parameters T GetValue(object) public object GetValue(object o) Parameters o object Returns object SetValue(object, object) public void SetValue(object o, object value) Parameters o object value object"
  },
  "api/Lime.Vector2.html": {
    "href": "api/Lime.Vector2.html",
    "title": "Struct Vector2 | Citrus Engine",
    "keywords": "Struct Vector2 Namespace Lime Assembly Lime.dll Representation of 2D vectors and points. public struct Vector2 : IEquatable<Vector2> Implements IEquatable<Vector2> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Vector2(float) public Vector2(float xy) Parameters xy float Vector2(float, float) public Vector2(float x, float y) Parameters x float y float Fields Down Returns a vector with components 0, 1. public static readonly Vector2 Down Field Value Vector2 East Returns a vector with components 1, 0. public static readonly Vector2 East Field Value Vector2 Half Returns a vector with components 0.5, 0.5. public static readonly Vector2 Half Field Value Vector2 Left Returns a vector with components -1, 0. public static readonly Vector2 Left Field Value Vector2 LeftDown public static readonly Vector2 LeftDown Field Value Vector2 LeftUp public static readonly Vector2 LeftUp Field Value Vector2 NaN Returns a vector with components NaN, NaN. public static readonly Vector2 NaN Field Value Vector2 NegativeInfinity Returns a vector with components -Infinity, -Infinity. public static readonly Vector2 NegativeInfinity Field Value Vector2 North Returns a vector with components 0, -1. public static readonly Vector2 North Field Value Vector2 One Returns a vector with components 1, 1. public static readonly Vector2 One Field Value Vector2 PositiveInfinity Returns a vector with components Infinity, Infinity. public static readonly Vector2 PositiveInfinity Field Value Vector2 Right Returns a vector with components 1, 0. public static readonly Vector2 Right Field Value Vector2 RightDown public static readonly Vector2 RightDown Field Value Vector2 RightUp public static readonly Vector2 RightUp Field Value Vector2 South Returns a vector with components 0, 1. public static readonly Vector2 South Field Value Vector2 Up Returns a vector with components 0, -1. public static readonly Vector2 Up Field Value Vector2 West Returns a vector with components -1, 0. public static readonly Vector2 West Field Value Vector2 X [YuzuMember(\"0\")] public float X Field Value float Y [YuzuMember(\"1\")] public float Y Field Value float Zero Returns a vector with components 0, 0. public static readonly Vector2 Zero Field Value Vector2 Properties Atan2Deg Returns the arctangent value of the current vector in the range of (-180, 180]. public float Atan2Deg { get; } Property Value float Atan2Rad Returns the arctangent value of the current vector in the range of (-Pi, Pi]. public float Atan2Rad { get; } Property Value float this[int] Gets or sets the vector component by its index. public float this[int component] { get; set; } Parameters component int Property Value float Length public float Length { get; } Property Value float Normalized Returns this Vector2 as a unit vector with the same direction. public Vector2 Normalized { get; } Property Value Vector2 SqrLength public float SqrLength { get; } Property Value float Methods AngleDeg(Vector2, Vector2) Gets the angle (in degrees) between two Vector2 instances. public static float AngleDeg(Vector2 value1, Vector2 value2) Parameters value1 Vector2 value2 Vector2 Returns float AngleRad(Vector2, Vector2) Gets the angle (in radians) between two Vector2 instances. public static float AngleRad(Vector2 value1, Vector2 value2) Parameters value1 Vector2 value2 Vector2 Returns float Ceiling(Vector2) public static Vector2 Ceiling(Vector2 value) Parameters value Vector2 Returns Vector2 Clamp(Vector2, Vector2, Vector2) public static Vector2 Clamp(Vector2 value, Vector2 a, Vector2 b) Parameters value Vector2 a Vector2 b Vector2 Returns Vector2 CosSin(float) Creates a new Vector2 that represents cosine and sine of specified direction. public static Vector2 CosSin(float radians) Parameters radians float Azimuth of direction (in radians). Returns Vector2 CosSinRough(float) Creates a new Vector2 that represents cosine and sine of specified direction. public static Vector2 CosSinRough(float radians) Parameters radians float Azimuth of direction (in radians). Returns Vector2 CrossProduct(Vector2, Vector2) public static float CrossProduct(Vector2 value1, Vector2 value2) Parameters value1 Vector2 value2 Vector2 Returns float Deconstruct(out float, out float) public readonly void Deconstruct(out float x, out float y) Parameters x float y float Distance(Vector2, Vector2) Returns the distance between two vectors. public static float Distance(Vector2 value1, Vector2 value2) Parameters value1 Vector2 value2 Vector2 Returns float DotProduct(Vector2, Vector2) public static float DotProduct(Vector2 value1, Vector2 value2) Parameters value1 Vector2 value2 Vector2 Returns float Equals(Vector2) Indicates whether the current object is equal to another object of the same type. public bool Equals(Vector2 other) Parameters other Vector2 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. Floor(Vector2) public static Vector2 Floor(Vector2 value) Parameters value Vector2 Returns Vector2 GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Lerp(float, Vector2, Vector2) Creates a new Vector2 that contains linear interpolation of the specified vectors. public static Vector2 Lerp(float amount, Vector2 value1, Vector2 value2) Parameters amount float Weighting value(between 0.0 and 1.0). value1 Vector2 The first vector. value2 Vector2 The second vector. Returns Vector2 Max(Vector2, Vector2) public static Vector2 Max(Vector2 a, Vector2 b) Parameters a Vector2 b Vector2 Returns Vector2 Min(Vector2, Vector2) public static Vector2 Min(Vector2 a, Vector2 b) Parameters a Vector2 b Vector2 Returns Vector2 Parse(string) Converts the string representation of the number to its Vector2 equivalent. public static Vector2 Parse(string s) Parameters s string The string containing the vector to convert. Returns Vector2 Examples \"12, 34\". RotateDeg(Vector2, float) Creates new Vector2 that is turned around point (0, 0). public static Vector2 RotateDeg(Vector2 value, float degrees) Parameters value Vector2 Source vector. degrees float Azimuth of turning (in degrees). Returns Vector2 RotateDegRough(Vector2, float) Creates new Vector2 that is turned around point (0, 0). public static Vector2 RotateDegRough(Vector2 value, float degrees) Parameters value Vector2 Source vector. degrees float Azimuth of turning (in degrees). Returns Vector2 RotateRad(Vector2, float) Creates new Vector2 that is turned around point (0, 0). public static Vector2 RotateRad(Vector2 value, float radians) Parameters value Vector2 Source vector. radians float Azimuth of turning (in radians). Returns Vector2 RotateRadRough(Vector2, float) Creates new Vector2 that is turned around point (0, 0). public static Vector2 RotateRadRough(Vector2 value, float radians) Parameters value Vector2 Source vector. radians float Azimuth of turning (in radians). Returns Vector2 Round(Vector2) public static Vector2 Round(Vector2 value) Parameters value Vector2 Returns Vector2 ToString() Returns the string representation of this Vector2 in the format: \"X, Y\". public override string ToString() Returns string ToString(IFormatProvider) Returns the string representation of this Vector2 in the format: \"X, Y\". public string ToString(IFormatProvider format) Parameters format IFormatProvider Returns string Truncate(Vector2) public static Vector2 Truncate(Vector2 value) Parameters value Vector2 Returns Vector2 TryParse(string, out Vector2) Converts the string representation of the vector to its Vector2 equivalent. The return value indicates whether the conversion succeeded. public static bool TryParse(string s, out Vector2 vector) Parameters s string The string containing the vector to convert. vector Vector2 The result of conversion if it succeeds, Zero otherwise. Returns bool Examples \"12, 34\". Operators operator +(Vector2, Vector2) public static Vector2 operator +(Vector2 lhs, Vector2 rhs) Parameters lhs Vector2 rhs Vector2 Returns Vector2 operator /(Vector2, Vector2) public static Vector2 operator /(Vector2 lhs, Vector2 rhs) Parameters lhs Vector2 rhs Vector2 Returns Vector2 operator /(Vector2, float) public static Vector2 operator /(Vector2 lhs, float rhs) Parameters lhs Vector2 rhs float Returns Vector2 operator ==(Vector2, Vector2) public static bool operator ==(Vector2 lhs, Vector2 rhs) Parameters lhs Vector2 rhs Vector2 Returns bool explicit operator IntVector2(Vector2) public static explicit operator IntVector2(Vector2 value) Parameters value Vector2 Returns IntVector2 explicit operator Size(Vector2) public static explicit operator Size(Vector2 value) Parameters value Vector2 Returns Size explicit operator Vector3(Vector2) public static explicit operator Vector3(Vector2 value) Parameters value Vector2 Returns Vector3 operator !=(Vector2, Vector2) public static bool operator !=(Vector2 lhs, Vector2 rhs) Parameters lhs Vector2 rhs Vector2 Returns bool operator *(Vector2, Vector2) public static Vector2 operator *(Vector2 lhs, Vector2 rhs) Parameters lhs Vector2 rhs Vector2 Returns Vector2 operator *(Vector2, float) public static Vector2 operator *(Vector2 lhs, float rhs) Parameters lhs Vector2 rhs float Returns Vector2 operator *(float, Vector2) public static Vector2 operator *(float lhs, Vector2 rhs) Parameters lhs float rhs Vector2 Returns Vector2 operator -(Vector2, Vector2) public static Vector2 operator -(Vector2 lhs, Vector2 rhs) Parameters lhs Vector2 rhs Vector2 Returns Vector2 operator -(Vector2) public static Vector2 operator -(Vector2 value) Parameters value Vector2 Returns Vector2"
  },
  "api/Lime.Vector2BezierAnimationCurve.html": {
    "href": "api/Lime.Vector2BezierAnimationCurve.html",
    "title": "Class Vector2BezierAnimationCurve | Citrus Engine",
    "keywords": "Class Vector2BezierAnimationCurve Namespace Lime Assembly Lime.dll public class Vector2BezierAnimationCurve : BezierAnimationCurve<Vector2>, IAnimationCurve<Vector2>, IBezierAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Vector2> Inheritance object BezierAnimationCurve<Vector2> Vector2BezierAnimationCurve Implements IAnimationCurve<Vector2> IBezierAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Vector2> Inherited Members BezierAnimationCurve<Vector2>.IsEmpty BezierAnimationCurve<Vector2>.Duration BezierAnimationCurve<Vector2>.RefCount BezierAnimationCurve<Vector2>.Keys BezierAnimationCurve<Vector2>.AddRef() BezierAnimationCurve<Vector2>.Release() BezierAnimationCurve<Vector2>.CreateEvaluator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Interpolate(int, float, float) protected override Vector2 Interpolate(int index, float time, float intervalTime) Parameters index int time float intervalTime float Returns Vector2"
  },
  "api/Lime.Vector2SimpleAnimationCurve.html": {
    "href": "api/Lime.Vector2SimpleAnimationCurve.html",
    "title": "Class Vector2SimpleAnimationCurve | Citrus Engine",
    "keywords": "Class Vector2SimpleAnimationCurve Namespace Lime Assembly Lime.dll public class Vector2SimpleAnimationCurve : SimpleAnimationCurve<Vector2>, IAnimationCurve<Vector2>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Vector2> Inheritance object SimpleAnimationCurve<Vector2> Vector2SimpleAnimationCurve Implements IAnimationCurve<Vector2> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Vector2> Inherited Members SimpleAnimationCurve<Vector2>.Keys SimpleAnimationCurve<Vector2>.IsEmpty SimpleAnimationCurve<Vector2>.Duration SimpleAnimationCurve<Vector2>.RefCount SimpleAnimationCurve<Vector2>.AddRef() SimpleAnimationCurve<Vector2>.Release() SimpleAnimationCurve<Vector2>.CreateEvaluator() SimpleAnimationCurve<Vector2>.Create(IEnumerable<SimpleKeyframe<Vector2>>) SimpleAnimationCurve<Vector2>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(Vector2, Vector2, float) protected override Vector2 InterpolateLinear(Vector2 value1, Vector2 value2, float amount) Parameters value1 Vector2 value2 Vector2 amount float Returns Vector2 InterpolateSplined(Vector2, Vector2, Vector2, Vector2, float) protected override Vector2 InterpolateSplined(Vector2 value1, Vector2 value2, Vector2 value3, Vector2 value4, float amount) Parameters value1 Vector2 value2 Vector2 value3 Vector2 value4 Vector2 amount float Returns Vector2"
  },
  "api/Lime.Vector3.html": {
    "href": "api/Lime.Vector3.html",
    "title": "Struct Vector3 | Citrus Engine",
    "keywords": "Struct Vector3 Namespace Lime Assembly Lime.dll Representation of 3D vectors and points. public struct Vector3 : IEquatable<Vector3> Implements IEquatable<Vector3> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Vector3(Vector2, float) public Vector3(Vector2 xy, float z) Parameters xy Vector2 z float Vector3(float) public Vector3(float xyz) Parameters xyz float Vector3(float, float, float) public Vector3(float x, float y, float z) Parameters x float y float z float Fields Half Returns a vector with components 0.5, 0.5, 0.5. public static readonly Vector3 Half Field Value Vector3 NaN Returns a vector with components NaN, NaN, NaN. public static readonly Vector3 NaN Field Value Vector3 One Returns a vector with components 1, 1, 1. public static readonly Vector3 One Field Value Vector3 UnitX public static readonly Vector3 UnitX Field Value Vector3 UnitY public static readonly Vector3 UnitY Field Value Vector3 UnitZ public static readonly Vector3 UnitZ Field Value Vector3 X [YuzuMember(\"0\")] public float X Field Value float Y [YuzuMember(\"1\")] public float Y Field Value float Z [YuzuMember(\"2\")] public float Z Field Value float Zero Returns a vector with components 0, 0, 0. public static readonly Vector3 Zero Field Value Vector3 Properties this[int] Gets or sets the vector component by its index. public float this[int component] { get; set; } Parameters component int Property Value float Length public float Length { get; } Property Value float Normalized Returns this Vector3 as a unit vector with the same direction. public Vector3 Normalized { get; } Property Value Vector3 SqrLength public float SqrLength { get; } Property Value float Methods CrossProduct(Vector3, Vector3) public static Vector3 CrossProduct(Vector3 value1, Vector3 value2) Parameters value1 Vector3 value2 Vector3 Returns Vector3 DotProduct(Vector3, Vector3) public static float DotProduct(Vector3 value1, Vector3 value2) Parameters value1 Vector3 value2 Vector3 Returns float Equals(Vector3) Indicates whether the current object is equal to another object of the same type. public bool Equals(Vector3 other) Parameters other Vector3 An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Lerp(float, Vector3, Vector3) Creates a new Vector3 that contains linear interpolation of the specified vectors. public static Vector3 Lerp(float amount, Vector3 value1, Vector3 value2) Parameters amount float Weighting value(between 0.0 and 1.0). value1 Vector3 The first vector. value2 Vector3 The second vector. Returns Vector3 The result of linear interpolation of the specified vectors. Max(Vector3, Vector3) public static Vector3 Max(Vector3 value1, Vector3 value2) Parameters value1 Vector3 value2 Vector3 Returns Vector3 Min(Vector3, Vector3) public static Vector3 Min(Vector3 value1, Vector3 value2) Parameters value1 Vector3 value2 Vector3 Returns Vector3 Parse(string) Converts the string representation of the number to its Vector3 equivalent. public static Vector3 Parse(string s) Parameters s string The string containing the vector to convert. Returns Vector3 Examples \"12, 34, 56\". ToString() Returns the string representation of this Vector3 in the format: \"X, Y, Z\". public override string ToString() Returns string ToString(IFormatProvider) Returns the string representation of this Vector3 in the format: \"X, Y, Z\". public string ToString(IFormatProvider format) Parameters format IFormatProvider Returns string TryParse(string, out Vector3) Converts the string representation of the vector to its Vector3 equivalent. The return value indicates whether the conversion succeeded. public static bool TryParse(string s, out Vector3 vector) Parameters s string The string containing the vector to convert. vector Vector3 The result of conversion if it succeeds, Zero otherwise. Returns bool Examples \"12, 34, 56\". Operators operator +(Vector3, Vector3) public static Vector3 operator +(Vector3 lhs, Vector3 rhs) Parameters lhs Vector3 rhs Vector3 Returns Vector3 operator /(Vector3, Vector3) public static Vector3 operator /(Vector3 lhs, Vector3 rhs) Parameters lhs Vector3 rhs Vector3 Returns Vector3 operator /(Vector3, float) public static Vector3 operator /(Vector3 lhs, float rhs) Parameters lhs Vector3 rhs float Returns Vector3 operator ==(Vector3, Vector3) public static bool operator ==(Vector3 lhs, Vector3 rhs) Parameters lhs Vector3 rhs Vector3 Returns bool explicit operator Vector2(Vector3) public static explicit operator Vector2(Vector3 value) Parameters value Vector3 Returns Vector2 operator !=(Vector3, Vector3) public static bool operator !=(Vector3 lhs, Vector3 rhs) Parameters lhs Vector3 rhs Vector3 Returns bool operator *(Vector3, Vector3) public static Vector3 operator *(Vector3 lhs, Vector3 rhs) Parameters lhs Vector3 rhs Vector3 Returns Vector3 operator *(Vector3, float) public static Vector3 operator *(Vector3 lhs, float rhs) Parameters lhs Vector3 rhs float Returns Vector3 operator *(float, Vector3) public static Vector3 operator *(float lhs, Vector3 rhs) Parameters lhs float rhs Vector3 Returns Vector3 operator -(Vector3, Vector3) public static Vector3 operator -(Vector3 lhs, Vector3 rhs) Parameters lhs Vector3 rhs Vector3 Returns Vector3 operator -(Vector3) public static Vector3 operator -(Vector3 value) Parameters value Vector3 Returns Vector3"
  },
  "api/Lime.Vector3BezierAnimationCurve.html": {
    "href": "api/Lime.Vector3BezierAnimationCurve.html",
    "title": "Class Vector3BezierAnimationCurve | Citrus Engine",
    "keywords": "Class Vector3BezierAnimationCurve Namespace Lime Assembly Lime.dll public class Vector3BezierAnimationCurve : BezierAnimationCurve<Vector3>, IAnimationCurve<Vector3>, IBezierAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Vector3> Inheritance object BezierAnimationCurve<Vector3> Vector3BezierAnimationCurve Implements IAnimationCurve<Vector3> IBezierAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Vector3> Inherited Members BezierAnimationCurve<Vector3>.IsEmpty BezierAnimationCurve<Vector3>.Duration BezierAnimationCurve<Vector3>.RefCount BezierAnimationCurve<Vector3>.Keys BezierAnimationCurve<Vector3>.AddRef() BezierAnimationCurve<Vector3>.Release() BezierAnimationCurve<Vector3>.CreateEvaluator() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Interpolate(int, float, float) protected override Vector3 Interpolate(int index, float time, float intervalTime) Parameters index int time float intervalTime float Returns Vector3"
  },
  "api/Lime.Vector3CompressedAnimationCurve.html": {
    "href": "api/Lime.Vector3CompressedAnimationCurve.html",
    "title": "Class Vector3CompressedAnimationCurve | Citrus Engine",
    "keywords": "Class Vector3CompressedAnimationCurve Namespace Lime Assembly Lime.dll public class Vector3CompressedAnimationCurve : CompressedAnimationCurve<Vector3>, IAnimationCurve<Vector3>, ICompressedAnimationCurve, IAnimationCurve Inheritance object CompressedAnimationCurve<Vector3> Vector3CompressedAnimationCurve Implements IAnimationCurve<Vector3> ICompressedAnimationCurve IAnimationCurve Inherited Members CompressedAnimationCurve<Vector3>.FrameNumberFormat CompressedAnimationCurve<Vector3>.FrameNumberBuffer CompressedAnimationCurve<Vector3>.ValueBuffer CompressedAnimationCurve<Vector3>.RefCount CompressedAnimationCurve<Vector3>.AddRef() CompressedAnimationCurve<Vector3>.Release() CompressedAnimationCurve<Vector3>.IsEmpty CompressedAnimationCurve<Vector3>.Duration CompressedAnimationCurve<Vector3>.CreateEvaluator() CompressedAnimationCurve<Vector3>.Compress(List<int>, List<Vector3>) CompressedAnimationCurve<Vector3>.Create(List<int>, List<Vector3>) CompressedAnimationCurve<Vector3>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ValueOffset [YuzuMember] public Vector3 ValueOffset Field Value Vector3 ValueScale [YuzuMember] public Vector3 ValueScale Field Value Vector3 Methods CompressValues(Vector3[]) protected override void CompressValues(Vector3[] values) Parameters values Vector3[] DecompressValue(int) protected override Vector3 DecompressValue(int index) Parameters index int Returns Vector3 Interpolate(Vector3, Vector3, float) protected override Vector3 Interpolate(Vector3 value1, Vector3 value2, float amount) Parameters value1 Vector3 value2 Vector3 amount float Returns Vector3"
  },
  "api/Lime.Vector3SimpleAnimationCurve.html": {
    "href": "api/Lime.Vector3SimpleAnimationCurve.html",
    "title": "Class Vector3SimpleAnimationCurve | Citrus Engine",
    "keywords": "Class Vector3SimpleAnimationCurve Namespace Lime Assembly Lime.dll public class Vector3SimpleAnimationCurve : SimpleAnimationCurve<Vector3>, IAnimationCurve<Vector3>, ISimpleAnimationCurve, IAnimationCurve, IAnimationCurveWithKeys, IAnimationCurveWithKeys<Vector3> Inheritance object SimpleAnimationCurve<Vector3> Vector3SimpleAnimationCurve Implements IAnimationCurve<Vector3> ISimpleAnimationCurve IAnimationCurve IAnimationCurveWithKeys IAnimationCurveWithKeys<Vector3> Inherited Members SimpleAnimationCurve<Vector3>.Keys SimpleAnimationCurve<Vector3>.IsEmpty SimpleAnimationCurve<Vector3>.Duration SimpleAnimationCurve<Vector3>.RefCount SimpleAnimationCurve<Vector3>.AddRef() SimpleAnimationCurve<Vector3>.Release() SimpleAnimationCurve<Vector3>.CreateEvaluator() SimpleAnimationCurve<Vector3>.Create(IEnumerable<SimpleKeyframe<Vector3>>) SimpleAnimationCurve<Vector3>.Create() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InterpolateLinear(Vector3, Vector3, float) protected override Vector3 InterpolateLinear(Vector3 value1, Vector3 value2, float amount) Parameters value1 Vector3 value2 Vector3 amount float Returns Vector3 InterpolateSplined(Vector3, Vector3, Vector3, Vector3, float) protected override Vector3 InterpolateSplined(Vector3 value1, Vector3 value2, Vector3 value3, Vector3 value4, float amount) Parameters value1 Vector3 value2 Vector3 value3 Vector3 value4 Vector3 amount float Returns Vector3"
  },
  "api/Lime.Vector4.html": {
    "href": "api/Lime.Vector4.html",
    "title": "Struct Vector4 | Citrus Engine",
    "keywords": "Struct Vector4 Namespace Lime Assembly Lime.dll public struct Vector4 : IEquatable<Vector4> Implements IEquatable<Vector4> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Vector4(Vector3, float) public Vector4(Vector3 xyz, float w) Parameters xyz Vector3 w float Vector4(float, float, float, float) public Vector4(float x, float y, float z, float w) Parameters x float y float z float w float Fields One Returns a vector with components 1, 1, 1, 1. public static readonly Vector4 One Field Value Vector4 W [YuzuMember(\"3\")] public float W Field Value float X [YuzuMember(\"0\")] public float X Field Value float Y [YuzuMember(\"1\")] public float Y Field Value float Z [YuzuMember(\"2\")] public float Z Field Value float Zero Returns a vector with components 0, 0, 0, 0. public static readonly Vector4 Zero Field Value Vector4 Properties this[int] Gets or sets the vector component by its index. public float this[int component] { get; set; } Parameters component int Property Value float Length public float Length { get; } Property Value float Normalized public Vector4 Normalized { get; } Property Value Vector4 SqrLength public float SqrLength { get; } Property Value float Methods DotProduct(Vector4, Vector4) public static float DotProduct(Vector4 value1, Vector4 value2) Parameters value1 Vector4 value2 Vector4 Returns float Equals(Vector4) Indicates whether the current object is equal to another object of the same type. public bool Equals(Vector4 rhs) Parameters rhs Vector4 Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Operators operator +(Vector4, Vector4) public static Vector4 operator +(Vector4 value1, Vector4 value2) Parameters value1 Vector4 value2 Vector4 Returns Vector4 operator /(Vector4, Vector4) public static Vector4 operator /(Vector4 value1, Vector4 value2) Parameters value1 Vector4 value2 Vector4 Returns Vector4 operator /(Vector4, float) public static Vector4 operator /(Vector4 value1, float divider) Parameters value1 Vector4 divider float Returns Vector4 operator ==(Vector4, Vector4) public static bool operator ==(Vector4 value1, Vector4 value2) Parameters value1 Vector4 value2 Vector4 Returns bool explicit operator Vector2(Vector4) public static explicit operator Vector2(Vector4 value) Parameters value Vector4 Returns Vector2 explicit operator Vector3(Vector4) public static explicit operator Vector3(Vector4 value) Parameters value Vector4 Returns Vector3 operator !=(Vector4, Vector4) public static bool operator !=(Vector4 value1, Vector4 value2) Parameters value1 Vector4 value2 Vector4 Returns bool operator *(Vector4, Vector4) public static Vector4 operator *(Vector4 value1, Vector4 value2) Parameters value1 Vector4 value2 Vector4 Returns Vector4 operator *(Vector4, float) public static Vector4 operator *(Vector4 value, float scaleFactor) Parameters value Vector4 scaleFactor float Returns Vector4 operator *(float, Vector4) public static Vector4 operator *(float scaleFactor, Vector4 value) Parameters scaleFactor float value Vector4 Returns Vector4 operator -(Vector4, Vector4) public static Vector4 operator -(Vector4 value1, Vector4 value2) Parameters value1 Vector4 value2 Vector4 Returns Vector4 operator -(Vector4) public static Vector4 operator -(Vector4 value) Parameters value Vector4 Returns Vector4"
  },
  "api/Lime.VectorShape.Line.html": {
    "href": "api/Lime.VectorShape.Line.html",
    "title": "Class VectorShape.Line | Citrus Engine",
    "keywords": "Class VectorShape.Line Namespace Lime Assembly Lime.dll public class VectorShape.Line : IVectorShapeElement Inheritance object VectorShape.Line Implements IVectorShapeElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Line() public Line() Line(float, float, float, float, Color4, float, bool) public Line(float x0, float y0, float x1, float y1, Color4 color, float thickness = 1, bool antialiased = true) Parameters x0 float y0 float x1 float y1 float color Color4 thickness float antialiased bool Fields A public Vector2 A Field Value Vector2 Antialiased public bool Antialiased Field Value bool B public Vector2 B Field Value Vector2 Color public Color4 Color Field Value Color4 Thickness public float Thickness Field Value float Methods Draw(Color4) public void Draw(Color4 tint) Parameters tint Color4"
  },
  "api/Lime.VectorShape.TriangleFan.html": {
    "href": "api/Lime.VectorShape.TriangleFan.html",
    "title": "Class VectorShape.TriangleFan | Citrus Engine",
    "keywords": "Class VectorShape.TriangleFan Namespace Lime Assembly Lime.dll public class VectorShape.TriangleFan : IVectorShapeElement Inheritance object VectorShape.TriangleFan Implements IVectorShapeElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TriangleFan(float[], Color4) public TriangleFan(float[] vertices, Color4 color) Parameters vertices float[] color Color4 Methods Draw(Color4) public void Draw(Color4 tint) Parameters tint Color4"
  },
  "api/Lime.VectorShape.html": {
    "href": "api/Lime.VectorShape.html",
    "title": "Class VectorShape | Citrus Engine",
    "keywords": "Class VectorShape Namespace Lime Assembly Lime.dll public class VectorShape : List<IVectorShapeElement>, IList<IVectorShapeElement>, ICollection<IVectorShapeElement>, IReadOnlyList<IVectorShapeElement>, IReadOnlyCollection<IVectorShapeElement>, IEnumerable<IVectorShapeElement>, IList, ICollection, IEnumerable Inheritance object List<IVectorShapeElement> VectorShape Implements IList<IVectorShapeElement> ICollection<IVectorShapeElement> IReadOnlyList<IVectorShapeElement> IReadOnlyCollection<IVectorShapeElement> IEnumerable<IVectorShapeElement> IList ICollection IEnumerable Inherited Members List<IVectorShapeElement>.Add(IVectorShapeElement) List<IVectorShapeElement>.AddRange(IEnumerable<IVectorShapeElement>) List<IVectorShapeElement>.AsReadOnly() List<IVectorShapeElement>.BinarySearch(int, int, IVectorShapeElement, IComparer<IVectorShapeElement>) List<IVectorShapeElement>.BinarySearch(IVectorShapeElement) List<IVectorShapeElement>.BinarySearch(IVectorShapeElement, IComparer<IVectorShapeElement>) List<IVectorShapeElement>.Clear() List<IVectorShapeElement>.Contains(IVectorShapeElement) List<IVectorShapeElement>.ConvertAll<TOutput>(Converter<IVectorShapeElement, TOutput>) List<IVectorShapeElement>.CopyTo(int, IVectorShapeElement[], int, int) List<IVectorShapeElement>.CopyTo(IVectorShapeElement[]) List<IVectorShapeElement>.CopyTo(IVectorShapeElement[], int) List<IVectorShapeElement>.EnsureCapacity(int) List<IVectorShapeElement>.Exists(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.Find(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindAll(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindIndex(int, int, Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindIndex(int, Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindIndex(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindLast(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindLastIndex(int, int, Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindLastIndex(int, Predicate<IVectorShapeElement>) List<IVectorShapeElement>.FindLastIndex(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.ForEach(Action<IVectorShapeElement>) List<IVectorShapeElement>.GetEnumerator() List<IVectorShapeElement>.GetRange(int, int) List<IVectorShapeElement>.IndexOf(IVectorShapeElement) List<IVectorShapeElement>.IndexOf(IVectorShapeElement, int) List<IVectorShapeElement>.IndexOf(IVectorShapeElement, int, int) List<IVectorShapeElement>.Insert(int, IVectorShapeElement) List<IVectorShapeElement>.InsertRange(int, IEnumerable<IVectorShapeElement>) List<IVectorShapeElement>.LastIndexOf(IVectorShapeElement) List<IVectorShapeElement>.LastIndexOf(IVectorShapeElement, int) List<IVectorShapeElement>.LastIndexOf(IVectorShapeElement, int, int) List<IVectorShapeElement>.Remove(IVectorShapeElement) List<IVectorShapeElement>.RemoveAll(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.RemoveAt(int) List<IVectorShapeElement>.RemoveRange(int, int) List<IVectorShapeElement>.Reverse() List<IVectorShapeElement>.Reverse(int, int) List<IVectorShapeElement>.Slice(int, int) List<IVectorShapeElement>.Sort() List<IVectorShapeElement>.Sort(IComparer<IVectorShapeElement>) List<IVectorShapeElement>.Sort(Comparison<IVectorShapeElement>) List<IVectorShapeElement>.Sort(int, int, IComparer<IVectorShapeElement>) List<IVectorShapeElement>.ToArray() List<IVectorShapeElement>.TrimExcess() List<IVectorShapeElement>.TrueForAll(Predicate<IVectorShapeElement>) List<IVectorShapeElement>.Capacity List<IVectorShapeElement>.Count List<IVectorShapeElement>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.RandomItem<T>(ICollection<T>) LinqExtensions.Distinct<TSource>(IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, Func<TSource, TSource, bool>) LinqExtensions.Intersect<T>(IEnumerable<T>, IEnumerable<T>, Func<T, T, bool>) Mathf.Shuffle<T>(IEnumerable<T>, IRandom) Mathf.Shuffle<T>(IEnumerable<T>, Random) Toolbox.RemoveTail<T>(List<T>, int) Methods Draw() public void Draw() Draw(Matrix32) public void Draw(Matrix32 transform) Parameters transform Matrix32 Draw(Matrix32, Color4) public void Draw(Matrix32 transform, Color4 tint) Parameters transform Matrix32 tint Color4"
  },
  "api/Lime.VectorShapeButtonPresenter.html": {
    "href": "api/Lime.VectorShapeButtonPresenter.html",
    "title": "Class VectorShapeButtonPresenter | Citrus Engine",
    "keywords": "Class VectorShapeButtonPresenter Namespace Lime Assembly Lime.dll public class VectorShapeButtonPresenter : IPresenter Inheritance object VectorShapeButtonPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VectorShapeButtonPresenter(VectorShape) public VectorShapeButtonPresenter(VectorShape shape) Parameters shape VectorShape Properties FocusColor public Color4 FocusColor { get; set; } Property Value Color4 NormalColor public Color4 NormalColor { get; set; } Property Value Color4 PressedColor public Color4 PressedColor { get; set; } Property Value Color4 Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool SetState(string) public void SetState(string state) Parameters state string"
  },
  "api/Lime.Version.html": {
    "href": "api/Lime.Version.html",
    "title": "Class Version | Citrus Engine",
    "keywords": "Class Version Namespace Lime Assembly Lime.dll public static class Version Inheritance object Version Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BundleFormatVersion public const int BundleFormatVersion = 9 Field Value int LimePersistenceSchemaVersion public const int LimePersistenceSchemaVersion = 8 Field Value int"
  },
  "api/Lime.Vertex.html": {
    "href": "api/Lime.Vertex.html",
    "title": "Struct Vertex | Citrus Engine",
    "keywords": "Struct Vertex Namespace Lime Assembly Lime.dll public struct Vertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Color public Color4 Color Field Value Color4 Pos public Vector2 Pos Field Value Vector2 UV1 public Vector2 UV1 Field Value Vector2 UV2 public Vector2 UV2 Field Value Vector2"
  },
  "api/Lime.VertexInputLayout.html": {
    "href": "api/Lime.VertexInputLayout.html",
    "title": "Class VertexInputLayout | Citrus Engine",
    "keywords": "Class VertexInputLayout Namespace Lime Assembly Lime.dll public class VertexInputLayout : IDisposable Inheritance object VertexInputLayout Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~VertexInputLayout() protected ~VertexInputLayout() New(VertexInputLayoutBinding[], VertexInputLayoutAttribute[]) public static VertexInputLayout New(VertexInputLayoutBinding[] bindings, VertexInputLayoutAttribute[] attributes) Parameters bindings VertexInputLayoutBinding[] attributes VertexInputLayoutAttribute[] Returns VertexInputLayout"
  },
  "api/Lime.VertexInputLayoutAttribute.html": {
    "href": "api/Lime.VertexInputLayoutAttribute.html",
    "title": "Struct VertexInputLayoutAttribute | Citrus Engine",
    "keywords": "Struct VertexInputLayoutAttribute Namespace Lime Assembly Lime.dll public struct VertexInputLayoutAttribute Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Format public Format Format Field Value Format Location public int Location Field Value int Offset public int Offset Field Value int Slot public int Slot Field Value int"
  },
  "api/Lime.VertexInputLayoutBinding.html": {
    "href": "api/Lime.VertexInputLayoutBinding.html",
    "title": "Struct VertexInputLayoutBinding | Citrus Engine",
    "keywords": "Struct VertexInputLayoutBinding Namespace Lime Assembly Lime.dll public struct VertexInputLayoutBinding Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Slot public int Slot Field Value int Stride public int Stride Field Value int"
  },
  "api/Lime.VertexPositionColor.html": {
    "href": "api/Lime.VertexPositionColor.html",
    "title": "Struct VertexPositionColor | Citrus Engine",
    "keywords": "Struct VertexPositionColor Namespace Lime Assembly Lime.dll public struct VertexPositionColor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Color public Color4 Color Field Value Color4 Position public Vector3 Position Field Value Vector3"
  },
  "api/Lime.VertexShader.html": {
    "href": "api/Lime.VertexShader.html",
    "title": "Class VertexShader | Citrus Engine",
    "keywords": "Class VertexShader Namespace Lime Assembly Lime.dll public class VertexShader : Shader, IDisposable Inheritance object Shader VertexShader Implements IDisposable Inherited Members Shader.Source Shader.Stage Shader.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VertexShader(string) public VertexShader(string source) Parameters source string"
  },
  "api/Lime.VerticalLineCaret.html": {
    "href": "api/Lime.VerticalLineCaret.html",
    "title": "Class VerticalLineCaret | Citrus Engine",
    "keywords": "Class VerticalLineCaret Namespace Lime Assembly Lime.dll public class VerticalLineCaret : ICaretPresenter, IPresenter Inheritance object VerticalLineCaret Implements ICaretPresenter IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Color public Color4 Color { get; set; } Property Value Color4 Position public Vector2 Position { get; set; } Property Value Vector2 Thickness public float Thickness { get; set; } Property Value float Visible public bool Visible { get; set; } Property Value bool Width public float Width { get; set; } Property Value float Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.VideoDecoder.VertexPosUV.html": {
    "href": "api/Lime.VideoDecoder.VertexPosUV.html",
    "title": "Struct VideoDecoder.VertexPosUV | Citrus Engine",
    "keywords": "Struct VideoDecoder.VertexPosUV Namespace Lime Assembly Lime.dll public struct VideoDecoder.VertexPosUV Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Pos public Vector2 Pos Field Value Vector2 UV1 public Vector2 UV1 Field Value Vector2"
  },
  "api/Lime.VideoDecoder.YUVtoRGBMaterial.html": {
    "href": "api/Lime.VideoDecoder.YUVtoRGBMaterial.html",
    "title": "Class VideoDecoder.YUVtoRGBMaterial | Citrus Engine",
    "keywords": "Class VideoDecoder.YUVtoRGBMaterial Namespace Lime Assembly Lime.dll public class VideoDecoder.YUVtoRGBMaterial : IMaterial Inheritance object VideoDecoder.YUVtoRGBMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors YUVtoRGBMaterial() public YUVtoRGBMaterial() Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Strength public float Strength { get; set; } Property Value float Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.VideoDecoder.html": {
    "href": "api/Lime.VideoDecoder.html",
    "title": "Class VideoDecoder | Citrus Engine",
    "keywords": "Class VideoDecoder Namespace Lime Assembly Lime.dll public class VideoDecoder : IDisposable Inheritance object VideoDecoder Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VideoDecoder(string) public VideoDecoder(string path) Parameters path string Fields HasNewTexture public bool HasNewTexture Field Value bool Looped public bool Looped Field Value bool MuteAudio public bool MuteAudio Field Value bool OnStart public Action OnStart Field Value Action Status public VideoPlayerStatus Status Field Value VideoPlayerStatus Properties CurrentPosition public float CurrentPosition { get; set; } Property Value float Duration public float Duration { get; } Property Value float Height public int Height { get; } Property Value int Texture public ITexture Texture { get; } Property Value ITexture Width public int Width { get; } Property Value int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Pause() public void Pause() Start() public Task Start() Returns Task Stop() public void Stop() Update(float) public void Update(float delta) Parameters delta float UpdateTexture() public void UpdateTexture()"
  },
  "api/Lime.VideoPlayer.html": {
    "href": "api/Lime.VideoPlayer.html",
    "title": "Class VideoPlayer | Citrus Engine",
    "keywords": "Class VideoPlayer Namespace Lime Assembly Lime.dll public class VideoPlayer : Image, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IImageCombinerArg, IMaterialComponentOwner, IUpdatableNode Inheritance object Node Widget Image VideoPlayer Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IImageCombinerArg IMaterialComponentOwner IUpdatableNode Inherited Members Image.Sprite Image.UV0 Image.UV1 Image.Material Image.DefaultMaterial Image.CalcContentSize() Image.AddToRenderChain(RenderChain) Image.PartialHitTestByContents(ref HitTestArgs) Image.IsNotRenderTexture() Image.GetRenderObject<TRenderObject>() Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors VideoPlayer() public VideoPlayer() VideoPlayer(Widget) public VideoPlayer(Widget parentWidget) Parameters parentWidget Widget Properties CurrentPosition public float CurrentPosition { get; set; } Property Value float Duration public float Duration { get; } Property Value float Looped public bool Looped { get; set; } Property Value bool MuteAudio public bool MuteAudio { get; set; } Property Value bool Status public VideoPlayerStatus Status { get; } Property Value VideoPlayerStatus Methods Dispose() Stops all tasks and calls Dispose of all descendants. public override void Dispose() GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject InitPlayer(string) public void InitPlayer(string sourcePath) Parameters sourcePath string OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float Pause() public void Pause() Start(Action) public void Start(Action onStart) Parameters onStart Action Stop() public void Stop()"
  },
  "api/Lime.VideoPlayerStatus.html": {
    "href": "api/Lime.VideoPlayerStatus.html",
    "title": "Enum VideoPlayerStatus | Citrus Engine",
    "keywords": "Enum VideoPlayerStatus Namespace Lime Assembly Lime.dll public enum VideoPlayerStatus Fields Error = 1 Finished = 4 None = 0 Paused = 3 Playing = 2"
  },
  "api/Lime.Viewport.html": {
    "href": "api/Lime.Viewport.html",
    "title": "Struct Viewport | Citrus Engine",
    "keywords": "Struct Viewport Namespace Lime Assembly Lime.dll public struct Viewport Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Viewport(WindowRect) public Viewport(WindowRect bounds) Parameters bounds WindowRect Viewport(int, int, int, int) public Viewport(int x, int y, int width, int height) Parameters x int y int width int height int Viewport(int, int, int, int, float, float) public Viewport(int x, int y, int width, int height, float minDepth, float maxDepth) Parameters x int y int width int height int minDepth float maxDepth float Fields Default public static readonly Viewport Default Field Value Viewport Height public int Height Field Value int MaxDepth public float MaxDepth Field Value float MinDepth public float MinDepth Field Value float Width public int Width Field Value int X public int X Field Value int Y public int Y Field Value int Properties Bounds public WindowRect Bounds { get; set; } Property Value WindowRect"
  },
  "api/Lime.Viewport3D.html": {
    "href": "api/Lime.Viewport3D.html",
    "title": "Class Viewport3D | Citrus Engine",
    "keywords": "Class Viewport3D Namespace Lime Assembly Lime.dll [TangerineNodeBuilder(\"BuildForTangerine\")] [TangerineAllowedChildrenTypes(new Type[] { typeof(Node3D), typeof(SplineGear3D), typeof(Audio) })] [TangerineMenuPath(\"3D/Viewport 3D\")] [TangerineVisualHintGroup(\"/All/Nodes/Containers\", null)] public class Viewport3D : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Viewport3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Viewport3D() public Viewport3D() Properties Camera public Camera3D Camera { get; } Property Value Camera3D CameraRef [YuzuMember] [TangerineKeyframeColor(28)] public NodeReference<Camera3D> CameraRef { get; set; } Property Value NodeReference<Camera3D> Frame [YuzuMember] [TangerineKeyframeColor(31)] public float Frame { get; set; } Property Value float Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject MakeProjection(float, float, Matrix32, Matrix44, Matrix44) public static Matrix44 MakeProjection(float width, float height, Matrix32 transform, Matrix44 cameraProjection, Matrix44 orthoProjection) Parameters width float height float transform Matrix32 cameraProjection Matrix44 orthoProjection Matrix44 Returns Matrix44 OnSizeChanged(Vector2) protected override void OnSizeChanged(Vector2 sizeDelta) Parameters sizeDelta Vector2 PartialHitTest(ref HitTestArgs) Checks whether this widget contains the given point. protected override bool PartialHitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool ScreenPointToRay(Vector2) public Ray ScreenPointToRay(Vector2 pt) Parameters pt Vector2 Returns Ray ScreenPointToRay(Vector3) public Ray ScreenPointToRay(Vector3 pt) Parameters pt Vector3 Returns Ray ScreenToWorldPoint(Vector3) public Vector3 ScreenToWorldPoint(Vector3 pt) Parameters pt Vector3 Returns Vector3 ViewportPointToRay(Vector2) public Ray ViewportPointToRay(Vector2 pt) Parameters pt Vector2 Returns Ray ViewportPointToRay(Vector3) public Ray ViewportPointToRay(Vector3 pt) Parameters pt Vector3 Returns Ray ViewportToWorldPoint(Vector3) public Vector3 ViewportToWorldPoint(Vector3 pt) Parameters pt Vector3 Returns Vector3 WorldToScreenPoint(Vector3) public Vector3 WorldToScreenPoint(Vector3 pt) Parameters pt Vector3 Returns Vector3 WorldToViewportPoint(Vector3) public Vector3 WorldToViewportPoint(Vector3 pt) Parameters pt Vector3 Returns Vector3"
  },
  "api/Lime.VignetteMaterial.html": {
    "href": "api/Lime.VignetteMaterial.html",
    "title": "Class VignetteMaterial | Citrus Engine",
    "keywords": "Class VignetteMaterial Namespace Lime Assembly Lime.dll public class VignetteMaterial : IMaterial Inheritance object VignetteMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VignetteMaterial() public VignetteMaterial() VignetteMaterial(Blending) public VignetteMaterial(Blending blending) Parameters blending Blending Properties Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Color [YuzuMember] public Color4 Color { get; set; } Property Value Color4 Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Radius [YuzuMember] public float Radius { get; set; } Property Value float Softness [YuzuMember] public float Softness { get; set; } Property Value float UV1 [YuzuMember] public Vector2 UV1 { get; set; } Property Value Vector2 UVOffset [YuzuMember] public Vector2 UVOffset { get; set; } Property Value Vector2 Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.VignetteShaderProgram.html": {
    "href": "api/Lime.VignetteShaderProgram.html",
    "title": "Class VignetteShaderProgram | Citrus Engine",
    "keywords": "Class VignetteShaderProgram Namespace Lime Assembly Lime.dll public class VignetteShaderProgram : ShaderProgram Inheritance object ShaderProgram VignetteShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance() public static VignetteShaderProgram GetInstance() Returns VignetteShaderProgram"
  },
  "api/Lime.VisibleChangingDelegate.html": {
    "href": "api/Lime.VisibleChangingDelegate.html",
    "title": "Delegate VisibleChangingDelegate | Citrus Engine",
    "keywords": "Delegate VisibleChangingDelegate Namespace Lime Assembly Lime.dll Delegate used by VisibleChanging event. public delegate void VisibleChangingDelegate(bool value, bool modal) Parameters value bool New value of Visible. modal bool Indicates whether the window is showing modal."
  },
  "api/Lime.WaitPredicate.html": {
    "href": "api/Lime.WaitPredicate.html",
    "title": "Class WaitPredicate | Citrus Engine",
    "keywords": "Class WaitPredicate Namespace Lime Assembly Lime.dll public abstract class WaitPredicate Inheritance object WaitPredicate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TotalTime public float TotalTime Field Value float Methods Evaluate() public abstract bool Evaluate() Returns bool"
  },
  "api/Lime.WaveComponent.html": {
    "href": "api/Lime.WaveComponent.html",
    "title": "Class WaveComponent | Citrus Engine",
    "keywords": "Class WaveComponent Namespace Lime Assembly Lime.dll WaveComponent applies the wave deformation to its owner. [TangerineMenuPath(\"Effects/Wave\")] public class WaveComponent : MaterialComponent<WaveMaterial>, IDisposable, IAnimable Inheritance object Component NodeComponent MaterialComponent MaterialComponent<WaveMaterial> WaveComponent Implements IDisposable IAnimable Inherited Members MaterialComponent<WaveMaterial>.CustomMaterial NodeComponent.Owner NodeComponent.Dispose() NodeComponent.IsSerializable(Type) NodeComponent.OnBeforeNodeSerialization() NodeComponent.OnAfterNodeSerialization() NodeComponent.OnAfterDeserialization() NodeComponent.OnBuilt() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) Properties Amplitude The strength of the wave along x and y axes. [YuzuMember] public Vector2 Amplitude { get; set; } Property Value Vector2 Blending Material's blend mode. [YuzuMember] public Blending Blending { get; set; } Property Value Blending Frequency The frequency of the wave along x and y axes. [YuzuMember] public Vector2 Frequency { get; set; } Property Value Vector2 IsClamped Whether the waving is clamped withing the widget bounds. [YuzuMember] public bool IsClamped { get; set; } Property Value bool Phase Phase of waving along x and y axes. (0, 0) -- initial state, (1, 1) -- one full cycle, (2, 2) -- two cycles, etc. [YuzuMember] public Vector2 Phase { get; set; } Property Value Vector2 Pivot Denotes the fixed point on the waving surface. Top-left: (0, 0), right-bottom: (1, 1) [YuzuMember] public Vector2 Pivot { get; set; } Property Value Vector2 WaveType Wave type [YuzuMember] public WaveType WaveType { get; set; } Property Value WaveType Methods OnOwnerChanged(Node) protected override void OnOwnerChanged(Node oldOwner) Parameters oldOwner Node"
  },
  "api/Lime.WaveIMA4Decoder.html": {
    "href": "api/Lime.WaveIMA4Decoder.html",
    "title": "Class WaveIMA4Decoder | Citrus Engine",
    "keywords": "Class WaveIMA4Decoder Namespace Lime Assembly Lime.dll public class WaveIMA4Decoder : IAudioDecoder, IDisposable Inheritance object WaveIMA4Decoder Implements IAudioDecoder IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WaveIMA4Decoder(Stream) public WaveIMA4Decoder(Stream stream) Parameters stream Stream Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetBlockSize() public int GetBlockSize() Returns int GetCompressedSize() public int GetCompressedSize() Returns int GetFormat() public AudioFormat GetFormat() Returns AudioFormat GetFrequency() public int GetFrequency() Returns int IsWaveStream(Stream) public static bool IsWaveStream(Stream stream) Parameters stream Stream Returns bool ReadBlocks(nint, int, int) public int ReadBlocks(nint buffer, int startIndex, int blockCount) Parameters buffer nint startIndex int blockCount int Returns int Rewind() public void Rewind()"
  },
  "api/Lime.WaveMaterial.html": {
    "href": "api/Lime.WaveMaterial.html",
    "title": "Class WaveMaterial | Citrus Engine",
    "keywords": "Class WaveMaterial Namespace Lime Assembly Lime.dll public class WaveMaterial : IMaterial Inheritance object WaveMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WaveMaterial() public WaveMaterial() Properties Amplitude [YuzuMember] public Vector2 Amplitude { get; set; } Property Value Vector2 Blending [YuzuMember] public Blending Blending { get; set; } Property Value Blending Frequency [YuzuMember] public Vector2 Frequency { get; set; } Property Value Vector2 Id public string Id { get; set; } Property Value string IsClamped [YuzuMember] public bool IsClamped { get; set; } Property Value bool PassCount public int PassCount { get; } Property Value int Phase [YuzuMember] public Vector2 Phase { get; set; } Property Value Vector2 Pivot [YuzuMember] public Vector2 Pivot { get; set; } Property Value Vector2 Type [YuzuMember] public WaveType Type { get; set; } Property Value WaveType UV0 [YuzuMember] public Vector2 UV0 { get; set; } Property Value Vector2 UV1 [YuzuMember] public Vector2 UV1 { get; set; } Property Value Vector2 Methods Apply(int) public void Apply(int pass) Parameters pass int Invalidate() public void Invalidate()"
  },
  "api/Lime.WaveShaderProgram.html": {
    "href": "api/Lime.WaveShaderProgram.html",
    "title": "Class WaveShaderProgram | Citrus Engine",
    "keywords": "Class WaveShaderProgram Namespace Lime Assembly Lime.dll public class WaveShaderProgram : ShaderProgram Inheritance object ShaderProgram WaveShaderProgram Inherited Members ShaderProgram.Empty ShaderProgram.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInstance(WaveType, bool) public static WaveShaderProgram GetInstance(WaveType type = WaveType.Sinusoidal, bool isClamped = false) Parameters type WaveType isClamped bool Returns WaveShaderProgram"
  },
  "api/Lime.WaveType.html": {
    "href": "api/Lime.WaveType.html",
    "title": "Enum WaveType | Citrus Engine",
    "keywords": "Enum WaveType Namespace Lime Assembly Lime.dll public enum WaveType Fields CircleWave = 1 Sinusoidal = 0"
  },
  "api/Lime.WeakReferencePool-2.CreateItemDelegate.html": {
    "href": "api/Lime.WeakReferencePool-2.CreateItemDelegate.html",
    "title": "Delegate WeakReferencePool<TKey, TValue>.CreateItemDelegate | Citrus Engine",
    "keywords": "Delegate WeakReferencePool<TKey, TValue>.CreateItemDelegate Namespace Lime Assembly Lime.dll public delegate TValue WeakReferencePool<TKey, TValue>.CreateItemDelegate(TKey key) Parameters key TKey Returns TValue"
  },
  "api/Lime.WeakReferencePool-2.html": {
    "href": "api/Lime.WeakReferencePool-2.html",
    "title": "Class WeakReferencePool<TKey, TValue> | Citrus Engine",
    "keywords": "Class WeakReferencePool<TKey, TValue> Namespace Lime Assembly Lime.dll public class WeakReferencePool<TKey, TValue> where TValue : class Type Parameters TKey TValue Inheritance object WeakReferencePool<TKey, TValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WeakReferencePool(CreateItemDelegate) public WeakReferencePool(WeakReferencePool<TKey, TValue>.CreateItemDelegate createItem) Parameters createItem WeakReferencePool<TKey, TValue>.CreateItemDelegate WeakReferencePool(CreateItemDelegate, IEqualityComparer<TKey>, bool) public WeakReferencePool(WeakReferencePool<TKey, TValue>.CreateItemDelegate createItem, IEqualityComparer<TKey> comparer, bool trackResurrection) Parameters createItem WeakReferencePool<TKey, TValue>.CreateItemDelegate comparer IEqualityComparer<TKey> trackResurrection bool Methods GetItem(TKey) public TValue GetItem(TKey key) Parameters key TKey Returns TValue TryRemoveItem(TKey) public bool TryRemoveItem(TKey key) Parameters key TKey Returns bool"
  },
  "api/Lime.WebBrowser.html": {
    "href": "api/Lime.WebBrowser.html",
    "title": "Class WebBrowser | Citrus Engine",
    "keywords": "Class WebBrowser Namespace Lime Assembly Lime.dll public class WebBrowser : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable, IUpdatableNode Inheritance object Node Widget WebBrowser Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable IUpdatableNode Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors WebBrowser() public WebBrowser() WebBrowser(Widget) public WebBrowser(Widget parentWidget) Parameters parentWidget Widget Fields BrowserFactory public static Func<Widget, IWebBrowserImplementation> BrowserFactory Field Value Func<Widget, IWebBrowserImplementation> Properties Url public Uri Url { get; set; } Property Value Uri Methods AddToWidget(Widget) public void AddToWidget(Widget parentWidget) Parameters parentWidget Widget Dispose() Stops all tasks and calls Dispose of all descendants. public override void Dispose() OnSizeChanged(Vector2) protected override void OnSizeChanged(Vector2 sizeDelta) Parameters sizeDelta Vector2 OnUpdate(float) public virtual void OnUpdate(float delta) Parameters delta float"
  },
  "api/Lime.Widget.html": {
    "href": "api/Lime.Widget.html",
    "title": "Class Widget | Citrus Engine",
    "keywords": "Class Widget Namespace Lime Assembly Lime.dll Base class for any rendered object. [TangerineVisualHintGroup(\"/All/Nodes/Containers\", null)] public class Widget : Node, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived Animesh Button CheckBox CommonDropDownList CommonEditBox DistortionMesh ExpandableListItem Frame Image Movie NineGrid ParticleEmitter ParticlesMagnet Polyline RichText SimpleText Slider Spline Splitter Tab TabBar ThemedFileChooserButton TiledImage Viewport3D WebBrowser WindowWidget Inherited Members Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors Widget() public Widget() Fields BoneArray public BoneArray BoneArray Field Value BoneArray DefaultWidgetSize public static readonly Vector2 DefaultWidgetSize Field Value Vector2 EnableViewCulling public static bool EnableViewCulling Field Value bool RenderTransparentWidgets public static bool RenderTransparentWidgets Field Value bool globalBlending protected Blending globalBlending Field Value Blending globalColor protected Color4 globalColor Field Value Color4 globalShader protected ShaderId globalShader Field Value ShaderId globallyEnabled protected bool globallyEnabled Field Value bool globallyVisible protected bool globallyVisible Field Value bool Properties Anchors [YuzuMember] [TangerineKeyframeColor(17)] public Anchors Anchors { get; set; } Property Value Anchors Blending [YuzuMember] [TangerineKeyframeColor(22)] public Blending Blending { get; set; } Property Value Blending BoundingRect public Rectangle BoundingRect { get; set; } Property Value Rectangle Center Parent-relative position of center of this widget. public Vector2 Center { get; } Property Value Vector2 Clicked public virtual Action Clicked { get; set; } Property Value Action Color Hue of this widget. Contents color will be multiplied by it on render. [YuzuMember] [TangerineKeyframeColor(9)] [YuzuSerializeIf(\"IsNotDecorated\")] public Color4 Color { get; set; } Property Value Color4 ContentHeight public float ContentHeight { get; } Property Value float ContentPosition public Vector2 ContentPosition { get; } Property Value Vector2 ContentSize public Vector2 ContentSize { get; } Property Value Vector2 ContentWidth public float ContentWidth { get; } Property Value float EffectiveMaxSize public virtual Vector2 EffectiveMaxSize { get; } Property Value Vector2 EffectiveMinSize public virtual Vector2 EffectiveMinSize { get; } Property Value Vector2 Enabled public virtual bool Enabled { get; set; } Property Value bool FocusScope public KeyboardFocusScope FocusScope { get; set; } Property Value KeyboardFocusScope Focused public static Widget Focused { get; } Property Value Widget FreezeInvisible [YuzuMember] [TangerineKeyframeColor(19)] public bool FreezeInvisible { get; set; } Property Value bool GlobalBlending Gets the widget's effective blending. public Blending GlobalBlending { get; } Property Value Blending GlobalCenter Gets position of this widget's center in the root widget space. public Vector2 GlobalCenter { get; } Property Value Vector2 GlobalColor Gets the widget's effective color. public Color4 GlobalColor { get; } Property Value Color4 GlobalPivotPosition public Vector2 GlobalPivotPosition { get; } Property Value Vector2 GlobalPosition Gets position of this widget in the root widget space. public Vector2 GlobalPosition { get; } Property Value Vector2 GlobalShader Gets the widget's effective shader. public ShaderId GlobalShader { get; } Property Value ShaderId GloballyEnabled Indicates whether the widget is actually enabled. public bool GloballyEnabled { get; } Property Value bool GloballyVisible Indicates whether the widget is actually visible. public bool GloballyVisible { get; } Property Value bool Height public float Height { get; set; } Property Value float HitTestMethod [YuzuMember] public HitTestMethod HitTestMethod { get; set; } Property Value HitTestMethod Input public WidgetInput Input { get; } Property Value WidgetInput this[string] Searches for widget with provided path or id in this widget's descendants. Throws an exception if sought-for widget doesn't exist. This function is thread safe. public Widget this[string path] { get; } Parameters path string Id or path of widget. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). Property Value Widget this[string, object[]] Searches for widget with provided path or id in this widget's descendants. Throws an exception if sought-for widget doesn't exist. This function is thread safe. public Widget this[string format, params object[] arg] { get; } Parameters format string Id or path of widget. Path can be incomplete (i.e. for path Root/Human/Head/Eye Human or Head can be ommited). arg object[] Property Value Widget Layout public ILayout Layout { get; set; } Property Value ILayout LayoutConstraints public LayoutConstraints LayoutConstraints { get; set; } Property Value LayoutConstraints LayoutManager public LayoutManager LayoutManager { get; set; } Property Value LayoutManager LocalToWorldTransform Gets the matrix represents transformation from this widget space into the root widget space. public Matrix32 LocalToWorldTransform { get; } Property Value Matrix32 MaxHeight public float MaxHeight { get; set; } Property Value float MaxSize public Vector2 MaxSize { get; set; } Property Value Vector2 MaxWidth public float MaxWidth { get; set; } Property Value float MeasuredMaxSize public Vector2 MeasuredMaxSize { get; set; } Property Value Vector2 MeasuredMinSize public Vector2 MeasuredMinSize { get; set; } Property Value Vector2 MinHeight public float MinHeight { get; set; } Property Value float MinMaxHeight public float MinMaxHeight { set; } Property Value float MinMaxSize public Vector2 MinMaxSize { set; } Property Value Vector2 MinMaxWidth public float MinMaxWidth { set; } Property Value float MinSize public Vector2 MinSize { get; set; } Property Value Vector2 MinWidth public float MinWidth { get; set; } Property Value float Opacity 0 - fully transparent. 1 - fully opaque. public float Opacity { get; set; } Property Value float Padding Gets or sets the widget padding. Padding defines the white space between the widget content and the widget border. The widget presenter and layout should respect the padding. [Validation.Range(-3.4028235E+38, 3.4028235E+38)] [YuzuMember] public Thickness Padding { get; set; } Property Value Thickness ParentWidget public Widget ParentWidget { get; } Property Value Widget Pivot Center point of rotation and scaling. (0, 0) is top-left corner, (1, 1) is bottom-right corner. [YuzuMember] [TangerineKeyframeColor(6)] [TangerinePropertyDefaultValue(typeof(Widget), \"GetPivotDefaultValue\")] public Vector2 Pivot { get; set; } Property Value Vector2 Position Parent-relative position. [YuzuMember] [TangerineKeyframeColor(4)] [TangerineNumericEditBoxStep(1)] public Vector2 Position { get; set; } Property Value Vector2 Rotation Counter-clockwise rotation of this widget. [YuzuMember] [TangerineKeyframeColor(3)] [TangerineNumericEditBoxStep(1)] public float Rotation { get; set; } Property Value float Scale [YuzuMember] [TangerineKeyframeColor(5)] public Vector2 Scale { get; set; } Property Value Vector2 Shader [YuzuMember] [TangerineKeyframeColor(18)] public ShaderId Shader { get; set; } Property Value ShaderId SilentSize SilentSize is needed to prevent unwanted propagation of OnSizeChanged while deserializing with Yuzu. [YuzuMember(\"Size\")] public Vector2 SilentSize { get; set; } Property Value Vector2 Size [TangerineKeyframeColor(7)] [TangerineNumericEditBoxStep(1)] [Validation.RatioInfo(new Type[] { typeof(Image), typeof(DistortionMesh), typeof(NineGrid) })] [Validation.SizeInfo(new Type[] { typeof(Image), typeof(DistortionMesh), typeof(NineGrid) })] public Vector2 Size { get; set; } Property Value Vector2 SkinningWeights [YuzuMember] public SkinningWeights SkinningWeights { get; set; } Property Value SkinningWeights Sprite Gets or sets a texture upon the widget. For widgets which can not have a texture returns null. public virtual ISprite Sprite { get; set; } Property Value ISprite TabTravesable public TabTraversable TabTravesable { get; set; } Property Value TabTraversable Text Get or sets a label upon the widget. For widgets which can not have a label returns null. public virtual string Text { get; set; } Property Value string Visible [YuzuMember] [TangerineKeyframeColor(19)] public bool Visible { get; set; } Property Value bool Width public float Width { get; set; } Property Value float X Parent-relative X position. public float X { get; set; } Property Value float Y Parent-relative Y position. public float Y { get; set; } Property Value float Methods AddToRenderChain(RenderChain) Adds widget and all its descendants to render chain. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain BoundingRectHitTest(Vector2) public bool BoundingRectHitTest(Vector2 point) Parameters point Vector2 Returns bool CalcAABBInSpaceOf(Widget) Calculates the widget's AABB in the space of another widget. public Rectangle CalcAABBInSpaceOf(Widget widget) Parameters widget Widget Returns Rectangle CalcAABBInViewportSpace(WindowRect, Matrix44) public IntRectangle CalcAABBInViewportSpace(WindowRect viewport, Matrix44 worldViewProjection) Parameters viewport WindowRect worldViewProjection Matrix44 Returns IntRectangle CalcAABBInWindowSpace() public Rectangle CalcAABBInWindowSpace() Returns Rectangle CalcContentSize() public virtual Vector2 CalcContentSize() Returns Vector2 CalcGlobalBoundingRect() Gets the axis-aligned bounding rectangle based on LocalToWorldTransform. public Rectangle CalcGlobalBoundingRect() Returns Rectangle CalcHull(in Matrix32?) public Quadrangle CalcHull(in Matrix32? transform = null) Parameters transform Matrix32? Returns Quadrangle CalcHullInSpaceOf(Widget) Calculates the widget's convex hull in the space of another widget. public Quadrangle CalcHullInSpaceOf(Widget widget) Parameters widget Widget Returns Quadrangle CalcLocalToParentTransform() public Matrix32 CalcLocalToParentTransform() Returns Matrix32 CalcPositionInSpaceOf(Widget) public Vector2 CalcPositionInSpaceOf(Widget widget) Parameters widget Widget Returns Vector2 CalcTransitionToSpaceOf(Widget) Calculates the widget's transition to the space of another widget. public Matrix32 CalcTransitionToSpaceOf(Widget widget) Parameters widget Widget Returns Matrix32 CenterOnParent() public void CenterOnParent() ClipRegionTest(Rectangle) public bool ClipRegionTest(Rectangle clipRegion) Parameters clipRegion Rectangle Returns bool Dispose() Stops all tasks and calls Dispose of all descendants. public override void Dispose() ExpandToContainerWithAnchors() public void ExpandToContainerWithAnchors() GetEffectiveLayer() public int GetEffectiveLayer() Returns int GetPivotDefaultValue() public static object GetPivotDefaultValue() Returns object GetVisibilityIssues() public virtual IEnumerable<string> GetVisibilityIssues() Returns IEnumerable<string> HasInput() public bool HasInput() Returns bool IsFocused() public bool IsFocused() Returns bool IsRenderedToTexture() protected virtual bool IsRenderedToTexture() Returns bool LocalHitTest(ref HitTestArgs) Performs hit test only for this widget and its descendants. Returns true if the widget or one of its decendants contains the given point. This method doesn't take in account if one of the widget's ancestors overlaps the widget. public bool LocalHitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool LocalHitTest(Vector2) Checks whether this widget or one of its descendents contains the given point. This method doesn't take in account if one of the widget's ancestors overlaps the widget. public bool LocalHitTest(Vector2 point) Parameters point Vector2 Returns bool LocalMousePosition() public Vector2 LocalMousePosition() Returns Vector2 OnParentChanged(Node) Occurs when Parent property changes. protected override void OnParentChanged(Node oldParent) Parameters oldParent Node OnSizeChanged(Vector2) protected virtual void OnSizeChanged(Vector2 sizeDelta) Parameters sizeDelta Vector2 PartialHitTest(ref HitTestArgs) Checks whether this widget contains the given point. protected override bool PartialHitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool PartialHitTestByContents(ref HitTestArgs) protected virtual bool PartialHitTestByContents(ref HitTestArgs args) Parameters args HitTestArgs Returns bool RaiseUpdated(float) Raises Updated event in respect of animation speed. public void RaiseUpdated(float delta) Parameters delta float Time delta from last Update. RaiseUpdating(float) Raises Updating event in respect of animation speed. public void RaiseUpdating(float delta) Parameters delta float Time delta from last Update. RecalcBoundingRect() public void RecalcBoundingRect() RecalcGloballyFrozen() protected override void RecalcGloballyFrozen() RecalcGloballyVisible() protected virtual void RecalcGloballyVisible() RefreshLayout() public void RefreshLayout() RevokeFocus() public void RevokeFocus() SetFocus() public void SetFocus() StaticScale(float, bool) TODO: Add summary public override void StaticScale(float ratio, bool roundCoordinates) Parameters ratio float roundCoordinates bool ToLocalMousePosition(Vector2) public Vector2 ToLocalMousePosition(Vector2 mousePosition) Parameters mousePosition Vector2 Returns Vector2 UpdateAncestorBoundingRect(Widget) public override void UpdateAncestorBoundingRect(Widget ancestor) Parameters ancestor Widget WasClicked() public virtual bool WasClicked() Returns bool"
  },
  "api/Lime.WidgetAdapter3D.html": {
    "href": "api/Lime.WidgetAdapter3D.html",
    "title": "Class WidgetAdapter3D | Citrus Engine",
    "keywords": "Class WidgetAdapter3D Namespace Lime Assembly Lime.dll [TangerineNodeBuilder(\"BuildForTangerine\")] [TangerineMenuPath(\"3D/Widget Adapter 3D\")] [TangerineVisualHintGroup(\"/All/Nodes/3D\", null)] public class WidgetAdapter3D : Node3D, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Node3D WidgetAdapter3D Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Inherited Members Node3D.localTransform Node3D.globalTransform Node3D.globalTransformInverse Node3D.globallyVisible Node3D.globallyFreezeInvisible Node3D.globalColor Node3D.Viewport Node3D.Visible Node3D.FreezeInvisible Node3D.Scale Node3D.Rotation Node3D.Position Node3D.Color Node3D.Opaque Node3D.LocalTransform Node3D.GlobalTransform Node3D.GlobalTransformInverse Node3D.GloballyVisible Node3D.GlobalColor Node3D.RecalcGloballyFrozen() Node3D.SetGlobalTransform(Matrix44) Node3D.SetGlobalTransformInverse(Matrix44) Node3D.SetLocalTransform(Matrix44) Node3D.FindModel() Node3D.TryFindModel() Node3D.CalcTransformInSpaceOf(Node3D) Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.OnParentChanged(Node) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.Dispose() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.StaticScale(float, bool) Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.UpdateAncestorBoundingRect(Widget) Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors WidgetAdapter3D() public WidgetAdapter3D() Properties Widget public Widget Widget { get; set; } Property Value Widget Methods AddToRenderChain(RenderChain) Decides what descendant nodes should be added to render chain and under which conditions. This includes children Nodes as well as this Node itself. i.e. if you want Render() of this node to be called you should invoke AddSelfToRenderChain in AddToRenderChain override. public override void AddToRenderChain(RenderChain chain) Parameters chain RenderChain GetPlane() public Plane GetPlane() Returns Plane GetRenderObject() TODO: Add summary. protected override RenderObject GetRenderObject() Returns RenderObject PartialHitTest(ref HitTestArgs) protected override bool PartialHitTest(ref HitTestArgs args) Parameters args HitTestArgs Returns bool"
  },
  "api/Lime.WidgetBoundsPresenter.html": {
    "href": "api/Lime.WidgetBoundsPresenter.html",
    "title": "Class WidgetBoundsPresenter | Citrus Engine",
    "keywords": "Class WidgetBoundsPresenter Namespace Lime Assembly Lime.dll public class WidgetBoundsPresenter : IPresenter Inheritance object WidgetBoundsPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WidgetBoundsPresenter(Color4, float, float) public WidgetBoundsPresenter(Color4 color, float thickness = 1, float cornerRadius = 0) Parameters color Color4 thickness float cornerRadius float Properties Color public Color4 Color { get; set; } Property Value Color4 CornerRadius public float CornerRadius { get; set; } Property Value float IgnorePadding public bool IgnorePadding { get; set; } Property Value bool Thickness public float Thickness { get; set; } Property Value float Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.WidgetContext.html": {
    "href": "api/Lime.WidgetContext.html",
    "title": "Class WidgetContext | Citrus Engine",
    "keywords": "Class WidgetContext Namespace Lime Assembly Lime.dll Represents the global context for every widget within the current window. public class WidgetContext : Context, IContext Inheritance object Context WidgetContext Implements IContext Inherited Members Context.Activate() Context.Deactivate() Context.Scoped() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WidgetContext(Widget) public WidgetContext(Widget root) Parameters root Widget Fields NodeCaptureKeys public static readonly List<Key> NodeCaptureKeys Field Value List<Key> Properties Current Gets the current global context. The context is set on every window's callback. public static WidgetContext Current { get; } Property Value WidgetContext GestureManager public GestureManager GestureManager { get; set; } Property Value GestureManager MouseCursor Gets or sets the mouse cursor. The WindowWidget resets mouse cursor to the default value in the beginning of every update cycle. public MouseCursor MouseCursor { get; set; } Property Value MouseCursor NodeCapturedByMouse Gets the topmost node under mouse at the moment any of mouse buttons down. public Node NodeCapturedByMouse { get; } Property Value Node NodeUnderMouse Gets the topmost node which the mouse cursor is up on. public Node NodeUnderMouse { get; } Property Value Node Root public Widget Root { get; } Property Value Widget"
  },
  "api/Lime.WidgetFlatFillPresenter.html": {
    "href": "api/Lime.WidgetFlatFillPresenter.html",
    "title": "Class WidgetFlatFillPresenter | Citrus Engine",
    "keywords": "Class WidgetFlatFillPresenter Namespace Lime Assembly Lime.dll public class WidgetFlatFillPresenter : IPresenter Inheritance object WidgetFlatFillPresenter Implements IPresenter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WidgetFlatFillPresenter(Color4) public WidgetFlatFillPresenter(Color4 color) Parameters color Color4 Properties Color public Color4 Color { get; set; } Property Value Color4 IgnorePadding public bool IgnorePadding { get; set; } Property Value bool Methods GetRenderObject(Node) public RenderObject GetRenderObject(Node node) Parameters node Node Returns RenderObject PartialHitTest(Node, ref HitTestArgs) public bool PartialHitTest(Node node, ref HitTestArgs args) Parameters node Node args HitTestArgs Returns bool"
  },
  "api/Lime.WidgetInput.FilterFunc.html": {
    "href": "api/Lime.WidgetInput.FilterFunc.html",
    "title": "Delegate WidgetInput.FilterFunc | Citrus Engine",
    "keywords": "Delegate WidgetInput.FilterFunc Namespace Lime Assembly Lime.dll public delegate bool WidgetInput.FilterFunc(Widget widget, Key key) Parameters widget Widget key Key Returns bool"
  },
  "api/Lime.WidgetInput.html": {
    "href": "api/Lime.WidgetInput.html",
    "title": "Class WidgetInput | Citrus Engine",
    "keywords": "Class WidgetInput Namespace Lime Assembly Lime.dll WidgetInput class allows a widget to capture an input device (mouse, keyboard). After capturing the device, the widget and all its children receive an actual buttons and device axes state (e.g. mouse position). Other widgets receive released buttons state and frozen axes values. public class WidgetInput : IDisposable Inheritance object WidgetInput Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WidgetInput(Widget) public WidgetInput(Widget widget) Parameters widget Widget Fields AcceptMouseBeyondWidget Indicates whether mouse events should be accepted even the widget is not under the mouse cursor. public bool AcceptMouseBeyondWidget Field Value bool AcceptMouseBeyondWidgetByDefault public static bool AcceptMouseBeyondWidgetByDefault Field Value bool AcceptMouseThroughDescendants Indicates whether mouse events should be accepted even the mouse is over one of widget's descendant. public bool AcceptMouseThroughDescendants Field Value bool Filter public static WidgetInput.FilterFunc Filter Field Value WidgetInput.FilterFunc Properties CurrentScope Returns input scope widget with highest priority. public Widget CurrentScope { get; } Property Value Widget LocalMousePosition [Obsolete(\"Use Widget.LocalMousePosition()\")] public Vector2 LocalMousePosition { get; } Property Value Vector2 MousePosition public Vector2 MousePosition { get; } Property Value Vector2 TextInput public string TextInput { get; } Property Value string WheelScrollAmount public float WheelScrollAmount { get; } Property Value float Methods CaptureAll() [Obsolete(\"Use RestrictScope() instead\")] public void CaptureAll() ConsumeKey(Key) public void ConsumeKey(Key key) Parameters key Key ConsumeKeyPress(Key) public bool ConsumeKeyPress(Key key) Parameters key Key Returns bool ConsumeKeyRelease(Key) public bool ConsumeKeyRelease(Key key) Parameters key Key Returns bool ConsumeKeyRepeat(Key) public bool ConsumeKeyRepeat(Key key) Parameters key Key Returns bool ConsumeKeys(IEnumerable<Key>) public void ConsumeKeys(IEnumerable<Key> keys) Parameters keys IEnumerable<Key> ConsumeKeys(List<Key>) public void ConsumeKeys(List<Key> keys) Parameters keys List<Key> DerestrictScope() Derestricts input scope from the current widget and its descendants. public void DerestrictScope() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() EnumerateScopes() Enumerates input scope stack from top to bottom. Top being the highest priority input scope widget. public IEnumerable<Widget> EnumerateScopes() Returns IEnumerable<Widget> GetNumTouches() public int GetNumTouches() Returns int GetTouchPosition(int) public Vector2 GetTouchPosition(int index) Parameters index int Returns Vector2 IsAcceptingKey(Key) public bool IsAcceptingKey(Key key) Parameters key Key Returns bool IsAcceptingMouse() public bool IsAcceptingMouse() Returns bool IsKeyPressed(Key) public bool IsKeyPressed(Key key) Parameters key Key Returns bool IsMousePressed(int) public bool IsMousePressed(int button = 0) Parameters button int Returns bool ReleaseAll() [Obsolete(\"Use DerestrictScope() instead\")] public void ReleaseAll() RestrictScope() Restricts input scope with the current widget and its descendants. public void RestrictScope() WasAnyMouseButtonPressed() public bool WasAnyMouseButtonPressed() Returns bool WasKeyPressed(Key) public bool WasKeyPressed(Key key) Parameters key Key Returns bool WasKeyReleased(Key) public bool WasKeyReleased(Key key) Parameters key Key Returns bool WasKeyRepeated(Key) public bool WasKeyRepeated(Key key) Parameters key Key Returns bool WasMousePressed(int) public bool WasMousePressed(int button = 0) Parameters button int Returns bool WasMouseReleased(int) public bool WasMouseReleased(int button = 0) Parameters button int Returns bool"
  },
  "api/Lime.WidgetMaterial.html": {
    "href": "api/Lime.WidgetMaterial.html",
    "title": "Class WidgetMaterial | Citrus Engine",
    "keywords": "Class WidgetMaterial Namespace Lime Assembly Lime.dll public class WidgetMaterial : IMaterial Inheritance object WidgetMaterial Implements IMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Blending public readonly Blending Blending Field Value Blending Diffuse public static readonly IMaterial Diffuse Field Value IMaterial PremulAlpha public readonly bool PremulAlpha Field Value bool ShaderProgram public readonly ShaderProgram ShaderProgram Field Value ShaderProgram Properties Id public string Id { get; set; } Property Value string PassCount public int PassCount { get; } Property Value int Methods Apply(int) public void Apply(int pass) Parameters pass int GetInstance(Blending, ShaderId, int, TextureBlending, bool) public static WidgetMaterial GetInstance(Blending blending, ShaderId shader, int numTextures, TextureBlending textureBlending = TextureBlending.Multiply, bool premulAlpha = false) Parameters blending Blending shader ShaderId numTextures int textureBlending TextureBlending premulAlpha bool Returns WidgetMaterial GetNumTextures(ITexture, ITexture) public static int GetNumTextures(ITexture texture1, ITexture texture2) Parameters texture1 ITexture texture2 ITexture Returns int Invalidate() public void Invalidate()"
  },
  "api/Lime.WidgetRenderObject.html": {
    "href": "api/Lime.WidgetRenderObject.html",
    "title": "Class WidgetRenderObject | Citrus Engine",
    "keywords": "Class WidgetRenderObject Namespace Lime Assembly Lime.dll public abstract class WidgetRenderObject : RenderObject Inheritance object RenderObject WidgetRenderObject Derived TextRenderObject Inherited Members RenderObject.Render() RenderObject.Release() RenderObject.OnRelease() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Blending public Blending Blending Field Value Blending LocalToWorldTransform public Matrix32 LocalToWorldTransform Field Value Matrix32 Shader public ShaderId Shader Field Value ShaderId Methods CaptureRenderState(Widget) public void CaptureRenderState(Widget widget) Parameters widget Widget PrepareRenderState() protected void PrepareRenderState()"
  },
  "api/Lime.Window.html": {
    "href": "api/Lime.Window.html",
    "title": "Class Window | Citrus Engine",
    "keywords": "Class Window Namespace Lime Assembly Lime.dll public class Window : CommonWindow, IWindow Inheritance object CommonWindow Window Implements IWindow Inherited Members CommonWindow.Activated CommonWindow.Deactivated CommonWindow.Closing CommonWindow.Closed CommonWindow.Moved CommonWindow.Resized CommonWindow.Updating CommonWindow.Rendering CommonWindow.Sync CommonWindow.SafeAreaInsetsChanged CommonWindow.VisibleChanging CommonWindow.Tag CommonWindow.Context CommonWindow.SafeAreaInsets CommonWindow.UnhandledExceptionOnUpdate CommonWindow.IsRenderingPhase CommonWindow.RaiseActivated() CommonWindow.RaiseDeactivated() CommonWindow.RaiseClosed() CommonWindow.RaiseRendering() CommonWindow.RaiseUpdating(float) CommonWindow.RaiseSync() CommonWindow.RaiseSafeAreaInsetsChanged() CommonWindow.RaiseClosing(CloseReason) CommonWindow.RaiseMoved() CommonWindow.RaiseResized(bool) CommonWindow.RaiseVisibleChanging(bool, bool) CommonWindow.InvokeOnRendering(Action) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Window() public Window() Window(WindowOptions) public Window(WindowOptions options) Parameters options WindowOptions Properties Active Indicates whether the window is active. For PC, Mac it means that the window has the input focus. On mobile platforms it indicates that the application is on screen and running. public bool Active { get; } Property Value bool AllowDropFiles Gets or sets a value indicating whether this IWindow allow files drop. public bool AllowDropFiles { get; set; } Property Value bool AsyncRendering public bool AsyncRendering { get; } Property Value bool ClientPosition Gets or sets an upper-left corner of the client area on the desktop. public Vector2 ClientPosition { get; set; } Property Value Vector2 ClientSize Gets or sets a client size of this window. public Vector2 ClientSize { get; set; } Property Value Vector2 Current public static IWindow Current { get; } Property Value IWindow Cursor Gets or sets the cursor for this window. public MouseCursor Cursor { get; set; } Property Value MouseCursor DecoratedPosition Gets or sets a position of this window on the desktop. public Vector2 DecoratedPosition { get; set; } Property Value Vector2 DecoratedSize Gets or sets an decorated size (including title and border) of this window. public Vector2 DecoratedSize { get; set; } Property Value Vector2 Display Gets the display device containing the largest portion of this window. public IDisplay Display { get; } Property Value IDisplay FPS Gets current FPS for the window. public float FPS { get; } Property Value float FixedSize Gets or sets the window behavior to be resizable or not. public bool FixedSize { get; set; } Property Value bool Form public Form Form { get; } Property Value Form Fullscreen Gets or sets the fullscreen window state. public bool Fullscreen { get; set; } Property Value bool Input Gets WindowInput for this window. public WindowInput Input { get; } Property Value WindowInput MaximumDecoratedSize public Vector2 MaximumDecoratedSize { get; set; } Property Value Vector2 MinimumDecoratedSize public Vector2 MinimumDecoratedSize { get; set; } Property Value Vector2 PixelScale Gets the scale factor which translates virtual units to the physical pixels. public float PixelScale { get; } Property Value float State Gets or sets the window state. public WindowState State { get; set; } Property Value WindowState Title Gets or sets the title of the window. public string Title { get; set; } Property Value string UnclampedDelta Milliseconds since last update. public float UnclampedDelta { get; } Property Value float UpdateMinimized public bool UpdateMinimized { get; set; } Property Value bool VSync Keeps refresh rate the same as monitor's refresh rate. Setting to false allows to render as much frames as possible. Works only on Windows with disabled Timer. public override bool VSync { get; set; } Property Value bool Visible Gets or sets a value indicates whether the window is displayed. public bool Visible { get; set; } Property Value bool Methods Activate() Activates this window. public void Activate() CalcFPS() [Obsolete(\"Use FPS property instead\", true)] public float CalcFPS() Returns float Center() Centers the game window on the current display. public void Center() Close() Closes this window. public void Close() DesktopToLocal(Vector2) Converts desktop coordinates into local window coordinates. public Vector2 DesktopToLocal(Vector2 desktopPosition) Parameters desktopPosition Vector2 Returns Vector2 DragFiles(string[]) Initiate dragging of files supported by native controls public void DragFiles(string[] filenames) Parameters filenames string[] list of paths to files Invalidate() Sets a flag indicating whether the current frame should be rendered. public void Invalidate() LocalToDesktop(Vector2) Converts local window coordinates into desktop coordinates. public Vector2 LocalToDesktop(Vector2 localPosition) Parameters localPosition Vector2 Returns Vector2 ShowModal() You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The window must be hidden before calling this method. public void ShowModal() WaitForRendering() public void WaitForRendering() Events FilesDropped Occurs when files are dropped. public event Action<IEnumerable<string>> FilesDropped Event Type Action<IEnumerable<string>>"
  },
  "api/Lime.WindowInput.html": {
    "href": "api/Lime.WindowInput.html",
    "title": "Class WindowInput | Citrus Engine",
    "keywords": "Class WindowInput Namespace Lime Assembly Lime.dll public class WindowInput Inheritance object WindowInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WindowInput(IWindow) public WindowInput(IWindow ownerWindow) Parameters ownerWindow IWindow Properties Changed public bool Changed { get; } Property Value bool DroppedFiles Returns list of files dropped on the window. This list automatically being cleaned up after window update. public List<string> DroppedFiles { get; } Property Value List<string> MousePosition The current mouse position in local coordinates. (read only) public Vector2 MousePosition { get; } Property Value Vector2 MousePositionTransform public Matrix32 MousePositionTransform { get; set; } Property Value Matrix32 TextInput public string TextInput { get; } Property Value string WheelScrollAmount Indicates how much the mouse wheel was moved public float WheelScrollAmount { get; } Property Value float Methods ConsumeKey(Key) public void ConsumeKey(Key key) Parameters key Key GetModifiers() public Modifiers GetModifiers() Returns Modifiers GetNumTouches() public int GetNumTouches() Returns int GetTouchPosition(int) public Vector2 GetTouchPosition(int index) Parameters index int Returns Vector2 IsKeyPressed(Key) Returns true while the user holds down the key identified by name. Think auto fire. public bool IsKeyPressed(Key key) Parameters key Key Returns bool IsMousePressed() public bool IsMousePressed() Returns bool IsMousePressed(int) public bool IsMousePressed(int button) Parameters button int Returns bool IsTouching(int) public bool IsTouching(int index) Parameters index int Returns bool MouseDesktopToLocal(Vector2) Converts desktop mouse coordinates into transformed local mouse coordinates. public Vector2 MouseDesktopToLocal(Vector2 desktopMousePosition) Parameters desktopMousePosition Vector2 Returns Vector2 MouseLocalToDesktop(Vector2) Converts transformed local mouse coordinates into desktop mouse coordinates. public Vector2 MouseLocalToDesktop(Vector2 localMousePosition) Parameters localMousePosition Vector2 Returns Vector2 WasDoubleClickPressed(int) public bool WasDoubleClickPressed(int buttonIndex) Parameters buttonIndex int Returns bool WasKeyPressed(Key) Returns true during the frame the user starts pressing down the key identified by name. public bool WasKeyPressed(Key key) Parameters key Key Returns bool WasKeyReleased(Key) Returns true during the frame the user releases the key identified by name. public bool WasKeyReleased(Key key) Parameters key Key Returns bool WasKeyRepeated(Key) Returns true during the frame the user starts pressing down the key identified by name or key event was repeated. public bool WasKeyRepeated(Key key) Parameters key Key Returns bool WasMousePressed() public bool WasMousePressed() Returns bool WasMousePressed(int) public bool WasMousePressed(int button) Parameters button int Returns bool WasMouseReleased() public bool WasMouseReleased() Returns bool WasMouseReleased(int) public bool WasMouseReleased(int button) Parameters button int Returns bool WasTouchBegan(int) public bool WasTouchBegan(int index) Parameters index int Returns bool WasTouchEnded(int) public bool WasTouchEnded(int index) Parameters index int Returns bool"
  },
  "api/Lime.WindowOptions.html": {
    "href": "api/Lime.WindowOptions.html",
    "title": "Class WindowOptions | Citrus Engine",
    "keywords": "Class WindowOptions Namespace Lime Assembly Lime.dll public class WindowOptions Inheritance object WindowOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AsyncRendering public bool AsyncRendering Field Value bool Centered public bool Centered Field Value bool ClientSize public Vector2 ClientSize Field Value Vector2 FixedSize public bool FixedSize Field Value bool FullScreen public bool FullScreen Field Value bool Icon System.Drawing.Icon on Windows public object Icon Field Value object MacWindowTabbingMode public MacWindowTabbingMode MacWindowTabbingMode Field Value MacWindowTabbingMode MaximumDecoratedSize public Vector2 MaximumDecoratedSize Field Value Vector2 MinimumDecoratedSize public Vector2 MinimumDecoratedSize Field Value Vector2 Screen public int? Screen Field Value int? Style public WindowStyle Style Field Value WindowStyle Title public string Title Field Value string Type public WindowType Type Field Value WindowType UpdateMinimized public bool UpdateMinimized Field Value bool UseTimer public bool UseTimer Field Value bool VSync public bool VSync Field Value bool Visible public bool Visible Field Value bool"
  },
  "api/Lime.WindowRect.html": {
    "href": "api/Lime.WindowRect.html",
    "title": "Struct WindowRect | Citrus Engine",
    "keywords": "Struct WindowRect Namespace Lime Assembly Lime.dll public struct WindowRect : IEquatable<WindowRect> Implements IEquatable<WindowRect> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Height public int Height Field Value int Width public int Width Field Value int X public int X Field Value int Y public int Y Field Value int Properties Origin public IntVector2 Origin { get; set; } Property Value IntVector2 Size public IntVector2 Size { get; set; } Property Value IntVector2 Methods Equals(WindowRect) Indicates whether the current object is equal to another object of the same type. public bool Equals(WindowRect other) Parameters other WindowRect An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Operators operator ==(WindowRect, WindowRect) public static bool operator ==(WindowRect lhs, WindowRect rhs) Parameters lhs WindowRect rhs WindowRect Returns bool explicit operator IntRectangle(WindowRect) public static explicit operator IntRectangle(WindowRect r) Parameters r WindowRect Returns IntRectangle operator !=(WindowRect, WindowRect) public static bool operator !=(WindowRect lhs, WindowRect rhs) Parameters lhs WindowRect rhs WindowRect Returns bool"
  },
  "api/Lime.WindowState.html": {
    "href": "api/Lime.WindowState.html",
    "title": "Enum WindowState | Citrus Engine",
    "keywords": "Enum WindowState Namespace Lime Assembly Lime.dll Enumerates available window states. public enum WindowState Fields Fullscreen = 3 The window covers the whole screen, including all taskbars and/or panels. Maximized = 2 The window covers the whole working area, which includes the desktop but not the taskbar and/or panels. Minimized = 1 The window is minimized to the taskbar (also known as 'iconified'). Normal = 0 The window is in its normal state."
  },
  "api/Lime.WindowStyle.html": {
    "href": "api/Lime.WindowStyle.html",
    "title": "Enum WindowStyle | Citrus Engine",
    "keywords": "Enum WindowStyle Namespace Lime Assembly Lime.dll public enum WindowStyle Fields Borderless = 2 Dialog = 1 Regular = 0"
  },
  "api/Lime.WindowType.html": {
    "href": "api/Lime.WindowType.html",
    "title": "Enum WindowType | Citrus Engine",
    "keywords": "Enum WindowType Namespace Lime Assembly Lime.dll public enum WindowType Fields Common = 0 Tool = 1 ToolTip = 2"
  },
  "api/Lime.WindowWidget.html": {
    "href": "api/Lime.WindowWidget.html",
    "title": "Class WindowWidget | Citrus Engine",
    "keywords": "Class WindowWidget Namespace Lime Assembly Lime.dll Root of the widgets hierarchy. public class WindowWidget : Widget, IDisposable, IAnimatorHost, IRenderChainBuilder, IAnimable, ICloneable Inheritance object Node Widget WindowWidget Implements IDisposable IAnimatorHost IRenderChainBuilder IAnimable ICloneable Derived DefaultWindowWidget Inherited Members Widget.globalColor Widget.globalBlending Widget.globalShader Widget.globallyEnabled Widget.globallyVisible Widget.Focused Widget.DefaultWidgetSize Widget.RenderTransparentWidgets Widget.EnableViewCulling Widget.LayoutManager Widget.Layout Widget.LayoutConstraints Widget.MeasuredMinSize Widget.MeasuredMaxSize Widget.EffectiveMinSize Widget.EffectiveMaxSize Widget.MinSize Widget.MaxSize Widget.MinWidth Widget.MinHeight Widget.MaxWidth Widget.MaxHeight Widget.MinMaxSize Widget.MinMaxWidth Widget.MinMaxHeight Widget.Position Widget.X Widget.Y Widget.Scale Widget.Rotation Widget.Size Widget.SilentSize Widget.Width Widget.Height Widget.Pivot Widget.GetPivotDefaultValue() Widget.Padding Widget.ContentPosition Widget.ContentSize Widget.ContentWidth Widget.ContentHeight Widget.GlobalPosition Widget.GlobalPivotPosition Widget.GlobalCenter Widget.Center Widget.ParentWidget Widget.TabTravesable Widget.FocusScope Widget.Color Widget.Opacity Widget.Anchors Widget.Blending Widget.Shader Widget.Enabled Widget.Visible Widget.SkinningWeights Widget.BoneArray Widget.HitTestMethod Widget.Text Widget.Sprite Widget.Input Widget.HasInput() Widget.LocalToWorldTransform Widget.GlobalColor Widget.GlobalBlending Widget.GlobalShader Widget.GloballyEnabled Widget.GloballyVisible Widget.RecalcGloballyVisible() Widget.FreezeInvisible Widget.BoundingRect Widget.CalcGlobalBoundingRect() Widget.Dispose() Widget.IsRenderedToTexture() Widget.Clicked Widget.WasClicked() Widget.RefreshLayout() Widget.OnSizeChanged(Vector2) Widget.IsFocused() Widget.SetFocus() Widget.RevokeFocus() Widget.CalcContentSize() Widget.this[string] Widget.this[string, object[]] Widget.OnParentChanged(Node) Widget.RaiseUpdating(float) Widget.RaiseUpdated(float) Widget.ClipRegionTest(Rectangle) Widget.CalcLocalToParentTransform() Widget.StaticScale(float, bool) Widget.AddToRenderChain(RenderChain) Widget.ToLocalMousePosition(Vector2) Widget.LocalMousePosition() Widget.GetEffectiveLayer() Widget.LocalHitTest(ref HitTestArgs) Widget.LocalHitTest(Vector2) Widget.PartialHitTest(ref HitTestArgs) Widget.PartialHitTestByContents(ref HitTestArgs) Widget.BoundingRectHitTest(Vector2) Widget.CenterOnParent() Widget.CalcTransitionToSpaceOf(Widget) Widget.CalcHullInSpaceOf(Widget) Widget.CalcAABBInSpaceOf(Widget) Widget.CalcHull(in Matrix32?) Widget.CalcAABBInViewportSpace(WindowRect, Matrix44) Widget.CalcAABBInWindowSpace() Widget.CalcPositionInSpaceOf(Widget) Widget.GetVisibilityIssues() Widget.ExpandToContainerWithAnchors() Widget.UpdateAncestorBoundingRect(Widget) Widget.RecalcBoundingRect() Widget.RecalcGloballyFrozen() Node.Manager Node.AnimationStopped Node.Id Node.ContentsPath Node.Trigger Node.Parent Node.TangerineFlags Node.GetTangerineFlag(TangerineFlags) Node.SetTangerineFlag(TangerineFlags, bool) Node.AsWidget Node.AsNode3D Node.Presenter Node.CompoundPresenter Node.PostPresenter Node.CompoundPostPresenter Node.FirstChild Node.NextSibling Node.Awoke Node.Updating Node.Updated Node.Tasks Node.LateTasks Node.AnimationSpeed Node.EffectiveAnimationSpeed Node.RenderChainBuilder Node.Layer Node.Components Node.Animators Node.Nodes Node.Markers Node.IsRunning Node.IsStopped Node.AnimationTime Node.AnimationFrame Node.DefaultAnimation Node.Tag Node.Animations Node.NeedSerializeAnimations() Node.Folders Node.CurrentAnimation Node.UserData Node.DirtyMask Node.IsDirty(Node.DirtyFlags) Node.CleanDirtyFlags(Node.DirtyFlags) Node.HitTestTarget Node.CreatedCount Node.FinalizedCount Node.Gestures Node.HasGestures() Node.IsNotDecorated() Node.ShouldSerializeNodes() Node.PropagateParentBoundsChanged() Node.PropagateParentBoundsChangedHelper() Node.PropagateDirtyFlags(Node.DirtyFlags) Node.GetRoot() Node.DescendantOf(Node) Node.SameOrDescendantOf(Node) Node.TryRunAnimation(string, string, double) Node.RunAnimation(string, string) Node.OnBeforeSerialization() Node.OnAfterSerialization() Node.ToString() Node.Unlink() Node.UnlinkAndDispose() Node.GetRenderObject() Node.AddSelfAndChildrenToRenderChain(RenderChain, int) Node.AddSelfToRenderChain(RenderChain, int) Node.OnTrigger(string, object, double) Node.TriggerMultipleAnimations(string, double) Node.AddNode(Node) Node.AddToNode(Node) Node.PushNode(Node) Node.PushToNode(Node) Node.Find<T>(string) Node.Find<T>(string, params object[]) Node.TryFind<T>(string, out T) Node.TryFind<T>(string) Node.TryFind<T>(string, params object[]) Node.FindNode(string) Node.TryFindNode(string) Node.Descendants Node.SelfAndDescendants Node.Ancestors Node.PreloadAssets() Node.RemoveAnimatorsForExternalAnimations() Node.SceneLoading Node.SceneLoaded Node.Clone() Node.CloneRaw() Node.Save(string, Persistence.Format) Node.Save(string, Stream, Persistence.Format) Node.Load<T>(string, T, bool) Node.Load(string, Node, bool) Node.Load(Stream, string, Node, bool) Node.NotifyOnBuilt() Node.NotifyOnBuiltSuperficial() Node.OnBuilt() Node.LoadExternalScenes() Node.ReplaceContent(Node) Node.ResolveScenePath(string) Node.IsMouseOver() Node.IsMouseOverThisOrDescendant() Node.Frozen Node.globallyFrozen Node.GloballyFrozen Node.ForceFilterNodes() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods IAnimableExtensions.GetAnimatorHost(IAnimable) IAnimableExtensions.UnbindAnimators(IAnimable) NodeCompatibilityExtensions.AdvanceAnimationsRecursive(Node, float) NodeCompatibilityExtensions.Clone<T>(Node) NodeCompatibilityExtensions.Update(Node, float) Constructors WindowWidget(IWindow) public WindowWidget(IWindow window) Parameters window IWindow Fields renderChain protected readonly RenderChain renderChain Field Value RenderChain Properties WidgetContext public WidgetContext WidgetContext { get; } Property Value WidgetContext Window public IWindow Window { get; } Property Value IWindow Methods ContinuousRendering() protected virtual bool ContinuousRendering() Returns bool CreateManager(LayoutManager, WidgetContext) protected virtual NodeManager CreateManager(LayoutManager layoutManager, WidgetContext widgetContext) Parameters layoutManager LayoutManager widgetContext WidgetContext Returns NodeManager GetProjection() public Matrix44 GetProjection() Returns Matrix44 GetViewport() public WindowRect GetViewport() Returns WindowRect PrepareToRender() public void PrepareToRender() Render(RenderObjectList) protected virtual void Render(RenderObjectList renderObjects) Parameters renderObjects RenderObjectList RenderAll() public void RenderAll() Update(float) public virtual void Update(float delta) Parameters delta float"
  },
  "api/Lime.WordUtils.IntRange.html": {
    "href": "api/Lime.WordUtils.IntRange.html",
    "title": "Struct WordUtils.IntRange | Citrus Engine",
    "keywords": "Struct WordUtils.IntRange Namespace Lime Assembly Lime.dll public struct WordUtils.IntRange Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Left public int Left Field Value int Right public int Right Field Value int"
  },
  "api/Lime.WordUtils.html": {
    "href": "api/Lime.WordUtils.html",
    "title": "Class WordUtils | Citrus Engine",
    "keywords": "Class WordUtils Namespace Lime Assembly Lime.dll public static class WordUtils Inheritance object WordUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NextWord(string, int) public static int NextWord(string text, int pos) Parameters text string pos int Returns int PreviousWord(string, int) public static int PreviousWord(string text, int pos) Parameters text string pos int Returns int WordAt(string, int) public static WordUtils.IntRange WordAt(string text, int pos) Parameters text string pos int Returns WordUtils.IntRange"
  },
  "api/Lime.WrappedAssetBundle.html": {
    "href": "api/Lime.WrappedAssetBundle.html",
    "title": "Class WrappedAssetBundle | Citrus Engine",
    "keywords": "Class WrappedAssetBundle Namespace Lime Assembly Lime.dll public class WrappedAssetBundle : AssetBundle, IDisposable Inheritance object AssetBundle WrappedAssetBundle Implements IDisposable Derived CustomSetAssetBundle Inherited Members AssetBundle.Current AssetBundle.SetCurrent(AssetBundle, bool) AssetBundle.Initialized AssetBundle.ReadFile(string) AssetBundle.ReadAllText(string, Encoding) AssetBundle.ImportFile(string, string, SHA256, AssetAttributes) AssetBundle.OpenFileLocalized(string) AssetBundle.GetLocalizedPath(string) AssetBundle.GetFileAttributes(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WrappedAssetBundle(AssetBundle) public WrappedAssetBundle(AssetBundle bundle) Parameters bundle AssetBundle Fields Bundle public readonly AssetBundle Bundle Field Value AssetBundle Methods DeleteFile(string) public override void DeleteFile(string path) Parameters path string Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public override void Dispose() EnumerateFiles(string, string) Enumerates all files by given path and having the given extension. Order is specific to implementation. public override IEnumerable<string> EnumerateFiles(string path = null, string extension = null) Parameters path string extension string Returns IEnumerable<string> FileExists(string) public override bool FileExists(string path) Parameters path string Returns bool FromSystemPath(string) Translates absolute system file path to the asset path. Raises UnsupportedException() for PackedAssetBundle. public override string FromSystemPath(string systemPath) Parameters systemPath string Returns string GetFileContentsHash(string) Returns SHA256 based on the file contents. public override SHA256 GetFileContentsHash(string path) Parameters path string Returns SHA256 GetFileOriginHash(string) Returns SHA256 that was passed to the ImportFile or ImportFileRaw methods. public override SHA256 GetFileOriginHash(string path) Parameters path string Returns SHA256 GetFileSize(string) public override int GetFileSize(string path) Parameters path string Returns int GetFileUnpackedSize(string) public override int GetFileUnpackedSize(string path) Parameters path string Returns int ImportFile(string, Stream, SHA256, AssetAttributes) public override void ImportFile(string destinationPath, Stream stream, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream originHash SHA256 attributes AssetAttributes ImportFileRaw(string, Stream, int, SHA256, SHA256, AssetAttributes) Imports a file assuming that the input stream is already compressed. public override void ImportFileRaw(string destinationPath, Stream stream, int unpackedSize, SHA256 hash, SHA256 originHash, AssetAttributes attributes) Parameters destinationPath string stream Stream unpackedSize int hash SHA256 originHash SHA256 attributes AssetAttributes OpenFile(string, FileMode) public override Stream OpenFile(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream OpenFileRaw(string, FileMode) Returns file data as it stored in the asset bundle, e.g. compressed. public override Stream OpenFileRaw(string path, FileMode mode = FileMode.Open) Parameters path string mode FileMode Returns Stream ToSystemPath(string) Translates bundle path to the asset in the file system. Raises UnsupportedException() for PackedAssetBundle. public override string ToSystemPath(string bundlePath) Parameters bundlePath string Returns string"
  },
  "api/Lime.XorShiftRandom.html": {
    "href": "api/Lime.XorShiftRandom.html",
    "title": "Class XorShiftRandom | Citrus Engine",
    "keywords": "Class XorShiftRandom Namespace Lime Assembly Lime.dll public sealed class XorShiftRandom : IRandom Inheritance object XorShiftRandom Implements IRandom Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Mathf.NormalRandom(IRandom, float, float) Mathf.RandomDouble(IRandom, double, double) Mathf.RandomFloat(IRandom) Mathf.RandomFloat(IRandom, float, float) Mathf.RandomInt(IRandom, int) Mathf.RandomOf<T>(IRandom, ICollection<T>) Mathf.RandomOf<T>(IRandom, params T[]) Mathf.UniformRandom(IRandom, float, float) Constructors XorShiftRandom() public XorShiftRandom() XorShiftRandom(int) public XorShiftRandom(int seed) Parameters seed int Methods Next() public int Next() Returns int Next(int) public int Next(int maxValue) Parameters maxValue int Returns int Next(int, int) public int Next(int minValue, int maxValue) Parameters minValue int maxValue int Returns int NextBytes(byte[]) public void NextBytes(byte[] buffer) Parameters buffer byte[] NextBytes(Span<byte>) public void NextBytes(Span<byte> buffer) Parameters buffer Span<byte> NextDouble() public double NextDouble() Returns double NextLong() public long NextLong() Returns long NextLong(long) public long NextLong(long maxValue) Parameters maxValue long Returns long NextLong(long, long) public long NextLong(long minValue, long maxValue) Parameters minValue long maxValue long Returns long NextSingle() public float NextSingle() Returns float"
  },
  "api/Lime.YuzuDontGenerateClonerAttribute.html": {
    "href": "api/Lime.YuzuDontGenerateClonerAttribute.html",
    "title": "Class YuzuDontGenerateClonerAttribute | Citrus Engine",
    "keywords": "Class YuzuDontGenerateClonerAttribute Namespace Lime Assembly Lime.dll Exclude types marked with this attribute from generating cloners for. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Interface)] public sealed class YuzuDontGenerateClonerAttribute : Attribute Inheritance object Attribute YuzuDontGenerateClonerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.YuzuDontGenerateDeserializerAttribute.html": {
    "href": "api/Lime.YuzuDontGenerateDeserializerAttribute.html",
    "title": "Class YuzuDontGenerateDeserializerAttribute | Citrus Engine",
    "keywords": "Class YuzuDontGenerateDeserializerAttribute Namespace Lime Assembly Lime.dll Exclude types marked with this attribute from generating binary deserializers for. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Interface)] public sealed class YuzuDontGenerateDeserializerAttribute : Attribute Inheritance object Attribute YuzuDontGenerateDeserializerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Lime.YuzuSpecializeWithAttribute.html": {
    "href": "api/Lime.YuzuSpecializeWithAttribute.html",
    "title": "Class YuzuSpecializeWithAttribute | Citrus Engine",
    "keywords": "Class YuzuSpecializeWithAttribute Namespace Lime Assembly Lime.dll Yuzu can't generate deserializers for generic types. But it can if it knows a concrete type the generic type will be specialized with. Use this attribute to let code, which enumerates types to generate binary deserializer for, know about all generic specializations you're aware of. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct, AllowMultiple = true)] public sealed class YuzuSpecializeWithAttribute : Attribute Inheritance object Attribute YuzuSpecializeWithAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors YuzuSpecializeWithAttribute(Type) public YuzuSpecializeWithAttribute(Type type) Parameters type Type Fields Type public Type Type Field Value Type"
  },
  "api/Lime.html": {
    "href": "api/Lime.html",
    "title": "Namespace Lime | Citrus Engine",
    "keywords": "Namespace Lime Classes AfterAnimationStage Identifier for after advance animation update stage. AggregateAssetBundle AllowMultipleComponentsAttribute Allow to add multiple components of a type decorated with the attribute and it's derived types. AllowOnlyOneComponentAttribute Allow to add only one component of a type decorated with the attribute and it's derived types. AllowedComponentOwnerTypes AlphaIntensityComponent AlphaIntensityMaterial AlphaIntensityMaterial.AlphaIntensityShaderProgram AnchorLayout Animable AnimableList<T> Animation Animation.AnimationBezierEasingCalculator Animation.AnimationData AnimationBlender AnimationBlending AnimationClip AnimationClipList AnimationCollection AnimationComponent AnimationEngine AnimationEngineDelegate AnimationExtensionMethods AnimationProcessor AnimationSystem AnimationTrack AnimationTrackList AnimationUtils AnimatorList AnimatorRegistry AnimatorRegistry.AnimatorFactory<T> AnimatorRegistry.EnumAnimatorFactory Animator<T> Animesh Application ApplicationOptions ArrayEqualityComparer<T> AssetBundle AssetBundleToolbox AssetPath AssetStream Attributes<T> Audio AudioChannel AudioDecoderFactory AudioPlayer AudioRandomizerComponent AudioSystem AwakeBehavior BehaviorComponent BehaviorComponent is NodeComponent that used for scripting node behavior. BehaviorSetupProcessor BehaviorSystem BehaviorUpdateProcessor BehaviorUpdateStage BezierAnimationCurve<T> BezierKeyframeCollection<T> BezierKeyframe<T> Bitmap Wraps native bitmap and exposes unified methods to work with images. BlendAnimationEngine BlendingOption BloomMaterial BloomShaderProgram BlurMaterial BlurShaderProgram Bone BoneArrayUpdaterBehavior BoneUtils Buffer Button ButtonBehavior Camera3D CaretDisplay CaretParams CaretPosition CharMap CheckBox CheckBox.ChangedEventArgs ClickGesture Clipboard ClipboardImplementation Cloner Utility class that contain methods for cloning objects. Color4SimpleAnimationCurve ColorCorrectionMaterial ColorCorrectionShaderProgram ColorGradient ColorfulTextMaterial CombinedContext ComboBox Command CommandHandler CommandHandlerList CommandLineArgs CommandProcessor CommandQueue CommonDropDownList CommonDropDownList.ChangedEventArgs CommonDropDownList.Item CommonEditBox CommonMaterial CommonTexture CommonWindow Component ComponentCollection<TComponent> CompoundFont Font class which combines different fonts into one. You can use collection of IFont in order of priority to use (if first font doesn't contain FontChar it will look for it in the next font and so on). CompoundPresenter CompressedAnimationCurve<T> Context CubicBezier CustomPresenter CustomPresenter<T> CustomSetAssetBundle Asset bundle which substitutes enumeration results with the given list of files. All file operations will throw FileNotFoundException if provided file path does not exist in provided list of files. CyclicDependencyException DashedLineMaterial Debug DefaultAnimationEngine DefaultPresenter DefaultRandomProvider DefaultWindowWidget DeferredRendererWrapper DelegatePresenter<T> DeviceOrientationExtensions DisableAncestralGesturesComponent DissolveComponent DissolveMaterial DissolveMaterial.DissolveMaterialShaderProgram DistortionMaterial DistortionMesh DistortionMeshPoint DistortionShaderProgram DocumentHeader When any given citrus document is serialized DocumentHeader is serialized into the output stream before the document itself. Lime.* contains several serializable classes. Some of them (or their derived classes) are serialized directly while others are used as elements of those serialized. Directly serialized ones determine document root type. So Node is root type of a *.tan document. Examples of citrus documents are: Node (tangerine scene, *.tan), Model3DAttachmentParser.ModelAttachmentFormat (*.txt), TextureAtlasElement.Params (*.atlasPart, but will be renamed to Sprite *.sprite), Font (*.tft). Lime.TftConfig (*.tftconf) (defined in Extensions/DynamicFont) PackedAssetBundle.Manifest (.Manifest) TextureParams (*.texture) SerializableCompoundFont (*.cft) Animation.AnimationData (*.ant) Model3D (*.t3d) (actually also Node* kind of document) DoubleClickGesture DragGesture DragGesture.DampingMotionStrategy Motion damping based on Gauss error function. Duration is calculated so motion lasts until min speed reached. DropDownList DropFilesGesture DummyWindow EarlyUpdateStage Identifier for early update stage. EditBox Editor Editor behaviour implemented over the given text display widget. Editor.Cmds EditorParams EmitterShapePoint Environment ExpandableListItem FXAAMaterial FXAAShaderProgram FastForwardAnimationEngine FileDialog Brings access to files and folders through the dialog screen. FileSystemWatcher FilesystemAssetBundle FilesystemAssetBundle.FileInfo FloatBezierAnimationCurve FloatSimpleAnimationCurve FlowLayout Folder Folder.Descriptor FolderList Font FontChar Class representing the single font character and it's geometry FontCharCollection FontExtensions FontPool FormatExtensions FragmentShader Frame GeometryUtils Gesture GestureList GestureManager GestureProcessor Glyph GlyphList GradientComponent GradientControlPoint GradientMaterial GradientShaderProgram GraphicsExtensions GraphicsUtility HBoxLayout HSLComponent HSplitter IAnimableExtensions Icon Image Image.RenderObject ImageCombiner ImmediateRendererWrapper IndexFormatExtensions Input Input.InputSimulator IntSimpleAnimationCurve InvalidBundleVersionException InvalidableWindowWidget KeyboardFocusScope Switches keyboard focus with Tab/Shift+Tab and makes the widget focused by mouse click. LambdaEqualityComparer<T> LateTasksBehavior LateUpdateStage Identifier for late update stage. LayerMetadata LayerMetadata stores all layer-version pairs of a document. For example when scene is serialized it may contain Lime.Node derived types from Lime.* as well as application's types derived from Lime.Node. Thus such document's metadata should contain layer metadata for Citrus e.g. (layer: \"citrus\", version: 29) as well as layer metadata for an application (e.g. layer: \"game\", version: 17). LayerMetadata.LayerVersion Data structure for compact serialization of layer-version pairs. Layout LayoutConstraints LayoutDebugComponent LayoutDebugPresenter Displays Layout's DebugRectangles. LayoutManager LayoutProcessor LegacyBehaviorContainer LegacyEarlyBehaviorContainer LegacyLateBehaviorContainer LimeException LimePersistenceContext LinearLayout LinqExtensions ListView Localization Класс, предоставляющий функции локализации LocalizationDictionary Словарь локализации. Используется для перевода текста на другой язык. Содержит пары ключ-значение. Строка, заданная в HotStudio является ключом, если начинается с квадратных скобок []. Словарь подменяет ее на фразу для конкретного языка LocalizationDictionaryTextSerializer �����������, ���������� � ���������� ��������� (�������, �������������� � ����������� ��������) LocalizationEntry Запись словаря локализации Logger LongTapGesture Marker MarkerBlending MarkerList MaterialComponent MaterialComponent<T> Replace owner material with specified material Mathf Mathf.Easings Matrix44SimpleAnimationCurve Menu Menu.Colors Menu.Renderer Mesh3D MeshUtils Mesh<T> Metadata Metadata for serialized documents. Model3D Model3D.MeshData Model3DAttachment Model3DAttachment.Animation Model3DAttachment.MarkerBlendingData Model3DAttachment.MarkerData Model3DAttachment.MaterialRemap Model3DAttachment.MeshOption Model3DAttachment.NodeComponentCollection Model3DAttachment.NodeData Model3DAttachment.NodeRemoval Model3DAttachmentParser Model3DAttachmentParser.MeshOptionFormat Model3DAttachmentParser.ModelAnimationFormat Model3DAttachmentParser.ModelAttachmentFormat Model3DAttachmentParser.ModelComponentsFormat Model3DAttachmentParser.ModelMarkerFormat Model3DAttachmentParser.UVAnimationFormat MouseCursor MouseCursorImplementation Movie MultiCaretPosition NineGrid Node Scene tree element. Node.AssetBundlePathComponent For each root node of deserialized node hierarchy this component will be added and set to path in asset bundle. Node3D NodeBehavior NodeCompatibilityExtensions NodeComponent NodeComponentCollection NodeComponentDontSerializeAttribute Components of type marked with this attribute will be removed from NodeComponentCollection on serialization. NodeComponentProcessor NodeComponentProcessor<TComponent> NodeList NodeManager NodeManagerProcessorCollection NodeManagerRootNodeCollection NodeProcessor NodeReference<T> A node reference is used for referencing to a node within a serialized scene by the node Id. NoiseMaterial NoiseShaderProgram NullAudioChannel NumericEditBox NumericExtensions NumericRangeBezierAnimationCurve NumericRangeSimpleAnimationCurve OggDecoder OgvDecoder OpacityMask OverdrawForegroundBehavior If Overdraw mode is enabled, adds owner to overdraw foreground RenderChain and disables rendering of a subtree (including owner) of child objects in the main render list. OverdrawForegroundComponent PackedAssetBundle PackedAssetBundle.Manifest This class contains a specific data needed for applying asset bundle patches. ParticleEmitter ParticleEmitter.Particle ParticleLimitPostLateUpdateProcessor ParticleLimitPreLateUpdateProcessor ParticleLimiter ParticleModifier ParticlesMagnet PcmDecoder Persistence PersistenceContext PersistenceContext.ReadData PinchGesture PlatformRenderer PlayParameters Pluralizer PointObject Polyline Ломаная линия PolylinePoint PostEarlyUpdateStage Identifier for post-early update stage. PostLateUpdateStage Identifier for post-late update stage. PostProcessingComponent PostProcessingPresenter PostProcessingRenderChainBuilder PreEarlyUpdateStage Identifier for pre-early update stage. PreLateUpdateStage Identifier for pre-late update stage. PresenterComponent PresenterComponent<T> PreserveAttribute PreviewMetadata Stores base-64 encoded document preview. QuaternionCompressedAnimationCurve QuaternionSimpleAnimationCurve Reflection RemoveOnAssetCookAttribute Nodes and Components of type marked with this attribute will be removed from either Nodes (for nodes) or Components (for components) on asset cook. RenderChain RenderObject RenderObject3D RenderObjectList RenderObjectPool<T> RenderTexture Renderer RendererNvg RendererWrapper RichText ScrollView ScrollView.Layout ScrollView.ScrollViewContentWidget ScrollViewWithSlider SelectionParams SelectionPresenter SerializableAssetAttribute SerializableCompoundFont SerializableFont SerializableSample SerializableSprite SerializableTexture ServiceProviderExtensions ServiceRegistry Shader ShaderParams ShaderProgram ShaderProgram.AttribLocation ShaderProgram.Sampler ShaderPrograms ShaderPrograms.Attributes ShaderPrograms.ColorfulTextShaderProgram Colorizes SimpleText's or RichText's grayscale font. ShaderPrograms.DashedLineShaderProgram ShadowParams SharpenMaterial SharpenShaderProgram SignedDistanceFieldComponent SignedDistanceFieldComponent.ShadowCollection SimpleAnimationCurve<T> SimpleKeyframeCollection<T> SimpleKeyframe<T> SimpleText SkinnedVertexListSimpleAnimationCurve SkinningWeights Slider Sound Spline Spline3D SplineGear SplineGear3D SplinePoint SplinePoint3D Splitter Splitter.SeparatorsRenderPresenterBase Sprite SpriteData SpriteExtensions SpritePool StackLayout StringExtensions Submesh3D Submesh3DCollection SurrogateBitmap Serves for Bitmap serialization only. You don't need to create instance of this class. Tab TabBar TabBar.ReorderEventArgs TabTraversable Controls whether a widget could be traversed with Tab or Shift+Tab. TableLayout TableLayoutCell TableLayoutColumn TableLayoutRow TangerineAllowedChildrenTypes TangerineAllowedParentTypes TangerineBase64IconAttribute TangerineCreateButtonAttribute TangerineCustomIconAttribute TangerineDirectoryPropertyAttribute TangerineDisplayNameAttribute TangerineDropDownListPropertyEditorAttribute TangerineFilePropertyAttribute TangerineGroupAttribute TangerineIconGenerationAttribute TangerineIgnoreAttribute TangerineIgnoreIfAttribute TangerineInspectAttribute TangerineKeyframeColorAttribute TangerineLockChildrenNodeList TangerineMenuPathAttribute '/' Separated path to either component or node create command in menu. If path ends with '/' the command Text will be taken as is and last part of path will be treated as last nested menu for the command. Otherwise last part of the path will be assigned to command.Text. Tangerine.Core.MenuExtensions.InsertCommandAlongPath TangerineNodeBuilderAttribute TangerineNumericEditBoxStepAttribute TangerineOnPropertySetAttribute TangerinePropertyDefaultValueAttribute TangerineReadOnlyAttribute TangerineReadOnlyPropertiesAttribute TangerineRegisterComponentAttribute TangerineRegisterNodeAttribute TangerineStaticPropertyAttribute Denotes a property which can not be animated with Tangerine. TangerineToStringAttribute TangerineToStringUsingMethodAttribute TangerineTooltipAttribute TangerineVisualHintGroupAttribute TapGesture Task Sequence of actions, based on IEnumerators. TaskList TaskResult<T> TaskResult<T1, T2> TasksBehavior TextRenderObject TextStyle Texture2D Represents 2D texture TextureParams TexturePathUtility TexturePool Theme Theme.ColorTheme Theme.DefaultColors Theme.KeyboardFocusBorderPresenter Theme.Metrics ThemedButton ThemedButton.ButtonPresenter ThemedCheckBox ThemedComboBox ThemedDefaultWindowWidget ThemedDropDownList ThemedEditBox ThemedFileChooserButton ThemedFrame ThemedFramePresenter ThemedHSplitter ThemedInvalidableWindowWidget ThemedNumericEditBox ThemedScrollView ThemedScrollView.SliderPresenter ThemedSimpleText ThemedSlider ThemedTab ThemedTabBar ThemedTabCloseButton ThemedTextView ThemedTextView.TextLineMultiplicity ThemedVSplitter ThicknessSimpleAnimationCurve TiledImage ToolForm ToolTipForm Toolbox Toolbox.StringUniqueCodeGenerator TopologyEdge.EdgeInfo TopologyFace.FaceInfo TopologyHitTestResult TriggerAttribute TwistComponent TwistMaterial TwistMaterial.TwistShaderProgram UndoHistory<T> UpdatableNodeBehavior UpdateAfterBehaviorAttribute Defines dependencies between behaviors to control update order inside stage. UpdateBeforeBehaviorAttribute Defines dependencies between behaviors to control update order inside stage. UpdateBehavior UpdateFrozenAttribute Specifies that behavior should be updated even if node is frozen. UpdateStageAttribute Specifies update stage for BehaviorComponent. UpdatedBehavior VBoxLayout VSplitter Validation Validation.ContentsPathAttribute Validation.DefaultCharsetAttribute Validation.EnsureKeyframeListOrderAttribute Validation.EnsureMarkerListOrderAttribute Validation.EnsureOnlyOneAnimatorPerPropertyAttribute Validation.FilePathExistsAttribute Validation.KeyframePropertyValuesAttribute Validation.MatchRegexAttribute Validation will fail with Result.Error if string property doesn't match provided regular expression. Validation.NodeChildrenCompositionAttribute Validation.NodeComponentOwnerCompositionAttribute Validation.NodeParentCompositionAttribute Validation.RangeAttribute Validation.RatioInfoAttribute Validation.SerializableAssetExistsAttribute Validation.SizeInfoAttribute Validation.TextureInfoAttribute Vector2BezierAnimationCurve Vector2SimpleAnimationCurve Vector3BezierAnimationCurve Vector3CompressedAnimationCurve Vector3SimpleAnimationCurve VectorShape VectorShape.Line VectorShape.TriangleFan VectorShapeButtonPresenter Version VertexInputLayout VertexShader VerticalLineCaret VideoDecoder VideoDecoder.YUVtoRGBMaterial VideoPlayer Viewport3D VignetteMaterial VignetteShaderProgram WaitPredicate WaveComponent WaveComponent applies the wave deformation to its owner. WaveIMA4Decoder WaveMaterial WaveShaderProgram WeakReferencePool<TKey, TValue> WebBrowser Widget Base class for any rendered object. WidgetAdapter3D WidgetBoundsPresenter WidgetContext Represents the global context for every widget within the current window. WidgetFlatFillPresenter WidgetInput WidgetInput class allows a widget to capture an input device (mouse, keyboard). After capturing the device, the widget and all its children receive an actual buttons and device axes state (e.g. mouse position). Other widgets receive released buttons state and frozen axes values. WidgetMaterial WidgetRenderObject Window WindowInput WindowOptions WindowWidget Root of the widgets hierarchy. WordUtils WrappedAssetBundle XorShiftRandom YuzuDontGenerateClonerAttribute Exclude types marked with this attribute from generating cloners for. YuzuDontGenerateDeserializerAttribute Exclude types marked with this attribute from generating binary deserializers for. YuzuSpecializeWithAttribute Yuzu can't generate deserializers for generic types. But it can if it knows a concrete type the generic type will be specialized with. Use this attribute to let code, which enumerates types to generate binary deserializer for, know about all generic specializations you're aware of. Structs Alignment AnimationUtils.PropertyData Animesh.SkinnedVertex BezierEasing BezierKeyframeCollection<T>.Enumerator BitSet32 Representation of 32-bit array of bit flags. BlendState BoneArray BoneArray.Entry BoneWeight BoundingSphere Representation of solid sphere. Bounds An axis-aligned bounding box, or AABB for short, is a box aligned with coordinate axes and fully enclosing some object. CharPosition Color4 Representation of 4-byte color (RGBA). ComponentCollection<TComponent>.Enumerator ContextScope DepthState Editor.UndoItem GLInfo Gesture.PollableEvent Hasher HierarchyChangedEventArgs HitTestArgs IntRectangle Representation of integer 2D rectangles. IntVector2 Representation of integer 2D vectors and points. KerningPair Key Matrix32 Representation of 3x2 transformation matrix. Matrix44 Mesh3D.BlendIndices Mesh3D.BlendWeights Mesh3D.Vertex NineGrid.Part NodeList.Enumerator NodeManagerProcessorCollection.Enumerator NodeManagerRootNodeCollection.Enumerator NumericRange Representation of numeric range of numbers around median. Plane Quadrangle Quaternion Ray Representation of endless ray. Rectangle Representation of 2D rectangles. RenderBatchRegion RenderChain.Item SHA256 ScissorState ShaderParamKey<T> Shortcut Represents combination of a key with keyboard modifiers used to trigger an action. SimpleKeyframeParams Size Representation of width and height. Splitter.SeparatorsRenderPresenterBase.SplitterLine Sprite.Vertex StencilState TapGestureOptions Thickness TopologyEdge TopologyFace TopologyVertex Transform2 ValueAccessor Vector2 Representation of 2D vectors and points. Vector3 Representation of 3D vectors and points. Vector4 Vertex VertexInputLayoutAttribute VertexInputLayoutBinding VertexPositionColor VideoDecoder.VertexPosUV Viewport WindowRect WordUtils.IntRange Interfaces AnimatorRegistry.IAnimatorFactory DragGesture.IMotionStrategy Defines a motion strategy. IAbstractAnimator IAnimable IAnimationCurve IAnimationCurveEvaluator IAnimationCurveEvaluator<T> IAnimationCurveWithKeys IAnimationCurveWithKeys<T> IAnimationCurve<T> IAnimator IAnimatorHost IAudioChannel IAudioDecoder IBezierAnimationCurve IBezierKeyframe IBezierKeyframeCollection IBlendedAnimator ICaretParams ICaretPosition ICaretPresenter IChainedAnimator ICommand The ICommand interface provides an abstract user interface command. ICompressedAnimationCurve IContext IDisplay Defines a display device. IEasingCalculator IEditorParams IFileDialog Brings access to files and folders through the dialog screen. IFileSystemWatcher IFont IFontCharSource IGlyphMaterialProvider IHalfEdge IImageCombinerArg This interface must implements every node which can be used as a source for ImageCombiner. IKeyframe IKeyframeCollection IKeyframeCollection<T> IKeyframe<T> ILayout ILocalizationDictionarySerializer Интерфейс сериалайзера, предоставляющего функции чтения и записи словаря в файл IMaterial IMaterialComponentOwner This interface must implements every node which can be used as a owner of MaterialComponent. IMaterialFog IMaterialSkin IMenu IMesh IPersistOnReplaceContent Used to prevent removal of components implementing the interface from placeholder node when an external scene is being inlined by ReplaceContent(Node). Do not use with components marked with AllowMultipleComponentsAttribute. IPersistenceContext IPersistenceReadData IPresenter IPropertyLocker IRandom IRandomProvider IRenderChainBuilder IRenderer ISerializableAsset ISimpleAnimationCurve ISimpleKeyframe ISimpleKeyframeCollection ISoftKeyboard Програмная клавиатура (для мобильных устройств) ISprite ITangerinePreviewAnimationListener IText ITexture ITiledImageMaterial ITopology ITopologyPrimitive ITriggerable IUpdatableNode IVectorShapeElement IWebBrowserImplementation IWindow Defines the interface for a window. ThemedButton.IButtonPresenter Validation.IFixingValidator Validation.IFixingValidator<T> If it is possible to fix invalid data implement this interface. Validation.IPassThroughEnumerable If validation attribute is set up upon a property which implements IEnumerable PassThroughEnumerable will decide if validation should be applied to the property itself or to each of it's elements. This stands true for nested IEnumerables. Doesn't make much sense for class validator. Validation.IRequireOwner Implement this interface for you validator if it requires owner to perform validation. Validation.IRequireOwner<T> Validation.IValidator Validation.IValidator<T> Enums Anchors Parent-relative layout. AnimationClipExtrapolation AssetAttributes AssetBundleFlags AudioAction AudioChannelGroup AudioChannelState AudioFormat Blend BlendFunc Blending BlurShaderId BufferSetDataMode BufferType CameraProjectionMode CaretPosition.ValidState CheckBoxState ClearOptions ClipMethod CloseReason Defines the reason for the window closing. Color4.StringPresentation ColorWriteMask CompareFunc CompressedAnimationCurveFrameNumberFormat CompressionFormat ContainmentType Defines how the bounding volumes intersects or contain one another. CullMode DeviceOrientation DragDirection EmissionType EmitterAction EmitterShape FileDialogMode Specifies possible dialog modes. FogMode Format FormatFeatures FrontFace GradientMaterialBlendMode HAlignment Types of horizontal alignment. HierarchyAction HitTestMethod ImageCombinerOperation IndexFormat KeyboardFocusScope.Direction LayoutDirection LineCap MacWindowTabbingMode MarkerAction Mathf.EasingFunction Mathf.EasingType MeshDirtyFlags Model3DAttachmentParser.UVAnimationOverlayBlending Model3DAttachmentParser.UVAnimationType Modifiers MovieAction Node.DirtyFlags ParticlesLinkage Particles move with widget they're linked to. Persistence.Format PlatformId PostProcessingPresenter.DebugViewMode PrimitiveTopology RenderState RenderTarget RenderingBackend ScrollDirection ShaderId ShaderOptions SimpleKeyFunction SkinningMode SoftKeyboardType SplineInterpolation SplitterLineState StencilOp TangerineFlags TextOverflowMode Types of text overflow handling. TextRenderingMode TextStyle.ImageUsageEnum TextureBlending TextureFilter TextureMipmapMode TextureWrapMode VAlignment Types of vertical alignment. Validation.Result Denotes severity level of a validation. VideoPlayerStatus WaveType WindowState Enumerates available window states. WindowStyle WindowType Delegates Animation.AnimationData.LoadedDelegate Animation.AnimationData.LoadingDelegate ClosingDelegate Delegate used by Closing event. DelegatePresenter<T>.PartialHitTestDelegate DelegatePresenter<T>.RenderDelegate HierarchyChangedEventHandler Input.InputSimulator.ProcessingPendingInputEventsDelegate MeshUtils.VertexProcessor<T> Node.SceneLoadedDelegate Node.SceneLoadingDelegate ResizeDelegate Delegate used by Resized event. SafeAreaInsetsChangedDelegate Delegate used by SafeAreaInsetsChanged event. New value of sinsets. TextProcessorDelegate Texture2D.TextureMissingDelegate TexturePool.TextureCreatedDelegate TexturePool.TextureCreatingDelegate UpdateHandler UpdatingDelegate Delegate used by Updating event. VisibleChangingDelegate Delegate used by VisibleChanging event. WeakReferencePool<TKey, TValue>.CreateItemDelegate WidgetInput.FilterFunc"
  },
  "api/SharpVulkan.AccessFlags.html": {
    "href": "api/SharpVulkan.AccessFlags.html",
    "title": "Enum AccessFlags | Citrus Engine",
    "keywords": "Enum AccessFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum AccessFlags Fields ColorAttachmentRead = 128 ColorAttachmentWrite = 256 CommandProcessRead = 131072 CommandProcessWrite = 262144 DepthStencilAttachmentRead = 512 DepthStencilAttachmentWrite = 1024 HostRead = 8192 HostWrite = 16384 IndexRead = 2 IndirectCommandRead = 1 InputAttachmentRead = 16 MemoryRead = 32768 MemoryWrite = 65536 None = 0 ShaderRead = 32 ShaderWrite = 64 TransferRead = 2048 TransferWrite = 4096 UniformRead = 8 VertexAttributeRead = 4"
  },
  "api/SharpVulkan.AllocationCallbacks.html": {
    "href": "api/SharpVulkan.AllocationCallbacks.html",
    "title": "Struct AllocationCallbacks | Citrus Engine",
    "keywords": "Struct AllocationCallbacks Namespace SharpVulkan Assembly Lime.dll public struct AllocationCallbacks Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Allocation public nint Allocation Field Value nint Free public nint Free Field Value nint InternalAllocation public nint InternalAllocation Field Value nint InternalFree public nint InternalFree Field Value nint Reallocation public nint Reallocation Field Value nint UserData public nint UserData Field Value nint"
  },
  "api/SharpVulkan.AndroidSurfaceCreateFlags.html": {
    "href": "api/SharpVulkan.AndroidSurfaceCreateFlags.html",
    "title": "Enum AndroidSurfaceCreateFlags | Citrus Engine",
    "keywords": "Enum AndroidSurfaceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum AndroidSurfaceCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.AndroidSurfaceCreateInfo.html": {
    "href": "api/SharpVulkan.AndroidSurfaceCreateInfo.html",
    "title": "Struct AndroidSurfaceCreateInfo | Citrus Engine",
    "keywords": "Struct AndroidSurfaceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct AndroidSurfaceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public AndroidSurfaceCreateFlags Flags Field Value AndroidSurfaceCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType Window public nint Window Field Value nint"
  },
  "api/SharpVulkan.ApplicationInfo.html": {
    "href": "api/SharpVulkan.ApplicationInfo.html",
    "title": "Struct ApplicationInfo | Citrus Engine",
    "keywords": "Struct ApplicationInfo Namespace SharpVulkan Assembly Lime.dll public struct ApplicationInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ApiVersion public uint ApiVersion Field Value uint ApplicationName public nint ApplicationName Field Value nint ApplicationVersion public uint ApplicationVersion Field Value uint EngineName public nint EngineName Field Value nint EngineVersion public uint EngineVersion Field Value uint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.AttachmentDescription.html": {
    "href": "api/SharpVulkan.AttachmentDescription.html",
    "title": "Struct AttachmentDescription | Citrus Engine",
    "keywords": "Struct AttachmentDescription Namespace SharpVulkan Assembly Lime.dll public struct AttachmentDescription Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields FinalLayout public ImageLayout FinalLayout Field Value ImageLayout Flags public AttachmentDescriptionFlags Flags Field Value AttachmentDescriptionFlags Format public Format Format Field Value Format InitialLayout public ImageLayout InitialLayout Field Value ImageLayout LoadOperation public AttachmentLoadOperation LoadOperation Field Value AttachmentLoadOperation Samples public SampleCountFlags Samples Field Value SampleCountFlags StencilLoadOperation public AttachmentLoadOperation StencilLoadOperation Field Value AttachmentLoadOperation StencilStoreOperation public AttachmentStoreOperation StencilStoreOperation Field Value AttachmentStoreOperation StoreOperation public AttachmentStoreOperation StoreOperation Field Value AttachmentStoreOperation"
  },
  "api/SharpVulkan.AttachmentDescriptionFlags.html": {
    "href": "api/SharpVulkan.AttachmentDescriptionFlags.html",
    "title": "Enum AttachmentDescriptionFlags | Citrus Engine",
    "keywords": "Enum AttachmentDescriptionFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum AttachmentDescriptionFlags Fields MayAlias = 1 None = 0"
  },
  "api/SharpVulkan.AttachmentLoadOperation.html": {
    "href": "api/SharpVulkan.AttachmentLoadOperation.html",
    "title": "Enum AttachmentLoadOperation | Citrus Engine",
    "keywords": "Enum AttachmentLoadOperation Namespace SharpVulkan Assembly Lime.dll public enum AttachmentLoadOperation Fields Clear = 1 DontCare = 2 Load = 0"
  },
  "api/SharpVulkan.AttachmentReference.html": {
    "href": "api/SharpVulkan.AttachmentReference.html",
    "title": "Struct AttachmentReference | Citrus Engine",
    "keywords": "Struct AttachmentReference Namespace SharpVulkan Assembly Lime.dll public struct AttachmentReference Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Attachment public uint Attachment Field Value uint Layout public ImageLayout Layout Field Value ImageLayout"
  },
  "api/SharpVulkan.AttachmentStoreOperation.html": {
    "href": "api/SharpVulkan.AttachmentStoreOperation.html",
    "title": "Enum AttachmentStoreOperation | Citrus Engine",
    "keywords": "Enum AttachmentStoreOperation Namespace SharpVulkan Assembly Lime.dll public enum AttachmentStoreOperation Fields DontCare = 1 Store = 0"
  },
  "api/SharpVulkan.BindSparseInfo.html": {
    "href": "api/SharpVulkan.BindSparseInfo.html",
    "title": "Struct BindSparseInfo | Citrus Engine",
    "keywords": "Struct BindSparseInfo Namespace SharpVulkan Assembly Lime.dll public struct BindSparseInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BufferBindCount public uint BufferBindCount Field Value uint BufferBinds public nint BufferBinds Field Value nint ImageBindCount public uint ImageBindCount Field Value uint ImageBinds public nint ImageBinds Field Value nint ImageOpaqueBindCount public uint ImageOpaqueBindCount Field Value uint ImageOpaqueBinds public nint ImageOpaqueBinds Field Value nint Next public nint Next Field Value nint SignalSemaphoreCount public uint SignalSemaphoreCount Field Value uint SignalSemaphores public nint SignalSemaphores Field Value nint StructureType public StructureType StructureType Field Value StructureType WaitSemaphoreCount public uint WaitSemaphoreCount Field Value uint WaitSemaphores public nint WaitSemaphores Field Value nint"
  },
  "api/SharpVulkan.BlendFactor.html": {
    "href": "api/SharpVulkan.BlendFactor.html",
    "title": "Enum BlendFactor | Citrus Engine",
    "keywords": "Enum BlendFactor Namespace SharpVulkan Assembly Lime.dll public enum BlendFactor Fields ConstantAlpha = 12 ConstantColor = 10 DestinationAlpha = 8 DestinationColor = 4 One = 1 OneMinusConstantAlpha = 13 OneMinusConstantColor = 11 OneMinusDestinationAlpha = 9 OneMinusDestinationColor = 5 OneMinusSource1Alpha = 18 OneMinusSource1Color = 16 OneMinusSourceAlpha = 7 OneMinusSourceColor = 3 Source1Alpha = 17 Source1Color = 15 SourceAlpha = 6 SourceAlphaSaturate = 14 SourceColor = 2 Zero = 0"
  },
  "api/SharpVulkan.BlendOperation.html": {
    "href": "api/SharpVulkan.BlendOperation.html",
    "title": "Enum BlendOperation | Citrus Engine",
    "keywords": "Enum BlendOperation Namespace SharpVulkan Assembly Lime.dll public enum BlendOperation Fields Add = 0 Max = 4 Min = 3 ReverseSubtract = 2 Subtract = 1"
  },
  "api/SharpVulkan.BorderColor.html": {
    "href": "api/SharpVulkan.BorderColor.html",
    "title": "Enum BorderColor | Citrus Engine",
    "keywords": "Enum BorderColor Namespace SharpVulkan Assembly Lime.dll public enum BorderColor Fields FloatOpaqueBlack = 2 FloatOpaqueWhite = 4 FloatTransparentBlack = 0 IntOpaqueBlack = 3 IntOpaqueWhite = 5 IntTransparentBlack = 1"
  },
  "api/SharpVulkan.Buffer.html": {
    "href": "api/SharpVulkan.Buffer.html",
    "title": "Struct Buffer | Citrus Engine",
    "keywords": "Struct Buffer Namespace SharpVulkan Assembly Lime.dll public struct Buffer : IEquatable<Buffer> Implements IEquatable<Buffer> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Buffer Null Field Value Buffer Methods Equals(Buffer) Indicates whether the current object is equal to another object of the same type. public bool Equals(Buffer other) Parameters other Buffer An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Buffer, Buffer) public static bool operator ==(Buffer left, Buffer right) Parameters left Buffer right Buffer Returns bool operator !=(Buffer, Buffer) public static bool operator !=(Buffer left, Buffer right) Parameters left Buffer right Buffer Returns bool"
  },
  "api/SharpVulkan.BufferCopy.html": {
    "href": "api/SharpVulkan.BufferCopy.html",
    "title": "Struct BufferCopy | Citrus Engine",
    "keywords": "Struct BufferCopy Namespace SharpVulkan Assembly Lime.dll public struct BufferCopy Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DestinationOffset public ulong DestinationOffset Field Value ulong Size public ulong Size Field Value ulong SourceOffset public ulong SourceOffset Field Value ulong"
  },
  "api/SharpVulkan.BufferCreateFlags.html": {
    "href": "api/SharpVulkan.BufferCreateFlags.html",
    "title": "Enum BufferCreateFlags | Citrus Engine",
    "keywords": "Enum BufferCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum BufferCreateFlags Fields None = 0 SparseAliased = 4 SparseBinding = 1 SparseResidency = 2"
  },
  "api/SharpVulkan.BufferCreateInfo.html": {
    "href": "api/SharpVulkan.BufferCreateInfo.html",
    "title": "Struct BufferCreateInfo | Citrus Engine",
    "keywords": "Struct BufferCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct BufferCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public BufferCreateFlags Flags Field Value BufferCreateFlags Next public nint Next Field Value nint QueueFamilyIndexCount public uint QueueFamilyIndexCount Field Value uint QueueFamilyIndices public nint QueueFamilyIndices Field Value nint SharingMode public SharingMode SharingMode Field Value SharingMode Size public ulong Size Field Value ulong StructureType public StructureType StructureType Field Value StructureType Usage public BufferUsageFlags Usage Field Value BufferUsageFlags"
  },
  "api/SharpVulkan.BufferImageCopy.html": {
    "href": "api/SharpVulkan.BufferImageCopy.html",
    "title": "Struct BufferImageCopy | Citrus Engine",
    "keywords": "Struct BufferImageCopy Namespace SharpVulkan Assembly Lime.dll public struct BufferImageCopy Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BufferImageHeight public uint BufferImageHeight Field Value uint BufferOffset public ulong BufferOffset Field Value ulong BufferRowLength public uint BufferRowLength Field Value uint ImageExtent public Extent3D ImageExtent Field Value Extent3D ImageOffset public Offset3D ImageOffset Field Value Offset3D ImageSubresource public ImageSubresourceLayers ImageSubresource Field Value ImageSubresourceLayers"
  },
  "api/SharpVulkan.BufferMemoryBarrier.html": {
    "href": "api/SharpVulkan.BufferMemoryBarrier.html",
    "title": "Struct BufferMemoryBarrier | Citrus Engine",
    "keywords": "Struct BufferMemoryBarrier Namespace SharpVulkan Assembly Lime.dll public struct BufferMemoryBarrier Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors BufferMemoryBarrier(Buffer, AccessFlags, AccessFlags, uint, uint, ulong, ulong) public BufferMemoryBarrier(Buffer buffer, AccessFlags sourceAccesMask, AccessFlags destinationAccessMask, uint sourceQueueFamilyIndex, uint destinationQueueFamilyIndex, ulong offset = 0, ulong size = 18446744073709551615) Parameters buffer Buffer sourceAccesMask AccessFlags destinationAccessMask AccessFlags sourceQueueFamilyIndex uint destinationQueueFamilyIndex uint offset ulong size ulong BufferMemoryBarrier(Buffer, AccessFlags, AccessFlags, ulong, ulong) public BufferMemoryBarrier(Buffer buffer, AccessFlags sourceAccesMask, AccessFlags destinationAccessMask, ulong offset = 0, ulong size = 18446744073709551615) Parameters buffer Buffer sourceAccesMask AccessFlags destinationAccessMask AccessFlags offset ulong size ulong Fields Buffer public Buffer Buffer Field Value Buffer DestinationAccessMask public AccessFlags DestinationAccessMask Field Value AccessFlags DestinationQueueFamilyIndex public uint DestinationQueueFamilyIndex Field Value uint Next public nint Next Field Value nint Offset public ulong Offset Field Value ulong Size public ulong Size Field Value ulong SourceAccessMask public AccessFlags SourceAccessMask Field Value AccessFlags SourceQueueFamilyIndex public uint SourceQueueFamilyIndex Field Value uint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.BufferUsageFlags.html": {
    "href": "api/SharpVulkan.BufferUsageFlags.html",
    "title": "Enum BufferUsageFlags | Citrus Engine",
    "keywords": "Enum BufferUsageFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum BufferUsageFlags Fields IndexBuffer = 64 IndirectBuffer = 256 None = 0 StorageBuffer = 32 StorageTexelBuffer = 8 TransferDestination = 2 TransferSource = 1 UniformBuffer = 16 UniformTexelBuffer = 4 VertexBuffer = 128"
  },
  "api/SharpVulkan.BufferView.html": {
    "href": "api/SharpVulkan.BufferView.html",
    "title": "Struct BufferView | Citrus Engine",
    "keywords": "Struct BufferView Namespace SharpVulkan Assembly Lime.dll public struct BufferView : IEquatable<BufferView> Implements IEquatable<BufferView> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly BufferView Null Field Value BufferView Methods Equals(BufferView) Indicates whether the current object is equal to another object of the same type. public bool Equals(BufferView other) Parameters other BufferView An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(BufferView, BufferView) public static bool operator ==(BufferView left, BufferView right) Parameters left BufferView right BufferView Returns bool operator !=(BufferView, BufferView) public static bool operator !=(BufferView left, BufferView right) Parameters left BufferView right BufferView Returns bool"
  },
  "api/SharpVulkan.BufferViewCreateFlags.html": {
    "href": "api/SharpVulkan.BufferViewCreateFlags.html",
    "title": "Enum BufferViewCreateFlags | Citrus Engine",
    "keywords": "Enum BufferViewCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum BufferViewCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.BufferViewCreateInfo.html": {
    "href": "api/SharpVulkan.BufferViewCreateInfo.html",
    "title": "Struct BufferViewCreateInfo | Citrus Engine",
    "keywords": "Struct BufferViewCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct BufferViewCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Buffer public Buffer Buffer Field Value Buffer Flags public BufferViewCreateFlags Flags Field Value BufferViewCreateFlags Format public Format Format Field Value Format Next public nint Next Field Value nint Offset public ulong Offset Field Value ulong Range public ulong Range Field Value ulong StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ClearAttachment.html": {
    "href": "api/SharpVulkan.ClearAttachment.html",
    "title": "Struct ClearAttachment | Citrus Engine",
    "keywords": "Struct ClearAttachment Namespace SharpVulkan Assembly Lime.dll public struct ClearAttachment Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AspectMask public ImageAspectFlags AspectMask Field Value ImageAspectFlags ClearValue public ClearValue ClearValue Field Value ClearValue ColorAttachment public uint ColorAttachment Field Value uint"
  },
  "api/SharpVulkan.ClearColorValue.Float32Array.html": {
    "href": "api/SharpVulkan.ClearColorValue.Float32Array.html",
    "title": "Struct ClearColorValue.Float32Array | Citrus Engine",
    "keywords": "Struct ClearColorValue.Float32Array Namespace SharpVulkan Assembly Lime.dll public struct ClearColorValue.Float32Array Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public float Value0 Field Value float Value1 public float Value1 Field Value float Value2 public float Value2 Field Value float Value3 public float Value3 Field Value float"
  },
  "api/SharpVulkan.ClearColorValue.Int32Array.html": {
    "href": "api/SharpVulkan.ClearColorValue.Int32Array.html",
    "title": "Struct ClearColorValue.Int32Array | Citrus Engine",
    "keywords": "Struct ClearColorValue.Int32Array Namespace SharpVulkan Assembly Lime.dll public struct ClearColorValue.Int32Array Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public int Value0 Field Value int Value1 public int Value1 Field Value int Value2 public int Value2 Field Value int Value3 public int Value3 Field Value int"
  },
  "api/SharpVulkan.ClearColorValue.Uint32Array.html": {
    "href": "api/SharpVulkan.ClearColorValue.Uint32Array.html",
    "title": "Struct ClearColorValue.Uint32Array | Citrus Engine",
    "keywords": "Struct ClearColorValue.Uint32Array Namespace SharpVulkan Assembly Lime.dll public struct ClearColorValue.Uint32Array Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public uint Value0 Field Value uint Value1 public uint Value1 Field Value uint Value2 public uint Value2 Field Value uint Value3 public uint Value3 Field Value uint"
  },
  "api/SharpVulkan.ClearColorValue.html": {
    "href": "api/SharpVulkan.ClearColorValue.html",
    "title": "Struct ClearColorValue | Citrus Engine",
    "keywords": "Struct ClearColorValue Namespace SharpVulkan Assembly Lime.dll public struct ClearColorValue Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Float32 public ClearColorValue.Float32Array Float32 Field Value ClearColorValue.Float32Array Int32 public ClearColorValue.Int32Array Int32 Field Value ClearColorValue.Int32Array Uint32 public ClearColorValue.Uint32Array Uint32 Field Value ClearColorValue.Uint32Array"
  },
  "api/SharpVulkan.ClearDepthStencilValue.html": {
    "href": "api/SharpVulkan.ClearDepthStencilValue.html",
    "title": "Struct ClearDepthStencilValue | Citrus Engine",
    "keywords": "Struct ClearDepthStencilValue Namespace SharpVulkan Assembly Lime.dll public struct ClearDepthStencilValue Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ClearDepthStencilValue(float, uint) public ClearDepthStencilValue(float depth, uint stencil) Parameters depth float stencil uint Fields Depth public float Depth Field Value float Stencil public uint Stencil Field Value uint"
  },
  "api/SharpVulkan.ClearRect.html": {
    "href": "api/SharpVulkan.ClearRect.html",
    "title": "Struct ClearRect | Citrus Engine",
    "keywords": "Struct ClearRect Namespace SharpVulkan Assembly Lime.dll public struct ClearRect Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BaseArrayLayer public uint BaseArrayLayer Field Value uint LayerCount public uint LayerCount Field Value uint Rect public Rect2D Rect Field Value Rect2D"
  },
  "api/SharpVulkan.ClearValue.html": {
    "href": "api/SharpVulkan.ClearValue.html",
    "title": "Struct ClearValue | Citrus Engine",
    "keywords": "Struct ClearValue Namespace SharpVulkan Assembly Lime.dll public struct ClearValue Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Color public ClearColorValue Color Field Value ClearColorValue DepthStencil public ClearDepthStencilValue DepthStencil Field Value ClearDepthStencilValue"
  },
  "api/SharpVulkan.ColorComponentFlags.html": {
    "href": "api/SharpVulkan.ColorComponentFlags.html",
    "title": "Enum ColorComponentFlags | Citrus Engine",
    "keywords": "Enum ColorComponentFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ColorComponentFlags Fields A = 8 B = 4 G = 2 None = 0 R = 1"
  },
  "api/SharpVulkan.ColorSpace.html": {
    "href": "api/SharpVulkan.ColorSpace.html",
    "title": "Enum ColorSpace | Citrus Engine",
    "keywords": "Enum ColorSpace Namespace SharpVulkan Assembly Lime.dll public enum ColorSpace Fields AdobeRgbLinear = 1000104011 AdobeRgbNonlinear = 1000104012 Bt2020Linear = 1000104009 Bt2020Nonlinear = 1000104010 Bt709Linear = 1000104007 Bt709Nonlinear = 1000104008 DciP3Linear = 1000104005 DciP3Nonlinear = 1000104006 DisplayP3Linear = 1000104001 DisplayP3Nonlinear = 1000104002 SRgbNonlinear = 0 ScRgbLinear = 1000104003 ScRgbNonlinear = 1000104004"
  },
  "api/SharpVulkan.CommandBuffer.html": {
    "href": "api/SharpVulkan.CommandBuffer.html",
    "title": "Struct CommandBuffer | Citrus Engine",
    "keywords": "Struct CommandBuffer Namespace SharpVulkan Assembly Lime.dll public struct CommandBuffer : IEquatable<CommandBuffer> Implements IEquatable<CommandBuffer> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly CommandBuffer Null Field Value CommandBuffer Methods Begin(ref CommandBufferBeginInfo) public void Begin(ref CommandBufferBeginInfo beginInfo) Parameters beginInfo CommandBufferBeginInfo BeginQuery(QueryPool, uint, QueryControlFlags) public void BeginQuery(QueryPool queryPool, uint query, QueryControlFlags flags) Parameters queryPool QueryPool query uint flags QueryControlFlags BeginRenderPass(ref RenderPassBeginInfo, SubpassContents) public void BeginRenderPass(ref RenderPassBeginInfo renderPassBegin, SubpassContents contents) Parameters renderPassBegin RenderPassBeginInfo contents SubpassContents BindDescriptorSets(PipelineBindPoint, PipelineLayout, uint, uint, DescriptorSet*, uint, uint*) public void BindDescriptorSets(PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint firstSet, uint descriptorSetCount, DescriptorSet* descriptorSets, uint dynamicOffsetCount, uint* dynamicOffsets) Parameters pipelineBindPoint PipelineBindPoint layout PipelineLayout firstSet uint descriptorSetCount uint descriptorSets DescriptorSet* dynamicOffsetCount uint dynamicOffsets uint* BindIndexBuffer(Buffer, ulong, IndexType) public void BindIndexBuffer(Buffer buffer, ulong offset, IndexType indexType) Parameters buffer Buffer offset ulong indexType IndexType BindPipeline(PipelineBindPoint, Pipeline) public void BindPipeline(PipelineBindPoint pipelineBindPoint, Pipeline pipeline) Parameters pipelineBindPoint PipelineBindPoint pipeline Pipeline BindVertexBuffers(uint, uint, Buffer*, ulong*) public void BindVertexBuffers(uint firstBinding, uint bindingCount, Buffer* buffers, ulong* offsets) Parameters firstBinding uint bindingCount uint buffers Buffer* offsets ulong* BlitImage(Image, ImageLayout, Image, ImageLayout, uint, ImageBlit*, Filter) public void BlitImage(Image sourceImage, ImageLayout sourceImageLayout, Image destinationImage, ImageLayout destinationImageLayout, uint regionCount, ImageBlit* regions, Filter filter) Parameters sourceImage Image sourceImageLayout ImageLayout destinationImage Image destinationImageLayout ImageLayout regionCount uint regions ImageBlit* filter Filter ClearAttachments(uint, ref ClearAttachment, uint, ClearRect*) public void ClearAttachments(uint attachmentCount, ref ClearAttachment attachments, uint rectCount, ClearRect* rects) Parameters attachmentCount uint attachments ClearAttachment rectCount uint rects ClearRect* ClearColorImage(Image, ImageLayout, ClearColorValue, uint, ImageSubresourceRange*) public void ClearColorImage(Image image, ImageLayout imageLayout, ClearColorValue color, uint rangeCount, ImageSubresourceRange* ranges) Parameters image Image imageLayout ImageLayout color ClearColorValue rangeCount uint ranges ImageSubresourceRange* ClearDepthStencilImage(Image, ImageLayout, ClearDepthStencilValue, uint, ImageSubresourceRange*) public void ClearDepthStencilImage(Image image, ImageLayout imageLayout, ClearDepthStencilValue depthStencil, uint rangeCount, ImageSubresourceRange* ranges) Parameters image Image imageLayout ImageLayout depthStencil ClearDepthStencilValue rangeCount uint ranges ImageSubresourceRange* CopyBuffer(Buffer, Buffer, uint, BufferCopy*) public void CopyBuffer(Buffer sourceBuffer, Buffer destinationBuffer, uint regionCount, BufferCopy* regions) Parameters sourceBuffer Buffer destinationBuffer Buffer regionCount uint regions BufferCopy* CopyBufferToImage(Buffer, Image, ImageLayout, uint, BufferImageCopy*) public void CopyBufferToImage(Buffer sourceBuffer, Image destinationImage, ImageLayout destinationImageLayout, uint regionCount, BufferImageCopy* regions) Parameters sourceBuffer Buffer destinationImage Image destinationImageLayout ImageLayout regionCount uint regions BufferImageCopy* CopyImage(Image, ImageLayout, Image, ImageLayout, uint, ImageCopy*) public void CopyImage(Image sourceImage, ImageLayout sourceImageLayout, Image destinationImage, ImageLayout destinationImageLayout, uint regionCount, ImageCopy* regions) Parameters sourceImage Image sourceImageLayout ImageLayout destinationImage Image destinationImageLayout ImageLayout regionCount uint regions ImageCopy* CopyImageToBuffer(Image, ImageLayout, Buffer, uint, BufferImageCopy*) public void CopyImageToBuffer(Image sourceImage, ImageLayout sourceImageLayout, Buffer destinationBuffer, uint regionCount, BufferImageCopy* regions) Parameters sourceImage Image sourceImageLayout ImageLayout destinationBuffer Buffer regionCount uint regions BufferImageCopy* CopyQueryPoolResults(QueryPool, uint, uint, Buffer, ulong, ulong, QueryResultFlags) public void CopyQueryPoolResults(QueryPool queryPool, uint firstQuery, uint queryCount, Buffer destinationBuffer, ulong destinationOffset, ulong stride, QueryResultFlags flags) Parameters queryPool QueryPool firstQuery uint queryCount uint destinationBuffer Buffer destinationOffset ulong stride ulong flags QueryResultFlags DebugMarkerBegin(ref DebugMarkerMarkerInfo) public void DebugMarkerBegin(ref DebugMarkerMarkerInfo markerInfo) Parameters markerInfo DebugMarkerMarkerInfo DebugMarkerEnd() public void DebugMarkerEnd() DebugMarkerInsert(ref DebugMarkerMarkerInfo) public void DebugMarkerInsert(ref DebugMarkerMarkerInfo markerInfo) Parameters markerInfo DebugMarkerMarkerInfo Dispatch(uint, uint, uint) public void Dispatch(uint x, uint y, uint z) Parameters x uint y uint z uint DispatchIndirect(Buffer, ulong) public void DispatchIndirect(Buffer buffer, ulong offset) Parameters buffer Buffer offset ulong Draw(uint, uint, uint, uint) public void Draw(uint vertexCount, uint instanceCount, uint firstVertex, uint firstInstance) Parameters vertexCount uint instanceCount uint firstVertex uint firstInstance uint DrawIndexed(uint, uint, uint, int, uint) public void DrawIndexed(uint indexCount, uint instanceCount, uint firstIndex, int vertexOffset, uint firstInstance) Parameters indexCount uint instanceCount uint firstIndex uint vertexOffset int firstInstance uint DrawIndexedIndirect(Buffer, ulong, uint, uint) public void DrawIndexedIndirect(Buffer buffer, ulong offset, uint drawCount, uint stride) Parameters buffer Buffer offset ulong drawCount uint stride uint DrawIndexedIndirectCount(Buffer, ulong, Buffer, ulong, uint, uint) public void DrawIndexedIndirectCount(Buffer buffer, ulong offset, Buffer countBuffer, ulong countBufferOffset, uint maxDrawCount, uint stride) Parameters buffer Buffer offset ulong countBuffer Buffer countBufferOffset ulong maxDrawCount uint stride uint DrawIndirect(Buffer, ulong, uint, uint) public void DrawIndirect(Buffer buffer, ulong offset, uint drawCount, uint stride) Parameters buffer Buffer offset ulong drawCount uint stride uint DrawIndirectCount(Buffer, ulong, Buffer, ulong, uint, uint) public void DrawIndirectCount(Buffer buffer, ulong offset, Buffer countBuffer, ulong countBufferOffset, uint maxDrawCount, uint stride) Parameters buffer Buffer offset ulong countBuffer Buffer countBufferOffset ulong maxDrawCount uint stride uint End() public void End() EndQuery(QueryPool, uint) public void EndQuery(QueryPool queryPool, uint query) Parameters queryPool QueryPool query uint EndRenderPass() public void EndRenderPass() Equals(CommandBuffer) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandBuffer other) Parameters other CommandBuffer An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. ExecuteCommands(uint, CommandBuffer*) public void ExecuteCommands(uint commandBufferCount, CommandBuffer* commandBuffers) Parameters commandBufferCount uint commandBuffers CommandBuffer* FillBuffer(Buffer, ulong, ulong, uint) public void FillBuffer(Buffer destinationBuffer, ulong destinationOffset, ulong size, uint data) Parameters destinationBuffer Buffer destinationOffset ulong size ulong data uint GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. NextSubpass(SubpassContents) public void NextSubpass(SubpassContents contents) Parameters contents SubpassContents PipelineBarrier(PipelineStageFlags, PipelineStageFlags, DependencyFlags, uint, MemoryBarrier*, uint, BufferMemoryBarrier*, uint, ImageMemoryBarrier*) public void PipelineBarrier(PipelineStageFlags sourceStageMask, PipelineStageFlags destinationStageMask, DependencyFlags dependencyFlags, uint memoryBarrierCount, MemoryBarrier* memoryBarriers, uint bufferMemoryBarrierCount, BufferMemoryBarrier* bufferMemoryBarriers, uint imageMemoryBarrierCount, ImageMemoryBarrier* imageMemoryBarriers) Parameters sourceStageMask PipelineStageFlags destinationStageMask PipelineStageFlags dependencyFlags DependencyFlags memoryBarrierCount uint memoryBarriers MemoryBarrier* bufferMemoryBarrierCount uint bufferMemoryBarriers BufferMemoryBarrier* imageMemoryBarrierCount uint imageMemoryBarriers ImageMemoryBarrier* ProcessCommands(ref CommandProcessCommandsInfo) public void ProcessCommands(ref CommandProcessCommandsInfo processCommandsInfo) Parameters processCommandsInfo CommandProcessCommandsInfo PushConstants(PipelineLayout, ShaderStageFlags, uint, uint, nint) public void PushConstants(PipelineLayout layout, ShaderStageFlags stageFlags, uint offset, uint size, nint values) Parameters layout PipelineLayout stageFlags ShaderStageFlags offset uint size uint values nint ReserveSpaceForCommands(ref CommandReserveSpaceForCommandsInfo) public void ReserveSpaceForCommands(ref CommandReserveSpaceForCommandsInfo reserveSpaceInfo) Parameters reserveSpaceInfo CommandReserveSpaceForCommandsInfo Reset(CommandBufferResetFlags) public void Reset(CommandBufferResetFlags flags) Parameters flags CommandBufferResetFlags ResetEvent(Event, PipelineStageFlags) public void ResetEvent(Event @event, PipelineStageFlags stageMask) Parameters event Event stageMask PipelineStageFlags ResetQueryPool(QueryPool, uint, uint) public void ResetQueryPool(QueryPool queryPool, uint firstQuery, uint queryCount) Parameters queryPool QueryPool firstQuery uint queryCount uint ResolveImage(Image, ImageLayout, Image, ImageLayout, uint, ImageResolve*) public void ResolveImage(Image sourceImage, ImageLayout sourceImageLayout, Image destinationImage, ImageLayout destinationImageLayout, uint regionCount, ImageResolve* regions) Parameters sourceImage Image sourceImageLayout ImageLayout destinationImage Image destinationImageLayout ImageLayout regionCount uint regions ImageResolve* SetBlendConstants(float) public void SetBlendConstants(float blendConstants) Parameters blendConstants float SetDepthBias(float, float, float) public void SetDepthBias(float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor) Parameters depthBiasConstantFactor float depthBiasClamp float depthBiasSlopeFactor float SetDepthBounds(float, float) public void SetDepthBounds(float minDepthBounds, float maxDepthBounds) Parameters minDepthBounds float maxDepthBounds float SetEvent(Event, PipelineStageFlags) public void SetEvent(Event @event, PipelineStageFlags stageMask) Parameters event Event stageMask PipelineStageFlags SetLineWidth(float) public void SetLineWidth(float lineWidth) Parameters lineWidth float SetScissor(uint, uint, Rect2D*) public void SetScissor(uint firstScissor, uint scissorCount, Rect2D* scissors) Parameters firstScissor uint scissorCount uint scissors Rect2D* SetStencilCompareMask(StencilFaceFlags, uint) public void SetStencilCompareMask(StencilFaceFlags faceMask, uint compareMask) Parameters faceMask StencilFaceFlags compareMask uint SetStencilReference(StencilFaceFlags, uint) public void SetStencilReference(StencilFaceFlags faceMask, uint reference) Parameters faceMask StencilFaceFlags reference uint SetStencilWriteMask(StencilFaceFlags, uint) public void SetStencilWriteMask(StencilFaceFlags faceMask, uint writeMask) Parameters faceMask StencilFaceFlags writeMask uint SetViewport(uint, uint, Viewport*) public void SetViewport(uint firstViewport, uint viewportCount, Viewport* viewports) Parameters firstViewport uint viewportCount uint viewports Viewport* ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. UpdateBuffer(Buffer, ulong, ulong, nint) public void UpdateBuffer(Buffer destinationBuffer, ulong destinationOffset, ulong dataSize, nint data) Parameters destinationBuffer Buffer destinationOffset ulong dataSize ulong data nint WaitEvents(uint, Event, PipelineStageFlags, PipelineStageFlags, uint, MemoryBarrier*, uint, BufferMemoryBarrier*, uint, ImageMemoryBarrier*) public void WaitEvents(uint eventCount, Event events, PipelineStageFlags sourceStageMask, PipelineStageFlags destinationStageMask, uint memoryBarrierCount, MemoryBarrier* memoryBarriers, uint bufferMemoryBarrierCount, BufferMemoryBarrier* bufferMemoryBarriers, uint imageMemoryBarrierCount, ImageMemoryBarrier* imageMemoryBarriers) Parameters eventCount uint events Event sourceStageMask PipelineStageFlags destinationStageMask PipelineStageFlags memoryBarrierCount uint memoryBarriers MemoryBarrier* bufferMemoryBarrierCount uint bufferMemoryBarriers BufferMemoryBarrier* imageMemoryBarrierCount uint imageMemoryBarriers ImageMemoryBarrier* WriteTimestamp(PipelineStageFlags, QueryPool, uint) public void WriteTimestamp(PipelineStageFlags pipelineStage, QueryPool queryPool, uint query) Parameters pipelineStage PipelineStageFlags queryPool QueryPool query uint Operators operator ==(CommandBuffer, CommandBuffer) public static bool operator ==(CommandBuffer left, CommandBuffer right) Parameters left CommandBuffer right CommandBuffer Returns bool operator !=(CommandBuffer, CommandBuffer) public static bool operator !=(CommandBuffer left, CommandBuffer right) Parameters left CommandBuffer right CommandBuffer Returns bool"
  },
  "api/SharpVulkan.CommandBufferAllocateInfo.html": {
    "href": "api/SharpVulkan.CommandBufferAllocateInfo.html",
    "title": "Struct CommandBufferAllocateInfo | Citrus Engine",
    "keywords": "Struct CommandBufferAllocateInfo Namespace SharpVulkan Assembly Lime.dll public struct CommandBufferAllocateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CommandBufferCount public uint CommandBufferCount Field Value uint CommandPool public CommandPool CommandPool Field Value CommandPool Level public CommandBufferLevel Level Field Value CommandBufferLevel Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.CommandBufferBeginInfo.html": {
    "href": "api/SharpVulkan.CommandBufferBeginInfo.html",
    "title": "Struct CommandBufferBeginInfo | Citrus Engine",
    "keywords": "Struct CommandBufferBeginInfo Namespace SharpVulkan Assembly Lime.dll public struct CommandBufferBeginInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public CommandBufferUsageFlags Flags Field Value CommandBufferUsageFlags InheritanceInfo public nint InheritanceInfo Field Value nint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.CommandBufferInheritanceInfo.html": {
    "href": "api/SharpVulkan.CommandBufferInheritanceInfo.html",
    "title": "Struct CommandBufferInheritanceInfo | Citrus Engine",
    "keywords": "Struct CommandBufferInheritanceInfo Namespace SharpVulkan Assembly Lime.dll public struct CommandBufferInheritanceInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Framebuffer public Framebuffer Framebuffer Field Value Framebuffer Next public nint Next Field Value nint OcclusionQueryEnable public RawBool OcclusionQueryEnable Field Value RawBool PipelineStatistics public QueryPipelineStatisticFlags PipelineStatistics Field Value QueryPipelineStatisticFlags QueryFlags public QueryControlFlags QueryFlags Field Value QueryControlFlags RenderPass public RenderPass RenderPass Field Value RenderPass StructureType public StructureType StructureType Field Value StructureType Subpass public uint Subpass Field Value uint"
  },
  "api/SharpVulkan.CommandBufferLevel.html": {
    "href": "api/SharpVulkan.CommandBufferLevel.html",
    "title": "Enum CommandBufferLevel | Citrus Engine",
    "keywords": "Enum CommandBufferLevel Namespace SharpVulkan Assembly Lime.dll public enum CommandBufferLevel Fields Primary = 0 Secondary = 1"
  },
  "api/SharpVulkan.CommandBufferResetFlags.html": {
    "href": "api/SharpVulkan.CommandBufferResetFlags.html",
    "title": "Enum CommandBufferResetFlags | Citrus Engine",
    "keywords": "Enum CommandBufferResetFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum CommandBufferResetFlags Fields None = 0 ReleaseResources = 1"
  },
  "api/SharpVulkan.CommandBufferUsageFlags.html": {
    "href": "api/SharpVulkan.CommandBufferUsageFlags.html",
    "title": "Enum CommandBufferUsageFlags | Citrus Engine",
    "keywords": "Enum CommandBufferUsageFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum CommandBufferUsageFlags Fields None = 0 OneTimeSubmit = 1 RenderPassContinue = 2 SimultaneousUse = 4"
  },
  "api/SharpVulkan.CommandPool.html": {
    "href": "api/SharpVulkan.CommandPool.html",
    "title": "Struct CommandPool | Citrus Engine",
    "keywords": "Struct CommandPool Namespace SharpVulkan Assembly Lime.dll public struct CommandPool : IEquatable<CommandPool> Implements IEquatable<CommandPool> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly CommandPool Null Field Value CommandPool Methods Equals(CommandPool) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandPool other) Parameters other CommandPool An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(CommandPool, CommandPool) public static bool operator ==(CommandPool left, CommandPool right) Parameters left CommandPool right CommandPool Returns bool operator !=(CommandPool, CommandPool) public static bool operator !=(CommandPool left, CommandPool right) Parameters left CommandPool right CommandPool Returns bool"
  },
  "api/SharpVulkan.CommandPoolCreateFlags.html": {
    "href": "api/SharpVulkan.CommandPoolCreateFlags.html",
    "title": "Enum CommandPoolCreateFlags | Citrus Engine",
    "keywords": "Enum CommandPoolCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum CommandPoolCreateFlags Fields None = 0 ResetCommandBuffer = 2 Transient = 1"
  },
  "api/SharpVulkan.CommandPoolCreateInfo.html": {
    "href": "api/SharpVulkan.CommandPoolCreateInfo.html",
    "title": "Struct CommandPoolCreateInfo | Citrus Engine",
    "keywords": "Struct CommandPoolCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct CommandPoolCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public CommandPoolCreateFlags Flags Field Value CommandPoolCreateFlags Next public nint Next Field Value nint QueueFamilyIndex public uint QueueFamilyIndex Field Value uint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.CommandPoolResetFlags.html": {
    "href": "api/SharpVulkan.CommandPoolResetFlags.html",
    "title": "Enum CommandPoolResetFlags | Citrus Engine",
    "keywords": "Enum CommandPoolResetFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum CommandPoolResetFlags Fields None = 0 ReleseResources = 1"
  },
  "api/SharpVulkan.CommandPoolTrimFlags.html": {
    "href": "api/SharpVulkan.CommandPoolTrimFlags.html",
    "title": "Enum CommandPoolTrimFlags | Citrus Engine",
    "keywords": "Enum CommandPoolTrimFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum CommandPoolTrimFlags Fields None = 0"
  },
  "api/SharpVulkan.CommandProcessCommandsInfo.html": {
    "href": "api/SharpVulkan.CommandProcessCommandsInfo.html",
    "title": "Struct CommandProcessCommandsInfo | Citrus Engine",
    "keywords": "Struct CommandProcessCommandsInfo Namespace SharpVulkan Assembly Lime.dll public struct CommandProcessCommandsInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields IndirectCommandsLayout public IndirectCommandsLayout IndirectCommandsLayout Field Value IndirectCommandsLayout IndirectCommandsTokenCount public uint IndirectCommandsTokenCount Field Value uint IndirectCommandsTokens public nint IndirectCommandsTokens Field Value nint MaxSequencesCount public uint MaxSequencesCount Field Value uint Next public nint Next Field Value nint ObjectTable public ObjectTable ObjectTable Field Value ObjectTable SequencesCountBuffer public Buffer SequencesCountBuffer Field Value Buffer SequencesCountOffset public ulong SequencesCountOffset Field Value ulong SequencesIndexBuffer public Buffer SequencesIndexBuffer Field Value Buffer SequencesIndexOffset public ulong SequencesIndexOffset Field Value ulong StructureType public StructureType StructureType Field Value StructureType TargetCommandBuffer public CommandBuffer TargetCommandBuffer Field Value CommandBuffer"
  },
  "api/SharpVulkan.CommandReserveSpaceForCommandsInfo.html": {
    "href": "api/SharpVulkan.CommandReserveSpaceForCommandsInfo.html",
    "title": "Struct CommandReserveSpaceForCommandsInfo | Citrus Engine",
    "keywords": "Struct CommandReserveSpaceForCommandsInfo Namespace SharpVulkan Assembly Lime.dll public struct CommandReserveSpaceForCommandsInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields IndirectCommandsLayout public IndirectCommandsLayout IndirectCommandsLayout Field Value IndirectCommandsLayout MaxSequencesCount public uint MaxSequencesCount Field Value uint Next public nint Next Field Value nint ObjectTable public ObjectTable ObjectTable Field Value ObjectTable StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.CompareOperation.html": {
    "href": "api/SharpVulkan.CompareOperation.html",
    "title": "Enum CompareOperation | Citrus Engine",
    "keywords": "Enum CompareOperation Namespace SharpVulkan Assembly Lime.dll public enum CompareOperation Fields Always = 7 Equal = 2 Greater = 4 GreaterOrEqual = 6 Less = 1 LessOrEqual = 3 Never = 0 NotEqual = 5"
  },
  "api/SharpVulkan.ComponentMapping.html": {
    "href": "api/SharpVulkan.ComponentMapping.html",
    "title": "Struct ComponentMapping | Citrus Engine",
    "keywords": "Struct ComponentMapping Namespace SharpVulkan Assembly Lime.dll public struct ComponentMapping Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ComponentMapping(ComponentSwizzle) public ComponentMapping(ComponentSwizzle component) Parameters component ComponentSwizzle ComponentMapping(ComponentSwizzle, ComponentSwizzle, ComponentSwizzle, ComponentSwizzle) public ComponentMapping(ComponentSwizzle r, ComponentSwizzle g, ComponentSwizzle b, ComponentSwizzle a) Parameters r ComponentSwizzle g ComponentSwizzle b ComponentSwizzle a ComponentSwizzle Fields A public ComponentSwizzle A Field Value ComponentSwizzle B public ComponentSwizzle B Field Value ComponentSwizzle G public ComponentSwizzle G Field Value ComponentSwizzle Identity public static readonly ComponentMapping Identity Field Value ComponentMapping R public ComponentSwizzle R Field Value ComponentSwizzle"
  },
  "api/SharpVulkan.ComponentSwizzle.html": {
    "href": "api/SharpVulkan.ComponentSwizzle.html",
    "title": "Enum ComponentSwizzle | Citrus Engine",
    "keywords": "Enum ComponentSwizzle Namespace SharpVulkan Assembly Lime.dll public enum ComponentSwizzle Fields A = 6 B = 5 G = 4 Identity = 0 One = 2 R = 3 Zero = 1"
  },
  "api/SharpVulkan.CompositeAlphaFlags.html": {
    "href": "api/SharpVulkan.CompositeAlphaFlags.html",
    "title": "Enum CompositeAlphaFlags | Citrus Engine",
    "keywords": "Enum CompositeAlphaFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum CompositeAlphaFlags Fields Inherit = 8 None = 0 Opaque = 1 PostMultiplied = 4 PreMultiplied = 2"
  },
  "api/SharpVulkan.ComputePipelineCreateInfo.html": {
    "href": "api/SharpVulkan.ComputePipelineCreateInfo.html",
    "title": "Struct ComputePipelineCreateInfo | Citrus Engine",
    "keywords": "Struct ComputePipelineCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct ComputePipelineCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BasePipelineHandle public Pipeline BasePipelineHandle Field Value Pipeline BasePipelineIndex public int BasePipelineIndex Field Value int Flags public PipelineCreateFlags Flags Field Value PipelineCreateFlags Layout public PipelineLayout Layout Field Value PipelineLayout Next public nint Next Field Value nint Stage public PipelineShaderStageCreateInfo Stage Field Value PipelineShaderStageCreateInfo StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.CopyDescriptorSet.html": {
    "href": "api/SharpVulkan.CopyDescriptorSet.html",
    "title": "Struct CopyDescriptorSet | Citrus Engine",
    "keywords": "Struct CopyDescriptorSet Namespace SharpVulkan Assembly Lime.dll public struct CopyDescriptorSet Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DescriptorCount public uint DescriptorCount Field Value uint DestinationArrayElement public uint DestinationArrayElement Field Value uint DestinationBinding public uint DestinationBinding Field Value uint DestinationSet public DescriptorSet DestinationSet Field Value DescriptorSet Next public nint Next Field Value nint SourceArrayElement public uint SourceArrayElement Field Value uint SourceBinding public uint SourceBinding Field Value uint SourceSet public DescriptorSet SourceSet Field Value DescriptorSet StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.CullModeFlags.html": {
    "href": "api/SharpVulkan.CullModeFlags.html",
    "title": "Enum CullModeFlags | Citrus Engine",
    "keywords": "Enum CullModeFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum CullModeFlags Fields Back = 2 Front = 1 FrontAndBack = Front | Back None = 0"
  },
  "api/SharpVulkan.DebugMarkerMarkerInfo.ColorArray.html": {
    "href": "api/SharpVulkan.DebugMarkerMarkerInfo.ColorArray.html",
    "title": "Struct DebugMarkerMarkerInfo.ColorArray | Citrus Engine",
    "keywords": "Struct DebugMarkerMarkerInfo.ColorArray Namespace SharpVulkan Assembly Lime.dll public struct DebugMarkerMarkerInfo.ColorArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public float Value0 Field Value float Value1 public float Value1 Field Value float Value2 public float Value2 Field Value float Value3 public float Value3 Field Value float"
  },
  "api/SharpVulkan.DebugMarkerMarkerInfo.html": {
    "href": "api/SharpVulkan.DebugMarkerMarkerInfo.html",
    "title": "Struct DebugMarkerMarkerInfo | Citrus Engine",
    "keywords": "Struct DebugMarkerMarkerInfo Namespace SharpVulkan Assembly Lime.dll public struct DebugMarkerMarkerInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Color public DebugMarkerMarkerInfo.ColorArray Color Field Value DebugMarkerMarkerInfo.ColorArray MarkerName public nint MarkerName Field Value nint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DebugMarkerObjectNameInfo.html": {
    "href": "api/SharpVulkan.DebugMarkerObjectNameInfo.html",
    "title": "Struct DebugMarkerObjectNameInfo | Citrus Engine",
    "keywords": "Struct DebugMarkerObjectNameInfo Namespace SharpVulkan Assembly Lime.dll public struct DebugMarkerObjectNameInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint Object public ulong Object Field Value ulong ObjectName public nint ObjectName Field Value nint ObjectType public DebugReportObjectType ObjectType Field Value DebugReportObjectType StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DebugMarkerObjectTagInfo.html": {
    "href": "api/SharpVulkan.DebugMarkerObjectTagInfo.html",
    "title": "Struct DebugMarkerObjectTagInfo | Citrus Engine",
    "keywords": "Struct DebugMarkerObjectTagInfo Namespace SharpVulkan Assembly Lime.dll public struct DebugMarkerObjectTagInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint Object public ulong Object Field Value ulong ObjectType public DebugReportObjectType ObjectType Field Value DebugReportObjectType StructureType public StructureType StructureType Field Value StructureType Tag public nint Tag Field Value nint TagName public ulong TagName Field Value ulong TagSize public PointerSize TagSize Field Value PointerSize"
  },
  "api/SharpVulkan.DebugReportCallback.html": {
    "href": "api/SharpVulkan.DebugReportCallback.html",
    "title": "Struct DebugReportCallback | Citrus Engine",
    "keywords": "Struct DebugReportCallback Namespace SharpVulkan Assembly Lime.dll public struct DebugReportCallback : IEquatable<DebugReportCallback> Implements IEquatable<DebugReportCallback> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly DebugReportCallback Null Field Value DebugReportCallback Methods Equals(DebugReportCallback) Indicates whether the current object is equal to another object of the same type. public bool Equals(DebugReportCallback other) Parameters other DebugReportCallback An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(DebugReportCallback, DebugReportCallback) public static bool operator ==(DebugReportCallback left, DebugReportCallback right) Parameters left DebugReportCallback right DebugReportCallback Returns bool operator !=(DebugReportCallback, DebugReportCallback) public static bool operator !=(DebugReportCallback left, DebugReportCallback right) Parameters left DebugReportCallback right DebugReportCallback Returns bool"
  },
  "api/SharpVulkan.DebugReportCallbackCreateInfo.html": {
    "href": "api/SharpVulkan.DebugReportCallbackCreateInfo.html",
    "title": "Struct DebugReportCallbackCreateInfo | Citrus Engine",
    "keywords": "Struct DebugReportCallbackCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DebugReportCallbackCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Callback public nint Callback Field Value nint Flags public uint Flags Field Value uint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType UserData public nint UserData Field Value nint"
  },
  "api/SharpVulkan.DebugReportError.html": {
    "href": "api/SharpVulkan.DebugReportError.html",
    "title": "Enum DebugReportError | Citrus Engine",
    "keywords": "Enum DebugReportError Namespace SharpVulkan Assembly Lime.dll public enum DebugReportError Fields CallbackRef = 1 None = 0"
  },
  "api/SharpVulkan.DebugReportFlags.html": {
    "href": "api/SharpVulkan.DebugReportFlags.html",
    "title": "Enum DebugReportFlags | Citrus Engine",
    "keywords": "Enum DebugReportFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DebugReportFlags Fields Debug = 16 Error = 8 Information = 1 None = 0 PerformanceWarning = 4 Warning = 2"
  },
  "api/SharpVulkan.DebugReportObjectType.html": {
    "href": "api/SharpVulkan.DebugReportObjectType.html",
    "title": "Enum DebugReportObjectType | Citrus Engine",
    "keywords": "Enum DebugReportObjectType Namespace SharpVulkan Assembly Lime.dll public enum DebugReportObjectType Fields Buffer = 9 BufferView = 13 CommandBuffer = 6 CommandPool = 25 DebugReport = 28 DescriptorPool = 22 DescriptorSet = 23 DescriptorSetLayout = 20 Device = 3 DeviceMemory = 8 Display = 29 DisplayMode = 30 Event = 11 Fence = 7 Framebuffer = 24 Image = 10 ImageView = 14 IndirectCommandsLayout = 32 Instance = 1 ObjectTable = 31 PhysicalDevice = 2 Pipeline = 19 PipelineCache = 16 PipelineLayout = 17 QueryPool = 12 Queue = 4 RenderPass = 18 Sampler = 21 Semaphore = 5 ShaderModule = 15 Surface = 26 Swapchain = 27 Unknown = 0"
  },
  "api/SharpVulkan.DedicatedAllocationBufferCreateInfo.html": {
    "href": "api/SharpVulkan.DedicatedAllocationBufferCreateInfo.html",
    "title": "Struct DedicatedAllocationBufferCreateInfo | Citrus Engine",
    "keywords": "Struct DedicatedAllocationBufferCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DedicatedAllocationBufferCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DedicatedAllocation public RawBool DedicatedAllocation Field Value RawBool Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DedicatedAllocationImageCreateInfo.html": {
    "href": "api/SharpVulkan.DedicatedAllocationImageCreateInfo.html",
    "title": "Struct DedicatedAllocationImageCreateInfo | Citrus Engine",
    "keywords": "Struct DedicatedAllocationImageCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DedicatedAllocationImageCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DedicatedAllocation public RawBool DedicatedAllocation Field Value RawBool Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DedicatedAllocationMemoryAllocateInfo.html": {
    "href": "api/SharpVulkan.DedicatedAllocationMemoryAllocateInfo.html",
    "title": "Struct DedicatedAllocationMemoryAllocateInfo | Citrus Engine",
    "keywords": "Struct DedicatedAllocationMemoryAllocateInfo Namespace SharpVulkan Assembly Lime.dll public struct DedicatedAllocationMemoryAllocateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Buffer public Buffer Buffer Field Value Buffer Image public Image Image Field Value Image Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DependencyFlags.html": {
    "href": "api/SharpVulkan.DependencyFlags.html",
    "title": "Enum DependencyFlags | Citrus Engine",
    "keywords": "Enum DependencyFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DependencyFlags Fields ByRegion = 1 None = 0"
  },
  "api/SharpVulkan.DescriptorBufferInfo.html": {
    "href": "api/SharpVulkan.DescriptorBufferInfo.html",
    "title": "Struct DescriptorBufferInfo | Citrus Engine",
    "keywords": "Struct DescriptorBufferInfo Namespace SharpVulkan Assembly Lime.dll public struct DescriptorBufferInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Buffer public Buffer Buffer Field Value Buffer Offset public ulong Offset Field Value ulong Range public ulong Range Field Value ulong"
  },
  "api/SharpVulkan.DescriptorImageInfo.html": {
    "href": "api/SharpVulkan.DescriptorImageInfo.html",
    "title": "Struct DescriptorImageInfo | Citrus Engine",
    "keywords": "Struct DescriptorImageInfo Namespace SharpVulkan Assembly Lime.dll public struct DescriptorImageInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ImageLayout public ImageLayout ImageLayout Field Value ImageLayout ImageView public ImageView ImageView Field Value ImageView Sampler public Sampler Sampler Field Value Sampler"
  },
  "api/SharpVulkan.DescriptorPool.html": {
    "href": "api/SharpVulkan.DescriptorPool.html",
    "title": "Struct DescriptorPool | Citrus Engine",
    "keywords": "Struct DescriptorPool Namespace SharpVulkan Assembly Lime.dll public struct DescriptorPool : IEquatable<DescriptorPool> Implements IEquatable<DescriptorPool> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly DescriptorPool Null Field Value DescriptorPool Methods Equals(DescriptorPool) Indicates whether the current object is equal to another object of the same type. public bool Equals(DescriptorPool other) Parameters other DescriptorPool An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(DescriptorPool, DescriptorPool) public static bool operator ==(DescriptorPool left, DescriptorPool right) Parameters left DescriptorPool right DescriptorPool Returns bool operator !=(DescriptorPool, DescriptorPool) public static bool operator !=(DescriptorPool left, DescriptorPool right) Parameters left DescriptorPool right DescriptorPool Returns bool"
  },
  "api/SharpVulkan.DescriptorPoolCreateFlags.html": {
    "href": "api/SharpVulkan.DescriptorPoolCreateFlags.html",
    "title": "Enum DescriptorPoolCreateFlags | Citrus Engine",
    "keywords": "Enum DescriptorPoolCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DescriptorPoolCreateFlags Fields FreeDescriptorSet = 1 None = 0"
  },
  "api/SharpVulkan.DescriptorPoolCreateInfo.html": {
    "href": "api/SharpVulkan.DescriptorPoolCreateInfo.html",
    "title": "Struct DescriptorPoolCreateInfo | Citrus Engine",
    "keywords": "Struct DescriptorPoolCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DescriptorPoolCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public DescriptorPoolCreateFlags Flags Field Value DescriptorPoolCreateFlags MaxSets public uint MaxSets Field Value uint Next public nint Next Field Value nint PoolSizeCount public uint PoolSizeCount Field Value uint PoolSizes public nint PoolSizes Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DescriptorPoolResetFlags.html": {
    "href": "api/SharpVulkan.DescriptorPoolResetFlags.html",
    "title": "Enum DescriptorPoolResetFlags | Citrus Engine",
    "keywords": "Enum DescriptorPoolResetFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DescriptorPoolResetFlags Fields None = 0"
  },
  "api/SharpVulkan.DescriptorPoolSize.html": {
    "href": "api/SharpVulkan.DescriptorPoolSize.html",
    "title": "Struct DescriptorPoolSize | Citrus Engine",
    "keywords": "Struct DescriptorPoolSize Namespace SharpVulkan Assembly Lime.dll public struct DescriptorPoolSize Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DescriptorCount public uint DescriptorCount Field Value uint Type public DescriptorType Type Field Value DescriptorType"
  },
  "api/SharpVulkan.DescriptorSet.html": {
    "href": "api/SharpVulkan.DescriptorSet.html",
    "title": "Struct DescriptorSet | Citrus Engine",
    "keywords": "Struct DescriptorSet Namespace SharpVulkan Assembly Lime.dll public struct DescriptorSet : IEquatable<DescriptorSet> Implements IEquatable<DescriptorSet> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly DescriptorSet Null Field Value DescriptorSet Methods Equals(DescriptorSet) Indicates whether the current object is equal to another object of the same type. public bool Equals(DescriptorSet other) Parameters other DescriptorSet An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(DescriptorSet, DescriptorSet) public static bool operator ==(DescriptorSet left, DescriptorSet right) Parameters left DescriptorSet right DescriptorSet Returns bool operator !=(DescriptorSet, DescriptorSet) public static bool operator !=(DescriptorSet left, DescriptorSet right) Parameters left DescriptorSet right DescriptorSet Returns bool"
  },
  "api/SharpVulkan.DescriptorSetAllocateInfo.html": {
    "href": "api/SharpVulkan.DescriptorSetAllocateInfo.html",
    "title": "Struct DescriptorSetAllocateInfo | Citrus Engine",
    "keywords": "Struct DescriptorSetAllocateInfo Namespace SharpVulkan Assembly Lime.dll public struct DescriptorSetAllocateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DescriptorPool public DescriptorPool DescriptorPool Field Value DescriptorPool DescriptorSetCount public uint DescriptorSetCount Field Value uint Next public nint Next Field Value nint SetLayouts public nint SetLayouts Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DescriptorSetLayout.html": {
    "href": "api/SharpVulkan.DescriptorSetLayout.html",
    "title": "Struct DescriptorSetLayout | Citrus Engine",
    "keywords": "Struct DescriptorSetLayout Namespace SharpVulkan Assembly Lime.dll public struct DescriptorSetLayout : IEquatable<DescriptorSetLayout> Implements IEquatable<DescriptorSetLayout> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly DescriptorSetLayout Null Field Value DescriptorSetLayout Methods Equals(DescriptorSetLayout) Indicates whether the current object is equal to another object of the same type. public bool Equals(DescriptorSetLayout other) Parameters other DescriptorSetLayout An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(DescriptorSetLayout, DescriptorSetLayout) public static bool operator ==(DescriptorSetLayout left, DescriptorSetLayout right) Parameters left DescriptorSetLayout right DescriptorSetLayout Returns bool operator !=(DescriptorSetLayout, DescriptorSetLayout) public static bool operator !=(DescriptorSetLayout left, DescriptorSetLayout right) Parameters left DescriptorSetLayout right DescriptorSetLayout Returns bool"
  },
  "api/SharpVulkan.DescriptorSetLayoutBinding.html": {
    "href": "api/SharpVulkan.DescriptorSetLayoutBinding.html",
    "title": "Struct DescriptorSetLayoutBinding | Citrus Engine",
    "keywords": "Struct DescriptorSetLayoutBinding Namespace SharpVulkan Assembly Lime.dll public struct DescriptorSetLayoutBinding Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Binding public uint Binding Field Value uint DescriptorCount public uint DescriptorCount Field Value uint DescriptorType public DescriptorType DescriptorType Field Value DescriptorType ImmutableSamplers public nint ImmutableSamplers Field Value nint StageFlags public ShaderStageFlags StageFlags Field Value ShaderStageFlags"
  },
  "api/SharpVulkan.DescriptorSetLayoutCreateFlags.html": {
    "href": "api/SharpVulkan.DescriptorSetLayoutCreateFlags.html",
    "title": "Enum DescriptorSetLayoutCreateFlags | Citrus Engine",
    "keywords": "Enum DescriptorSetLayoutCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DescriptorSetLayoutCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.DescriptorSetLayoutCreateInfo.html": {
    "href": "api/SharpVulkan.DescriptorSetLayoutCreateInfo.html",
    "title": "Struct DescriptorSetLayoutCreateInfo | Citrus Engine",
    "keywords": "Struct DescriptorSetLayoutCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DescriptorSetLayoutCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BindingCount public uint BindingCount Field Value uint Bindings public nint Bindings Field Value nint Flags public DescriptorSetLayoutCreateFlags Flags Field Value DescriptorSetLayoutCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DescriptorType.html": {
    "href": "api/SharpVulkan.DescriptorType.html",
    "title": "Enum DescriptorType | Citrus Engine",
    "keywords": "Enum DescriptorType Namespace SharpVulkan Assembly Lime.dll public enum DescriptorType Fields CombinedImageSampler = 1 InputAttachment = 10 SampledImage = 2 Sampler = 0 StorageBuffer = 7 StorageBufferDynamic = 9 StorageImage = 3 StorageTexelBuffer = 5 UniformBuffer = 6 UniformBufferDynamic = 8 UniformTexelBuffer = 4"
  },
  "api/SharpVulkan.Device.html": {
    "href": "api/SharpVulkan.Device.html",
    "title": "Struct Device | Citrus Engine",
    "keywords": "Struct Device Namespace SharpVulkan Assembly Lime.dll public struct Device : IEquatable<Device> Implements IEquatable<Device> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Device Null Field Value Device Methods AcquireNextImage(Swapchain, ulong, Semaphore, Fence) public uint AcquireNextImage(Swapchain swapchain, ulong timeout, Semaphore semaphore, Fence fence) Parameters swapchain Swapchain timeout ulong semaphore Semaphore fence Fence Returns uint AllocateCommandBuffers(ref CommandBufferAllocateInfo, CommandBuffer*) public void AllocateCommandBuffers(ref CommandBufferAllocateInfo allocateInfo, CommandBuffer* commandBuffers) Parameters allocateInfo CommandBufferAllocateInfo commandBuffers CommandBuffer* AllocateDescriptorSets(ref DescriptorSetAllocateInfo, DescriptorSet*) public void AllocateDescriptorSets(ref DescriptorSetAllocateInfo allocateInfo, DescriptorSet* descriptorSets) Parameters allocateInfo DescriptorSetAllocateInfo descriptorSets DescriptorSet* AllocateMemory(ref MemoryAllocateInfo, AllocationCallbacks*) public DeviceMemory AllocateMemory(ref MemoryAllocateInfo allocateInfo, AllocationCallbacks* allocator = null) Parameters allocateInfo MemoryAllocateInfo allocator AllocationCallbacks* Returns DeviceMemory BindBufferMemory(Buffer, DeviceMemory, ulong) public void BindBufferMemory(Buffer buffer, DeviceMemory memory, ulong memoryOffset) Parameters buffer Buffer memory DeviceMemory memoryOffset ulong BindImageMemory(Image, DeviceMemory, ulong) public void BindImageMemory(Image image, DeviceMemory memory, ulong memoryOffset) Parameters image Image memory DeviceMemory memoryOffset ulong CreateBuffer(ref BufferCreateInfo, AllocationCallbacks*) public Buffer CreateBuffer(ref BufferCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo BufferCreateInfo allocator AllocationCallbacks* Returns Buffer CreateBufferView(ref BufferViewCreateInfo, AllocationCallbacks*) public BufferView CreateBufferView(ref BufferViewCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo BufferViewCreateInfo allocator AllocationCallbacks* Returns BufferView CreateCommandPool(ref CommandPoolCreateInfo, AllocationCallbacks*) public CommandPool CreateCommandPool(ref CommandPoolCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo CommandPoolCreateInfo allocator AllocationCallbacks* Returns CommandPool CreateComputePipelines(PipelineCache, uint, ComputePipelineCreateInfo*, AllocationCallbacks*) public Pipeline CreateComputePipelines(PipelineCache pipelineCache, uint createInfoCount, ComputePipelineCreateInfo* createInfos, AllocationCallbacks* allocator = null) Parameters pipelineCache PipelineCache createInfoCount uint createInfos ComputePipelineCreateInfo* allocator AllocationCallbacks* Returns Pipeline CreateDescriptorPool(ref DescriptorPoolCreateInfo, AllocationCallbacks*) public DescriptorPool CreateDescriptorPool(ref DescriptorPoolCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo DescriptorPoolCreateInfo allocator AllocationCallbacks* Returns DescriptorPool CreateDescriptorSetLayout(ref DescriptorSetLayoutCreateInfo, AllocationCallbacks*) public DescriptorSetLayout CreateDescriptorSetLayout(ref DescriptorSetLayoutCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo DescriptorSetLayoutCreateInfo allocator AllocationCallbacks* Returns DescriptorSetLayout CreateEvent(ref EventCreateInfo, AllocationCallbacks*) public Event CreateEvent(ref EventCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo EventCreateInfo allocator AllocationCallbacks* Returns Event CreateFence(ref FenceCreateInfo, AllocationCallbacks*) public Fence CreateFence(ref FenceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo FenceCreateInfo allocator AllocationCallbacks* Returns Fence CreateFramebuffer(ref FramebufferCreateInfo, AllocationCallbacks*) public Framebuffer CreateFramebuffer(ref FramebufferCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo FramebufferCreateInfo allocator AllocationCallbacks* Returns Framebuffer CreateGraphicsPipelines(PipelineCache, uint, GraphicsPipelineCreateInfo*, AllocationCallbacks*) public Pipeline CreateGraphicsPipelines(PipelineCache pipelineCache, uint createInfoCount, GraphicsPipelineCreateInfo* createInfos, AllocationCallbacks* allocator = null) Parameters pipelineCache PipelineCache createInfoCount uint createInfos GraphicsPipelineCreateInfo* allocator AllocationCallbacks* Returns Pipeline CreateImage(ref ImageCreateInfo, AllocationCallbacks*) public Image CreateImage(ref ImageCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo ImageCreateInfo allocator AllocationCallbacks* Returns Image CreateImageView(ref ImageViewCreateInfo, AllocationCallbacks*) public ImageView CreateImageView(ref ImageViewCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo ImageViewCreateInfo allocator AllocationCallbacks* Returns ImageView CreateIndirectCommandsLayout(ref IndirectCommandsLayoutCreateInfo, AllocationCallbacks*) public IndirectCommandsLayout CreateIndirectCommandsLayout(ref IndirectCommandsLayoutCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo IndirectCommandsLayoutCreateInfo allocator AllocationCallbacks* Returns IndirectCommandsLayout CreateObjectTable(ref ObjectTableCreateInfo, AllocationCallbacks*) public ObjectTable CreateObjectTable(ref ObjectTableCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo ObjectTableCreateInfo allocator AllocationCallbacks* Returns ObjectTable CreatePipelineCache(ref PipelineCacheCreateInfo, AllocationCallbacks*) public PipelineCache CreatePipelineCache(ref PipelineCacheCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo PipelineCacheCreateInfo allocator AllocationCallbacks* Returns PipelineCache CreatePipelineLayout(ref PipelineLayoutCreateInfo, AllocationCallbacks*) public PipelineLayout CreatePipelineLayout(ref PipelineLayoutCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo PipelineLayoutCreateInfo allocator AllocationCallbacks* Returns PipelineLayout CreateQueryPool(ref QueryPoolCreateInfo, AllocationCallbacks*) public QueryPool CreateQueryPool(ref QueryPoolCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo QueryPoolCreateInfo allocator AllocationCallbacks* Returns QueryPool CreateRenderPass(ref RenderPassCreateInfo, AllocationCallbacks*) public RenderPass CreateRenderPass(ref RenderPassCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo RenderPassCreateInfo allocator AllocationCallbacks* Returns RenderPass CreateSampler(ref SamplerCreateInfo, AllocationCallbacks*) public Sampler CreateSampler(ref SamplerCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo SamplerCreateInfo allocator AllocationCallbacks* Returns Sampler CreateSemaphore(ref SemaphoreCreateInfo, AllocationCallbacks*) public Semaphore CreateSemaphore(ref SemaphoreCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo SemaphoreCreateInfo allocator AllocationCallbacks* Returns Semaphore CreateShaderModule(ref ShaderModuleCreateInfo, AllocationCallbacks*) public ShaderModule CreateShaderModule(ref ShaderModuleCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo ShaderModuleCreateInfo allocator AllocationCallbacks* Returns ShaderModule CreateSharedSwapchains(SwapchainCreateInfo[], AllocationCallbacks) public Swapchain[] CreateSharedSwapchains(SwapchainCreateInfo[] createInfos, AllocationCallbacks allocator) Parameters createInfos SwapchainCreateInfo[] allocator AllocationCallbacks Returns Swapchain[] CreateSwapchain(ref SwapchainCreateInfo, AllocationCallbacks*) public Swapchain CreateSwapchain(ref SwapchainCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo SwapchainCreateInfo allocator AllocationCallbacks* Returns Swapchain DebugMarkerSetObjectName(ref DebugMarkerObjectNameInfo) public void DebugMarkerSetObjectName(ref DebugMarkerObjectNameInfo nameInfo) Parameters nameInfo DebugMarkerObjectNameInfo DebugMarkerSetObjectTag(ref DebugMarkerObjectTagInfo) public void DebugMarkerSetObjectTag(ref DebugMarkerObjectTagInfo tagInfo) Parameters tagInfo DebugMarkerObjectTagInfo Destroy(AllocationCallbacks*) public void Destroy(AllocationCallbacks* allocator = null) Parameters allocator AllocationCallbacks* DestroyBuffer(Buffer, AllocationCallbacks*) public void DestroyBuffer(Buffer buffer, AllocationCallbacks* allocator = null) Parameters buffer Buffer allocator AllocationCallbacks* DestroyBufferView(BufferView, AllocationCallbacks*) public void DestroyBufferView(BufferView bufferView, AllocationCallbacks* allocator = null) Parameters bufferView BufferView allocator AllocationCallbacks* DestroyCommandPool(CommandPool, AllocationCallbacks*) public void DestroyCommandPool(CommandPool commandPool, AllocationCallbacks* allocator = null) Parameters commandPool CommandPool allocator AllocationCallbacks* DestroyDescriptorPool(DescriptorPool, AllocationCallbacks*) public void DestroyDescriptorPool(DescriptorPool descriptorPool, AllocationCallbacks* allocator = null) Parameters descriptorPool DescriptorPool allocator AllocationCallbacks* DestroyDescriptorSetLayout(DescriptorSetLayout, AllocationCallbacks*) public void DestroyDescriptorSetLayout(DescriptorSetLayout descriptorSetLayout, AllocationCallbacks* allocator = null) Parameters descriptorSetLayout DescriptorSetLayout allocator AllocationCallbacks* DestroyEvent(Event, AllocationCallbacks*) public void DestroyEvent(Event @event, AllocationCallbacks* allocator = null) Parameters event Event allocator AllocationCallbacks* DestroyFence(Fence, AllocationCallbacks*) public void DestroyFence(Fence fence, AllocationCallbacks* allocator = null) Parameters fence Fence allocator AllocationCallbacks* DestroyFramebuffer(Framebuffer, AllocationCallbacks*) public void DestroyFramebuffer(Framebuffer framebuffer, AllocationCallbacks* allocator = null) Parameters framebuffer Framebuffer allocator AllocationCallbacks* DestroyImage(Image, AllocationCallbacks*) public void DestroyImage(Image image, AllocationCallbacks* allocator = null) Parameters image Image allocator AllocationCallbacks* DestroyImageView(ImageView, AllocationCallbacks*) public void DestroyImageView(ImageView imageView, AllocationCallbacks* allocator = null) Parameters imageView ImageView allocator AllocationCallbacks* DestroyIndirectCommandsLayout(IndirectCommandsLayout, AllocationCallbacks*) public void DestroyIndirectCommandsLayout(IndirectCommandsLayout indirectCommandsLayout, AllocationCallbacks* allocator = null) Parameters indirectCommandsLayout IndirectCommandsLayout allocator AllocationCallbacks* DestroyObjectTable(ObjectTable, AllocationCallbacks*) public void DestroyObjectTable(ObjectTable objectTable, AllocationCallbacks* allocator = null) Parameters objectTable ObjectTable allocator AllocationCallbacks* DestroyPipeline(Pipeline, AllocationCallbacks*) public void DestroyPipeline(Pipeline pipeline, AllocationCallbacks* allocator = null) Parameters pipeline Pipeline allocator AllocationCallbacks* DestroyPipelineCache(PipelineCache, AllocationCallbacks*) public void DestroyPipelineCache(PipelineCache pipelineCache, AllocationCallbacks* allocator = null) Parameters pipelineCache PipelineCache allocator AllocationCallbacks* DestroyPipelineLayout(PipelineLayout, AllocationCallbacks*) public void DestroyPipelineLayout(PipelineLayout pipelineLayout, AllocationCallbacks* allocator = null) Parameters pipelineLayout PipelineLayout allocator AllocationCallbacks* DestroyQueryPool(QueryPool, AllocationCallbacks*) public void DestroyQueryPool(QueryPool queryPool, AllocationCallbacks* allocator = null) Parameters queryPool QueryPool allocator AllocationCallbacks* DestroyRenderPass(RenderPass, AllocationCallbacks*) public void DestroyRenderPass(RenderPass renderPass, AllocationCallbacks* allocator = null) Parameters renderPass RenderPass allocator AllocationCallbacks* DestroySampler(Sampler, AllocationCallbacks*) public void DestroySampler(Sampler sampler, AllocationCallbacks* allocator = null) Parameters sampler Sampler allocator AllocationCallbacks* DestroySemaphore(Semaphore, AllocationCallbacks*) public void DestroySemaphore(Semaphore semaphore, AllocationCallbacks* allocator = null) Parameters semaphore Semaphore allocator AllocationCallbacks* DestroyShaderModule(ShaderModule, AllocationCallbacks*) public void DestroyShaderModule(ShaderModule shaderModule, AllocationCallbacks* allocator = null) Parameters shaderModule ShaderModule allocator AllocationCallbacks* DestroySwapchain(Swapchain, AllocationCallbacks*) public void DestroySwapchain(Swapchain swapchain, AllocationCallbacks* allocator = null) Parameters swapchain Swapchain allocator AllocationCallbacks* DisplayPowerControl(Display, ref DisplayPowerInfo) public void DisplayPowerControl(Display display, ref DisplayPowerInfo displayPowerInfo) Parameters display Display displayPowerInfo DisplayPowerInfo Equals(Device) Indicates whether the current object is equal to another object of the same type. public bool Equals(Device other) Parameters other Device An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. FlushMappedMemoryRanges(uint, MappedMemoryRange*) public void FlushMappedMemoryRanges(uint memoryRangeCount, MappedMemoryRange* memoryRanges) Parameters memoryRangeCount uint memoryRanges MappedMemoryRange* FreeCommandBuffers(CommandPool, uint, CommandBuffer*) public void FreeCommandBuffers(CommandPool commandPool, uint commandBufferCount, CommandBuffer* commandBuffers) Parameters commandPool CommandPool commandBufferCount uint commandBuffers CommandBuffer* FreeDescriptorSets(DescriptorPool, uint, DescriptorSet*) public void FreeDescriptorSets(DescriptorPool descriptorPool, uint descriptorSetCount, DescriptorSet* descriptorSets) Parameters descriptorPool DescriptorPool descriptorSetCount uint descriptorSets DescriptorSet* FreeMemory(DeviceMemory, AllocationCallbacks*) public void FreeMemory(DeviceMemory memory, AllocationCallbacks* allocator = null) Parameters memory DeviceMemory allocator AllocationCallbacks* GetBufferMemoryRequirements(Buffer, out MemoryRequirements) public void GetBufferMemoryRequirements(Buffer buffer, out MemoryRequirements memoryRequirements) Parameters buffer Buffer memoryRequirements MemoryRequirements GetEventStatus(Event) public Result GetEventStatus(Event @event) Parameters event Event Returns Result GetFenceStatus(Fence) public Result GetFenceStatus(Fence fence) Parameters fence Fence Returns Result GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. GetImageMemoryRequirements(Image, out MemoryRequirements) public void GetImageMemoryRequirements(Image image, out MemoryRequirements memoryRequirements) Parameters image Image memoryRequirements MemoryRequirements GetImageSubresourceLayout(Image, ImageSubresource, out SubresourceLayout) public void GetImageSubresourceLayout(Image image, ImageSubresource subresource, out SubresourceLayout layout) Parameters image Image subresource ImageSubresource layout SubresourceLayout GetMemoryCommitment(DeviceMemory) public ulong GetMemoryCommitment(DeviceMemory memory) Parameters memory DeviceMemory Returns ulong GetMemoryWin32Handle(DeviceMemory, uint) public int GetMemoryWin32Handle(DeviceMemory memory, uint handleType) Parameters memory DeviceMemory handleType uint Returns int GetPipelineCacheData(PipelineCache) public byte[] GetPipelineCacheData(PipelineCache pipelineCache) Parameters pipelineCache PipelineCache Returns byte[] GetPipelineCacheData(PipelineCache, ref PointerSize, nint) public void GetPipelineCacheData(PipelineCache pipelineCache, ref PointerSize dataSize, nint data) Parameters pipelineCache PipelineCache dataSize PointerSize data nint GetProcAddress(byte*) public nint GetProcAddress(byte* name) Parameters name byte* Returns nint GetQueryPoolResults(QueryPool, uint, uint, PointerSize, nint, ulong, QueryResultFlags) public void GetQueryPoolResults(QueryPool queryPool, uint firstQuery, uint queryCount, PointerSize dataSize, nint data, ulong stride, QueryResultFlags flags) Parameters queryPool QueryPool firstQuery uint queryCount uint dataSize PointerSize data nint stride ulong flags QueryResultFlags GetQueue(uint, uint) public Queue GetQueue(uint queueFamilyIndex, uint queueIndex) Parameters queueFamilyIndex uint queueIndex uint Returns Queue GetRenderAreaGranularity(RenderPass) public Extent2D GetRenderAreaGranularity(RenderPass renderPass) Parameters renderPass RenderPass Returns Extent2D GetSparseMemoryRequirements(Image) public SparseImageMemoryRequirements[] GetSparseMemoryRequirements(Image image) Parameters image Image Returns SparseImageMemoryRequirements[] GetSwapchainCounter(Swapchain, SurfaceCounterFlags) public ulong GetSwapchainCounter(Swapchain swapchain, SurfaceCounterFlags counter) Parameters swapchain Swapchain counter SurfaceCounterFlags Returns ulong GetSwapchainImages(Swapchain) public Image[] GetSwapchainImages(Swapchain swapchain) Parameters swapchain Swapchain Returns Image[] InvalidateMappedMemoryRanges(uint, MappedMemoryRange*) public void InvalidateMappedMemoryRanges(uint memoryRangeCount, MappedMemoryRange* memoryRanges) Parameters memoryRangeCount uint memoryRanges MappedMemoryRange* MapMemory(DeviceMemory, ulong, ulong, MemoryMapFlags) public nint MapMemory(DeviceMemory memory, ulong offset, ulong size, MemoryMapFlags flags) Parameters memory DeviceMemory offset ulong size ulong flags MemoryMapFlags Returns nint MergePipelineCaches(PipelineCache, uint, PipelineCache) public void MergePipelineCaches(PipelineCache destinationCache, uint sourceCacheCount, PipelineCache srcCaches) Parameters destinationCache PipelineCache sourceCacheCount uint srcCaches PipelineCache RegisterDisplayEvent(Display, ref DisplayEventInfo, AllocationCallbacks*) public Fence RegisterDisplayEvent(Display display, ref DisplayEventInfo displayEventInfo, AllocationCallbacks* allocator = null) Parameters display Display displayEventInfo DisplayEventInfo allocator AllocationCallbacks* Returns Fence RegisterEvent(ref DeviceEventInfo, AllocationCallbacks*) public Fence RegisterEvent(ref DeviceEventInfo deviceEventInfo, AllocationCallbacks* allocator = null) Parameters deviceEventInfo DeviceEventInfo allocator AllocationCallbacks* Returns Fence RegisterObjects(ObjectTable, uint, nint, uint) public void RegisterObjects(ObjectTable objectTable, uint objectCount, nint objectTableEntries, uint objectIndices) Parameters objectTable ObjectTable objectCount uint objectTableEntries nint objectIndices uint ResetCommandPool(CommandPool, CommandPoolResetFlags) public void ResetCommandPool(CommandPool commandPool, CommandPoolResetFlags flags) Parameters commandPool CommandPool flags CommandPoolResetFlags ResetDescriptorPool(DescriptorPool, DescriptorPoolResetFlags) public void ResetDescriptorPool(DescriptorPool descriptorPool, DescriptorPoolResetFlags flags) Parameters descriptorPool DescriptorPool flags DescriptorPoolResetFlags ResetEvent(Event) public void ResetEvent(Event @event) Parameters event Event ResetFences(uint, Fence*) public void ResetFences(uint fenceCount, Fence* fences) Parameters fenceCount uint fences Fence* SetEvent(Event) public void SetEvent(Event @event) Parameters event Event ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. TrimCommandPool(CommandPool, CommandPoolTrimFlags) public void TrimCommandPool(CommandPool commandPool, CommandPoolTrimFlags flags) Parameters commandPool CommandPool flags CommandPoolTrimFlags UnmapMemory(DeviceMemory) public void UnmapMemory(DeviceMemory memory) Parameters memory DeviceMemory UnregisterObjects(ObjectTable, uint, ObjectEntryType, uint) public void UnregisterObjects(ObjectTable objectTable, uint objectCount, ObjectEntryType objectEntryTypes, uint objectIndices) Parameters objectTable ObjectTable objectCount uint objectEntryTypes ObjectEntryType objectIndices uint UpdateDescriptorSets(uint, WriteDescriptorSet*, uint, CopyDescriptorSet*) public void UpdateDescriptorSets(uint descriptorWriteCount, WriteDescriptorSet* descriptorWrites, uint descriptorCopyCount, CopyDescriptorSet* descriptorCopies) Parameters descriptorWriteCount uint descriptorWrites WriteDescriptorSet* descriptorCopyCount uint descriptorCopies CopyDescriptorSet* WaitForFences(uint, Fence*, RawBool, ulong) public void WaitForFences(uint fenceCount, Fence* fences, RawBool waitAll, ulong timeout) Parameters fenceCount uint fences Fence* waitAll RawBool timeout ulong WaitIdle() public void WaitIdle() Operators operator ==(Device, Device) public static bool operator ==(Device left, Device right) Parameters left Device right Device Returns bool operator !=(Device, Device) public static bool operator !=(Device left, Device right) Parameters left Device right Device Returns bool"
  },
  "api/SharpVulkan.DeviceCreateFlags.html": {
    "href": "api/SharpVulkan.DeviceCreateFlags.html",
    "title": "Enum DeviceCreateFlags | Citrus Engine",
    "keywords": "Enum DeviceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DeviceCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.DeviceCreateInfo.html": {
    "href": "api/SharpVulkan.DeviceCreateInfo.html",
    "title": "Struct DeviceCreateInfo | Citrus Engine",
    "keywords": "Struct DeviceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DeviceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields EnabledExtensionCount public uint EnabledExtensionCount Field Value uint EnabledExtensionNames public nint EnabledExtensionNames Field Value nint EnabledFeatures public nint EnabledFeatures Field Value nint EnabledLayerCount public uint EnabledLayerCount Field Value uint EnabledLayerNames public nint EnabledLayerNames Field Value nint Flags public DeviceCreateFlags Flags Field Value DeviceCreateFlags Next public nint Next Field Value nint QueueCreateInfoCount public uint QueueCreateInfoCount Field Value uint QueueCreateInfos public nint QueueCreateInfos Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DeviceEventInfo.html": {
    "href": "api/SharpVulkan.DeviceEventInfo.html",
    "title": "Struct DeviceEventInfo | Citrus Engine",
    "keywords": "Struct DeviceEventInfo Namespace SharpVulkan Assembly Lime.dll public struct DeviceEventInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DeviceEvent public DeviceEventType DeviceEvent Field Value DeviceEventType Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DeviceEventType.html": {
    "href": "api/SharpVulkan.DeviceEventType.html",
    "title": "Enum DeviceEventType | Citrus Engine",
    "keywords": "Enum DeviceEventType Namespace SharpVulkan Assembly Lime.dll public enum DeviceEventType Fields DisplayHotplug = 0"
  },
  "api/SharpVulkan.DeviceGeneratedCommandsFeatures.html": {
    "href": "api/SharpVulkan.DeviceGeneratedCommandsFeatures.html",
    "title": "Struct DeviceGeneratedCommandsFeatures | Citrus Engine",
    "keywords": "Struct DeviceGeneratedCommandsFeatures Namespace SharpVulkan Assembly Lime.dll public struct DeviceGeneratedCommandsFeatures Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ComputeBindingPointSupport public RawBool ComputeBindingPointSupport Field Value RawBool Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DeviceGeneratedCommandsLimits.html": {
    "href": "api/SharpVulkan.DeviceGeneratedCommandsLimits.html",
    "title": "Struct DeviceGeneratedCommandsLimits | Citrus Engine",
    "keywords": "Struct DeviceGeneratedCommandsLimits Namespace SharpVulkan Assembly Lime.dll public struct DeviceGeneratedCommandsLimits Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MaxIndirectCommandsLayoutTokenCount public uint MaxIndirectCommandsLayoutTokenCount Field Value uint MaxObjectEntryCounts public uint MaxObjectEntryCounts Field Value uint MinCommandsTokenBufferOffsetAlignment public uint MinCommandsTokenBufferOffsetAlignment Field Value uint MinSequenceCountBufferOffsetAlignment public uint MinSequenceCountBufferOffsetAlignment Field Value uint MinSequenceIndexBufferOffsetAlignment public uint MinSequenceIndexBufferOffsetAlignment Field Value uint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DeviceMemory.html": {
    "href": "api/SharpVulkan.DeviceMemory.html",
    "title": "Struct DeviceMemory | Citrus Engine",
    "keywords": "Struct DeviceMemory Namespace SharpVulkan Assembly Lime.dll public struct DeviceMemory : IEquatable<DeviceMemory> Implements IEquatable<DeviceMemory> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly DeviceMemory Null Field Value DeviceMemory Methods Equals(DeviceMemory) Indicates whether the current object is equal to another object of the same type. public bool Equals(DeviceMemory other) Parameters other DeviceMemory An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(DeviceMemory, DeviceMemory) public static bool operator ==(DeviceMemory left, DeviceMemory right) Parameters left DeviceMemory right DeviceMemory Returns bool operator !=(DeviceMemory, DeviceMemory) public static bool operator !=(DeviceMemory left, DeviceMemory right) Parameters left DeviceMemory right DeviceMemory Returns bool"
  },
  "api/SharpVulkan.DeviceQueueCreateFlags.html": {
    "href": "api/SharpVulkan.DeviceQueueCreateFlags.html",
    "title": "Enum DeviceQueueCreateFlags | Citrus Engine",
    "keywords": "Enum DeviceQueueCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DeviceQueueCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.DeviceQueueCreateInfo.html": {
    "href": "api/SharpVulkan.DeviceQueueCreateInfo.html",
    "title": "Struct DeviceQueueCreateInfo | Citrus Engine",
    "keywords": "Struct DeviceQueueCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DeviceQueueCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public DeviceQueueCreateFlags Flags Field Value DeviceQueueCreateFlags Next public nint Next Field Value nint QueueCount public uint QueueCount Field Value uint QueueFamilyIndex public uint QueueFamilyIndex Field Value uint QueuePriorities public nint QueuePriorities Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DispatchIndirectCommand.html": {
    "href": "api/SharpVulkan.DispatchIndirectCommand.html",
    "title": "Struct DispatchIndirectCommand | Citrus Engine",
    "keywords": "Struct DispatchIndirectCommand Namespace SharpVulkan Assembly Lime.dll public struct DispatchIndirectCommand Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields X public uint X Field Value uint Y public uint Y Field Value uint Z public uint Z Field Value uint"
  },
  "api/SharpVulkan.Display.html": {
    "href": "api/SharpVulkan.Display.html",
    "title": "Struct Display | Citrus Engine",
    "keywords": "Struct Display Namespace SharpVulkan Assembly Lime.dll public struct Display : IEquatable<Display> Implements IEquatable<Display> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Display Null Field Value Display Methods Equals(Display) Indicates whether the current object is equal to another object of the same type. public bool Equals(Display other) Parameters other Display An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Display, Display) public static bool operator ==(Display left, Display right) Parameters left Display right Display Returns bool operator !=(Display, Display) public static bool operator !=(Display left, Display right) Parameters left Display right Display Returns bool"
  },
  "api/SharpVulkan.DisplayEventInfo.html": {
    "href": "api/SharpVulkan.DisplayEventInfo.html",
    "title": "Struct DisplayEventInfo | Citrus Engine",
    "keywords": "Struct DisplayEventInfo Namespace SharpVulkan Assembly Lime.dll public struct DisplayEventInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DisplayEvent public DisplayEventType DisplayEvent Field Value DisplayEventType Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DisplayEventType.html": {
    "href": "api/SharpVulkan.DisplayEventType.html",
    "title": "Enum DisplayEventType | Citrus Engine",
    "keywords": "Enum DisplayEventType Namespace SharpVulkan Assembly Lime.dll public enum DisplayEventType Fields FirstPixelOut = 0"
  },
  "api/SharpVulkan.DisplayMode.html": {
    "href": "api/SharpVulkan.DisplayMode.html",
    "title": "Struct DisplayMode | Citrus Engine",
    "keywords": "Struct DisplayMode Namespace SharpVulkan Assembly Lime.dll public struct DisplayMode : IEquatable<DisplayMode> Implements IEquatable<DisplayMode> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly DisplayMode Null Field Value DisplayMode Methods Equals(DisplayMode) Indicates whether the current object is equal to another object of the same type. public bool Equals(DisplayMode other) Parameters other DisplayMode An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(DisplayMode, DisplayMode) public static bool operator ==(DisplayMode left, DisplayMode right) Parameters left DisplayMode right DisplayMode Returns bool operator !=(DisplayMode, DisplayMode) public static bool operator !=(DisplayMode left, DisplayMode right) Parameters left DisplayMode right DisplayMode Returns bool"
  },
  "api/SharpVulkan.DisplayModeCreateFlags.html": {
    "href": "api/SharpVulkan.DisplayModeCreateFlags.html",
    "title": "Enum DisplayModeCreateFlags | Citrus Engine",
    "keywords": "Enum DisplayModeCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DisplayModeCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.DisplayModeCreateInfo.html": {
    "href": "api/SharpVulkan.DisplayModeCreateInfo.html",
    "title": "Struct DisplayModeCreateInfo | Citrus Engine",
    "keywords": "Struct DisplayModeCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DisplayModeCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public DisplayModeCreateFlags Flags Field Value DisplayModeCreateFlags Next public nint Next Field Value nint Parameters public DisplayModeParameters Parameters Field Value DisplayModeParameters StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DisplayModeParameters.html": {
    "href": "api/SharpVulkan.DisplayModeParameters.html",
    "title": "Struct DisplayModeParameters | Citrus Engine",
    "keywords": "Struct DisplayModeParameters Namespace SharpVulkan Assembly Lime.dll public struct DisplayModeParameters Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields RefreshRate public uint RefreshRate Field Value uint VisibleRegion public Extent2D VisibleRegion Field Value Extent2D"
  },
  "api/SharpVulkan.DisplayModeProperties.html": {
    "href": "api/SharpVulkan.DisplayModeProperties.html",
    "title": "Struct DisplayModeProperties | Citrus Engine",
    "keywords": "Struct DisplayModeProperties Namespace SharpVulkan Assembly Lime.dll public struct DisplayModeProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DisplayMode public DisplayMode DisplayMode Field Value DisplayMode Parameters public DisplayModeParameters Parameters Field Value DisplayModeParameters"
  },
  "api/SharpVulkan.DisplayPlaneAlphaFlags.html": {
    "href": "api/SharpVulkan.DisplayPlaneAlphaFlags.html",
    "title": "Enum DisplayPlaneAlphaFlags | Citrus Engine",
    "keywords": "Enum DisplayPlaneAlphaFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DisplayPlaneAlphaFlags Fields Global = 2 None = 0 Opaque = 1 PerPixel = 4 PerPixelPremultiplied = 8"
  },
  "api/SharpVulkan.DisplayPlaneCapabilities.html": {
    "href": "api/SharpVulkan.DisplayPlaneCapabilities.html",
    "title": "Struct DisplayPlaneCapabilities | Citrus Engine",
    "keywords": "Struct DisplayPlaneCapabilities Namespace SharpVulkan Assembly Lime.dll public struct DisplayPlaneCapabilities Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MaxDstExtent public Extent2D MaxDstExtent Field Value Extent2D MaxDstPosition public Offset2D MaxDstPosition Field Value Offset2D MaxSrcExtent public Extent2D MaxSrcExtent Field Value Extent2D MaxSrcPosition public Offset2D MaxSrcPosition Field Value Offset2D MinDstExtent public Extent2D MinDstExtent Field Value Extent2D MinDstPosition public Offset2D MinDstPosition Field Value Offset2D MinSrcExtent public Extent2D MinSrcExtent Field Value Extent2D MinSrcPosition public Offset2D MinSrcPosition Field Value Offset2D SupportedAlpha public DisplayPlaneAlphaFlags SupportedAlpha Field Value DisplayPlaneAlphaFlags"
  },
  "api/SharpVulkan.DisplayPlaneProperties.html": {
    "href": "api/SharpVulkan.DisplayPlaneProperties.html",
    "title": "Struct DisplayPlaneProperties | Citrus Engine",
    "keywords": "Struct DisplayPlaneProperties Namespace SharpVulkan Assembly Lime.dll public struct DisplayPlaneProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CurrentDisplay public Display CurrentDisplay Field Value Display CurrentStackIndex public uint CurrentStackIndex Field Value uint"
  },
  "api/SharpVulkan.DisplayPowerInfo.html": {
    "href": "api/SharpVulkan.DisplayPowerInfo.html",
    "title": "Struct DisplayPowerInfo | Citrus Engine",
    "keywords": "Struct DisplayPowerInfo Namespace SharpVulkan Assembly Lime.dll public struct DisplayPowerInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint PowerState public DisplayPowerState PowerState Field Value DisplayPowerState StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DisplayPowerState.html": {
    "href": "api/SharpVulkan.DisplayPowerState.html",
    "title": "Enum DisplayPowerState | Citrus Engine",
    "keywords": "Enum DisplayPowerState Namespace SharpVulkan Assembly Lime.dll public enum DisplayPowerState Fields Off = 0 On = 2 Suspend = 1"
  },
  "api/SharpVulkan.DisplayPresentInfo.html": {
    "href": "api/SharpVulkan.DisplayPresentInfo.html",
    "title": "Struct DisplayPresentInfo | Citrus Engine",
    "keywords": "Struct DisplayPresentInfo Namespace SharpVulkan Assembly Lime.dll public struct DisplayPresentInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DestinationRect public Rect2D DestinationRect Field Value Rect2D Next public nint Next Field Value nint Persistent public RawBool Persistent Field Value RawBool SourceRect public Rect2D SourceRect Field Value Rect2D StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.DisplayProperties.html": {
    "href": "api/SharpVulkan.DisplayProperties.html",
    "title": "Struct DisplayProperties | Citrus Engine",
    "keywords": "Struct DisplayProperties Namespace SharpVulkan Assembly Lime.dll public struct DisplayProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Display public Display Display Field Value Display DisplayName public nint DisplayName Field Value nint PersistentContent public RawBool PersistentContent Field Value RawBool PhysicalDimensions public Extent2D PhysicalDimensions Field Value Extent2D PhysicalResolution public Extent2D PhysicalResolution Field Value Extent2D PlaneReorderPossible public RawBool PlaneReorderPossible Field Value RawBool SupportedTransforms public SurfaceTransformFlags SupportedTransforms Field Value SurfaceTransformFlags"
  },
  "api/SharpVulkan.DisplaySurfaceCreateFlags.html": {
    "href": "api/SharpVulkan.DisplaySurfaceCreateFlags.html",
    "title": "Enum DisplaySurfaceCreateFlags | Citrus Engine",
    "keywords": "Enum DisplaySurfaceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum DisplaySurfaceCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.DisplaySurfaceCreateInfo.html": {
    "href": "api/SharpVulkan.DisplaySurfaceCreateInfo.html",
    "title": "Struct DisplaySurfaceCreateInfo | Citrus Engine",
    "keywords": "Struct DisplaySurfaceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct DisplaySurfaceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AlphaMode public DisplayPlaneAlphaFlags AlphaMode Field Value DisplayPlaneAlphaFlags DisplayMode public DisplayMode DisplayMode Field Value DisplayMode Flags public DisplaySurfaceCreateFlags Flags Field Value DisplaySurfaceCreateFlags GlobalAlpha public float GlobalAlpha Field Value float ImageExtent public Extent2D ImageExtent Field Value Extent2D Next public nint Next Field Value nint PlaneIndex public uint PlaneIndex Field Value uint PlaneStackIndex public uint PlaneStackIndex Field Value uint StructureType public StructureType StructureType Field Value StructureType Transform public SurfaceTransformFlags Transform Field Value SurfaceTransformFlags"
  },
  "api/SharpVulkan.DrawIndexedIndirectCommand.html": {
    "href": "api/SharpVulkan.DrawIndexedIndirectCommand.html",
    "title": "Struct DrawIndexedIndirectCommand | Citrus Engine",
    "keywords": "Struct DrawIndexedIndirectCommand Namespace SharpVulkan Assembly Lime.dll public struct DrawIndexedIndirectCommand Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields FirstIndex public uint FirstIndex Field Value uint FirstInstance public uint FirstInstance Field Value uint IndexCount public uint IndexCount Field Value uint InstanceCount public uint InstanceCount Field Value uint VertexOffset public int VertexOffset Field Value int"
  },
  "api/SharpVulkan.DrawIndirectCommand.html": {
    "href": "api/SharpVulkan.DrawIndirectCommand.html",
    "title": "Struct DrawIndirectCommand | Citrus Engine",
    "keywords": "Struct DrawIndirectCommand Namespace SharpVulkan Assembly Lime.dll public struct DrawIndirectCommand Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields FirstInstance public uint FirstInstance Field Value uint FirstVertex public uint FirstVertex Field Value uint InstanceCount public uint InstanceCount Field Value uint VertexCount public uint VertexCount Field Value uint"
  },
  "api/SharpVulkan.DynamicState.html": {
    "href": "api/SharpVulkan.DynamicState.html",
    "title": "Enum DynamicState | Citrus Engine",
    "keywords": "Enum DynamicState Namespace SharpVulkan Assembly Lime.dll public enum DynamicState Fields BlendConstants = 4 DepthBias = 3 DepthBounds = 5 LineWidth = 2 Scissor = 1 StencilCompareMask = 6 StencilReference = 8 StencilWriteMask = 7 Viewport = 0"
  },
  "api/SharpVulkan.Event.html": {
    "href": "api/SharpVulkan.Event.html",
    "title": "Struct Event | Citrus Engine",
    "keywords": "Struct Event Namespace SharpVulkan Assembly Lime.dll public struct Event : IEquatable<Event> Implements IEquatable<Event> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Event Null Field Value Event Methods Equals(Event) Indicates whether the current object is equal to another object of the same type. public bool Equals(Event other) Parameters other Event An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Event, Event) public static bool operator ==(Event left, Event right) Parameters left Event right Event Returns bool operator !=(Event, Event) public static bool operator !=(Event left, Event right) Parameters left Event right Event Returns bool"
  },
  "api/SharpVulkan.EventCreateFlags.html": {
    "href": "api/SharpVulkan.EventCreateFlags.html",
    "title": "Enum EventCreateFlags | Citrus Engine",
    "keywords": "Enum EventCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum EventCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.EventCreateInfo.html": {
    "href": "api/SharpVulkan.EventCreateInfo.html",
    "title": "Struct EventCreateInfo | Citrus Engine",
    "keywords": "Struct EventCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct EventCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public EventCreateFlags Flags Field Value EventCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ExportMemoryAllocateInfo.html": {
    "href": "api/SharpVulkan.ExportMemoryAllocateInfo.html",
    "title": "Struct ExportMemoryAllocateInfo | Citrus Engine",
    "keywords": "Struct ExportMemoryAllocateInfo Namespace SharpVulkan Assembly Lime.dll public struct ExportMemoryAllocateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields HandleTypes public uint HandleTypes Field Value uint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ExportMemoryWin32HandleInfo.html": {
    "href": "api/SharpVulkan.ExportMemoryWin32HandleInfo.html",
    "title": "Struct ExportMemoryWin32HandleInfo | Citrus Engine",
    "keywords": "Struct ExportMemoryWin32HandleInfo Namespace SharpVulkan Assembly Lime.dll public struct ExportMemoryWin32HandleInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Attributes public nint Attributes Field Value nint DwAccess public int DwAccess Field Value int Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ExtensionProperties.ExtensionNameArray.html": {
    "href": "api/SharpVulkan.ExtensionProperties.ExtensionNameArray.html",
    "title": "Struct ExtensionProperties.ExtensionNameArray | Citrus Engine",
    "keywords": "Struct ExtensionProperties.ExtensionNameArray Namespace SharpVulkan Assembly Lime.dll public struct ExtensionProperties.ExtensionNameArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public byte Value0 Field Value byte Value1 public byte Value1 Field Value byte Value10 public byte Value10 Field Value byte Value100 public byte Value100 Field Value byte Value101 public byte Value101 Field Value byte Value102 public byte Value102 Field Value byte Value103 public byte Value103 Field Value byte Value104 public byte Value104 Field Value byte Value105 public byte Value105 Field Value byte Value106 public byte Value106 Field Value byte Value107 public byte Value107 Field Value byte Value108 public byte Value108 Field Value byte Value109 public byte Value109 Field Value byte Value11 public byte Value11 Field Value byte Value110 public byte Value110 Field Value byte Value111 public byte Value111 Field Value byte Value112 public byte Value112 Field Value byte Value113 public byte Value113 Field Value byte Value114 public byte Value114 Field Value byte Value115 public byte Value115 Field Value byte Value116 public byte Value116 Field Value byte Value117 public byte Value117 Field Value byte Value118 public byte Value118 Field Value byte Value119 public byte Value119 Field Value byte Value12 public byte Value12 Field Value byte Value120 public byte Value120 Field Value byte Value121 public byte Value121 Field Value byte Value122 public byte Value122 Field Value byte Value123 public byte Value123 Field Value byte Value124 public byte Value124 Field Value byte Value125 public byte Value125 Field Value byte Value126 public byte Value126 Field Value byte Value127 public byte Value127 Field Value byte Value128 public byte Value128 Field Value byte Value129 public byte Value129 Field Value byte Value13 public byte Value13 Field Value byte Value130 public byte Value130 Field Value byte Value131 public byte Value131 Field Value byte Value132 public byte Value132 Field Value byte Value133 public byte Value133 Field Value byte Value134 public byte Value134 Field Value byte Value135 public byte Value135 Field Value byte Value136 public byte Value136 Field Value byte Value137 public byte Value137 Field Value byte Value138 public byte Value138 Field Value byte Value139 public byte Value139 Field Value byte Value14 public byte Value14 Field Value byte Value140 public byte Value140 Field Value byte Value141 public byte Value141 Field Value byte Value142 public byte Value142 Field Value byte Value143 public byte Value143 Field Value byte Value144 public byte Value144 Field Value byte Value145 public byte Value145 Field Value byte Value146 public byte Value146 Field Value byte Value147 public byte Value147 Field Value byte Value148 public byte Value148 Field Value byte Value149 public byte Value149 Field Value byte Value15 public byte Value15 Field Value byte Value150 public byte Value150 Field Value byte Value151 public byte Value151 Field Value byte Value152 public byte Value152 Field Value byte Value153 public byte Value153 Field Value byte Value154 public byte Value154 Field Value byte Value155 public byte Value155 Field Value byte Value156 public byte Value156 Field Value byte Value157 public byte Value157 Field Value byte Value158 public byte Value158 Field Value byte Value159 public byte Value159 Field Value byte Value16 public byte Value16 Field Value byte Value160 public byte Value160 Field Value byte Value161 public byte Value161 Field Value byte Value162 public byte Value162 Field Value byte Value163 public byte Value163 Field Value byte Value164 public byte Value164 Field Value byte Value165 public byte Value165 Field Value byte Value166 public byte Value166 Field Value byte Value167 public byte Value167 Field Value byte Value168 public byte Value168 Field Value byte Value169 public byte Value169 Field Value byte Value17 public byte Value17 Field Value byte Value170 public byte Value170 Field Value byte Value171 public byte Value171 Field Value byte Value172 public byte Value172 Field Value byte Value173 public byte Value173 Field Value byte Value174 public byte Value174 Field Value byte Value175 public byte Value175 Field Value byte Value176 public byte Value176 Field Value byte Value177 public byte Value177 Field Value byte Value178 public byte Value178 Field Value byte Value179 public byte Value179 Field Value byte Value18 public byte Value18 Field Value byte Value180 public byte Value180 Field Value byte Value181 public byte Value181 Field Value byte Value182 public byte Value182 Field Value byte Value183 public byte Value183 Field Value byte Value184 public byte Value184 Field Value byte Value185 public byte Value185 Field Value byte Value186 public byte Value186 Field Value byte Value187 public byte Value187 Field Value byte Value188 public byte Value188 Field Value byte Value189 public byte Value189 Field Value byte Value19 public byte Value19 Field Value byte Value190 public byte Value190 Field Value byte Value191 public byte Value191 Field Value byte Value192 public byte Value192 Field Value byte Value193 public byte Value193 Field Value byte Value194 public byte Value194 Field Value byte Value195 public byte Value195 Field Value byte Value196 public byte Value196 Field Value byte Value197 public byte Value197 Field Value byte Value198 public byte Value198 Field Value byte Value199 public byte Value199 Field Value byte Value2 public byte Value2 Field Value byte Value20 public byte Value20 Field Value byte Value200 public byte Value200 Field Value byte Value201 public byte Value201 Field Value byte Value202 public byte Value202 Field Value byte Value203 public byte Value203 Field Value byte Value204 public byte Value204 Field Value byte Value205 public byte Value205 Field Value byte Value206 public byte Value206 Field Value byte Value207 public byte Value207 Field Value byte Value208 public byte Value208 Field Value byte Value209 public byte Value209 Field Value byte Value21 public byte Value21 Field Value byte Value210 public byte Value210 Field Value byte Value211 public byte Value211 Field Value byte Value212 public byte Value212 Field Value byte Value213 public byte Value213 Field Value byte Value214 public byte Value214 Field Value byte Value215 public byte Value215 Field Value byte Value216 public byte Value216 Field Value byte Value217 public byte Value217 Field Value byte Value218 public byte Value218 Field Value byte Value219 public byte Value219 Field Value byte Value22 public byte Value22 Field Value byte Value220 public byte Value220 Field Value byte Value221 public byte Value221 Field Value byte Value222 public byte Value222 Field Value byte Value223 public byte Value223 Field Value byte Value224 public byte Value224 Field Value byte Value225 public byte Value225 Field Value byte Value226 public byte Value226 Field Value byte Value227 public byte Value227 Field Value byte Value228 public byte Value228 Field Value byte Value229 public byte Value229 Field Value byte Value23 public byte Value23 Field Value byte Value230 public byte Value230 Field Value byte Value231 public byte Value231 Field Value byte Value232 public byte Value232 Field Value byte Value233 public byte Value233 Field Value byte Value234 public byte Value234 Field Value byte Value235 public byte Value235 Field Value byte Value236 public byte Value236 Field Value byte Value237 public byte Value237 Field Value byte Value238 public byte Value238 Field Value byte Value239 public byte Value239 Field Value byte Value24 public byte Value24 Field Value byte Value240 public byte Value240 Field Value byte Value241 public byte Value241 Field Value byte Value242 public byte Value242 Field Value byte Value243 public byte Value243 Field Value byte Value244 public byte Value244 Field Value byte Value245 public byte Value245 Field Value byte Value246 public byte Value246 Field Value byte Value247 public byte Value247 Field Value byte Value248 public byte Value248 Field Value byte Value249 public byte Value249 Field Value byte Value25 public byte Value25 Field Value byte Value250 public byte Value250 Field Value byte Value251 public byte Value251 Field Value byte Value252 public byte Value252 Field Value byte Value253 public byte Value253 Field Value byte Value254 public byte Value254 Field Value byte Value255 public byte Value255 Field Value byte Value26 public byte Value26 Field Value byte Value27 public byte Value27 Field Value byte Value28 public byte Value28 Field Value byte Value29 public byte Value29 Field Value byte Value3 public byte Value3 Field Value byte Value30 public byte Value30 Field Value byte Value31 public byte Value31 Field Value byte Value32 public byte Value32 Field Value byte Value33 public byte Value33 Field Value byte Value34 public byte Value34 Field Value byte Value35 public byte Value35 Field Value byte Value36 public byte Value36 Field Value byte Value37 public byte Value37 Field Value byte Value38 public byte Value38 Field Value byte Value39 public byte Value39 Field Value byte Value4 public byte Value4 Field Value byte Value40 public byte Value40 Field Value byte Value41 public byte Value41 Field Value byte Value42 public byte Value42 Field Value byte Value43 public byte Value43 Field Value byte Value44 public byte Value44 Field Value byte Value45 public byte Value45 Field Value byte Value46 public byte Value46 Field Value byte Value47 public byte Value47 Field Value byte Value48 public byte Value48 Field Value byte Value49 public byte Value49 Field Value byte Value5 public byte Value5 Field Value byte Value50 public byte Value50 Field Value byte Value51 public byte Value51 Field Value byte Value52 public byte Value52 Field Value byte Value53 public byte Value53 Field Value byte Value54 public byte Value54 Field Value byte Value55 public byte Value55 Field Value byte Value56 public byte Value56 Field Value byte Value57 public byte Value57 Field Value byte Value58 public byte Value58 Field Value byte Value59 public byte Value59 Field Value byte Value6 public byte Value6 Field Value byte Value60 public byte Value60 Field Value byte Value61 public byte Value61 Field Value byte Value62 public byte Value62 Field Value byte Value63 public byte Value63 Field Value byte Value64 public byte Value64 Field Value byte Value65 public byte Value65 Field Value byte Value66 public byte Value66 Field Value byte Value67 public byte Value67 Field Value byte Value68 public byte Value68 Field Value byte Value69 public byte Value69 Field Value byte Value7 public byte Value7 Field Value byte Value70 public byte Value70 Field Value byte Value71 public byte Value71 Field Value byte Value72 public byte Value72 Field Value byte Value73 public byte Value73 Field Value byte Value74 public byte Value74 Field Value byte Value75 public byte Value75 Field Value byte Value76 public byte Value76 Field Value byte Value77 public byte Value77 Field Value byte Value78 public byte Value78 Field Value byte Value79 public byte Value79 Field Value byte Value8 public byte Value8 Field Value byte Value80 public byte Value80 Field Value byte Value81 public byte Value81 Field Value byte Value82 public byte Value82 Field Value byte Value83 public byte Value83 Field Value byte Value84 public byte Value84 Field Value byte Value85 public byte Value85 Field Value byte Value86 public byte Value86 Field Value byte Value87 public byte Value87 Field Value byte Value88 public byte Value88 Field Value byte Value89 public byte Value89 Field Value byte Value9 public byte Value9 Field Value byte Value90 public byte Value90 Field Value byte Value91 public byte Value91 Field Value byte Value92 public byte Value92 Field Value byte Value93 public byte Value93 Field Value byte Value94 public byte Value94 Field Value byte Value95 public byte Value95 Field Value byte Value96 public byte Value96 Field Value byte Value97 public byte Value97 Field Value byte Value98 public byte Value98 Field Value byte Value99 public byte Value99 Field Value byte"
  },
  "api/SharpVulkan.ExtensionProperties.html": {
    "href": "api/SharpVulkan.ExtensionProperties.html",
    "title": "Struct ExtensionProperties | Citrus Engine",
    "keywords": "Struct ExtensionProperties Namespace SharpVulkan Assembly Lime.dll public struct ExtensionProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ExtensionName public ExtensionProperties.ExtensionNameArray ExtensionName Field Value ExtensionProperties.ExtensionNameArray SpecVersion public uint SpecVersion Field Value uint"
  },
  "api/SharpVulkan.Extent2D.html": {
    "href": "api/SharpVulkan.Extent2D.html",
    "title": "Struct Extent2D | Citrus Engine",
    "keywords": "Struct Extent2D Namespace SharpVulkan Assembly Lime.dll public struct Extent2D Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Extent2D(uint, uint) public Extent2D(uint width, uint height) Parameters width uint height uint Fields Height public uint Height Field Value uint Width public uint Width Field Value uint"
  },
  "api/SharpVulkan.Extent3D.html": {
    "href": "api/SharpVulkan.Extent3D.html",
    "title": "Struct Extent3D | Citrus Engine",
    "keywords": "Struct Extent3D Namespace SharpVulkan Assembly Lime.dll public struct Extent3D Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Extent3D(uint, uint, uint) public Extent3D(uint width, uint height, uint depth) Parameters width uint height uint depth uint Fields Depth public uint Depth Field Value uint Height public uint Height Field Value uint Width public uint Width Field Value uint"
  },
  "api/SharpVulkan.ExternalImageFormatProperties.html": {
    "href": "api/SharpVulkan.ExternalImageFormatProperties.html",
    "title": "Struct ExternalImageFormatProperties | Citrus Engine",
    "keywords": "Struct ExternalImageFormatProperties Namespace SharpVulkan Assembly Lime.dll public struct ExternalImageFormatProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CompatibleHandleTypes public uint CompatibleHandleTypes Field Value uint ExportFromImportedHandleTypes public uint ExportFromImportedHandleTypes Field Value uint ExternalMemoryFeatures public uint ExternalMemoryFeatures Field Value uint ImageFormatProperties public ImageFormatProperties ImageFormatProperties Field Value ImageFormatProperties"
  },
  "api/SharpVulkan.ExternalMemoryFeatureFlags.html": {
    "href": "api/SharpVulkan.ExternalMemoryFeatureFlags.html",
    "title": "Enum ExternalMemoryFeatureFlags | Citrus Engine",
    "keywords": "Enum ExternalMemoryFeatureFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ExternalMemoryFeatureFlags Fields DedicatedOnly = 1 Exportable = 2 Importable = 4 None = 0"
  },
  "api/SharpVulkan.ExternalMemoryHandleTypeFlags.html": {
    "href": "api/SharpVulkan.ExternalMemoryHandleTypeFlags.html",
    "title": "Enum ExternalMemoryHandleTypeFlags | Citrus Engine",
    "keywords": "Enum ExternalMemoryHandleTypeFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ExternalMemoryHandleTypeFlags Fields D3D11Image = 4 D3D11ImageKmt = 8 None = 0 OpaqueWin32 = 1 OpaqueWin32Kmt = 2"
  },
  "api/SharpVulkan.ExternalMemoryImageCreateInfo.html": {
    "href": "api/SharpVulkan.ExternalMemoryImageCreateInfo.html",
    "title": "Struct ExternalMemoryImageCreateInfo | Citrus Engine",
    "keywords": "Struct ExternalMemoryImageCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct ExternalMemoryImageCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields HandleTypes public uint HandleTypes Field Value uint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.Fence.html": {
    "href": "api/SharpVulkan.Fence.html",
    "title": "Struct Fence | Citrus Engine",
    "keywords": "Struct Fence Namespace SharpVulkan Assembly Lime.dll public struct Fence : IEquatable<Fence> Implements IEquatable<Fence> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Fence Null Field Value Fence Methods Equals(Fence) Indicates whether the current object is equal to another object of the same type. public bool Equals(Fence other) Parameters other Fence An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Fence, Fence) public static bool operator ==(Fence left, Fence right) Parameters left Fence right Fence Returns bool operator !=(Fence, Fence) public static bool operator !=(Fence left, Fence right) Parameters left Fence right Fence Returns bool"
  },
  "api/SharpVulkan.FenceCreateFlags.html": {
    "href": "api/SharpVulkan.FenceCreateFlags.html",
    "title": "Enum FenceCreateFlags | Citrus Engine",
    "keywords": "Enum FenceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum FenceCreateFlags Fields None = 0 Signaled = 1"
  },
  "api/SharpVulkan.FenceCreateInfo.html": {
    "href": "api/SharpVulkan.FenceCreateInfo.html",
    "title": "Struct FenceCreateInfo | Citrus Engine",
    "keywords": "Struct FenceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct FenceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public FenceCreateFlags Flags Field Value FenceCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.Filter.html": {
    "href": "api/SharpVulkan.Filter.html",
    "title": "Enum Filter | Citrus Engine",
    "keywords": "Enum Filter Namespace SharpVulkan Assembly Lime.dll public enum Filter Fields Cubic = 1000015000 Linear = 1 Nearest = 0"
  },
  "api/SharpVulkan.Format.html": {
    "href": "api/SharpVulkan.Format.html",
    "title": "Enum Format | Citrus Engine",
    "keywords": "Enum Format Namespace SharpVulkan Assembly Lime.dll public enum Format Fields A1R5G5B5UNormPack16 = 8 A2B10G10R10SIntPack32 = 69 A2B10G10R10SNormPack32 = 65 A2B10G10R10SscaledPack32 = 67 A2B10G10R10UIntPack32 = 68 A2B10G10R10UNormPack32 = 64 A2B10G10R10UScaledPack32 = 66 A2R10G10B10SIntPack32 = 63 A2R10G10B10SNormPack32 = 59 A2R10G10B10SscaledPack32 = 61 A2R10G10B10UIntPack32 = 62 A2R10G10B10UNormPack32 = 58 A2R10G10B10UScaledPack32 = 60 A8B8G8R8SIntPack32 = 56 A8B8G8R8SNormPack32 = 52 A8B8G8R8SRgbPack32 = 57 A8B8G8R8SscaledPack32 = 54 A8B8G8R8UIntPack32 = 55 A8B8G8R8UNormPack32 = 51 A8B8G8R8UScaledPack32 = 53 Astc10X10SRgbBlock = 180 Astc10X10UNormBlock = 179 Astc10X5SRgbBlock = 174 Astc10X5UNormBlock = 173 Astc10X6SRgbBlock = 176 Astc10X6UNormBlock = 175 Astc10X8SRgbBlock = 178 Astc10X8UNormBlock = 177 Astc12X10SRgbBlock = 182 Astc12X10UNormBlock = 181 Astc12X12SRgbBlock = 184 Astc12X12UNormBlock = 183 Astc4X4SRgbBlock = 158 Astc4X4UNormBlock = 157 Astc5X4SRgbBlock = 160 Astc5X4UNormBlock = 159 Astc5X5SRgbBlock = 162 Astc5X5UNormBlock = 161 Astc6X5SRgbBlock = 164 Astc6X5UNormBlock = 163 Astc6X6SRgbBlock = 166 Astc6X6UNormBlock = 165 Astc8X5SRgbBlock = 168 Astc8X5UNormBlock = 167 Astc8X6SRgbBlock = 170 Astc8X6UNormBlock = 169 Astc8X8SRgbBlock = 172 Astc8X8UNormBlock = 171 B10G11R11UFloatPack32 = 122 B4G4R4A4UNormPack16 = 3 B5G5R5A1UNormPack16 = 7 B5G6R5UNormPack16 = 5 B8G8R8A8SInt = 49 B8G8R8A8SNorm = 45 B8G8R8A8SRgb = 50 B8G8R8A8Sscaled = 47 B8G8R8A8UInt = 48 B8G8R8A8UNorm = 44 B8G8R8A8UScaled = 46 B8G8R8SInt = 35 B8G8R8SNorm = 31 B8G8R8SRgb = 36 B8G8R8Sscaled = 33 B8G8R8UInt = 34 B8G8R8UNorm = 30 B8G8R8UScaled = 32 Bc1RgbSRgbBlock = 132 Bc1RgbUNormBlock = 131 Bc1RgbaSRgbBlock = 134 Bc1RgbaUNormBlock = 133 Bc2SRgbBlock = 136 Bc2UNormBlock = 135 Bc3SRgbBlock = 138 Bc3UNormBlock = 137 Bc4SNormBlock = 140 Bc4UNormBlock = 139 Bc5SNormBlock = 142 Bc5UNormBlock = 141 Bc6HSFloatBlock = 144 Bc6HUFloatBlock = 143 Bc7SRgbBlock = 146 Bc7UNormBlock = 145 D16UNorm = 124 D16UNormS8UInt = 128 D24UNormS8UInt = 129 D32SFloat = 126 D32SFloatS8UInt = 130 E5B9G9R9UFloatPack32 = 123 EacR11G11SNormBlock = 156 EacR11G11UNormBlock = 155 EacR11SNormBlock = 154 EacR11UNormBlock = 153 Etc2R8G8B8A1SRgbBlock = 150 Etc2R8G8B8A1UNormBlock = 149 Etc2R8G8B8A8SRgbBlock = 152 Etc2R8G8B8A8UNormBlock = 151 Etc2R8G8B8SRgbBlock = 148 Etc2R8G8B8UNormBlock = 147 Pvrtc12BppSRgbBlock = 1000054004 Pvrtc12BppUNormBlock = 1000054000 Pvrtc14BppSRgbBlock = 1000054005 Pvrtc14BppUNormBlock = 1000054001 Pvrtc22BppSRgbBlock = 1000054006 Pvrtc22BppUNormBlock = 1000054002 Pvrtc24BppSRgbBlock = 1000054007 Pvrtc24BppUNormBlock = 1000054003 R16G16B16A16SFloat = 97 R16G16B16A16SInt = 96 R16G16B16A16SNorm = 92 R16G16B16A16Sscaled = 94 R16G16B16A16UInt = 95 R16G16B16A16UNorm = 91 R16G16B16A16UScaled = 93 R16G16B16SFloat = 90 R16G16B16SInt = 89 R16G16B16SNorm = 85 R16G16B16Sscaled = 87 R16G16B16UInt = 88 R16G16B16UNorm = 84 R16G16B16UScaled = 86 R16G16SFloat = 83 R16G16SInt = 82 R16G16SNorm = 78 R16G16Sscaled = 80 R16G16UInt = 81 R16G16UNorm = 77 R16G16UScaled = 79 R16SFloat = 76 R16SInt = 75 R16SNorm = 71 R16Sscaled = 73 R16UInt = 74 R16UNorm = 70 R16UScaled = 72 R32G32B32A32SFloat = 109 R32G32B32A32SInt = 108 R32G32B32A32UInt = 107 R32G32B32SFloat = 106 R32G32B32SInt = 105 R32G32B32UInt = 104 R32G32SFloat = 103 R32G32SInt = 102 R32G32UInt = 101 R32SFloat = 100 R32SInt = 99 R32UInt = 98 R4G4B4A4UNormPack16 = 2 R4G4UNormPack8 = 1 R5G5B5A1UNormPack16 = 6 R5G6B5UNormPack16 = 4 R64G64B64A64SFloat = 121 R64G64B64A64SInt = 120 R64G64B64A64UInt = 119 R64G64B64SFloat = 118 R64G64B64SInt = 117 R64G64B64UInt = 116 R64G64SFloat = 115 R64G64SInt = 114 R64G64UInt = 113 R64SFloat = 112 R64SInt = 111 R64UInt = 110 R8G8B8A8SInt = 42 R8G8B8A8SNorm = 38 R8G8B8A8SRgb = 43 R8G8B8A8Sscaled = 40 R8G8B8A8UInt = 41 R8G8B8A8UNorm = 37 R8G8B8A8UScaled = 39 R8G8B8SInt = 28 R8G8B8SNorm = 24 R8G8B8SRgb = 29 R8G8B8Sscaled = 26 R8G8B8UInt = 27 R8G8B8UNorm = 23 R8G8B8UScaled = 25 R8G8SInt = 21 R8G8SNorm = 17 R8G8SRgb = 22 R8G8Sscaled = 19 R8G8UInt = 20 R8G8UNorm = 16 R8G8UScaled = 18 R8SInt = 14 R8SNorm = 10 R8SRgb = 15 R8Sscaled = 12 R8UInt = 13 R8UNorm = 9 R8UScaled = 11 S8UInt = 127 Undefined = 0 X8D24UNormPack32 = 125"
  },
  "api/SharpVulkan.FormatFeatureFlags.html": {
    "href": "api/SharpVulkan.FormatFeatureFlags.html",
    "title": "Enum FormatFeatureFlags | Citrus Engine",
    "keywords": "Enum FormatFeatureFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum FormatFeatureFlags Fields BlitDestination = 2048 BlitSource = 1024 ColorAttachment = 128 ColorAttachmentBlend = 256 DepthStencilAttachment = 512 None = 0 SampledImage = 1 SampledImageFilterCubic = 8192 SampledImageFilterLinear = 4096 StorageImage = 2 StorageImageAtomic = 4 StorageTexelBuffer = 16 StorageTexelBufferAtomic = 32 TransferDestination = 32768 TransferSource = 16384 UniformTexelBuffer = 8 VertexBuffer = 64"
  },
  "api/SharpVulkan.FormatProperties.html": {
    "href": "api/SharpVulkan.FormatProperties.html",
    "title": "Struct FormatProperties | Citrus Engine",
    "keywords": "Struct FormatProperties Namespace SharpVulkan Assembly Lime.dll public struct FormatProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BufferFeatures public FormatFeatureFlags BufferFeatures Field Value FormatFeatureFlags LinearTilingFeatures public FormatFeatureFlags LinearTilingFeatures Field Value FormatFeatureFlags OptimalTilingFeatures public FormatFeatureFlags OptimalTilingFeatures Field Value FormatFeatureFlags"
  },
  "api/SharpVulkan.FormatProperties2.html": {
    "href": "api/SharpVulkan.FormatProperties2.html",
    "title": "Struct FormatProperties2 | Citrus Engine",
    "keywords": "Struct FormatProperties2 Namespace SharpVulkan Assembly Lime.dll public struct FormatProperties2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields FormatProperties public FormatProperties FormatProperties Field Value FormatProperties Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.Framebuffer.html": {
    "href": "api/SharpVulkan.Framebuffer.html",
    "title": "Struct Framebuffer | Citrus Engine",
    "keywords": "Struct Framebuffer Namespace SharpVulkan Assembly Lime.dll public struct Framebuffer : IEquatable<Framebuffer> Implements IEquatable<Framebuffer> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Framebuffer Null Field Value Framebuffer Methods Equals(Framebuffer) Indicates whether the current object is equal to another object of the same type. public bool Equals(Framebuffer other) Parameters other Framebuffer An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Framebuffer, Framebuffer) public static bool operator ==(Framebuffer left, Framebuffer right) Parameters left Framebuffer right Framebuffer Returns bool operator !=(Framebuffer, Framebuffer) public static bool operator !=(Framebuffer left, Framebuffer right) Parameters left Framebuffer right Framebuffer Returns bool"
  },
  "api/SharpVulkan.FramebufferCreateFlags.html": {
    "href": "api/SharpVulkan.FramebufferCreateFlags.html",
    "title": "Enum FramebufferCreateFlags | Citrus Engine",
    "keywords": "Enum FramebufferCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum FramebufferCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.FramebufferCreateInfo.html": {
    "href": "api/SharpVulkan.FramebufferCreateInfo.html",
    "title": "Struct FramebufferCreateInfo | Citrus Engine",
    "keywords": "Struct FramebufferCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct FramebufferCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AttachmentCount public uint AttachmentCount Field Value uint Attachments public nint Attachments Field Value nint Flags public FramebufferCreateFlags Flags Field Value FramebufferCreateFlags Height public uint Height Field Value uint Layers public uint Layers Field Value uint Next public nint Next Field Value nint RenderPass public RenderPass RenderPass Field Value RenderPass StructureType public StructureType StructureType Field Value StructureType Width public uint Width Field Value uint"
  },
  "api/SharpVulkan.FrontFace.html": {
    "href": "api/SharpVulkan.FrontFace.html",
    "title": "Enum FrontFace | Citrus Engine",
    "keywords": "Enum FrontFace Namespace SharpVulkan Assembly Lime.dll public enum FrontFace Fields Clockwise = 1 CounterClockwise = 0"
  },
  "api/SharpVulkan.GraphicsPipelineCreateInfo.html": {
    "href": "api/SharpVulkan.GraphicsPipelineCreateInfo.html",
    "title": "Struct GraphicsPipelineCreateInfo | Citrus Engine",
    "keywords": "Struct GraphicsPipelineCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct GraphicsPipelineCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BasePipelineHandle public Pipeline BasePipelineHandle Field Value Pipeline BasePipelineIndex public int BasePipelineIndex Field Value int ColorBlendState public nint ColorBlendState Field Value nint DepthStencilState public nint DepthStencilState Field Value nint DynamicState public nint DynamicState Field Value nint Flags public PipelineCreateFlags Flags Field Value PipelineCreateFlags InputAssemblyState public nint InputAssemblyState Field Value nint Layout public PipelineLayout Layout Field Value PipelineLayout MultisampleState public nint MultisampleState Field Value nint Next public nint Next Field Value nint RasterizationState public nint RasterizationState Field Value nint RenderPass public RenderPass RenderPass Field Value RenderPass StageCount public uint StageCount Field Value uint Stages public nint Stages Field Value nint StructureType public StructureType StructureType Field Value StructureType Subpass public uint Subpass Field Value uint TessellationState public nint TessellationState Field Value nint VertexInputState public nint VertexInputState Field Value nint ViewportState public nint ViewportState Field Value nint"
  },
  "api/SharpVulkan.Image.html": {
    "href": "api/SharpVulkan.Image.html",
    "title": "Struct Image | Citrus Engine",
    "keywords": "Struct Image Namespace SharpVulkan Assembly Lime.dll public struct Image : IEquatable<Image> Implements IEquatable<Image> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Image Null Field Value Image Methods Equals(Image) Indicates whether the current object is equal to another object of the same type. public bool Equals(Image other) Parameters other Image An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Image, Image) public static bool operator ==(Image left, Image right) Parameters left Image right Image Returns bool operator !=(Image, Image) public static bool operator !=(Image left, Image right) Parameters left Image right Image Returns bool"
  },
  "api/SharpVulkan.ImageAspectFlags.html": {
    "href": "api/SharpVulkan.ImageAspectFlags.html",
    "title": "Enum ImageAspectFlags | Citrus Engine",
    "keywords": "Enum ImageAspectFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ImageAspectFlags Fields Color = 1 Depth = 2 Metadata = 8 None = 0 Stencil = 4"
  },
  "api/SharpVulkan.ImageBlit.DestinationOffsetsArray.html": {
    "href": "api/SharpVulkan.ImageBlit.DestinationOffsetsArray.html",
    "title": "Struct ImageBlit.DestinationOffsetsArray | Citrus Engine",
    "keywords": "Struct ImageBlit.DestinationOffsetsArray Namespace SharpVulkan Assembly Lime.dll public struct ImageBlit.DestinationOffsetsArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public Offset3D Value0 Field Value Offset3D Value1 public Offset3D Value1 Field Value Offset3D"
  },
  "api/SharpVulkan.ImageBlit.SourceOffsetsArray.html": {
    "href": "api/SharpVulkan.ImageBlit.SourceOffsetsArray.html",
    "title": "Struct ImageBlit.SourceOffsetsArray | Citrus Engine",
    "keywords": "Struct ImageBlit.SourceOffsetsArray Namespace SharpVulkan Assembly Lime.dll public struct ImageBlit.SourceOffsetsArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public Offset3D Value0 Field Value Offset3D Value1 public Offset3D Value1 Field Value Offset3D"
  },
  "api/SharpVulkan.ImageBlit.html": {
    "href": "api/SharpVulkan.ImageBlit.html",
    "title": "Struct ImageBlit | Citrus Engine",
    "keywords": "Struct ImageBlit Namespace SharpVulkan Assembly Lime.dll public struct ImageBlit Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DestinationOffsets public ImageBlit.DestinationOffsetsArray DestinationOffsets Field Value ImageBlit.DestinationOffsetsArray DestinationSubresource public ImageSubresourceLayers DestinationSubresource Field Value ImageSubresourceLayers SourceOffsets public ImageBlit.SourceOffsetsArray SourceOffsets Field Value ImageBlit.SourceOffsetsArray SourceSubresource public ImageSubresourceLayers SourceSubresource Field Value ImageSubresourceLayers"
  },
  "api/SharpVulkan.ImageCopy.html": {
    "href": "api/SharpVulkan.ImageCopy.html",
    "title": "Struct ImageCopy | Citrus Engine",
    "keywords": "Struct ImageCopy Namespace SharpVulkan Assembly Lime.dll public struct ImageCopy Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DestinationOffset public Offset3D DestinationOffset Field Value Offset3D DestinationSubresource public ImageSubresourceLayers DestinationSubresource Field Value ImageSubresourceLayers Extent public Extent3D Extent Field Value Extent3D SourceOffset public Offset3D SourceOffset Field Value Offset3D SourceSubresource public ImageSubresourceLayers SourceSubresource Field Value ImageSubresourceLayers"
  },
  "api/SharpVulkan.ImageCreateFlags.html": {
    "href": "api/SharpVulkan.ImageCreateFlags.html",
    "title": "Enum ImageCreateFlags | Citrus Engine",
    "keywords": "Enum ImageCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ImageCreateFlags Fields CubeCompatible = 16 Image2DArrayCompatible = 32 MutableFormat = 8 None = 0 SparseAliased = 4 SparseBinding = 1 SparseResidency = 2"
  },
  "api/SharpVulkan.ImageCreateInfo.html": {
    "href": "api/SharpVulkan.ImageCreateInfo.html",
    "title": "Struct ImageCreateInfo | Citrus Engine",
    "keywords": "Struct ImageCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct ImageCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ArrayLayers public uint ArrayLayers Field Value uint Extent public Extent3D Extent Field Value Extent3D Flags public ImageCreateFlags Flags Field Value ImageCreateFlags Format public Format Format Field Value Format ImageType public ImageType ImageType Field Value ImageType InitialLayout public ImageLayout InitialLayout Field Value ImageLayout MipLevels public uint MipLevels Field Value uint Next public nint Next Field Value nint QueueFamilyIndexCount public uint QueueFamilyIndexCount Field Value uint QueueFamilyIndices public nint QueueFamilyIndices Field Value nint Samples public SampleCountFlags Samples Field Value SampleCountFlags SharingMode public SharingMode SharingMode Field Value SharingMode StructureType public StructureType StructureType Field Value StructureType Tiling public ImageTiling Tiling Field Value ImageTiling Usage public ImageUsageFlags Usage Field Value ImageUsageFlags"
  },
  "api/SharpVulkan.ImageFormatProperties.html": {
    "href": "api/SharpVulkan.ImageFormatProperties.html",
    "title": "Struct ImageFormatProperties | Citrus Engine",
    "keywords": "Struct ImageFormatProperties Namespace SharpVulkan Assembly Lime.dll public struct ImageFormatProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MaxArrayLayers public uint MaxArrayLayers Field Value uint MaxExtent public Extent3D MaxExtent Field Value Extent3D MaxMipLevels public uint MaxMipLevels Field Value uint MaxResourceSize public ulong MaxResourceSize Field Value ulong SampleCounts public SampleCountFlags SampleCounts Field Value SampleCountFlags"
  },
  "api/SharpVulkan.ImageFormatProperties2.html": {
    "href": "api/SharpVulkan.ImageFormatProperties2.html",
    "title": "Struct ImageFormatProperties2 | Citrus Engine",
    "keywords": "Struct ImageFormatProperties2 Namespace SharpVulkan Assembly Lime.dll public struct ImageFormatProperties2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ImageFormatProperties public ImageFormatProperties ImageFormatProperties Field Value ImageFormatProperties Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ImageLayout.html": {
    "href": "api/SharpVulkan.ImageLayout.html",
    "title": "Enum ImageLayout | Citrus Engine",
    "keywords": "Enum ImageLayout Namespace SharpVulkan Assembly Lime.dll public enum ImageLayout Fields ColorAttachmentOptimal = 2 DepthStencilAttachmentOptimal = 3 DepthStencilReadOnlyOptimal = 4 General = 1 Preinitialized = 8 PresentSource = 1000001002 ShaderReadOnlyOptimal = 5 TransferDestinationOptimal = 7 TransferSourceOptimal = 6 Undefined = 0"
  },
  "api/SharpVulkan.ImageMemoryBarrier.html": {
    "href": "api/SharpVulkan.ImageMemoryBarrier.html",
    "title": "Struct ImageMemoryBarrier | Citrus Engine",
    "keywords": "Struct ImageMemoryBarrier Namespace SharpVulkan Assembly Lime.dll public struct ImageMemoryBarrier Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ImageMemoryBarrier(Image, ImageLayout, ImageLayout, AccessFlags, AccessFlags, ImageSubresourceRange) public ImageMemoryBarrier(Image image, ImageLayout oldLayout, ImageLayout newLayout, AccessFlags sourceAccesMask, AccessFlags destinationAccessMask, ImageSubresourceRange subresourceRange) Parameters image Image oldLayout ImageLayout newLayout ImageLayout sourceAccesMask AccessFlags destinationAccessMask AccessFlags subresourceRange ImageSubresourceRange ImageMemoryBarrier(Image, ImageLayout, ImageLayout, AccessFlags, AccessFlags, uint, uint, ImageSubresourceRange) public ImageMemoryBarrier(Image image, ImageLayout oldLayout, ImageLayout newLayout, AccessFlags sourceAccesMask, AccessFlags destinationAccessMask, uint sourceQueueFamilyIndex, uint destinationQueueFamilyIndex, ImageSubresourceRange subresourceRange) Parameters image Image oldLayout ImageLayout newLayout ImageLayout sourceAccesMask AccessFlags destinationAccessMask AccessFlags sourceQueueFamilyIndex uint destinationQueueFamilyIndex uint subresourceRange ImageSubresourceRange Fields DestinationAccessMask public AccessFlags DestinationAccessMask Field Value AccessFlags DestinationQueueFamilyIndex public uint DestinationQueueFamilyIndex Field Value uint Image public Image Image Field Value Image NewLayout public ImageLayout NewLayout Field Value ImageLayout Next public nint Next Field Value nint OldLayout public ImageLayout OldLayout Field Value ImageLayout SourceAccessMask public AccessFlags SourceAccessMask Field Value AccessFlags SourceQueueFamilyIndex public uint SourceQueueFamilyIndex Field Value uint StructureType public StructureType StructureType Field Value StructureType SubresourceRange public ImageSubresourceRange SubresourceRange Field Value ImageSubresourceRange"
  },
  "api/SharpVulkan.ImageResolve.html": {
    "href": "api/SharpVulkan.ImageResolve.html",
    "title": "Struct ImageResolve | Citrus Engine",
    "keywords": "Struct ImageResolve Namespace SharpVulkan Assembly Lime.dll public struct ImageResolve Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DestinationOffset public Offset3D DestinationOffset Field Value Offset3D DestinationSubresource public ImageSubresourceLayers DestinationSubresource Field Value ImageSubresourceLayers Extent public Extent3D Extent Field Value Extent3D SourceOffset public Offset3D SourceOffset Field Value Offset3D SourceSubresource public ImageSubresourceLayers SourceSubresource Field Value ImageSubresourceLayers"
  },
  "api/SharpVulkan.ImageSubresource.html": {
    "href": "api/SharpVulkan.ImageSubresource.html",
    "title": "Struct ImageSubresource | Citrus Engine",
    "keywords": "Struct ImageSubresource Namespace SharpVulkan Assembly Lime.dll public struct ImageSubresource Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ImageSubresource(ImageAspectFlags, uint, uint) public ImageSubresource(ImageAspectFlags aspectMask, uint arrayLayer, uint mipLevel) Parameters aspectMask ImageAspectFlags arrayLayer uint mipLevel uint Fields ArrayLayer public uint ArrayLayer Field Value uint AspectMask public ImageAspectFlags AspectMask Field Value ImageAspectFlags MipLevel public uint MipLevel Field Value uint"
  },
  "api/SharpVulkan.ImageSubresourceLayers.html": {
    "href": "api/SharpVulkan.ImageSubresourceLayers.html",
    "title": "Struct ImageSubresourceLayers | Citrus Engine",
    "keywords": "Struct ImageSubresourceLayers Namespace SharpVulkan Assembly Lime.dll public struct ImageSubresourceLayers Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ImageSubresourceLayers(ImageAspectFlags, uint, uint, uint) public ImageSubresourceLayers(ImageAspectFlags aspectMask, uint baseArrayLayer, uint layerCount, uint mipLevel) Parameters aspectMask ImageAspectFlags baseArrayLayer uint layerCount uint mipLevel uint Fields AspectMask public ImageAspectFlags AspectMask Field Value ImageAspectFlags BaseArrayLayer public uint BaseArrayLayer Field Value uint LayerCount public uint LayerCount Field Value uint MipLevel public uint MipLevel Field Value uint"
  },
  "api/SharpVulkan.ImageSubresourceRange.html": {
    "href": "api/SharpVulkan.ImageSubresourceRange.html",
    "title": "Struct ImageSubresourceRange | Citrus Engine",
    "keywords": "Struct ImageSubresourceRange Namespace SharpVulkan Assembly Lime.dll public struct ImageSubresourceRange Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ImageSubresourceRange(ImageAspectFlags) public ImageSubresourceRange(ImageAspectFlags aspectMask) Parameters aspectMask ImageAspectFlags ImageSubresourceRange(ImageAspectFlags, uint, uint, uint, uint) public ImageSubresourceRange(ImageAspectFlags aspectMask, uint baseArrayLayer, uint layerCount, uint baseMipLevel, uint levelCount) Parameters aspectMask ImageAspectFlags baseArrayLayer uint layerCount uint baseMipLevel uint levelCount uint Fields AspectMask public ImageAspectFlags AspectMask Field Value ImageAspectFlags BaseArrayLayer public uint BaseArrayLayer Field Value uint BaseMipLevel public uint BaseMipLevel Field Value uint LayerCount public uint LayerCount Field Value uint LevelCount public uint LevelCount Field Value uint"
  },
  "api/SharpVulkan.ImageTiling.html": {
    "href": "api/SharpVulkan.ImageTiling.html",
    "title": "Enum ImageTiling | Citrus Engine",
    "keywords": "Enum ImageTiling Namespace SharpVulkan Assembly Lime.dll public enum ImageTiling Fields Linear = 1 Optimal = 0"
  },
  "api/SharpVulkan.ImageType.html": {
    "href": "api/SharpVulkan.ImageType.html",
    "title": "Enum ImageType | Citrus Engine",
    "keywords": "Enum ImageType Namespace SharpVulkan Assembly Lime.dll public enum ImageType Fields Image1D = 0 Image2D = 1 Image3D = 2"
  },
  "api/SharpVulkan.ImageUsageFlags.html": {
    "href": "api/SharpVulkan.ImageUsageFlags.html",
    "title": "Enum ImageUsageFlags | Citrus Engine",
    "keywords": "Enum ImageUsageFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ImageUsageFlags Fields ColorAttachment = 16 DepthStencilAttachment = 32 InputAttachment = 128 None = 0 Sampled = 4 Storage = 8 TransferDestination = 2 TransferSource = 1 TransientAttachment = 64"
  },
  "api/SharpVulkan.ImageView.html": {
    "href": "api/SharpVulkan.ImageView.html",
    "title": "Struct ImageView | Citrus Engine",
    "keywords": "Struct ImageView Namespace SharpVulkan Assembly Lime.dll public struct ImageView : IEquatable<ImageView> Implements IEquatable<ImageView> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly ImageView Null Field Value ImageView Methods Equals(ImageView) Indicates whether the current object is equal to another object of the same type. public bool Equals(ImageView other) Parameters other ImageView An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(ImageView, ImageView) public static bool operator ==(ImageView left, ImageView right) Parameters left ImageView right ImageView Returns bool operator !=(ImageView, ImageView) public static bool operator !=(ImageView left, ImageView right) Parameters left ImageView right ImageView Returns bool"
  },
  "api/SharpVulkan.ImageViewCreateFlags.html": {
    "href": "api/SharpVulkan.ImageViewCreateFlags.html",
    "title": "Enum ImageViewCreateFlags | Citrus Engine",
    "keywords": "Enum ImageViewCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ImageViewCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.ImageViewCreateInfo.html": {
    "href": "api/SharpVulkan.ImageViewCreateInfo.html",
    "title": "Struct ImageViewCreateInfo | Citrus Engine",
    "keywords": "Struct ImageViewCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct ImageViewCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Components public ComponentMapping Components Field Value ComponentMapping Flags public ImageViewCreateFlags Flags Field Value ImageViewCreateFlags Format public Format Format Field Value Format Image public Image Image Field Value Image Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType SubresourceRange public ImageSubresourceRange SubresourceRange Field Value ImageSubresourceRange ViewType public ImageViewType ViewType Field Value ImageViewType"
  },
  "api/SharpVulkan.ImageViewType.html": {
    "href": "api/SharpVulkan.ImageViewType.html",
    "title": "Enum ImageViewType | Citrus Engine",
    "keywords": "Enum ImageViewType Namespace SharpVulkan Assembly Lime.dll public enum ImageViewType Fields Image1D = 0 Image1DArray = 4 Image2D = 1 Image2DArray = 5 Image3D = 2 ImageCube = 3 ImageCubeArray = 6"
  },
  "api/SharpVulkan.ImportMemoryWin32HandleInfo.html": {
    "href": "api/SharpVulkan.ImportMemoryWin32HandleInfo.html",
    "title": "Struct ImportMemoryWin32HandleInfo | Citrus Engine",
    "keywords": "Struct ImportMemoryWin32HandleInfo Namespace SharpVulkan Assembly Lime.dll public struct ImportMemoryWin32HandleInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Handle public int Handle Field Value int HandleType public uint HandleType Field Value uint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.IndexType.html": {
    "href": "api/SharpVulkan.IndexType.html",
    "title": "Enum IndexType | Citrus Engine",
    "keywords": "Enum IndexType Namespace SharpVulkan Assembly Lime.dll public enum IndexType Fields UInt16 = 0 UInt32 = 1"
  },
  "api/SharpVulkan.IndirectCommandsLayout.html": {
    "href": "api/SharpVulkan.IndirectCommandsLayout.html",
    "title": "Struct IndirectCommandsLayout | Citrus Engine",
    "keywords": "Struct IndirectCommandsLayout Namespace SharpVulkan Assembly Lime.dll public struct IndirectCommandsLayout : IEquatable<IndirectCommandsLayout> Implements IEquatable<IndirectCommandsLayout> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly IndirectCommandsLayout Null Field Value IndirectCommandsLayout Methods Equals(IndirectCommandsLayout) Indicates whether the current object is equal to another object of the same type. public bool Equals(IndirectCommandsLayout other) Parameters other IndirectCommandsLayout An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(IndirectCommandsLayout, IndirectCommandsLayout) public static bool operator ==(IndirectCommandsLayout left, IndirectCommandsLayout right) Parameters left IndirectCommandsLayout right IndirectCommandsLayout Returns bool operator !=(IndirectCommandsLayout, IndirectCommandsLayout) public static bool operator !=(IndirectCommandsLayout left, IndirectCommandsLayout right) Parameters left IndirectCommandsLayout right IndirectCommandsLayout Returns bool"
  },
  "api/SharpVulkan.IndirectCommandsLayoutCreateInfo.html": {
    "href": "api/SharpVulkan.IndirectCommandsLayoutCreateInfo.html",
    "title": "Struct IndirectCommandsLayoutCreateInfo | Citrus Engine",
    "keywords": "Struct IndirectCommandsLayoutCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct IndirectCommandsLayoutCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public uint Flags Field Value uint Next public nint Next Field Value nint PipelineBindPoint public PipelineBindPoint PipelineBindPoint Field Value PipelineBindPoint StructureType public StructureType StructureType Field Value StructureType TokenCount public uint TokenCount Field Value uint Tokens public nint Tokens Field Value nint"
  },
  "api/SharpVulkan.IndirectCommandsLayoutToken.html": {
    "href": "api/SharpVulkan.IndirectCommandsLayoutToken.html",
    "title": "Struct IndirectCommandsLayoutToken | Citrus Engine",
    "keywords": "Struct IndirectCommandsLayoutToken Namespace SharpVulkan Assembly Lime.dll public struct IndirectCommandsLayoutToken Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BindingUnit public uint BindingUnit Field Value uint Divisor public uint Divisor Field Value uint DynamicCount public uint DynamicCount Field Value uint TokenType public IndirectCommandsTokenType TokenType Field Value IndirectCommandsTokenType"
  },
  "api/SharpVulkan.IndirectCommandsLayoutUsageFlags.html": {
    "href": "api/SharpVulkan.IndirectCommandsLayoutUsageFlags.html",
    "title": "Enum IndirectCommandsLayoutUsageFlags | Citrus Engine",
    "keywords": "Enum IndirectCommandsLayoutUsageFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum IndirectCommandsLayoutUsageFlags Fields EmptyExecutions = 4 IndexedSequences = 8 None = 0 SparseSequences = 2 UnorderedSequences = 1"
  },
  "api/SharpVulkan.IndirectCommandsToken.html": {
    "href": "api/SharpVulkan.IndirectCommandsToken.html",
    "title": "Struct IndirectCommandsToken | Citrus Engine",
    "keywords": "Struct IndirectCommandsToken Namespace SharpVulkan Assembly Lime.dll public struct IndirectCommandsToken Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Buffer public Buffer Buffer Field Value Buffer Offset public ulong Offset Field Value ulong TokenType public IndirectCommandsTokenType TokenType Field Value IndirectCommandsTokenType"
  },
  "api/SharpVulkan.IndirectCommandsTokenType.html": {
    "href": "api/SharpVulkan.IndirectCommandsTokenType.html",
    "title": "Enum IndirectCommandsTokenType | Citrus Engine",
    "keywords": "Enum IndirectCommandsTokenType Namespace SharpVulkan Assembly Lime.dll public enum IndirectCommandsTokenType Fields DescriptorSet = 1 Dispatch = 7 Draw = 6 DrawIndexed = 5 IndexBuffer = 2 Pipeline = 0 PushConstant = 4 VertexBuffer = 3"
  },
  "api/SharpVulkan.Instance.html": {
    "href": "api/SharpVulkan.Instance.html",
    "title": "Struct Instance | Citrus Engine",
    "keywords": "Struct Instance Namespace SharpVulkan Assembly Lime.dll public struct Instance : IEquatable<Instance> Implements IEquatable<Instance> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Instance Null Field Value Instance Properties PhysicalDevices public PhysicalDevice[] PhysicalDevices { get; } Property Value PhysicalDevice[] Methods CreateAndroidSurface(ref AndroidSurfaceCreateInfo, AllocationCallbacks*) public Surface CreateAndroidSurface(ref AndroidSurfaceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo AndroidSurfaceCreateInfo allocator AllocationCallbacks* Returns Surface CreateDebugReportCallback(ref DebugReportCallbackCreateInfo, AllocationCallbacks*) public DebugReportCallback CreateDebugReportCallback(ref DebugReportCallbackCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo DebugReportCallbackCreateInfo allocator AllocationCallbacks* Returns DebugReportCallback CreateDisplayPlaneSurface(ref DisplaySurfaceCreateInfo, AllocationCallbacks*) public Surface CreateDisplayPlaneSurface(ref DisplaySurfaceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo DisplaySurfaceCreateInfo allocator AllocationCallbacks* Returns Surface CreateWin32Surface(Win32SurfaceCreateInfo, AllocationCallbacks*) public Surface CreateWin32Surface(Win32SurfaceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo Win32SurfaceCreateInfo allocator AllocationCallbacks* Returns Surface CreateXcbSurface(ref XcbSurfaceCreateInfo, AllocationCallbacks*) public Surface CreateXcbSurface(ref XcbSurfaceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo XcbSurfaceCreateInfo allocator AllocationCallbacks* Returns Surface CreateXlibSurface(ref XlibSurfaceCreateInfo, AllocationCallbacks*) public Surface CreateXlibSurface(ref XlibSurfaceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo XlibSurfaceCreateInfo allocator AllocationCallbacks* Returns Surface Destroy(AllocationCallbacks*) public void Destroy(AllocationCallbacks* allocator = null) Parameters allocator AllocationCallbacks* DestroyDebugReportCallback(DebugReportCallback, AllocationCallbacks*) public void DestroyDebugReportCallback(DebugReportCallback callback, AllocationCallbacks* allocator = null) Parameters callback DebugReportCallback allocator AllocationCallbacks* DestroySurface(Surface, AllocationCallbacks*) public void DestroySurface(Surface surface, AllocationCallbacks* allocator = null) Parameters surface Surface allocator AllocationCallbacks* Equals(Instance) Indicates whether the current object is equal to another object of the same type. public bool Equals(Instance other) Parameters other Instance An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. GetProcAddress(byte*) public nint GetProcAddress(byte* name) Parameters name byte* Returns nint ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Instance, Instance) public static bool operator ==(Instance left, Instance right) Parameters left Instance right Instance Returns bool operator !=(Instance, Instance) public static bool operator !=(Instance left, Instance right) Parameters left Instance right Instance Returns bool"
  },
  "api/SharpVulkan.InstanceCreateFlags.html": {
    "href": "api/SharpVulkan.InstanceCreateFlags.html",
    "title": "Enum InstanceCreateFlags | Citrus Engine",
    "keywords": "Enum InstanceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum InstanceCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.InstanceCreateInfo.html": {
    "href": "api/SharpVulkan.InstanceCreateInfo.html",
    "title": "Struct InstanceCreateInfo | Citrus Engine",
    "keywords": "Struct InstanceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct InstanceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ApplicationInfo public nint ApplicationInfo Field Value nint EnabledExtensionCount public uint EnabledExtensionCount Field Value uint EnabledExtensionNames public nint EnabledExtensionNames Field Value nint EnabledLayerCount public uint EnabledLayerCount Field Value uint EnabledLayerNames public nint EnabledLayerNames Field Value nint Flags public InstanceCreateFlags Flags Field Value InstanceCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.InternalAllocationType.html": {
    "href": "api/SharpVulkan.InternalAllocationType.html",
    "title": "Enum InternalAllocationType | Citrus Engine",
    "keywords": "Enum InternalAllocationType Namespace SharpVulkan Assembly Lime.dll public enum InternalAllocationType Fields Executable = 0"
  },
  "api/SharpVulkan.LayerProperties.DescriptionArray.html": {
    "href": "api/SharpVulkan.LayerProperties.DescriptionArray.html",
    "title": "Struct LayerProperties.DescriptionArray | Citrus Engine",
    "keywords": "Struct LayerProperties.DescriptionArray Namespace SharpVulkan Assembly Lime.dll public struct LayerProperties.DescriptionArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public byte Value0 Field Value byte Value1 public byte Value1 Field Value byte Value10 public byte Value10 Field Value byte Value100 public byte Value100 Field Value byte Value101 public byte Value101 Field Value byte Value102 public byte Value102 Field Value byte Value103 public byte Value103 Field Value byte Value104 public byte Value104 Field Value byte Value105 public byte Value105 Field Value byte Value106 public byte Value106 Field Value byte Value107 public byte Value107 Field Value byte Value108 public byte Value108 Field Value byte Value109 public byte Value109 Field Value byte Value11 public byte Value11 Field Value byte Value110 public byte Value110 Field Value byte Value111 public byte Value111 Field Value byte Value112 public byte Value112 Field Value byte Value113 public byte Value113 Field Value byte Value114 public byte Value114 Field Value byte Value115 public byte Value115 Field Value byte Value116 public byte Value116 Field Value byte Value117 public byte Value117 Field Value byte Value118 public byte Value118 Field Value byte Value119 public byte Value119 Field Value byte Value12 public byte Value12 Field Value byte Value120 public byte Value120 Field Value byte Value121 public byte Value121 Field Value byte Value122 public byte Value122 Field Value byte Value123 public byte Value123 Field Value byte Value124 public byte Value124 Field Value byte Value125 public byte Value125 Field Value byte Value126 public byte Value126 Field Value byte Value127 public byte Value127 Field Value byte Value128 public byte Value128 Field Value byte Value129 public byte Value129 Field Value byte Value13 public byte Value13 Field Value byte Value130 public byte Value130 Field Value byte Value131 public byte Value131 Field Value byte Value132 public byte Value132 Field Value byte Value133 public byte Value133 Field Value byte Value134 public byte Value134 Field Value byte Value135 public byte Value135 Field Value byte Value136 public byte Value136 Field Value byte Value137 public byte Value137 Field Value byte Value138 public byte Value138 Field Value byte Value139 public byte Value139 Field Value byte Value14 public byte Value14 Field Value byte Value140 public byte Value140 Field Value byte Value141 public byte Value141 Field Value byte Value142 public byte Value142 Field Value byte Value143 public byte Value143 Field Value byte Value144 public byte Value144 Field Value byte Value145 public byte Value145 Field Value byte Value146 public byte Value146 Field Value byte Value147 public byte Value147 Field Value byte Value148 public byte Value148 Field Value byte Value149 public byte Value149 Field Value byte Value15 public byte Value15 Field Value byte Value150 public byte Value150 Field Value byte Value151 public byte Value151 Field Value byte Value152 public byte Value152 Field Value byte Value153 public byte Value153 Field Value byte Value154 public byte Value154 Field Value byte Value155 public byte Value155 Field Value byte Value156 public byte Value156 Field Value byte Value157 public byte Value157 Field Value byte Value158 public byte Value158 Field Value byte Value159 public byte Value159 Field Value byte Value16 public byte Value16 Field Value byte Value160 public byte Value160 Field Value byte Value161 public byte Value161 Field Value byte Value162 public byte Value162 Field Value byte Value163 public byte Value163 Field Value byte Value164 public byte Value164 Field Value byte Value165 public byte Value165 Field Value byte Value166 public byte Value166 Field Value byte Value167 public byte Value167 Field Value byte Value168 public byte Value168 Field Value byte Value169 public byte Value169 Field Value byte Value17 public byte Value17 Field Value byte Value170 public byte Value170 Field Value byte Value171 public byte Value171 Field Value byte Value172 public byte Value172 Field Value byte Value173 public byte Value173 Field Value byte Value174 public byte Value174 Field Value byte Value175 public byte Value175 Field Value byte Value176 public byte Value176 Field Value byte Value177 public byte Value177 Field Value byte Value178 public byte Value178 Field Value byte Value179 public byte Value179 Field Value byte Value18 public byte Value18 Field Value byte Value180 public byte Value180 Field Value byte Value181 public byte Value181 Field Value byte Value182 public byte Value182 Field Value byte Value183 public byte Value183 Field Value byte Value184 public byte Value184 Field Value byte Value185 public byte Value185 Field Value byte Value186 public byte Value186 Field Value byte Value187 public byte Value187 Field Value byte Value188 public byte Value188 Field Value byte Value189 public byte Value189 Field Value byte Value19 public byte Value19 Field Value byte Value190 public byte Value190 Field Value byte Value191 public byte Value191 Field Value byte Value192 public byte Value192 Field Value byte Value193 public byte Value193 Field Value byte Value194 public byte Value194 Field Value byte Value195 public byte Value195 Field Value byte Value196 public byte Value196 Field Value byte Value197 public byte Value197 Field Value byte Value198 public byte Value198 Field Value byte Value199 public byte Value199 Field Value byte Value2 public byte Value2 Field Value byte Value20 public byte Value20 Field Value byte Value200 public byte Value200 Field Value byte Value201 public byte Value201 Field Value byte Value202 public byte Value202 Field Value byte Value203 public byte Value203 Field Value byte Value204 public byte Value204 Field Value byte Value205 public byte Value205 Field Value byte Value206 public byte Value206 Field Value byte Value207 public byte Value207 Field Value byte Value208 public byte Value208 Field Value byte Value209 public byte Value209 Field Value byte Value21 public byte Value21 Field Value byte Value210 public byte Value210 Field Value byte Value211 public byte Value211 Field Value byte Value212 public byte Value212 Field Value byte Value213 public byte Value213 Field Value byte Value214 public byte Value214 Field Value byte Value215 public byte Value215 Field Value byte Value216 public byte Value216 Field Value byte Value217 public byte Value217 Field Value byte Value218 public byte Value218 Field Value byte Value219 public byte Value219 Field Value byte Value22 public byte Value22 Field Value byte Value220 public byte Value220 Field Value byte Value221 public byte Value221 Field Value byte Value222 public byte Value222 Field Value byte Value223 public byte Value223 Field Value byte Value224 public byte Value224 Field Value byte Value225 public byte Value225 Field Value byte Value226 public byte Value226 Field Value byte Value227 public byte Value227 Field Value byte Value228 public byte Value228 Field Value byte Value229 public byte Value229 Field Value byte Value23 public byte Value23 Field Value byte Value230 public byte Value230 Field Value byte Value231 public byte Value231 Field Value byte Value232 public byte Value232 Field Value byte Value233 public byte Value233 Field Value byte Value234 public byte Value234 Field Value byte Value235 public byte Value235 Field Value byte Value236 public byte Value236 Field Value byte Value237 public byte Value237 Field Value byte Value238 public byte Value238 Field Value byte Value239 public byte Value239 Field Value byte Value24 public byte Value24 Field Value byte Value240 public byte Value240 Field Value byte Value241 public byte Value241 Field Value byte Value242 public byte Value242 Field Value byte Value243 public byte Value243 Field Value byte Value244 public byte Value244 Field Value byte Value245 public byte Value245 Field Value byte Value246 public byte Value246 Field Value byte Value247 public byte Value247 Field Value byte Value248 public byte Value248 Field Value byte Value249 public byte Value249 Field Value byte Value25 public byte Value25 Field Value byte Value250 public byte Value250 Field Value byte Value251 public byte Value251 Field Value byte Value252 public byte Value252 Field Value byte Value253 public byte Value253 Field Value byte Value254 public byte Value254 Field Value byte Value255 public byte Value255 Field Value byte Value26 public byte Value26 Field Value byte Value27 public byte Value27 Field Value byte Value28 public byte Value28 Field Value byte Value29 public byte Value29 Field Value byte Value3 public byte Value3 Field Value byte Value30 public byte Value30 Field Value byte Value31 public byte Value31 Field Value byte Value32 public byte Value32 Field Value byte Value33 public byte Value33 Field Value byte Value34 public byte Value34 Field Value byte Value35 public byte Value35 Field Value byte Value36 public byte Value36 Field Value byte Value37 public byte Value37 Field Value byte Value38 public byte Value38 Field Value byte Value39 public byte Value39 Field Value byte Value4 public byte Value4 Field Value byte Value40 public byte Value40 Field Value byte Value41 public byte Value41 Field Value byte Value42 public byte Value42 Field Value byte Value43 public byte Value43 Field Value byte Value44 public byte Value44 Field Value byte Value45 public byte Value45 Field Value byte Value46 public byte Value46 Field Value byte Value47 public byte Value47 Field Value byte Value48 public byte Value48 Field Value byte Value49 public byte Value49 Field Value byte Value5 public byte Value5 Field Value byte Value50 public byte Value50 Field Value byte Value51 public byte Value51 Field Value byte Value52 public byte Value52 Field Value byte Value53 public byte Value53 Field Value byte Value54 public byte Value54 Field Value byte Value55 public byte Value55 Field Value byte Value56 public byte Value56 Field Value byte Value57 public byte Value57 Field Value byte Value58 public byte Value58 Field Value byte Value59 public byte Value59 Field Value byte Value6 public byte Value6 Field Value byte Value60 public byte Value60 Field Value byte Value61 public byte Value61 Field Value byte Value62 public byte Value62 Field Value byte Value63 public byte Value63 Field Value byte Value64 public byte Value64 Field Value byte Value65 public byte Value65 Field Value byte Value66 public byte Value66 Field Value byte Value67 public byte Value67 Field Value byte Value68 public byte Value68 Field Value byte Value69 public byte Value69 Field Value byte Value7 public byte Value7 Field Value byte Value70 public byte Value70 Field Value byte Value71 public byte Value71 Field Value byte Value72 public byte Value72 Field Value byte Value73 public byte Value73 Field Value byte Value74 public byte Value74 Field Value byte Value75 public byte Value75 Field Value byte Value76 public byte Value76 Field Value byte Value77 public byte Value77 Field Value byte Value78 public byte Value78 Field Value byte Value79 public byte Value79 Field Value byte Value8 public byte Value8 Field Value byte Value80 public byte Value80 Field Value byte Value81 public byte Value81 Field Value byte Value82 public byte Value82 Field Value byte Value83 public byte Value83 Field Value byte Value84 public byte Value84 Field Value byte Value85 public byte Value85 Field Value byte Value86 public byte Value86 Field Value byte Value87 public byte Value87 Field Value byte Value88 public byte Value88 Field Value byte Value89 public byte Value89 Field Value byte Value9 public byte Value9 Field Value byte Value90 public byte Value90 Field Value byte Value91 public byte Value91 Field Value byte Value92 public byte Value92 Field Value byte Value93 public byte Value93 Field Value byte Value94 public byte Value94 Field Value byte Value95 public byte Value95 Field Value byte Value96 public byte Value96 Field Value byte Value97 public byte Value97 Field Value byte Value98 public byte Value98 Field Value byte Value99 public byte Value99 Field Value byte"
  },
  "api/SharpVulkan.LayerProperties.LayerNameArray.html": {
    "href": "api/SharpVulkan.LayerProperties.LayerNameArray.html",
    "title": "Struct LayerProperties.LayerNameArray | Citrus Engine",
    "keywords": "Struct LayerProperties.LayerNameArray Namespace SharpVulkan Assembly Lime.dll public struct LayerProperties.LayerNameArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public byte Value0 Field Value byte Value1 public byte Value1 Field Value byte Value10 public byte Value10 Field Value byte Value100 public byte Value100 Field Value byte Value101 public byte Value101 Field Value byte Value102 public byte Value102 Field Value byte Value103 public byte Value103 Field Value byte Value104 public byte Value104 Field Value byte Value105 public byte Value105 Field Value byte Value106 public byte Value106 Field Value byte Value107 public byte Value107 Field Value byte Value108 public byte Value108 Field Value byte Value109 public byte Value109 Field Value byte Value11 public byte Value11 Field Value byte Value110 public byte Value110 Field Value byte Value111 public byte Value111 Field Value byte Value112 public byte Value112 Field Value byte Value113 public byte Value113 Field Value byte Value114 public byte Value114 Field Value byte Value115 public byte Value115 Field Value byte Value116 public byte Value116 Field Value byte Value117 public byte Value117 Field Value byte Value118 public byte Value118 Field Value byte Value119 public byte Value119 Field Value byte Value12 public byte Value12 Field Value byte Value120 public byte Value120 Field Value byte Value121 public byte Value121 Field Value byte Value122 public byte Value122 Field Value byte Value123 public byte Value123 Field Value byte Value124 public byte Value124 Field Value byte Value125 public byte Value125 Field Value byte Value126 public byte Value126 Field Value byte Value127 public byte Value127 Field Value byte Value128 public byte Value128 Field Value byte Value129 public byte Value129 Field Value byte Value13 public byte Value13 Field Value byte Value130 public byte Value130 Field Value byte Value131 public byte Value131 Field Value byte Value132 public byte Value132 Field Value byte Value133 public byte Value133 Field Value byte Value134 public byte Value134 Field Value byte Value135 public byte Value135 Field Value byte Value136 public byte Value136 Field Value byte Value137 public byte Value137 Field Value byte Value138 public byte Value138 Field Value byte Value139 public byte Value139 Field Value byte Value14 public byte Value14 Field Value byte Value140 public byte Value140 Field Value byte Value141 public byte Value141 Field Value byte Value142 public byte Value142 Field Value byte Value143 public byte Value143 Field Value byte Value144 public byte Value144 Field Value byte Value145 public byte Value145 Field Value byte Value146 public byte Value146 Field Value byte Value147 public byte Value147 Field Value byte Value148 public byte Value148 Field Value byte Value149 public byte Value149 Field Value byte Value15 public byte Value15 Field Value byte Value150 public byte Value150 Field Value byte Value151 public byte Value151 Field Value byte Value152 public byte Value152 Field Value byte Value153 public byte Value153 Field Value byte Value154 public byte Value154 Field Value byte Value155 public byte Value155 Field Value byte Value156 public byte Value156 Field Value byte Value157 public byte Value157 Field Value byte Value158 public byte Value158 Field Value byte Value159 public byte Value159 Field Value byte Value16 public byte Value16 Field Value byte Value160 public byte Value160 Field Value byte Value161 public byte Value161 Field Value byte Value162 public byte Value162 Field Value byte Value163 public byte Value163 Field Value byte Value164 public byte Value164 Field Value byte Value165 public byte Value165 Field Value byte Value166 public byte Value166 Field Value byte Value167 public byte Value167 Field Value byte Value168 public byte Value168 Field Value byte Value169 public byte Value169 Field Value byte Value17 public byte Value17 Field Value byte Value170 public byte Value170 Field Value byte Value171 public byte Value171 Field Value byte Value172 public byte Value172 Field Value byte Value173 public byte Value173 Field Value byte Value174 public byte Value174 Field Value byte Value175 public byte Value175 Field Value byte Value176 public byte Value176 Field Value byte Value177 public byte Value177 Field Value byte Value178 public byte Value178 Field Value byte Value179 public byte Value179 Field Value byte Value18 public byte Value18 Field Value byte Value180 public byte Value180 Field Value byte Value181 public byte Value181 Field Value byte Value182 public byte Value182 Field Value byte Value183 public byte Value183 Field Value byte Value184 public byte Value184 Field Value byte Value185 public byte Value185 Field Value byte Value186 public byte Value186 Field Value byte Value187 public byte Value187 Field Value byte Value188 public byte Value188 Field Value byte Value189 public byte Value189 Field Value byte Value19 public byte Value19 Field Value byte Value190 public byte Value190 Field Value byte Value191 public byte Value191 Field Value byte Value192 public byte Value192 Field Value byte Value193 public byte Value193 Field Value byte Value194 public byte Value194 Field Value byte Value195 public byte Value195 Field Value byte Value196 public byte Value196 Field Value byte Value197 public byte Value197 Field Value byte Value198 public byte Value198 Field Value byte Value199 public byte Value199 Field Value byte Value2 public byte Value2 Field Value byte Value20 public byte Value20 Field Value byte Value200 public byte Value200 Field Value byte Value201 public byte Value201 Field Value byte Value202 public byte Value202 Field Value byte Value203 public byte Value203 Field Value byte Value204 public byte Value204 Field Value byte Value205 public byte Value205 Field Value byte Value206 public byte Value206 Field Value byte Value207 public byte Value207 Field Value byte Value208 public byte Value208 Field Value byte Value209 public byte Value209 Field Value byte Value21 public byte Value21 Field Value byte Value210 public byte Value210 Field Value byte Value211 public byte Value211 Field Value byte Value212 public byte Value212 Field Value byte Value213 public byte Value213 Field Value byte Value214 public byte Value214 Field Value byte Value215 public byte Value215 Field Value byte Value216 public byte Value216 Field Value byte Value217 public byte Value217 Field Value byte Value218 public byte Value218 Field Value byte Value219 public byte Value219 Field Value byte Value22 public byte Value22 Field Value byte Value220 public byte Value220 Field Value byte Value221 public byte Value221 Field Value byte Value222 public byte Value222 Field Value byte Value223 public byte Value223 Field Value byte Value224 public byte Value224 Field Value byte Value225 public byte Value225 Field Value byte Value226 public byte Value226 Field Value byte Value227 public byte Value227 Field Value byte Value228 public byte Value228 Field Value byte Value229 public byte Value229 Field Value byte Value23 public byte Value23 Field Value byte Value230 public byte Value230 Field Value byte Value231 public byte Value231 Field Value byte Value232 public byte Value232 Field Value byte Value233 public byte Value233 Field Value byte Value234 public byte Value234 Field Value byte Value235 public byte Value235 Field Value byte Value236 public byte Value236 Field Value byte Value237 public byte Value237 Field Value byte Value238 public byte Value238 Field Value byte Value239 public byte Value239 Field Value byte Value24 public byte Value24 Field Value byte Value240 public byte Value240 Field Value byte Value241 public byte Value241 Field Value byte Value242 public byte Value242 Field Value byte Value243 public byte Value243 Field Value byte Value244 public byte Value244 Field Value byte Value245 public byte Value245 Field Value byte Value246 public byte Value246 Field Value byte Value247 public byte Value247 Field Value byte Value248 public byte Value248 Field Value byte Value249 public byte Value249 Field Value byte Value25 public byte Value25 Field Value byte Value250 public byte Value250 Field Value byte Value251 public byte Value251 Field Value byte Value252 public byte Value252 Field Value byte Value253 public byte Value253 Field Value byte Value254 public byte Value254 Field Value byte Value255 public byte Value255 Field Value byte Value26 public byte Value26 Field Value byte Value27 public byte Value27 Field Value byte Value28 public byte Value28 Field Value byte Value29 public byte Value29 Field Value byte Value3 public byte Value3 Field Value byte Value30 public byte Value30 Field Value byte Value31 public byte Value31 Field Value byte Value32 public byte Value32 Field Value byte Value33 public byte Value33 Field Value byte Value34 public byte Value34 Field Value byte Value35 public byte Value35 Field Value byte Value36 public byte Value36 Field Value byte Value37 public byte Value37 Field Value byte Value38 public byte Value38 Field Value byte Value39 public byte Value39 Field Value byte Value4 public byte Value4 Field Value byte Value40 public byte Value40 Field Value byte Value41 public byte Value41 Field Value byte Value42 public byte Value42 Field Value byte Value43 public byte Value43 Field Value byte Value44 public byte Value44 Field Value byte Value45 public byte Value45 Field Value byte Value46 public byte Value46 Field Value byte Value47 public byte Value47 Field Value byte Value48 public byte Value48 Field Value byte Value49 public byte Value49 Field Value byte Value5 public byte Value5 Field Value byte Value50 public byte Value50 Field Value byte Value51 public byte Value51 Field Value byte Value52 public byte Value52 Field Value byte Value53 public byte Value53 Field Value byte Value54 public byte Value54 Field Value byte Value55 public byte Value55 Field Value byte Value56 public byte Value56 Field Value byte Value57 public byte Value57 Field Value byte Value58 public byte Value58 Field Value byte Value59 public byte Value59 Field Value byte Value6 public byte Value6 Field Value byte Value60 public byte Value60 Field Value byte Value61 public byte Value61 Field Value byte Value62 public byte Value62 Field Value byte Value63 public byte Value63 Field Value byte Value64 public byte Value64 Field Value byte Value65 public byte Value65 Field Value byte Value66 public byte Value66 Field Value byte Value67 public byte Value67 Field Value byte Value68 public byte Value68 Field Value byte Value69 public byte Value69 Field Value byte Value7 public byte Value7 Field Value byte Value70 public byte Value70 Field Value byte Value71 public byte Value71 Field Value byte Value72 public byte Value72 Field Value byte Value73 public byte Value73 Field Value byte Value74 public byte Value74 Field Value byte Value75 public byte Value75 Field Value byte Value76 public byte Value76 Field Value byte Value77 public byte Value77 Field Value byte Value78 public byte Value78 Field Value byte Value79 public byte Value79 Field Value byte Value8 public byte Value8 Field Value byte Value80 public byte Value80 Field Value byte Value81 public byte Value81 Field Value byte Value82 public byte Value82 Field Value byte Value83 public byte Value83 Field Value byte Value84 public byte Value84 Field Value byte Value85 public byte Value85 Field Value byte Value86 public byte Value86 Field Value byte Value87 public byte Value87 Field Value byte Value88 public byte Value88 Field Value byte Value89 public byte Value89 Field Value byte Value9 public byte Value9 Field Value byte Value90 public byte Value90 Field Value byte Value91 public byte Value91 Field Value byte Value92 public byte Value92 Field Value byte Value93 public byte Value93 Field Value byte Value94 public byte Value94 Field Value byte Value95 public byte Value95 Field Value byte Value96 public byte Value96 Field Value byte Value97 public byte Value97 Field Value byte Value98 public byte Value98 Field Value byte Value99 public byte Value99 Field Value byte"
  },
  "api/SharpVulkan.LayerProperties.html": {
    "href": "api/SharpVulkan.LayerProperties.html",
    "title": "Struct LayerProperties | Citrus Engine",
    "keywords": "Struct LayerProperties Namespace SharpVulkan Assembly Lime.dll public struct LayerProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Description public LayerProperties.DescriptionArray Description Field Value LayerProperties.DescriptionArray ImplementationVersion public uint ImplementationVersion Field Value uint LayerName public LayerProperties.LayerNameArray LayerName Field Value LayerProperties.LayerNameArray SpecVersion public uint SpecVersion Field Value uint"
  },
  "api/SharpVulkan.LogicOperation.html": {
    "href": "api/SharpVulkan.LogicOperation.html",
    "title": "Enum LogicOperation | Citrus Engine",
    "keywords": "Enum LogicOperation Namespace SharpVulkan Assembly Lime.dll public enum LogicOperation Fields And = 1 AndInverted = 4 AndReverse = 2 Clear = 0 Copy = 3 CopyInverted = 12 Equivalent = 9 Invert = 10 Nand = 14 NoOp = 5 Nor = 8 Or = 7 OrInverted = 13 OrReverse = 11 Set = 15 Xor = 6"
  },
  "api/SharpVulkan.MappedMemoryRange.html": {
    "href": "api/SharpVulkan.MappedMemoryRange.html",
    "title": "Struct MappedMemoryRange | Citrus Engine",
    "keywords": "Struct MappedMemoryRange Namespace SharpVulkan Assembly Lime.dll public struct MappedMemoryRange Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Memory public DeviceMemory Memory Field Value DeviceMemory Next public nint Next Field Value nint Offset public ulong Offset Field Value ulong Size public ulong Size Field Value ulong StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.MemoryAllocateInfo.html": {
    "href": "api/SharpVulkan.MemoryAllocateInfo.html",
    "title": "Struct MemoryAllocateInfo | Citrus Engine",
    "keywords": "Struct MemoryAllocateInfo Namespace SharpVulkan Assembly Lime.dll public struct MemoryAllocateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AllocationSize public ulong AllocationSize Field Value ulong MemoryTypeIndex public uint MemoryTypeIndex Field Value uint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.MemoryBarrier.html": {
    "href": "api/SharpVulkan.MemoryBarrier.html",
    "title": "Struct MemoryBarrier | Citrus Engine",
    "keywords": "Struct MemoryBarrier Namespace SharpVulkan Assembly Lime.dll public struct MemoryBarrier Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DestinationAccessMask public AccessFlags DestinationAccessMask Field Value AccessFlags Next public nint Next Field Value nint SourceAccessMask public AccessFlags SourceAccessMask Field Value AccessFlags StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.MemoryHeap.html": {
    "href": "api/SharpVulkan.MemoryHeap.html",
    "title": "Struct MemoryHeap | Citrus Engine",
    "keywords": "Struct MemoryHeap Namespace SharpVulkan Assembly Lime.dll public struct MemoryHeap Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public MemoryHeapFlags Flags Field Value MemoryHeapFlags Size public ulong Size Field Value ulong"
  },
  "api/SharpVulkan.MemoryHeapFlags.html": {
    "href": "api/SharpVulkan.MemoryHeapFlags.html",
    "title": "Enum MemoryHeapFlags | Citrus Engine",
    "keywords": "Enum MemoryHeapFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum MemoryHeapFlags Fields DeviceLocal = 1 None = 0"
  },
  "api/SharpVulkan.MemoryMapFlags.html": {
    "href": "api/SharpVulkan.MemoryMapFlags.html",
    "title": "Enum MemoryMapFlags | Citrus Engine",
    "keywords": "Enum MemoryMapFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum MemoryMapFlags Fields None = 0"
  },
  "api/SharpVulkan.MemoryPropertyFlags.html": {
    "href": "api/SharpVulkan.MemoryPropertyFlags.html",
    "title": "Enum MemoryPropertyFlags | Citrus Engine",
    "keywords": "Enum MemoryPropertyFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum MemoryPropertyFlags Fields DeviceLocal = 1 HostCached = 8 HostCoherent = 4 HostVisible = 2 LazilyAllocated = 16 None = 0"
  },
  "api/SharpVulkan.MemoryRequirements.html": {
    "href": "api/SharpVulkan.MemoryRequirements.html",
    "title": "Struct MemoryRequirements | Citrus Engine",
    "keywords": "Struct MemoryRequirements Namespace SharpVulkan Assembly Lime.dll public struct MemoryRequirements Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Alignment public ulong Alignment Field Value ulong MemoryTypeBits public uint MemoryTypeBits Field Value uint Size public ulong Size Field Value ulong"
  },
  "api/SharpVulkan.MemoryType.html": {
    "href": "api/SharpVulkan.MemoryType.html",
    "title": "Struct MemoryType | Citrus Engine",
    "keywords": "Struct MemoryType Namespace SharpVulkan Assembly Lime.dll public struct MemoryType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields HeapIndex public uint HeapIndex Field Value uint PropertyFlags public MemoryPropertyFlags PropertyFlags Field Value MemoryPropertyFlags"
  },
  "api/SharpVulkan.ObjectEntryType.html": {
    "href": "api/SharpVulkan.ObjectEntryType.html",
    "title": "Enum ObjectEntryType | Citrus Engine",
    "keywords": "Enum ObjectEntryType Namespace SharpVulkan Assembly Lime.dll public enum ObjectEntryType Fields DescriptorSet = 0 IndexBuffer = 2 Pipeline = 1 PushConstant = 4 VertexBuffer = 3"
  },
  "api/SharpVulkan.ObjectEntryUsageFlags.html": {
    "href": "api/SharpVulkan.ObjectEntryUsageFlags.html",
    "title": "Enum ObjectEntryUsageFlags | Citrus Engine",
    "keywords": "Enum ObjectEntryUsageFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ObjectEntryUsageFlags Fields Compute = 2 Graphics = 1 None = 0"
  },
  "api/SharpVulkan.ObjectTable.html": {
    "href": "api/SharpVulkan.ObjectTable.html",
    "title": "Struct ObjectTable | Citrus Engine",
    "keywords": "Struct ObjectTable Namespace SharpVulkan Assembly Lime.dll public struct ObjectTable : IEquatable<ObjectTable> Implements IEquatable<ObjectTable> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly ObjectTable Null Field Value ObjectTable Methods Equals(ObjectTable) Indicates whether the current object is equal to another object of the same type. public bool Equals(ObjectTable other) Parameters other ObjectTable An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(ObjectTable, ObjectTable) public static bool operator ==(ObjectTable left, ObjectTable right) Parameters left ObjectTable right ObjectTable Returns bool operator !=(ObjectTable, ObjectTable) public static bool operator !=(ObjectTable left, ObjectTable right) Parameters left ObjectTable right ObjectTable Returns bool"
  },
  "api/SharpVulkan.ObjectTableCreateInfo.html": {
    "href": "api/SharpVulkan.ObjectTableCreateInfo.html",
    "title": "Struct ObjectTableCreateInfo | Citrus Engine",
    "keywords": "Struct ObjectTableCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct ObjectTableCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MaxPipelineLayouts public uint MaxPipelineLayouts Field Value uint MaxSampledImagesPerDescriptor public uint MaxSampledImagesPerDescriptor Field Value uint MaxStorageBuffersPerDescriptor public uint MaxStorageBuffersPerDescriptor Field Value uint MaxStorageImagesPerDescriptor public uint MaxStorageImagesPerDescriptor Field Value uint MaxUniformBuffersPerDescriptor public uint MaxUniformBuffersPerDescriptor Field Value uint Next public nint Next Field Value nint ObjectCount public uint ObjectCount Field Value uint ObjectEntryCounts public nint ObjectEntryCounts Field Value nint ObjectEntryTypes public nint ObjectEntryTypes Field Value nint ObjectEntryUsageFlags public nint ObjectEntryUsageFlags Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ObjectTableDescriptorSetEntry.html": {
    "href": "api/SharpVulkan.ObjectTableDescriptorSetEntry.html",
    "title": "Struct ObjectTableDescriptorSetEntry | Citrus Engine",
    "keywords": "Struct ObjectTableDescriptorSetEntry Namespace SharpVulkan Assembly Lime.dll public struct ObjectTableDescriptorSetEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DescriptorSet public DescriptorSet DescriptorSet Field Value DescriptorSet Flags public uint Flags Field Value uint PipelineLayout public PipelineLayout PipelineLayout Field Value PipelineLayout Type public ObjectEntryType Type Field Value ObjectEntryType"
  },
  "api/SharpVulkan.ObjectTableEntry.html": {
    "href": "api/SharpVulkan.ObjectTableEntry.html",
    "title": "Struct ObjectTableEntry | Citrus Engine",
    "keywords": "Struct ObjectTableEntry Namespace SharpVulkan Assembly Lime.dll public struct ObjectTableEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public uint Flags Field Value uint Type public ObjectEntryType Type Field Value ObjectEntryType"
  },
  "api/SharpVulkan.ObjectTableIndexBufferEntry.html": {
    "href": "api/SharpVulkan.ObjectTableIndexBufferEntry.html",
    "title": "Struct ObjectTableIndexBufferEntry | Citrus Engine",
    "keywords": "Struct ObjectTableIndexBufferEntry Namespace SharpVulkan Assembly Lime.dll public struct ObjectTableIndexBufferEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Buffer public Buffer Buffer Field Value Buffer Flags public uint Flags Field Value uint IndexType public IndexType IndexType Field Value IndexType Type public ObjectEntryType Type Field Value ObjectEntryType"
  },
  "api/SharpVulkan.ObjectTablePipelineEntry.html": {
    "href": "api/SharpVulkan.ObjectTablePipelineEntry.html",
    "title": "Struct ObjectTablePipelineEntry | Citrus Engine",
    "keywords": "Struct ObjectTablePipelineEntry Namespace SharpVulkan Assembly Lime.dll public struct ObjectTablePipelineEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public uint Flags Field Value uint Pipeline public Pipeline Pipeline Field Value Pipeline Type public ObjectEntryType Type Field Value ObjectEntryType"
  },
  "api/SharpVulkan.ObjectTablePushConstantEntry.html": {
    "href": "api/SharpVulkan.ObjectTablePushConstantEntry.html",
    "title": "Struct ObjectTablePushConstantEntry | Citrus Engine",
    "keywords": "Struct ObjectTablePushConstantEntry Namespace SharpVulkan Assembly Lime.dll public struct ObjectTablePushConstantEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public uint Flags Field Value uint PipelineLayout public PipelineLayout PipelineLayout Field Value PipelineLayout StageFlags public ShaderStageFlags StageFlags Field Value ShaderStageFlags Type public ObjectEntryType Type Field Value ObjectEntryType"
  },
  "api/SharpVulkan.ObjectTableVertexBufferEntry.html": {
    "href": "api/SharpVulkan.ObjectTableVertexBufferEntry.html",
    "title": "Struct ObjectTableVertexBufferEntry | Citrus Engine",
    "keywords": "Struct ObjectTableVertexBufferEntry Namespace SharpVulkan Assembly Lime.dll public struct ObjectTableVertexBufferEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Buffer public Buffer Buffer Field Value Buffer Flags public uint Flags Field Value uint Type public ObjectEntryType Type Field Value ObjectEntryType"
  },
  "api/SharpVulkan.Offset2D.html": {
    "href": "api/SharpVulkan.Offset2D.html",
    "title": "Struct Offset2D | Citrus Engine",
    "keywords": "Struct Offset2D Namespace SharpVulkan Assembly Lime.dll public struct Offset2D Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Offset2D(int, int) public Offset2D(int x, int y) Parameters x int y int Fields X public int X Field Value int Y public int Y Field Value int"
  },
  "api/SharpVulkan.Offset3D.html": {
    "href": "api/SharpVulkan.Offset3D.html",
    "title": "Struct Offset3D | Citrus Engine",
    "keywords": "Struct Offset3D Namespace SharpVulkan Assembly Lime.dll public struct Offset3D Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Offset3D(int, int, int) public Offset3D(int x, int y, int z) Parameters x int y int z int Fields X public int X Field Value int Y public int Y Field Value int Z public int Z Field Value int"
  },
  "api/SharpVulkan.PhysicalDevice.html": {
    "href": "api/SharpVulkan.PhysicalDevice.html",
    "title": "Struct PhysicalDevice | Citrus Engine",
    "keywords": "Struct PhysicalDevice Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDevice : IEquatable<PhysicalDevice> Implements IEquatable<PhysicalDevice> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly PhysicalDevice Null Field Value PhysicalDevice Properties DeviceLayerProperties public LayerProperties[] DeviceLayerProperties { get; } Property Value LayerProperties[] DisplayPlaneProperties public DisplayPlaneProperties[] DisplayPlaneProperties { get; } Property Value DisplayPlaneProperties[] DisplayProperties public DisplayProperties[] DisplayProperties { get; } Property Value DisplayProperties[] QueueFamilyProperties public QueueFamilyProperties[] QueueFamilyProperties { get; } Property Value QueueFamilyProperties[] Methods CreateDevice(ref DeviceCreateInfo, AllocationCallbacks*) public Device CreateDevice(ref DeviceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo DeviceCreateInfo allocator AllocationCallbacks* Returns Device CreateDisplayMode(Display, ref DisplayModeCreateInfo, AllocationCallbacks*) public DisplayMode CreateDisplayMode(Display display, ref DisplayModeCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters display Display createInfo DisplayModeCreateInfo allocator AllocationCallbacks* Returns DisplayMode Equals(PhysicalDevice) Indicates whether the current object is equal to another object of the same type. public bool Equals(PhysicalDevice other) Parameters other PhysicalDevice An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetDeviceExtensionProperties(string) public ExtensionProperties[] GetDeviceExtensionProperties(string layerName = null) Parameters layerName string Returns ExtensionProperties[] GetDisplayModeProperties(Display) public DisplayModeProperties[] GetDisplayModeProperties(Display display) Parameters display Display Returns DisplayModeProperties[] GetDisplayPlaneCapabilities(DisplayMode, uint, out DisplayPlaneCapabilities) public void GetDisplayPlaneCapabilities(DisplayMode mode, uint planeIndex, out DisplayPlaneCapabilities capabilities) Parameters mode DisplayMode planeIndex uint capabilities DisplayPlaneCapabilities GetDisplayPlaneSupportedDisplays(uint) public Display[] GetDisplayPlaneSupportedDisplays(uint planeIndex) Parameters planeIndex uint Returns Display[] GetExternalImageFormatProperties(Format, ImageType, ImageTiling, ImageUsageFlags, ImageCreateFlags, uint, out ExternalImageFormatProperties) public void GetExternalImageFormatProperties(Format format, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags, uint externalHandleType, out ExternalImageFormatProperties externalImageFormatProperties) Parameters format Format type ImageType tiling ImageTiling usage ImageUsageFlags flags ImageCreateFlags externalHandleType uint externalImageFormatProperties ExternalImageFormatProperties GetFeatures(out PhysicalDeviceFeatures) public void GetFeatures(out PhysicalDeviceFeatures features) Parameters features PhysicalDeviceFeatures GetFeatures2(out PhysicalDeviceFeatures2) public void GetFeatures2(out PhysicalDeviceFeatures2 features) Parameters features PhysicalDeviceFeatures2 GetFormatProperties(Format, out FormatProperties) public void GetFormatProperties(Format format, out FormatProperties formatProperties) Parameters format Format formatProperties FormatProperties GetFormatProperties2(Format, out FormatProperties2) public void GetFormatProperties2(Format format, out FormatProperties2 formatProperties) Parameters format Format formatProperties FormatProperties2 GetGeneratedCommandsProperties(ref DeviceGeneratedCommandsFeatures, out DeviceGeneratedCommandsLimits) public void GetGeneratedCommandsProperties(ref DeviceGeneratedCommandsFeatures features, out DeviceGeneratedCommandsLimits limits) Parameters features DeviceGeneratedCommandsFeatures limits DeviceGeneratedCommandsLimits GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. GetImageFormatProperties(Format, ImageType, ImageTiling, ImageUsageFlags, ImageCreateFlags, out ImageFormatProperties) public void GetImageFormatProperties(Format format, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags, out ImageFormatProperties imageFormatProperties) Parameters format Format type ImageType tiling ImageTiling usage ImageUsageFlags flags ImageCreateFlags imageFormatProperties ImageFormatProperties GetImageFormatProperties2(ref PhysicalDeviceImageFormatInfo2, out ImageFormatProperties2) public void GetImageFormatProperties2(ref PhysicalDeviceImageFormatInfo2 imageFormatInfo, out ImageFormatProperties2 imageFormatProperties) Parameters imageFormatInfo PhysicalDeviceImageFormatInfo2 imageFormatProperties ImageFormatProperties2 GetMemoryProperties(out PhysicalDeviceMemoryProperties) public void GetMemoryProperties(out PhysicalDeviceMemoryProperties memoryProperties) Parameters memoryProperties PhysicalDeviceMemoryProperties GetMemoryProperties2(out PhysicalDeviceMemoryProperties2) public void GetMemoryProperties2(out PhysicalDeviceMemoryProperties2 memoryProperties) Parameters memoryProperties PhysicalDeviceMemoryProperties2 GetProperties(out PhysicalDeviceProperties) public void GetProperties(out PhysicalDeviceProperties properties) Parameters properties PhysicalDeviceProperties GetProperties2(out PhysicalDeviceProperties2) public void GetProperties2(out PhysicalDeviceProperties2 properties) Parameters properties PhysicalDeviceProperties2 GetSparseImageFormatProperties(Format, ImageType, SampleCountFlags, ImageUsageFlags, ImageTiling) public SparseImageFormatProperties[] GetSparseImageFormatProperties(Format format, ImageType type, SampleCountFlags samples, ImageUsageFlags usage, ImageTiling tiling) Parameters format Format type ImageType samples SampleCountFlags usage ImageUsageFlags tiling ImageTiling Returns SparseImageFormatProperties[] GetSurfaceCapabilities(Surface, out SurfaceCapabilities) public void GetSurfaceCapabilities(Surface surface, out SurfaceCapabilities surfaceCapabilities) Parameters surface Surface surfaceCapabilities SurfaceCapabilities GetSurfaceCapabilities2(Surface, out SurfaceCapabilities2) public void GetSurfaceCapabilities2(Surface surface, out SurfaceCapabilities2 surfaceCapabilities) Parameters surface Surface surfaceCapabilities SurfaceCapabilities2 GetSurfaceFormats(Surface) public SurfaceFormat[] GetSurfaceFormats(Surface surface) Parameters surface Surface Returns SurfaceFormat[] GetSurfacePresentModes(Surface) public PresentMode[] GetSurfacePresentModes(Surface surface) Parameters surface Surface Returns PresentMode[] GetSurfaceSupport(uint, Surface) public RawBool GetSurfaceSupport(uint queueFamilyIndex, Surface surface) Parameters queueFamilyIndex uint surface Surface Returns RawBool GetWin32PresentationSupport(uint) public RawBool GetWin32PresentationSupport(uint queueFamilyIndex) Parameters queueFamilyIndex uint Returns RawBool GetXcbPresentationSupport(uint, nint, uint) public RawBool GetXcbPresentationSupport(uint queueFamilyIndex, nint connection, uint visualid) Parameters queueFamilyIndex uint connection nint visualid uint Returns RawBool GetXlibPresentationSupport(uint, nint, uint) public RawBool GetXlibPresentationSupport(uint queueFamilyIndex, nint dpy, uint visualId) Parameters queueFamilyIndex uint dpy nint visualId uint Returns RawBool ReleaseDisplay(Display) public void ReleaseDisplay(Display display) Parameters display Display ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(PhysicalDevice, PhysicalDevice) public static bool operator ==(PhysicalDevice left, PhysicalDevice right) Parameters left PhysicalDevice right PhysicalDevice Returns bool operator !=(PhysicalDevice, PhysicalDevice) public static bool operator !=(PhysicalDevice left, PhysicalDevice right) Parameters left PhysicalDevice right PhysicalDevice Returns bool"
  },
  "api/SharpVulkan.PhysicalDeviceFeatures.html": {
    "href": "api/SharpVulkan.PhysicalDeviceFeatures.html",
    "title": "Struct PhysicalDeviceFeatures | Citrus Engine",
    "keywords": "Struct PhysicalDeviceFeatures Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceFeatures Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AlphaToOne public RawBool AlphaToOne Field Value RawBool DepthBiasClamp public RawBool DepthBiasClamp Field Value RawBool DepthBounds public RawBool DepthBounds Field Value RawBool DepthClamp public RawBool DepthClamp Field Value RawBool DrawIndirectFirstInstance public RawBool DrawIndirectFirstInstance Field Value RawBool DualSrcBlend public RawBool DualSrcBlend Field Value RawBool FillModeNonSolid public RawBool FillModeNonSolid Field Value RawBool FragmentStoresAndAtomics public RawBool FragmentStoresAndAtomics Field Value RawBool FullDrawIndexUInt32 public RawBool FullDrawIndexUInt32 Field Value RawBool GeometryShader public RawBool GeometryShader Field Value RawBool ImageCubeArray public RawBool ImageCubeArray Field Value RawBool IndependentBlend public RawBool IndependentBlend Field Value RawBool InheritedQueries public RawBool InheritedQueries Field Value RawBool LargePoints public RawBool LargePoints Field Value RawBool LogicOperation public RawBool LogicOperation Field Value RawBool MultiDrawIndirect public RawBool MultiDrawIndirect Field Value RawBool MultiViewport public RawBool MultiViewport Field Value RawBool OcclusionQueryPrecise public RawBool OcclusionQueryPrecise Field Value RawBool PipelineStatisticsQuery public RawBool PipelineStatisticsQuery Field Value RawBool RobustBufferAccess public RawBool RobustBufferAccess Field Value RawBool SampleRateShading public RawBool SampleRateShading Field Value RawBool SamplerAnisotropy public RawBool SamplerAnisotropy Field Value RawBool ShaderClipDistance public RawBool ShaderClipDistance Field Value RawBool ShaderCullDistance public RawBool ShaderCullDistance Field Value RawBool ShaderFloat64 public RawBool ShaderFloat64 Field Value RawBool ShaderImageGatherExtended public RawBool ShaderImageGatherExtended Field Value RawBool ShaderInt16 public RawBool ShaderInt16 Field Value RawBool ShaderInt64 public RawBool ShaderInt64 Field Value RawBool ShaderResourceMinLod public RawBool ShaderResourceMinLod Field Value RawBool ShaderResourceResidency public RawBool ShaderResourceResidency Field Value RawBool ShaderSampledImageArrayDynamicIndexing public RawBool ShaderSampledImageArrayDynamicIndexing Field Value RawBool ShaderStorageBufferArrayDynamicIndexing public RawBool ShaderStorageBufferArrayDynamicIndexing Field Value RawBool ShaderStorageImageArrayDynamicIndexing public RawBool ShaderStorageImageArrayDynamicIndexing Field Value RawBool ShaderStorageImageExtendedFormats public RawBool ShaderStorageImageExtendedFormats Field Value RawBool ShaderStorageImageMultisample public RawBool ShaderStorageImageMultisample Field Value RawBool ShaderStorageImageReadWithoutFormat public RawBool ShaderStorageImageReadWithoutFormat Field Value RawBool ShaderStorageImageWriteWithoutFormat public RawBool ShaderStorageImageWriteWithoutFormat Field Value RawBool ShaderTessellationAndGeometryPointSize public RawBool ShaderTessellationAndGeometryPointSize Field Value RawBool ShaderUniformBufferArrayDynamicIndexing public RawBool ShaderUniformBufferArrayDynamicIndexing Field Value RawBool SparseBinding public RawBool SparseBinding Field Value RawBool SparseResidency16Samples public RawBool SparseResidency16Samples Field Value RawBool SparseResidency2Samples public RawBool SparseResidency2Samples Field Value RawBool SparseResidency4Samples public RawBool SparseResidency4Samples Field Value RawBool SparseResidency8Samples public RawBool SparseResidency8Samples Field Value RawBool SparseResidencyAliased public RawBool SparseResidencyAliased Field Value RawBool SparseResidencyBuffer public RawBool SparseResidencyBuffer Field Value RawBool SparseResidencyImage2D public RawBool SparseResidencyImage2D Field Value RawBool SparseResidencyImage3D public RawBool SparseResidencyImage3D Field Value RawBool TessellationShader public RawBool TessellationShader Field Value RawBool TextureCompressionAstcLdr public RawBool TextureCompressionAstcLdr Field Value RawBool TextureCompressionBc public RawBool TextureCompressionBc Field Value RawBool TextureCompressionEtc2 public RawBool TextureCompressionEtc2 Field Value RawBool VariableMultisampleRate public RawBool VariableMultisampleRate Field Value RawBool VertexPipelineStoresAndAtomics public RawBool VertexPipelineStoresAndAtomics Field Value RawBool WideLines public RawBool WideLines Field Value RawBool"
  },
  "api/SharpVulkan.PhysicalDeviceFeatures2.html": {
    "href": "api/SharpVulkan.PhysicalDeviceFeatures2.html",
    "title": "Struct PhysicalDeviceFeatures2 | Citrus Engine",
    "keywords": "Struct PhysicalDeviceFeatures2 Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceFeatures2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Features public PhysicalDeviceFeatures Features Field Value PhysicalDeviceFeatures Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PhysicalDeviceImageFormatInfo2.html": {
    "href": "api/SharpVulkan.PhysicalDeviceImageFormatInfo2.html",
    "title": "Struct PhysicalDeviceImageFormatInfo2 | Citrus Engine",
    "keywords": "Struct PhysicalDeviceImageFormatInfo2 Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceImageFormatInfo2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public ImageCreateFlags Flags Field Value ImageCreateFlags Format public Format Format Field Value Format Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType Tiling public ImageTiling Tiling Field Value ImageTiling Type public ImageType Type Field Value ImageType Usage public ImageUsageFlags Usage Field Value ImageUsageFlags"
  },
  "api/SharpVulkan.PhysicalDeviceLimits.LineWidthRangeArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceLimits.LineWidthRangeArray.html",
    "title": "Struct PhysicalDeviceLimits.LineWidthRangeArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceLimits.LineWidthRangeArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceLimits.LineWidthRangeArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public float Value0 Field Value float Value1 public float Value1 Field Value float"
  },
  "api/SharpVulkan.PhysicalDeviceLimits.MaxComputeWorkGroupCountArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceLimits.MaxComputeWorkGroupCountArray.html",
    "title": "Struct PhysicalDeviceLimits.MaxComputeWorkGroupCountArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceLimits.MaxComputeWorkGroupCountArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceLimits.MaxComputeWorkGroupCountArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public uint Value0 Field Value uint Value1 public uint Value1 Field Value uint Value2 public uint Value2 Field Value uint"
  },
  "api/SharpVulkan.PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray.html",
    "title": "Struct PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public uint Value0 Field Value uint Value1 public uint Value1 Field Value uint Value2 public uint Value2 Field Value uint"
  },
  "api/SharpVulkan.PhysicalDeviceLimits.MaxViewportDimensionsArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceLimits.MaxViewportDimensionsArray.html",
    "title": "Struct PhysicalDeviceLimits.MaxViewportDimensionsArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceLimits.MaxViewportDimensionsArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceLimits.MaxViewportDimensionsArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public uint Value0 Field Value uint Value1 public uint Value1 Field Value uint"
  },
  "api/SharpVulkan.PhysicalDeviceLimits.PointSizeRangeArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceLimits.PointSizeRangeArray.html",
    "title": "Struct PhysicalDeviceLimits.PointSizeRangeArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceLimits.PointSizeRangeArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceLimits.PointSizeRangeArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public float Value0 Field Value float Value1 public float Value1 Field Value float"
  },
  "api/SharpVulkan.PhysicalDeviceLimits.ViewportBoundsRangeArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceLimits.ViewportBoundsRangeArray.html",
    "title": "Struct PhysicalDeviceLimits.ViewportBoundsRangeArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceLimits.ViewportBoundsRangeArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceLimits.ViewportBoundsRangeArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public float Value0 Field Value float Value1 public float Value1 Field Value float"
  },
  "api/SharpVulkan.PhysicalDeviceLimits.html": {
    "href": "api/SharpVulkan.PhysicalDeviceLimits.html",
    "title": "Struct PhysicalDeviceLimits | Citrus Engine",
    "keywords": "Struct PhysicalDeviceLimits Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceLimits Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BufferImageGranularity public ulong BufferImageGranularity Field Value ulong DiscreteQueuePriorities public uint DiscreteQueuePriorities Field Value uint FramebufferColorSampleCounts public SampleCountFlags FramebufferColorSampleCounts Field Value SampleCountFlags FramebufferDepthSampleCounts public SampleCountFlags FramebufferDepthSampleCounts Field Value SampleCountFlags FramebufferNoAttachmentsSampleCounts public SampleCountFlags FramebufferNoAttachmentsSampleCounts Field Value SampleCountFlags FramebufferStencilSampleCounts public SampleCountFlags FramebufferStencilSampleCounts Field Value SampleCountFlags LineWidthGranularity public float LineWidthGranularity Field Value float LineWidthRange public PhysicalDeviceLimits.LineWidthRangeArray LineWidthRange Field Value PhysicalDeviceLimits.LineWidthRangeArray MaxBoundDescriptorSets public uint MaxBoundDescriptorSets Field Value uint MaxClipDistances public uint MaxClipDistances Field Value uint MaxColorAttachments public uint MaxColorAttachments Field Value uint MaxCombinedClipAndCullDistances public uint MaxCombinedClipAndCullDistances Field Value uint MaxComputeSharedMemorySize public uint MaxComputeSharedMemorySize Field Value uint MaxComputeWorkGroupCount public PhysicalDeviceLimits.MaxComputeWorkGroupCountArray MaxComputeWorkGroupCount Field Value PhysicalDeviceLimits.MaxComputeWorkGroupCountArray MaxComputeWorkGroupInvocations public uint MaxComputeWorkGroupInvocations Field Value uint MaxComputeWorkGroupSize public PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray MaxComputeWorkGroupSize Field Value PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray MaxCullDistances public uint MaxCullDistances Field Value uint MaxDescriptorSetInputAttachments public uint MaxDescriptorSetInputAttachments Field Value uint MaxDescriptorSetSampledImages public uint MaxDescriptorSetSampledImages Field Value uint MaxDescriptorSetSamplers public uint MaxDescriptorSetSamplers Field Value uint MaxDescriptorSetStorageBuffers public uint MaxDescriptorSetStorageBuffers Field Value uint MaxDescriptorSetStorageBuffersDynamic public uint MaxDescriptorSetStorageBuffersDynamic Field Value uint MaxDescriptorSetStorageImages public uint MaxDescriptorSetStorageImages Field Value uint MaxDescriptorSetUniformBuffers public uint MaxDescriptorSetUniformBuffers Field Value uint MaxDescriptorSetUniformBuffersDynamic public uint MaxDescriptorSetUniformBuffersDynamic Field Value uint MaxDrawIndexedIndexValue public uint MaxDrawIndexedIndexValue Field Value uint MaxDrawIndirectCount public uint MaxDrawIndirectCount Field Value uint MaxFragmentCombinedOutputResources public uint MaxFragmentCombinedOutputResources Field Value uint MaxFragmentDualSrcAttachments public uint MaxFragmentDualSrcAttachments Field Value uint MaxFragmentInputComponents public uint MaxFragmentInputComponents Field Value uint MaxFragmentOutputAttachments public uint MaxFragmentOutputAttachments Field Value uint MaxFramebufferHeight public uint MaxFramebufferHeight Field Value uint MaxFramebufferLayers public uint MaxFramebufferLayers Field Value uint MaxFramebufferWidth public uint MaxFramebufferWidth Field Value uint MaxGeometryInputComponents public uint MaxGeometryInputComponents Field Value uint MaxGeometryOutputComponents public uint MaxGeometryOutputComponents Field Value uint MaxGeometryOutputVertices public uint MaxGeometryOutputVertices Field Value uint MaxGeometryShaderInvocations public uint MaxGeometryShaderInvocations Field Value uint MaxGeometryTotalOutputComponents public uint MaxGeometryTotalOutputComponents Field Value uint MaxImageArrayLayers public uint MaxImageArrayLayers Field Value uint MaxImageDimension1D public uint MaxImageDimension1D Field Value uint MaxImageDimension2D public uint MaxImageDimension2D Field Value uint MaxImageDimension3D public uint MaxImageDimension3D Field Value uint MaxImageDimensionCube public uint MaxImageDimensionCube Field Value uint MaxInterpolationOffset public float MaxInterpolationOffset Field Value float MaxMemoryAllocationCount public uint MaxMemoryAllocationCount Field Value uint MaxPerStageDescriptorInputAttachments public uint MaxPerStageDescriptorInputAttachments Field Value uint MaxPerStageDescriptorSampledImages public uint MaxPerStageDescriptorSampledImages Field Value uint MaxPerStageDescriptorSamplers public uint MaxPerStageDescriptorSamplers Field Value uint MaxPerStageDescriptorStorageBuffers public uint MaxPerStageDescriptorStorageBuffers Field Value uint MaxPerStageDescriptorStorageImages public uint MaxPerStageDescriptorStorageImages Field Value uint MaxPerStageDescriptorUniformBuffers public uint MaxPerStageDescriptorUniformBuffers Field Value uint MaxPerStageResources public uint MaxPerStageResources Field Value uint MaxPushConstantsSize public uint MaxPushConstantsSize Field Value uint MaxSampleMaskWords public uint MaxSampleMaskWords Field Value uint MaxSamplerAllocationCount public uint MaxSamplerAllocationCount Field Value uint MaxSamplerAnisotropy public float MaxSamplerAnisotropy Field Value float MaxSamplerLodBias public float MaxSamplerLodBias Field Value float MaxStorageBufferRange public uint MaxStorageBufferRange Field Value uint MaxTessellationControlPerPatchOutputComponents public uint MaxTessellationControlPerPatchOutputComponents Field Value uint MaxTessellationControlPerVertexInputComponents public uint MaxTessellationControlPerVertexInputComponents Field Value uint MaxTessellationControlPerVertexOutputComponents public uint MaxTessellationControlPerVertexOutputComponents Field Value uint MaxTessellationControlTotalOutputComponents public uint MaxTessellationControlTotalOutputComponents Field Value uint MaxTessellationEvaluationInputComponents public uint MaxTessellationEvaluationInputComponents Field Value uint MaxTessellationEvaluationOutputComponents public uint MaxTessellationEvaluationOutputComponents Field Value uint MaxTessellationGenerationLevel public uint MaxTessellationGenerationLevel Field Value uint MaxTessellationPatchSize public uint MaxTessellationPatchSize Field Value uint MaxTexelBufferElements public uint MaxTexelBufferElements Field Value uint MaxTexelGatherOffset public uint MaxTexelGatherOffset Field Value uint MaxTexelOffset public uint MaxTexelOffset Field Value uint MaxUniformBufferRange public uint MaxUniformBufferRange Field Value uint MaxVertexInputAttributeOffset public uint MaxVertexInputAttributeOffset Field Value uint MaxVertexInputAttributes public uint MaxVertexInputAttributes Field Value uint MaxVertexInputBindingStride public uint MaxVertexInputBindingStride Field Value uint MaxVertexInputBindings public uint MaxVertexInputBindings Field Value uint MaxVertexOutputComponents public uint MaxVertexOutputComponents Field Value uint MaxViewportDimensions public PhysicalDeviceLimits.MaxViewportDimensionsArray MaxViewportDimensions Field Value PhysicalDeviceLimits.MaxViewportDimensionsArray MaxViewports public uint MaxViewports Field Value uint MinInterpolationOffset public float MinInterpolationOffset Field Value float MinMemoryMapAlignment public PointerSize MinMemoryMapAlignment Field Value PointerSize MinStorageBufferOffsetAlignment public ulong MinStorageBufferOffsetAlignment Field Value ulong MinTexelBufferOffsetAlignment public ulong MinTexelBufferOffsetAlignment Field Value ulong MinTexelGatherOffset public int MinTexelGatherOffset Field Value int MinTexelOffset public int MinTexelOffset Field Value int MinUniformBufferOffsetAlignment public ulong MinUniformBufferOffsetAlignment Field Value ulong MipmapPrecisionBits public uint MipmapPrecisionBits Field Value uint NonCoherentAtomSize public ulong NonCoherentAtomSize Field Value ulong OptimalBufferCopyOffsetAlignment public ulong OptimalBufferCopyOffsetAlignment Field Value ulong OptimalBufferCopyRowPitchAlignment public ulong OptimalBufferCopyRowPitchAlignment Field Value ulong PointSizeGranularity public float PointSizeGranularity Field Value float PointSizeRange public PhysicalDeviceLimits.PointSizeRangeArray PointSizeRange Field Value PhysicalDeviceLimits.PointSizeRangeArray SampledImageColorSampleCounts public SampleCountFlags SampledImageColorSampleCounts Field Value SampleCountFlags SampledImageDepthSampleCounts public SampleCountFlags SampledImageDepthSampleCounts Field Value SampleCountFlags SampledImageIntegerSampleCounts public SampleCountFlags SampledImageIntegerSampleCounts Field Value SampleCountFlags SampledImageStencilSampleCounts public SampleCountFlags SampledImageStencilSampleCounts Field Value SampleCountFlags SparseAddressSpaceSize public ulong SparseAddressSpaceSize Field Value ulong StandardSampleLocations public RawBool StandardSampleLocations Field Value RawBool StorageImageSampleCounts public SampleCountFlags StorageImageSampleCounts Field Value SampleCountFlags StrictLines public RawBool StrictLines Field Value RawBool SubPixelInterpolationOffsetBits public uint SubPixelInterpolationOffsetBits Field Value uint SubPixelPrecisionBits public uint SubPixelPrecisionBits Field Value uint SubTexelPrecisionBits public uint SubTexelPrecisionBits Field Value uint TimestampComputeAndGraphics public RawBool TimestampComputeAndGraphics Field Value RawBool TimestampPeriod public float TimestampPeriod Field Value float ViewportBoundsRange public PhysicalDeviceLimits.ViewportBoundsRangeArray ViewportBoundsRange Field Value PhysicalDeviceLimits.ViewportBoundsRangeArray ViewportSubPixelBits public uint ViewportSubPixelBits Field Value uint"
  },
  "api/SharpVulkan.PhysicalDeviceMemoryProperties.MemoryHeapsArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceMemoryProperties.MemoryHeapsArray.html",
    "title": "Struct PhysicalDeviceMemoryProperties.MemoryHeapsArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceMemoryProperties.MemoryHeapsArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceMemoryProperties.MemoryHeapsArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public MemoryHeap Value0 Field Value MemoryHeap Value1 public MemoryHeap Value1 Field Value MemoryHeap Value10 public MemoryHeap Value10 Field Value MemoryHeap Value11 public MemoryHeap Value11 Field Value MemoryHeap Value12 public MemoryHeap Value12 Field Value MemoryHeap Value13 public MemoryHeap Value13 Field Value MemoryHeap Value14 public MemoryHeap Value14 Field Value MemoryHeap Value15 public MemoryHeap Value15 Field Value MemoryHeap Value2 public MemoryHeap Value2 Field Value MemoryHeap Value3 public MemoryHeap Value3 Field Value MemoryHeap Value4 public MemoryHeap Value4 Field Value MemoryHeap Value5 public MemoryHeap Value5 Field Value MemoryHeap Value6 public MemoryHeap Value6 Field Value MemoryHeap Value7 public MemoryHeap Value7 Field Value MemoryHeap Value8 public MemoryHeap Value8 Field Value MemoryHeap Value9 public MemoryHeap Value9 Field Value MemoryHeap"
  },
  "api/SharpVulkan.PhysicalDeviceMemoryProperties.MemoryTypesArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceMemoryProperties.MemoryTypesArray.html",
    "title": "Struct PhysicalDeviceMemoryProperties.MemoryTypesArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceMemoryProperties.MemoryTypesArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceMemoryProperties.MemoryTypesArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public MemoryType Value0 Field Value MemoryType Value1 public MemoryType Value1 Field Value MemoryType Value10 public MemoryType Value10 Field Value MemoryType Value11 public MemoryType Value11 Field Value MemoryType Value12 public MemoryType Value12 Field Value MemoryType Value13 public MemoryType Value13 Field Value MemoryType Value14 public MemoryType Value14 Field Value MemoryType Value15 public MemoryType Value15 Field Value MemoryType Value16 public MemoryType Value16 Field Value MemoryType Value17 public MemoryType Value17 Field Value MemoryType Value18 public MemoryType Value18 Field Value MemoryType Value19 public MemoryType Value19 Field Value MemoryType Value2 public MemoryType Value2 Field Value MemoryType Value20 public MemoryType Value20 Field Value MemoryType Value21 public MemoryType Value21 Field Value MemoryType Value22 public MemoryType Value22 Field Value MemoryType Value23 public MemoryType Value23 Field Value MemoryType Value24 public MemoryType Value24 Field Value MemoryType Value25 public MemoryType Value25 Field Value MemoryType Value26 public MemoryType Value26 Field Value MemoryType Value27 public MemoryType Value27 Field Value MemoryType Value28 public MemoryType Value28 Field Value MemoryType Value29 public MemoryType Value29 Field Value MemoryType Value3 public MemoryType Value3 Field Value MemoryType Value30 public MemoryType Value30 Field Value MemoryType Value31 public MemoryType Value31 Field Value MemoryType Value4 public MemoryType Value4 Field Value MemoryType Value5 public MemoryType Value5 Field Value MemoryType Value6 public MemoryType Value6 Field Value MemoryType Value7 public MemoryType Value7 Field Value MemoryType Value8 public MemoryType Value8 Field Value MemoryType Value9 public MemoryType Value9 Field Value MemoryType"
  },
  "api/SharpVulkan.PhysicalDeviceMemoryProperties.html": {
    "href": "api/SharpVulkan.PhysicalDeviceMemoryProperties.html",
    "title": "Struct PhysicalDeviceMemoryProperties | Citrus Engine",
    "keywords": "Struct PhysicalDeviceMemoryProperties Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceMemoryProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MemoryHeapCount public uint MemoryHeapCount Field Value uint MemoryHeaps public PhysicalDeviceMemoryProperties.MemoryHeapsArray MemoryHeaps Field Value PhysicalDeviceMemoryProperties.MemoryHeapsArray MemoryTypeCount public uint MemoryTypeCount Field Value uint MemoryTypes public PhysicalDeviceMemoryProperties.MemoryTypesArray MemoryTypes Field Value PhysicalDeviceMemoryProperties.MemoryTypesArray"
  },
  "api/SharpVulkan.PhysicalDeviceMemoryProperties2.html": {
    "href": "api/SharpVulkan.PhysicalDeviceMemoryProperties2.html",
    "title": "Struct PhysicalDeviceMemoryProperties2 | Citrus Engine",
    "keywords": "Struct PhysicalDeviceMemoryProperties2 Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceMemoryProperties2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MemoryProperties public PhysicalDeviceMemoryProperties MemoryProperties Field Value PhysicalDeviceMemoryProperties Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PhysicalDeviceProperties.DeviceNameArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceProperties.DeviceNameArray.html",
    "title": "Struct PhysicalDeviceProperties.DeviceNameArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceProperties.DeviceNameArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceProperties.DeviceNameArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public byte Value0 Field Value byte Value1 public byte Value1 Field Value byte Value10 public byte Value10 Field Value byte Value100 public byte Value100 Field Value byte Value101 public byte Value101 Field Value byte Value102 public byte Value102 Field Value byte Value103 public byte Value103 Field Value byte Value104 public byte Value104 Field Value byte Value105 public byte Value105 Field Value byte Value106 public byte Value106 Field Value byte Value107 public byte Value107 Field Value byte Value108 public byte Value108 Field Value byte Value109 public byte Value109 Field Value byte Value11 public byte Value11 Field Value byte Value110 public byte Value110 Field Value byte Value111 public byte Value111 Field Value byte Value112 public byte Value112 Field Value byte Value113 public byte Value113 Field Value byte Value114 public byte Value114 Field Value byte Value115 public byte Value115 Field Value byte Value116 public byte Value116 Field Value byte Value117 public byte Value117 Field Value byte Value118 public byte Value118 Field Value byte Value119 public byte Value119 Field Value byte Value12 public byte Value12 Field Value byte Value120 public byte Value120 Field Value byte Value121 public byte Value121 Field Value byte Value122 public byte Value122 Field Value byte Value123 public byte Value123 Field Value byte Value124 public byte Value124 Field Value byte Value125 public byte Value125 Field Value byte Value126 public byte Value126 Field Value byte Value127 public byte Value127 Field Value byte Value128 public byte Value128 Field Value byte Value129 public byte Value129 Field Value byte Value13 public byte Value13 Field Value byte Value130 public byte Value130 Field Value byte Value131 public byte Value131 Field Value byte Value132 public byte Value132 Field Value byte Value133 public byte Value133 Field Value byte Value134 public byte Value134 Field Value byte Value135 public byte Value135 Field Value byte Value136 public byte Value136 Field Value byte Value137 public byte Value137 Field Value byte Value138 public byte Value138 Field Value byte Value139 public byte Value139 Field Value byte Value14 public byte Value14 Field Value byte Value140 public byte Value140 Field Value byte Value141 public byte Value141 Field Value byte Value142 public byte Value142 Field Value byte Value143 public byte Value143 Field Value byte Value144 public byte Value144 Field Value byte Value145 public byte Value145 Field Value byte Value146 public byte Value146 Field Value byte Value147 public byte Value147 Field Value byte Value148 public byte Value148 Field Value byte Value149 public byte Value149 Field Value byte Value15 public byte Value15 Field Value byte Value150 public byte Value150 Field Value byte Value151 public byte Value151 Field Value byte Value152 public byte Value152 Field Value byte Value153 public byte Value153 Field Value byte Value154 public byte Value154 Field Value byte Value155 public byte Value155 Field Value byte Value156 public byte Value156 Field Value byte Value157 public byte Value157 Field Value byte Value158 public byte Value158 Field Value byte Value159 public byte Value159 Field Value byte Value16 public byte Value16 Field Value byte Value160 public byte Value160 Field Value byte Value161 public byte Value161 Field Value byte Value162 public byte Value162 Field Value byte Value163 public byte Value163 Field Value byte Value164 public byte Value164 Field Value byte Value165 public byte Value165 Field Value byte Value166 public byte Value166 Field Value byte Value167 public byte Value167 Field Value byte Value168 public byte Value168 Field Value byte Value169 public byte Value169 Field Value byte Value17 public byte Value17 Field Value byte Value170 public byte Value170 Field Value byte Value171 public byte Value171 Field Value byte Value172 public byte Value172 Field Value byte Value173 public byte Value173 Field Value byte Value174 public byte Value174 Field Value byte Value175 public byte Value175 Field Value byte Value176 public byte Value176 Field Value byte Value177 public byte Value177 Field Value byte Value178 public byte Value178 Field Value byte Value179 public byte Value179 Field Value byte Value18 public byte Value18 Field Value byte Value180 public byte Value180 Field Value byte Value181 public byte Value181 Field Value byte Value182 public byte Value182 Field Value byte Value183 public byte Value183 Field Value byte Value184 public byte Value184 Field Value byte Value185 public byte Value185 Field Value byte Value186 public byte Value186 Field Value byte Value187 public byte Value187 Field Value byte Value188 public byte Value188 Field Value byte Value189 public byte Value189 Field Value byte Value19 public byte Value19 Field Value byte Value190 public byte Value190 Field Value byte Value191 public byte Value191 Field Value byte Value192 public byte Value192 Field Value byte Value193 public byte Value193 Field Value byte Value194 public byte Value194 Field Value byte Value195 public byte Value195 Field Value byte Value196 public byte Value196 Field Value byte Value197 public byte Value197 Field Value byte Value198 public byte Value198 Field Value byte Value199 public byte Value199 Field Value byte Value2 public byte Value2 Field Value byte Value20 public byte Value20 Field Value byte Value200 public byte Value200 Field Value byte Value201 public byte Value201 Field Value byte Value202 public byte Value202 Field Value byte Value203 public byte Value203 Field Value byte Value204 public byte Value204 Field Value byte Value205 public byte Value205 Field Value byte Value206 public byte Value206 Field Value byte Value207 public byte Value207 Field Value byte Value208 public byte Value208 Field Value byte Value209 public byte Value209 Field Value byte Value21 public byte Value21 Field Value byte Value210 public byte Value210 Field Value byte Value211 public byte Value211 Field Value byte Value212 public byte Value212 Field Value byte Value213 public byte Value213 Field Value byte Value214 public byte Value214 Field Value byte Value215 public byte Value215 Field Value byte Value216 public byte Value216 Field Value byte Value217 public byte Value217 Field Value byte Value218 public byte Value218 Field Value byte Value219 public byte Value219 Field Value byte Value22 public byte Value22 Field Value byte Value220 public byte Value220 Field Value byte Value221 public byte Value221 Field Value byte Value222 public byte Value222 Field Value byte Value223 public byte Value223 Field Value byte Value224 public byte Value224 Field Value byte Value225 public byte Value225 Field Value byte Value226 public byte Value226 Field Value byte Value227 public byte Value227 Field Value byte Value228 public byte Value228 Field Value byte Value229 public byte Value229 Field Value byte Value23 public byte Value23 Field Value byte Value230 public byte Value230 Field Value byte Value231 public byte Value231 Field Value byte Value232 public byte Value232 Field Value byte Value233 public byte Value233 Field Value byte Value234 public byte Value234 Field Value byte Value235 public byte Value235 Field Value byte Value236 public byte Value236 Field Value byte Value237 public byte Value237 Field Value byte Value238 public byte Value238 Field Value byte Value239 public byte Value239 Field Value byte Value24 public byte Value24 Field Value byte Value240 public byte Value240 Field Value byte Value241 public byte Value241 Field Value byte Value242 public byte Value242 Field Value byte Value243 public byte Value243 Field Value byte Value244 public byte Value244 Field Value byte Value245 public byte Value245 Field Value byte Value246 public byte Value246 Field Value byte Value247 public byte Value247 Field Value byte Value248 public byte Value248 Field Value byte Value249 public byte Value249 Field Value byte Value25 public byte Value25 Field Value byte Value250 public byte Value250 Field Value byte Value251 public byte Value251 Field Value byte Value252 public byte Value252 Field Value byte Value253 public byte Value253 Field Value byte Value254 public byte Value254 Field Value byte Value255 public byte Value255 Field Value byte Value26 public byte Value26 Field Value byte Value27 public byte Value27 Field Value byte Value28 public byte Value28 Field Value byte Value29 public byte Value29 Field Value byte Value3 public byte Value3 Field Value byte Value30 public byte Value30 Field Value byte Value31 public byte Value31 Field Value byte Value32 public byte Value32 Field Value byte Value33 public byte Value33 Field Value byte Value34 public byte Value34 Field Value byte Value35 public byte Value35 Field Value byte Value36 public byte Value36 Field Value byte Value37 public byte Value37 Field Value byte Value38 public byte Value38 Field Value byte Value39 public byte Value39 Field Value byte Value4 public byte Value4 Field Value byte Value40 public byte Value40 Field Value byte Value41 public byte Value41 Field Value byte Value42 public byte Value42 Field Value byte Value43 public byte Value43 Field Value byte Value44 public byte Value44 Field Value byte Value45 public byte Value45 Field Value byte Value46 public byte Value46 Field Value byte Value47 public byte Value47 Field Value byte Value48 public byte Value48 Field Value byte Value49 public byte Value49 Field Value byte Value5 public byte Value5 Field Value byte Value50 public byte Value50 Field Value byte Value51 public byte Value51 Field Value byte Value52 public byte Value52 Field Value byte Value53 public byte Value53 Field Value byte Value54 public byte Value54 Field Value byte Value55 public byte Value55 Field Value byte Value56 public byte Value56 Field Value byte Value57 public byte Value57 Field Value byte Value58 public byte Value58 Field Value byte Value59 public byte Value59 Field Value byte Value6 public byte Value6 Field Value byte Value60 public byte Value60 Field Value byte Value61 public byte Value61 Field Value byte Value62 public byte Value62 Field Value byte Value63 public byte Value63 Field Value byte Value64 public byte Value64 Field Value byte Value65 public byte Value65 Field Value byte Value66 public byte Value66 Field Value byte Value67 public byte Value67 Field Value byte Value68 public byte Value68 Field Value byte Value69 public byte Value69 Field Value byte Value7 public byte Value7 Field Value byte Value70 public byte Value70 Field Value byte Value71 public byte Value71 Field Value byte Value72 public byte Value72 Field Value byte Value73 public byte Value73 Field Value byte Value74 public byte Value74 Field Value byte Value75 public byte Value75 Field Value byte Value76 public byte Value76 Field Value byte Value77 public byte Value77 Field Value byte Value78 public byte Value78 Field Value byte Value79 public byte Value79 Field Value byte Value8 public byte Value8 Field Value byte Value80 public byte Value80 Field Value byte Value81 public byte Value81 Field Value byte Value82 public byte Value82 Field Value byte Value83 public byte Value83 Field Value byte Value84 public byte Value84 Field Value byte Value85 public byte Value85 Field Value byte Value86 public byte Value86 Field Value byte Value87 public byte Value87 Field Value byte Value88 public byte Value88 Field Value byte Value89 public byte Value89 Field Value byte Value9 public byte Value9 Field Value byte Value90 public byte Value90 Field Value byte Value91 public byte Value91 Field Value byte Value92 public byte Value92 Field Value byte Value93 public byte Value93 Field Value byte Value94 public byte Value94 Field Value byte Value95 public byte Value95 Field Value byte Value96 public byte Value96 Field Value byte Value97 public byte Value97 Field Value byte Value98 public byte Value98 Field Value byte Value99 public byte Value99 Field Value byte"
  },
  "api/SharpVulkan.PhysicalDeviceProperties.PipelineCacheUuidArray.html": {
    "href": "api/SharpVulkan.PhysicalDeviceProperties.PipelineCacheUuidArray.html",
    "title": "Struct PhysicalDeviceProperties.PipelineCacheUuidArray | Citrus Engine",
    "keywords": "Struct PhysicalDeviceProperties.PipelineCacheUuidArray Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceProperties.PipelineCacheUuidArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public byte Value0 Field Value byte Value1 public byte Value1 Field Value byte Value10 public byte Value10 Field Value byte Value11 public byte Value11 Field Value byte Value12 public byte Value12 Field Value byte Value13 public byte Value13 Field Value byte Value14 public byte Value14 Field Value byte Value15 public byte Value15 Field Value byte Value2 public byte Value2 Field Value byte Value3 public byte Value3 Field Value byte Value4 public byte Value4 Field Value byte Value5 public byte Value5 Field Value byte Value6 public byte Value6 Field Value byte Value7 public byte Value7 Field Value byte Value8 public byte Value8 Field Value byte Value9 public byte Value9 Field Value byte"
  },
  "api/SharpVulkan.PhysicalDeviceProperties.html": {
    "href": "api/SharpVulkan.PhysicalDeviceProperties.html",
    "title": "Struct PhysicalDeviceProperties | Citrus Engine",
    "keywords": "Struct PhysicalDeviceProperties Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ApiVersion public uint ApiVersion Field Value uint DeviceId public uint DeviceId Field Value uint DeviceName public PhysicalDeviceProperties.DeviceNameArray DeviceName Field Value PhysicalDeviceProperties.DeviceNameArray DeviceType public PhysicalDeviceType DeviceType Field Value PhysicalDeviceType DriverVersion public uint DriverVersion Field Value uint Limits public PhysicalDeviceLimits Limits Field Value PhysicalDeviceLimits PipelineCacheUuid public PhysicalDeviceProperties.PipelineCacheUuidArray PipelineCacheUuid Field Value PhysicalDeviceProperties.PipelineCacheUuidArray SparseProperties public PhysicalDeviceSparseProperties SparseProperties Field Value PhysicalDeviceSparseProperties VendorId public uint VendorId Field Value uint"
  },
  "api/SharpVulkan.PhysicalDeviceProperties2.html": {
    "href": "api/SharpVulkan.PhysicalDeviceProperties2.html",
    "title": "Struct PhysicalDeviceProperties2 | Citrus Engine",
    "keywords": "Struct PhysicalDeviceProperties2 Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceProperties2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint Properties public PhysicalDeviceProperties Properties Field Value PhysicalDeviceProperties StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PhysicalDeviceSparseImageFormatInfo2.html": {
    "href": "api/SharpVulkan.PhysicalDeviceSparseImageFormatInfo2.html",
    "title": "Struct PhysicalDeviceSparseImageFormatInfo2 | Citrus Engine",
    "keywords": "Struct PhysicalDeviceSparseImageFormatInfo2 Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceSparseImageFormatInfo2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Format public Format Format Field Value Format Next public nint Next Field Value nint Samples public SampleCountFlags Samples Field Value SampleCountFlags StructureType public StructureType StructureType Field Value StructureType Tiling public ImageTiling Tiling Field Value ImageTiling Type public ImageType Type Field Value ImageType Usage public ImageUsageFlags Usage Field Value ImageUsageFlags"
  },
  "api/SharpVulkan.PhysicalDeviceSparseProperties.html": {
    "href": "api/SharpVulkan.PhysicalDeviceSparseProperties.html",
    "title": "Struct PhysicalDeviceSparseProperties | Citrus Engine",
    "keywords": "Struct PhysicalDeviceSparseProperties Namespace SharpVulkan Assembly Lime.dll public struct PhysicalDeviceSparseProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ResidencyAlignedMipSize public RawBool ResidencyAlignedMipSize Field Value RawBool ResidencyNonResidentStrict public RawBool ResidencyNonResidentStrict Field Value RawBool ResidencyStandard2DBlockShape public RawBool ResidencyStandard2DBlockShape Field Value RawBool ResidencyStandard2DMultisampleBlockShape public RawBool ResidencyStandard2DMultisampleBlockShape Field Value RawBool ResidencyStandard3DBlockShape public RawBool ResidencyStandard3DBlockShape Field Value RawBool"
  },
  "api/SharpVulkan.PhysicalDeviceType.html": {
    "href": "api/SharpVulkan.PhysicalDeviceType.html",
    "title": "Enum PhysicalDeviceType | Citrus Engine",
    "keywords": "Enum PhysicalDeviceType Namespace SharpVulkan Assembly Lime.dll public enum PhysicalDeviceType Fields Cpu = 4 DiscreteGpu = 2 IntegratedGpu = 1 Other = 0 VirtualGpu = 3"
  },
  "api/SharpVulkan.Pipeline.html": {
    "href": "api/SharpVulkan.Pipeline.html",
    "title": "Struct Pipeline | Citrus Engine",
    "keywords": "Struct Pipeline Namespace SharpVulkan Assembly Lime.dll public struct Pipeline : IEquatable<Pipeline> Implements IEquatable<Pipeline> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Pipeline Null Field Value Pipeline Methods Equals(Pipeline) Indicates whether the current object is equal to another object of the same type. public bool Equals(Pipeline other) Parameters other Pipeline An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Pipeline, Pipeline) public static bool operator ==(Pipeline left, Pipeline right) Parameters left Pipeline right Pipeline Returns bool operator !=(Pipeline, Pipeline) public static bool operator !=(Pipeline left, Pipeline right) Parameters left Pipeline right Pipeline Returns bool"
  },
  "api/SharpVulkan.PipelineBindPoint.html": {
    "href": "api/SharpVulkan.PipelineBindPoint.html",
    "title": "Enum PipelineBindPoint | Citrus Engine",
    "keywords": "Enum PipelineBindPoint Namespace SharpVulkan Assembly Lime.dll public enum PipelineBindPoint Fields Compute = 1 Graphics = 0"
  },
  "api/SharpVulkan.PipelineCache.html": {
    "href": "api/SharpVulkan.PipelineCache.html",
    "title": "Struct PipelineCache | Citrus Engine",
    "keywords": "Struct PipelineCache Namespace SharpVulkan Assembly Lime.dll public struct PipelineCache : IEquatable<PipelineCache> Implements IEquatable<PipelineCache> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly PipelineCache Null Field Value PipelineCache Methods Equals(PipelineCache) Indicates whether the current object is equal to another object of the same type. public bool Equals(PipelineCache other) Parameters other PipelineCache An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(PipelineCache, PipelineCache) public static bool operator ==(PipelineCache left, PipelineCache right) Parameters left PipelineCache right PipelineCache Returns bool operator !=(PipelineCache, PipelineCache) public static bool operator !=(PipelineCache left, PipelineCache right) Parameters left PipelineCache right PipelineCache Returns bool"
  },
  "api/SharpVulkan.PipelineCacheCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineCacheCreateFlags.html",
    "title": "Enum PipelineCacheCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineCacheCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineCacheCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineCacheCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineCacheCreateInfo.html",
    "title": "Struct PipelineCacheCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineCacheCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineCacheCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public PipelineCacheCreateFlags Flags Field Value PipelineCacheCreateFlags InitialData public nint InitialData Field Value nint InitialDataSize public PointerSize InitialDataSize Field Value PointerSize Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineCacheHeaderVersion.html": {
    "href": "api/SharpVulkan.PipelineCacheHeaderVersion.html",
    "title": "Enum PipelineCacheHeaderVersion | Citrus Engine",
    "keywords": "Enum PipelineCacheHeaderVersion Namespace SharpVulkan Assembly Lime.dll public enum PipelineCacheHeaderVersion Fields One = 1"
  },
  "api/SharpVulkan.PipelineColorBlendAttachmentState.html": {
    "href": "api/SharpVulkan.PipelineColorBlendAttachmentState.html",
    "title": "Struct PipelineColorBlendAttachmentState | Citrus Engine",
    "keywords": "Struct PipelineColorBlendAttachmentState Namespace SharpVulkan Assembly Lime.dll public struct PipelineColorBlendAttachmentState Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AlphaBlendOperation public BlendOperation AlphaBlendOperation Field Value BlendOperation BlendEnable public RawBool BlendEnable Field Value RawBool ColorBlendOperation public BlendOperation ColorBlendOperation Field Value BlendOperation ColorWriteMask public ColorComponentFlags ColorWriteMask Field Value ColorComponentFlags DestinationAlphaBlendFactor public BlendFactor DestinationAlphaBlendFactor Field Value BlendFactor DestinationColorBlendFactor public BlendFactor DestinationColorBlendFactor Field Value BlendFactor SourceAlphaBlendFactor public BlendFactor SourceAlphaBlendFactor Field Value BlendFactor SourceColorBlendFactor public BlendFactor SourceColorBlendFactor Field Value BlendFactor"
  },
  "api/SharpVulkan.PipelineColorBlendStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineColorBlendStateCreateFlags.html",
    "title": "Enum PipelineColorBlendStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineColorBlendStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineColorBlendStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineColorBlendStateCreateInfo.BlendConstantsArray.html": {
    "href": "api/SharpVulkan.PipelineColorBlendStateCreateInfo.BlendConstantsArray.html",
    "title": "Struct PipelineColorBlendStateCreateInfo.BlendConstantsArray | Citrus Engine",
    "keywords": "Struct PipelineColorBlendStateCreateInfo.BlendConstantsArray Namespace SharpVulkan Assembly Lime.dll public struct PipelineColorBlendStateCreateInfo.BlendConstantsArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Value0 public float Value0 Field Value float Value1 public float Value1 Field Value float Value2 public float Value2 Field Value float Value3 public float Value3 Field Value float"
  },
  "api/SharpVulkan.PipelineColorBlendStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineColorBlendStateCreateInfo.html",
    "title": "Struct PipelineColorBlendStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineColorBlendStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineColorBlendStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AttachmentCount public uint AttachmentCount Field Value uint Attachments public nint Attachments Field Value nint BlendConstants public PipelineColorBlendStateCreateInfo.BlendConstantsArray BlendConstants Field Value PipelineColorBlendStateCreateInfo.BlendConstantsArray Flags public PipelineColorBlendStateCreateFlags Flags Field Value PipelineColorBlendStateCreateFlags LogicOperation public LogicOperation LogicOperation Field Value LogicOperation LogicOperationEnable public RawBool LogicOperationEnable Field Value RawBool Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineCreateFlags.html",
    "title": "Enum PipelineCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineCreateFlags Fields AllowDerivatives = 2 Derivative = 4 DisableOptimization = 1 None = 0"
  },
  "api/SharpVulkan.PipelineDepthStencilStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineDepthStencilStateCreateFlags.html",
    "title": "Enum PipelineDepthStencilStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineDepthStencilStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineDepthStencilStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineDepthStencilStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineDepthStencilStateCreateInfo.html",
    "title": "Struct PipelineDepthStencilStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineDepthStencilStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineDepthStencilStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Back public StencilOperationState Back Field Value StencilOperationState DepthBoundsTestEnable public RawBool DepthBoundsTestEnable Field Value RawBool DepthCompareOperation public CompareOperation DepthCompareOperation Field Value CompareOperation DepthTestEnable public RawBool DepthTestEnable Field Value RawBool DepthWriteEnable public RawBool DepthWriteEnable Field Value RawBool Flags public PipelineDepthStencilStateCreateFlags Flags Field Value PipelineDepthStencilStateCreateFlags Front public StencilOperationState Front Field Value StencilOperationState MaxDepthBounds public float MaxDepthBounds Field Value float MinDepthBounds public float MinDepthBounds Field Value float Next public nint Next Field Value nint StencilTestEnable public RawBool StencilTestEnable Field Value RawBool StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineDynamicStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineDynamicStateCreateFlags.html",
    "title": "Enum PipelineDynamicStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineDynamicStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineDynamicStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineDynamicStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineDynamicStateCreateInfo.html",
    "title": "Struct PipelineDynamicStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineDynamicStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineDynamicStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DynamicStateCount public uint DynamicStateCount Field Value uint DynamicStates public nint DynamicStates Field Value nint Flags public PipelineDynamicStateCreateFlags Flags Field Value PipelineDynamicStateCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineInputAssemblyStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineInputAssemblyStateCreateFlags.html",
    "title": "Enum PipelineInputAssemblyStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineInputAssemblyStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineInputAssemblyStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineInputAssemblyStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineInputAssemblyStateCreateInfo.html",
    "title": "Struct PipelineInputAssemblyStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineInputAssemblyStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineInputAssemblyStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public PipelineInputAssemblyStateCreateFlags Flags Field Value PipelineInputAssemblyStateCreateFlags Next public nint Next Field Value nint PrimitiveRestartEnable public RawBool PrimitiveRestartEnable Field Value RawBool StructureType public StructureType StructureType Field Value StructureType Topology public PrimitiveTopology Topology Field Value PrimitiveTopology"
  },
  "api/SharpVulkan.PipelineLayout.html": {
    "href": "api/SharpVulkan.PipelineLayout.html",
    "title": "Struct PipelineLayout | Citrus Engine",
    "keywords": "Struct PipelineLayout Namespace SharpVulkan Assembly Lime.dll public struct PipelineLayout : IEquatable<PipelineLayout> Implements IEquatable<PipelineLayout> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly PipelineLayout Null Field Value PipelineLayout Methods Equals(PipelineLayout) Indicates whether the current object is equal to another object of the same type. public bool Equals(PipelineLayout other) Parameters other PipelineLayout An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(PipelineLayout, PipelineLayout) public static bool operator ==(PipelineLayout left, PipelineLayout right) Parameters left PipelineLayout right PipelineLayout Returns bool operator !=(PipelineLayout, PipelineLayout) public static bool operator !=(PipelineLayout left, PipelineLayout right) Parameters left PipelineLayout right PipelineLayout Returns bool"
  },
  "api/SharpVulkan.PipelineLayoutCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineLayoutCreateFlags.html",
    "title": "Enum PipelineLayoutCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineLayoutCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineLayoutCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineLayoutCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineLayoutCreateInfo.html",
    "title": "Struct PipelineLayoutCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineLayoutCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineLayoutCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public PipelineLayoutCreateFlags Flags Field Value PipelineLayoutCreateFlags Next public nint Next Field Value nint PushConstantRangeCount public uint PushConstantRangeCount Field Value uint PushConstantRanges public nint PushConstantRanges Field Value nint SetLayoutCount public uint SetLayoutCount Field Value uint SetLayouts public nint SetLayouts Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineMultisampleStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineMultisampleStateCreateFlags.html",
    "title": "Enum PipelineMultisampleStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineMultisampleStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineMultisampleStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineMultisampleStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineMultisampleStateCreateInfo.html",
    "title": "Struct PipelineMultisampleStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineMultisampleStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineMultisampleStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AlphaToCoverageEnable public RawBool AlphaToCoverageEnable Field Value RawBool AlphaToOneEnable public RawBool AlphaToOneEnable Field Value RawBool Flags public PipelineMultisampleStateCreateFlags Flags Field Value PipelineMultisampleStateCreateFlags MinSampleShading public float MinSampleShading Field Value float Next public nint Next Field Value nint RasterizationSamples public SampleCountFlags RasterizationSamples Field Value SampleCountFlags SampleMask public nint SampleMask Field Value nint SampleShadingEnable public RawBool SampleShadingEnable Field Value RawBool StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineRasterizationStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineRasterizationStateCreateFlags.html",
    "title": "Enum PipelineRasterizationStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineRasterizationStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineRasterizationStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineRasterizationStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineRasterizationStateCreateInfo.html",
    "title": "Struct PipelineRasterizationStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineRasterizationStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineRasterizationStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CullMode public CullModeFlags CullMode Field Value CullModeFlags DepthBiasClamp public float DepthBiasClamp Field Value float DepthBiasConstantFactor public float DepthBiasConstantFactor Field Value float DepthBiasEnable public RawBool DepthBiasEnable Field Value RawBool DepthBiasSlopeFactor public float DepthBiasSlopeFactor Field Value float DepthClampEnable public RawBool DepthClampEnable Field Value RawBool Flags public PipelineRasterizationStateCreateFlags Flags Field Value PipelineRasterizationStateCreateFlags FrontFace public FrontFace FrontFace Field Value FrontFace LineWidth public float LineWidth Field Value float Next public nint Next Field Value nint PolygonMode public PolygonMode PolygonMode Field Value PolygonMode RasterizerDiscardEnable public RawBool RasterizerDiscardEnable Field Value RawBool StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineRasterizationStateRasterizationOrder.html": {
    "href": "api/SharpVulkan.PipelineRasterizationStateRasterizationOrder.html",
    "title": "Struct PipelineRasterizationStateRasterizationOrder | Citrus Engine",
    "keywords": "Struct PipelineRasterizationStateRasterizationOrder Namespace SharpVulkan Assembly Lime.dll public struct PipelineRasterizationStateRasterizationOrder Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint RasterizationOrder public RasterizationOrder RasterizationOrder Field Value RasterizationOrder StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineShaderStageCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineShaderStageCreateFlags.html",
    "title": "Enum PipelineShaderStageCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineShaderStageCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineShaderStageCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineShaderStageCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineShaderStageCreateInfo.html",
    "title": "Struct PipelineShaderStageCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineShaderStageCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineShaderStageCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public PipelineShaderStageCreateFlags Flags Field Value PipelineShaderStageCreateFlags Module public ShaderModule Module Field Value ShaderModule Name public nint Name Field Value nint Next public nint Next Field Value nint SpecializationInfo public nint SpecializationInfo Field Value nint Stage public ShaderStageFlags Stage Field Value ShaderStageFlags StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineStageFlags.html": {
    "href": "api/SharpVulkan.PipelineStageFlags.html",
    "title": "Enum PipelineStageFlags | Citrus Engine",
    "keywords": "Enum PipelineStageFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineStageFlags Fields AllCommands = 65536 AllGraphics = 32768 BottomOfPipe = 8192 ColorAttachmentOutput = 1024 CommandProcess = 131072 ComputeShader = 2048 DrawIndirect = 2 EarlyFragmentTests = 256 FragmentShader = 128 GeometryShader = 64 Host = 16384 LateFragmentTests = 512 None = 0 TessellationControlShader = 16 TessellationEvaluationShader = 32 TopOfPipe = 1 Transfer = 4096 VertexInput = 4 VertexShader = 8"
  },
  "api/SharpVulkan.PipelineTessellationStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineTessellationStateCreateFlags.html",
    "title": "Enum PipelineTessellationStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineTessellationStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineTessellationStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineTessellationStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineTessellationStateCreateInfo.html",
    "title": "Struct PipelineTessellationStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineTessellationStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineTessellationStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public PipelineTessellationStateCreateFlags Flags Field Value PipelineTessellationStateCreateFlags Next public nint Next Field Value nint PatchControlPoints public uint PatchControlPoints Field Value uint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.PipelineVertexInputStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineVertexInputStateCreateFlags.html",
    "title": "Enum PipelineVertexInputStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineVertexInputStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineVertexInputStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineVertexInputStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineVertexInputStateCreateInfo.html",
    "title": "Struct PipelineVertexInputStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineVertexInputStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineVertexInputStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public PipelineVertexInputStateCreateFlags Flags Field Value PipelineVertexInputStateCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType VertexAttributeDescriptionCount public uint VertexAttributeDescriptionCount Field Value uint VertexAttributeDescriptions public nint VertexAttributeDescriptions Field Value nint VertexBindingDescriptionCount public uint VertexBindingDescriptionCount Field Value uint VertexBindingDescriptions public nint VertexBindingDescriptions Field Value nint"
  },
  "api/SharpVulkan.PipelineViewportStateCreateFlags.html": {
    "href": "api/SharpVulkan.PipelineViewportStateCreateFlags.html",
    "title": "Enum PipelineViewportStateCreateFlags | Citrus Engine",
    "keywords": "Enum PipelineViewportStateCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum PipelineViewportStateCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.PipelineViewportStateCreateInfo.html": {
    "href": "api/SharpVulkan.PipelineViewportStateCreateInfo.html",
    "title": "Struct PipelineViewportStateCreateInfo | Citrus Engine",
    "keywords": "Struct PipelineViewportStateCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct PipelineViewportStateCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public PipelineViewportStateCreateFlags Flags Field Value PipelineViewportStateCreateFlags Next public nint Next Field Value nint ScissorCount public uint ScissorCount Field Value uint Scissors public nint Scissors Field Value nint StructureType public StructureType StructureType Field Value StructureType ViewportCount public uint ViewportCount Field Value uint Viewports public nint Viewports Field Value nint"
  },
  "api/SharpVulkan.PointerSize.html": {
    "href": "api/SharpVulkan.PointerSize.html",
    "title": "Struct PointerSize | Citrus Engine",
    "keywords": "Struct PointerSize Namespace SharpVulkan Assembly Lime.dll The maximum number of bytes to which a pointer can point. Use for a count that must span the full range of a pointer. Equivalent to Windows type SIZE_T. public struct PointerSize Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PointerSize(int) Default constructor. public PointerSize(int size) Parameters size int value to set PointerSize(long) Default constructor. public PointerSize(long size) Parameters size long value to set PointerSize(nint) Initializes a new instance of the PointerSize struct. public PointerSize(nint size) Parameters size nint The size. Fields Zero An empty pointer size initialized to zero. public static readonly PointerSize Zero Field Value PointerSize Methods Equals(PointerSize) Determines whether the specified PointerSize is equal to this instance. public bool Equals(PointerSize other) Parameters other PointerSize The PointerSize to compare with this instance. Returns bool true if the specified PointerSize is equal to this instance; otherwise, false. Equals(object) Determines whether the specified object is equal to this instance. public override bool Equals(object value) Parameters value object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. ToString(string) Returns a string that represents this instance. public string ToString(string format) Parameters format string The format. Returns string A string that represents this instance. Operators operator +(PointerSize, PointerSize) Adds two sizes. public static PointerSize operator +(PointerSize left, PointerSize right) Parameters left PointerSize The first size to add. right PointerSize The second size to add. Returns PointerSize The sum of the two sizes. operator /(PointerSize, int) Scales a size by the given value. public static PointerSize operator /(PointerSize value, int scale) Parameters value PointerSize The size to scale. scale int The amount by which to scale the size. Returns PointerSize The scaled size. operator ==(PointerSize, PointerSize) Tests for equality between two objects. public static bool operator ==(PointerSize left, PointerSize right) Parameters left PointerSize The first value to compare. right PointerSize The second value to compare. Returns bool true if left has the same value as right; otherwise, false. implicit operator int(PointerSize) Performs an implicit conversion from PointerSize to int. public static implicit operator int(PointerSize value) Parameters value PointerSize The value. Returns int The result of the conversion. implicit operator long(PointerSize) Performs an implicit conversion from PointerSize to long. public static implicit operator long(PointerSize value) Parameters value PointerSize The value. Returns long The result of the conversion. implicit operator nint(PointerSize) Performs an implicit conversion from PointerSize to nint. public static implicit operator nint(PointerSize value) Parameters value PointerSize The value. Returns nint The result of the conversion. implicit operator void*(PointerSize) Performs an implicit conversion from PointerSize to void*. public static implicit operator void*(PointerSize value) Parameters value PointerSize The value. Returns void* The result of the conversion. implicit operator PointerSize(int) Performs an implicit conversion from PointerSize to int. public static implicit operator PointerSize(int value) Parameters value int The value. Returns PointerSize The result of the conversion. implicit operator PointerSize(long) Performs an implicit conversion from PointerSize to long. public static implicit operator PointerSize(long value) Parameters value long The value. Returns PointerSize The result of the conversion. implicit operator PointerSize(nint) Performs an implicit conversion from nint to PointerSize. public static implicit operator PointerSize(nint value) Parameters value nint The value. Returns PointerSize The result of the conversion. implicit operator PointerSize(void*) Performs an implicit conversion from void* to PointerSize. public static implicit operator PointerSize(void* value) Parameters value void* The value. Returns PointerSize The result of the conversion. operator !=(PointerSize, PointerSize) Tests for inequality between two objects. public static bool operator !=(PointerSize left, PointerSize right) Parameters left PointerSize The first value to compare. right PointerSize The second value to compare. Returns bool true if left has a different value than right; otherwise, false. operator *(PointerSize, int) Scales a size by the given value. public static PointerSize operator *(PointerSize value, int scale) Parameters value PointerSize The size to scale. scale int The amount by which to scale the size. Returns PointerSize The scaled size. operator *(int, PointerSize) Scales a size by the given value. public static PointerSize operator *(int scale, PointerSize value) Parameters scale int The amount by which to scale the size. value PointerSize The size to scale. Returns PointerSize The scaled size. operator -(PointerSize, PointerSize) Subtracts two sizes. public static PointerSize operator -(PointerSize left, PointerSize right) Parameters left PointerSize The first size to subtract. right PointerSize The second size to subtract. Returns PointerSize The difference of the two sizes. operator -(PointerSize) Reverses the direction of a given size. public static PointerSize operator -(PointerSize value) Parameters value PointerSize The size to negate. Returns PointerSize A size facing in the opposite direction. operator +(PointerSize) Assert a size (return it unchanged). public static PointerSize operator +(PointerSize value) Parameters value PointerSize The size to assert (unchanged). Returns PointerSize The asserted (unchanged) size."
  },
  "api/SharpVulkan.PolygonMode.html": {
    "href": "api/SharpVulkan.PolygonMode.html",
    "title": "Enum PolygonMode | Citrus Engine",
    "keywords": "Enum PolygonMode Namespace SharpVulkan Assembly Lime.dll public enum PolygonMode Fields Fill = 0 Line = 1 Point = 2"
  },
  "api/SharpVulkan.PresentInfo.html": {
    "href": "api/SharpVulkan.PresentInfo.html",
    "title": "Struct PresentInfo | Citrus Engine",
    "keywords": "Struct PresentInfo Namespace SharpVulkan Assembly Lime.dll public struct PresentInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ImageIndices public nint ImageIndices Field Value nint Next public nint Next Field Value nint Results public nint Results Field Value nint StructureType public StructureType StructureType Field Value StructureType SwapchainCount public uint SwapchainCount Field Value uint Swapchains public nint Swapchains Field Value nint WaitSemaphoreCount public uint WaitSemaphoreCount Field Value uint WaitSemaphores public nint WaitSemaphores Field Value nint"
  },
  "api/SharpVulkan.PresentMode.html": {
    "href": "api/SharpVulkan.PresentMode.html",
    "title": "Enum PresentMode | Citrus Engine",
    "keywords": "Enum PresentMode Namespace SharpVulkan Assembly Lime.dll public enum PresentMode Fields Fifo = 2 FifoRelaxed = 3 Immediate = 0 Mailbox = 1"
  },
  "api/SharpVulkan.PrimitiveTopology.html": {
    "href": "api/SharpVulkan.PrimitiveTopology.html",
    "title": "Enum PrimitiveTopology | Citrus Engine",
    "keywords": "Enum PrimitiveTopology Namespace SharpVulkan Assembly Lime.dll public enum PrimitiveTopology Fields LineList = 1 LineListWithAdjacency = 6 LineStrip = 2 LineStripWithAdjacency = 7 PatchList = 10 PointList = 0 TriangleFan = 5 TriangleList = 3 TriangleListWithAdjacency = 8 TriangleStrip = 4 TriangleStripWithAdjacency = 9"
  },
  "api/SharpVulkan.PushConstantRange.html": {
    "href": "api/SharpVulkan.PushConstantRange.html",
    "title": "Struct PushConstantRange | Citrus Engine",
    "keywords": "Struct PushConstantRange Namespace SharpVulkan Assembly Lime.dll public struct PushConstantRange Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Offset public uint Offset Field Value uint Size public uint Size Field Value uint StageFlags public ShaderStageFlags StageFlags Field Value ShaderStageFlags"
  },
  "api/SharpVulkan.QueryControlFlags.html": {
    "href": "api/SharpVulkan.QueryControlFlags.html",
    "title": "Enum QueryControlFlags | Citrus Engine",
    "keywords": "Enum QueryControlFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum QueryControlFlags Fields None = 0 Precise = 1"
  },
  "api/SharpVulkan.QueryPipelineStatisticFlags.html": {
    "href": "api/SharpVulkan.QueryPipelineStatisticFlags.html",
    "title": "Enum QueryPipelineStatisticFlags | Citrus Engine",
    "keywords": "Enum QueryPipelineStatisticFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum QueryPipelineStatisticFlags Fields ClippingInvocations = 32 ClippingPrimitives = 64 ComputeShaderInvocations = 1024 FragmentShaderInvocations = 128 GeometryShaderInvocations = 8 GeometryShaderPrimitives = 16 InputAssemblyPrimitives = 2 InputAssemblyVertices = 1 None = 0 TessellationControlShaderPatches = 256 TessellationEvaluationShaderInvocations = 512 VertexShaderInvocations = 4"
  },
  "api/SharpVulkan.QueryPool.html": {
    "href": "api/SharpVulkan.QueryPool.html",
    "title": "Struct QueryPool | Citrus Engine",
    "keywords": "Struct QueryPool Namespace SharpVulkan Assembly Lime.dll public struct QueryPool : IEquatable<QueryPool> Implements IEquatable<QueryPool> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly QueryPool Null Field Value QueryPool Methods Equals(QueryPool) Indicates whether the current object is equal to another object of the same type. public bool Equals(QueryPool other) Parameters other QueryPool An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(QueryPool, QueryPool) public static bool operator ==(QueryPool left, QueryPool right) Parameters left QueryPool right QueryPool Returns bool operator !=(QueryPool, QueryPool) public static bool operator !=(QueryPool left, QueryPool right) Parameters left QueryPool right QueryPool Returns bool"
  },
  "api/SharpVulkan.QueryPoolCreateFlags.html": {
    "href": "api/SharpVulkan.QueryPoolCreateFlags.html",
    "title": "Enum QueryPoolCreateFlags | Citrus Engine",
    "keywords": "Enum QueryPoolCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum QueryPoolCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.QueryPoolCreateInfo.html": {
    "href": "api/SharpVulkan.QueryPoolCreateInfo.html",
    "title": "Struct QueryPoolCreateInfo | Citrus Engine",
    "keywords": "Struct QueryPoolCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct QueryPoolCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public QueryPoolCreateFlags Flags Field Value QueryPoolCreateFlags Next public nint Next Field Value nint PipelineStatistics public QueryPipelineStatisticFlags PipelineStatistics Field Value QueryPipelineStatisticFlags QueryCount public uint QueryCount Field Value uint QueryType public QueryType QueryType Field Value QueryType StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.QueryResultFlags.html": {
    "href": "api/SharpVulkan.QueryResultFlags.html",
    "title": "Enum QueryResultFlags | Citrus Engine",
    "keywords": "Enum QueryResultFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum QueryResultFlags Fields Is64Bits = 1 None = 0 Partial = 8 Wait = 2 WithAvailability = 4"
  },
  "api/SharpVulkan.QueryType.html": {
    "href": "api/SharpVulkan.QueryType.html",
    "title": "Enum QueryType | Citrus Engine",
    "keywords": "Enum QueryType Namespace SharpVulkan Assembly Lime.dll public enum QueryType Fields Occlusion = 0 PipelineStatistics = 1 Timestamp = 2"
  },
  "api/SharpVulkan.Queue.html": {
    "href": "api/SharpVulkan.Queue.html",
    "title": "Struct Queue | Citrus Engine",
    "keywords": "Struct Queue Namespace SharpVulkan Assembly Lime.dll public struct Queue : IEquatable<Queue> Implements IEquatable<Queue> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Queue Null Field Value Queue Methods BindSparse(uint, BindSparseInfo*, Fence) public void BindSparse(uint bindInfoCount, BindSparseInfo* bindInfo, Fence fence) Parameters bindInfoCount uint bindInfo BindSparseInfo* fence Fence Equals(Queue) Indicates whether the current object is equal to another object of the same type. public bool Equals(Queue other) Parameters other Queue An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Present(ref PresentInfo) public void Present(ref PresentInfo presentInfo) Parameters presentInfo PresentInfo Submit(uint, SubmitInfo*, Fence) public void Submit(uint submitCount, SubmitInfo* submits, Fence fence) Parameters submitCount uint submits SubmitInfo* fence Fence ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. WaitIdle() public void WaitIdle() Operators operator ==(Queue, Queue) public static bool operator ==(Queue left, Queue right) Parameters left Queue right Queue Returns bool operator !=(Queue, Queue) public static bool operator !=(Queue left, Queue right) Parameters left Queue right Queue Returns bool"
  },
  "api/SharpVulkan.QueueFamilyProperties.html": {
    "href": "api/SharpVulkan.QueueFamilyProperties.html",
    "title": "Struct QueueFamilyProperties | Citrus Engine",
    "keywords": "Struct QueueFamilyProperties Namespace SharpVulkan Assembly Lime.dll public struct QueueFamilyProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields MinImageTransferGranularity public Extent3D MinImageTransferGranularity Field Value Extent3D QueueCount public uint QueueCount Field Value uint QueueFlags public QueueFlags QueueFlags Field Value QueueFlags TimestampValidBits public uint TimestampValidBits Field Value uint"
  },
  "api/SharpVulkan.QueueFamilyProperties2.html": {
    "href": "api/SharpVulkan.QueueFamilyProperties2.html",
    "title": "Struct QueueFamilyProperties2 | Citrus Engine",
    "keywords": "Struct QueueFamilyProperties2 Namespace SharpVulkan Assembly Lime.dll public struct QueueFamilyProperties2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint QueueFamilyProperties public QueueFamilyProperties QueueFamilyProperties Field Value QueueFamilyProperties StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.QueueFlags.html": {
    "href": "api/SharpVulkan.QueueFlags.html",
    "title": "Enum QueueFlags | Citrus Engine",
    "keywords": "Enum QueueFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum QueueFlags Fields Compute = 2 Graphics = 1 None = 0 SparseBinding = 8 Transfer = 4"
  },
  "api/SharpVulkan.RasterizationOrder.html": {
    "href": "api/SharpVulkan.RasterizationOrder.html",
    "title": "Enum RasterizationOrder | Citrus Engine",
    "keywords": "Enum RasterizationOrder Namespace SharpVulkan Assembly Lime.dll public enum RasterizationOrder Fields Relaxed = 1 Strict = 0"
  },
  "api/SharpVulkan.RawBool.html": {
    "href": "api/SharpVulkan.RawBool.html",
    "title": "Struct RawBool | Citrus Engine",
    "keywords": "Struct RawBool Namespace SharpVulkan Assembly Lime.dll A boolean value stored on 4 bytes (instead of 1 in .NET). public struct RawBool : IEquatable<RawBool> Implements IEquatable<RawBool> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors RawBool(bool) Initializes a new instance of the RawBool class. public RawBool(bool boolValue) Parameters boolValue bool if set to true [bool value]. Methods Equals(RawBool) Indicates whether this instance and a specified object are equal. public bool Equals(RawBool other) Parameters other RawBool The other. Returns bool true if other and this instance are the same type and represent the same value; otherwise, false. Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(RawBool, RawBool) Implements the ==. public static bool operator ==(RawBool left, RawBool right) Parameters left RawBool The left. right RawBool The right. Returns bool The result of the operator. implicit operator bool(RawBool) Performs an explicit conversion from RawBool to bool. public static implicit operator bool(RawBool booleanValue) Parameters booleanValue RawBool The value. Returns bool The result of the conversion. implicit operator int(RawBool) public static implicit operator int(RawBool booleanValue) Parameters booleanValue RawBool Returns int implicit operator RawBool(bool) Performs an explicit conversion from bool to RawBool. public static implicit operator RawBool(bool boolValue) Parameters boolValue bool The value. Returns RawBool The result of the conversion. implicit operator RawBool(int) public static implicit operator RawBool(int boolValue) Parameters boolValue int Returns RawBool operator !=(RawBool, RawBool) Implements the !=. public static bool operator !=(RawBool left, RawBool right) Parameters left RawBool The left. right RawBool The right. Returns bool The result of the operator."
  },
  "api/SharpVulkan.RawColor4.html": {
    "href": "api/SharpVulkan.RawColor4.html",
    "title": "Struct RawColor4 | Citrus Engine",
    "keywords": "Struct RawColor4 Namespace SharpVulkan Assembly Lime.dll Interop type for a Color4 (RGBA, 4 floats). public struct RawColor4 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors RawColor4(float, float, float, float) Initializes a new instance of the RawColor4 struct. public RawColor4(float r, float g, float b, float a) Parameters r float The r. g float The g. b float The b. a float A. Fields A The alpha component of the color. public float A Field Value float B The blue component of the color. public float B Field Value float G The green component of the color. public float G Field Value float R The red component of the color. public float R Field Value float Operators implicit operator ClearColorValue(RawColor4) public static implicit operator ClearColorValue(RawColor4 colorValue) Parameters colorValue RawColor4 Returns ClearColorValue"
  },
  "api/SharpVulkan.RawInt4.html": {
    "href": "api/SharpVulkan.RawInt4.html",
    "title": "Struct RawInt4 | Citrus Engine",
    "keywords": "Struct RawInt4 Namespace SharpVulkan Assembly Lime.dll Interop type for a Int4 (4 ints). public struct RawInt4 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields W The W component of the vector. public int W Field Value int X The X component of the vector. public int X Field Value int Y The Y component of the vector. public int Y Field Value int Z The Z component of the vector. public int Z Field Value int Operators implicit operator ClearColorValue(RawInt4) public static implicit operator ClearColorValue(RawInt4 intValue) Parameters intValue RawInt4 Returns ClearColorValue"
  },
  "api/SharpVulkan.Rect2D.html": {
    "href": "api/SharpVulkan.Rect2D.html",
    "title": "Struct Rect2D | Citrus Engine",
    "keywords": "Struct Rect2D Namespace SharpVulkan Assembly Lime.dll public struct Rect2D Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Rect2D(Offset2D, Extent2D) public Rect2D(Offset2D offset, Extent2D extent) Parameters offset Offset2D extent Extent2D Rect2D(int, int, uint, uint) public Rect2D(int x, int y, uint width, uint height) Parameters x int y int width uint height uint Fields Extent public Extent2D Extent Field Value Extent2D Offset public Offset2D Offset Field Value Offset2D"
  },
  "api/SharpVulkan.RenderPass.html": {
    "href": "api/SharpVulkan.RenderPass.html",
    "title": "Struct RenderPass | Citrus Engine",
    "keywords": "Struct RenderPass Namespace SharpVulkan Assembly Lime.dll public struct RenderPass : IEquatable<RenderPass> Implements IEquatable<RenderPass> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly RenderPass Null Field Value RenderPass Methods Equals(RenderPass) Indicates whether the current object is equal to another object of the same type. public bool Equals(RenderPass other) Parameters other RenderPass An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(RenderPass, RenderPass) public static bool operator ==(RenderPass left, RenderPass right) Parameters left RenderPass right RenderPass Returns bool operator !=(RenderPass, RenderPass) public static bool operator !=(RenderPass left, RenderPass right) Parameters left RenderPass right RenderPass Returns bool"
  },
  "api/SharpVulkan.RenderPassBeginInfo.html": {
    "href": "api/SharpVulkan.RenderPassBeginInfo.html",
    "title": "Struct RenderPassBeginInfo | Citrus Engine",
    "keywords": "Struct RenderPassBeginInfo Namespace SharpVulkan Assembly Lime.dll public struct RenderPassBeginInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ClearValueCount public uint ClearValueCount Field Value uint ClearValues public nint ClearValues Field Value nint Framebuffer public Framebuffer Framebuffer Field Value Framebuffer Next public nint Next Field Value nint RenderArea public Rect2D RenderArea Field Value Rect2D RenderPass public RenderPass RenderPass Field Value RenderPass StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.RenderPassCreateFlags.html": {
    "href": "api/SharpVulkan.RenderPassCreateFlags.html",
    "title": "Enum RenderPassCreateFlags | Citrus Engine",
    "keywords": "Enum RenderPassCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum RenderPassCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.RenderPassCreateInfo.html": {
    "href": "api/SharpVulkan.RenderPassCreateInfo.html",
    "title": "Struct RenderPassCreateInfo | Citrus Engine",
    "keywords": "Struct RenderPassCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct RenderPassCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AttachmentCount public uint AttachmentCount Field Value uint Attachments public nint Attachments Field Value nint Dependencies public nint Dependencies Field Value nint DependencyCount public uint DependencyCount Field Value uint Flags public RenderPassCreateFlags Flags Field Value RenderPassCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType SubpassCount public uint SubpassCount Field Value uint Subpasses public nint Subpasses Field Value nint"
  },
  "api/SharpVulkan.Result.html": {
    "href": "api/SharpVulkan.Result.html",
    "title": "Enum Result | Citrus Engine",
    "keywords": "Enum Result Namespace SharpVulkan Assembly Lime.dll public enum Result Extension Methods ResultExtensions.CheckError(Result) Fields ErrorDeviceLost = -4 ErrorExtensionNotPresent = -7 ErrorFeatureNotPresent = -8 ErrorFormatNotSupported = -11 ErrorFragmentedPool = -12 ErrorIncompatibleDisplay = -1000003001 ErrorIncompatibleDriver = -9 ErrorInitializationFailed = -3 ErrorInvalidShader = -1000012000 ErrorLayerNotPresent = -6 ErrorMemoryMapFailed = -5 ErrorNativeWindowInUse = -1000000001 ErrorOutOfDate = -1000001004 ErrorOutOfDeviceMemory = -2 ErrorOutOfHostMemory = -1 ErrorOutOfPoolMemory = -1000069000 ErrorSurfaceLost = -1000000000 ErrorTooManyObjects = -10 ErrorValidationFailed = -1000011001 EventReset = 4 EventSet = 3 Incomplete = 5 NotReady = 1 Suboptimal = 1000001003 Success = 0 Timeout = 2"
  },
  "api/SharpVulkan.ResultExtensions.html": {
    "href": "api/SharpVulkan.ResultExtensions.html",
    "title": "Class ResultExtensions | Citrus Engine",
    "keywords": "Class ResultExtensions Namespace SharpVulkan Assembly Lime.dll public static class ResultExtensions Inheritance object ResultExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckError(Result) public static void CheckError(this Result result) Parameters result Result"
  },
  "api/SharpVulkan.SampleCountFlags.html": {
    "href": "api/SharpVulkan.SampleCountFlags.html",
    "title": "Enum SampleCountFlags | Citrus Engine",
    "keywords": "Enum SampleCountFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SampleCountFlags Fields None = 0 Sample1 = 1 Sample16 = 16 Sample2 = 2 Sample32 = 32 Sample4 = 4 Sample64 = 64 Sample8 = 8"
  },
  "api/SharpVulkan.Sampler.html": {
    "href": "api/SharpVulkan.Sampler.html",
    "title": "Struct Sampler | Citrus Engine",
    "keywords": "Struct Sampler Namespace SharpVulkan Assembly Lime.dll public struct Sampler : IEquatable<Sampler> Implements IEquatable<Sampler> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Sampler Null Field Value Sampler Methods Equals(Sampler) Indicates whether the current object is equal to another object of the same type. public bool Equals(Sampler other) Parameters other Sampler An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Sampler, Sampler) public static bool operator ==(Sampler left, Sampler right) Parameters left Sampler right Sampler Returns bool operator !=(Sampler, Sampler) public static bool operator !=(Sampler left, Sampler right) Parameters left Sampler right Sampler Returns bool"
  },
  "api/SharpVulkan.SamplerAddressMode.html": {
    "href": "api/SharpVulkan.SamplerAddressMode.html",
    "title": "Enum SamplerAddressMode | Citrus Engine",
    "keywords": "Enum SamplerAddressMode Namespace SharpVulkan Assembly Lime.dll public enum SamplerAddressMode Fields ClampToBorder = 3 ClampToEdge = 2 MirrorClampToEdge = 4 MirroredRepeat = 1 Repeat = 0"
  },
  "api/SharpVulkan.SamplerCreateFlags.html": {
    "href": "api/SharpVulkan.SamplerCreateFlags.html",
    "title": "Enum SamplerCreateFlags | Citrus Engine",
    "keywords": "Enum SamplerCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SamplerCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.SamplerCreateInfo.html": {
    "href": "api/SharpVulkan.SamplerCreateInfo.html",
    "title": "Struct SamplerCreateInfo | Citrus Engine",
    "keywords": "Struct SamplerCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct SamplerCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AddressModeU public SamplerAddressMode AddressModeU Field Value SamplerAddressMode AddressModeV public SamplerAddressMode AddressModeV Field Value SamplerAddressMode AddressModeW public SamplerAddressMode AddressModeW Field Value SamplerAddressMode AnisotropyEnable public RawBool AnisotropyEnable Field Value RawBool BorderColor public BorderColor BorderColor Field Value BorderColor CompareEnable public RawBool CompareEnable Field Value RawBool CompareOperation public CompareOperation CompareOperation Field Value CompareOperation Flags public SamplerCreateFlags Flags Field Value SamplerCreateFlags MagFilter public Filter MagFilter Field Value Filter MaxAnisotropy public float MaxAnisotropy Field Value float MaxLod public float MaxLod Field Value float MinFilter public Filter MinFilter Field Value Filter MinLod public float MinLod Field Value float MipLodBias public float MipLodBias Field Value float MipmapMode public SamplerMipmapMode MipmapMode Field Value SamplerMipmapMode Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType UnnormalizedCoordinates public RawBool UnnormalizedCoordinates Field Value RawBool"
  },
  "api/SharpVulkan.SamplerMipmapMode.html": {
    "href": "api/SharpVulkan.SamplerMipmapMode.html",
    "title": "Enum SamplerMipmapMode | Citrus Engine",
    "keywords": "Enum SamplerMipmapMode Namespace SharpVulkan Assembly Lime.dll public enum SamplerMipmapMode Fields Linear = 1 Nearest = 0"
  },
  "api/SharpVulkan.Semaphore.html": {
    "href": "api/SharpVulkan.Semaphore.html",
    "title": "Struct Semaphore | Citrus Engine",
    "keywords": "Struct Semaphore Namespace SharpVulkan Assembly Lime.dll public struct Semaphore : IEquatable<Semaphore> Implements IEquatable<Semaphore> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Semaphore Null Field Value Semaphore Methods Equals(Semaphore) Indicates whether the current object is equal to another object of the same type. public bool Equals(Semaphore other) Parameters other Semaphore An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Semaphore, Semaphore) public static bool operator ==(Semaphore left, Semaphore right) Parameters left Semaphore right Semaphore Returns bool operator !=(Semaphore, Semaphore) public static bool operator !=(Semaphore left, Semaphore right) Parameters left Semaphore right Semaphore Returns bool"
  },
  "api/SharpVulkan.SemaphoreCreateFlags.html": {
    "href": "api/SharpVulkan.SemaphoreCreateFlags.html",
    "title": "Enum SemaphoreCreateFlags | Citrus Engine",
    "keywords": "Enum SemaphoreCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SemaphoreCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.SemaphoreCreateInfo.html": {
    "href": "api/SharpVulkan.SemaphoreCreateInfo.html",
    "title": "Struct SemaphoreCreateInfo | Citrus Engine",
    "keywords": "Struct SemaphoreCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct SemaphoreCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public SemaphoreCreateFlags Flags Field Value SemaphoreCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ShaderModule.html": {
    "href": "api/SharpVulkan.ShaderModule.html",
    "title": "Struct ShaderModule | Citrus Engine",
    "keywords": "Struct ShaderModule Namespace SharpVulkan Assembly Lime.dll public struct ShaderModule : IEquatable<ShaderModule> Implements IEquatable<ShaderModule> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly ShaderModule Null Field Value ShaderModule Methods Equals(ShaderModule) Indicates whether the current object is equal to another object of the same type. public bool Equals(ShaderModule other) Parameters other ShaderModule An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(ShaderModule, ShaderModule) public static bool operator ==(ShaderModule left, ShaderModule right) Parameters left ShaderModule right ShaderModule Returns bool operator !=(ShaderModule, ShaderModule) public static bool operator !=(ShaderModule left, ShaderModule right) Parameters left ShaderModule right ShaderModule Returns bool"
  },
  "api/SharpVulkan.ShaderModuleCreateFlags.html": {
    "href": "api/SharpVulkan.ShaderModuleCreateFlags.html",
    "title": "Enum ShaderModuleCreateFlags | Citrus Engine",
    "keywords": "Enum ShaderModuleCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ShaderModuleCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.ShaderModuleCreateInfo.html": {
    "href": "api/SharpVulkan.ShaderModuleCreateInfo.html",
    "title": "Struct ShaderModuleCreateInfo | Citrus Engine",
    "keywords": "Struct ShaderModuleCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct ShaderModuleCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Code public nint Code Field Value nint CodeSize public PointerSize CodeSize Field Value PointerSize Flags public ShaderModuleCreateFlags Flags Field Value ShaderModuleCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.ShaderStageFlags.html": {
    "href": "api/SharpVulkan.ShaderStageFlags.html",
    "title": "Enum ShaderStageFlags | Citrus Engine",
    "keywords": "Enum ShaderStageFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum ShaderStageFlags Fields All = 2147483647 AllGraphics = Vertex | TessellationControl | TessellationEvaluation | Geometry | Fragment Compute = 32 Fragment = 16 Geometry = 8 None = 0 TessellationControl = 2 TessellationEvaluation = 4 Vertex = 1"
  },
  "api/SharpVulkan.SharingMode.html": {
    "href": "api/SharpVulkan.SharingMode.html",
    "title": "Enum SharingMode | Citrus Engine",
    "keywords": "Enum SharingMode Namespace SharpVulkan Assembly Lime.dll public enum SharingMode Fields Concurrent = 1 Exclusive = 0"
  },
  "api/SharpVulkan.SharpVulkanException.html": {
    "href": "api/SharpVulkan.SharpVulkanException.html",
    "title": "Class SharpVulkanException | Citrus Engine",
    "keywords": "Class SharpVulkanException Namespace SharpVulkan Assembly Lime.dll The base class for errors that occur in SharpVulkan. public class SharpVulkanException : Exception, ISerializable Inheritance object Exception SharpVulkanException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SharpVulkanException(Result) Initializes a new instance of the SharpVulkanException class. public SharpVulkanException(Result result) Parameters result Result The result code that caused this exception. Properties Result public Result Result { get; } Property Value Result"
  },
  "api/SharpVulkan.SparseBufferMemoryBindInfo.html": {
    "href": "api/SharpVulkan.SparseBufferMemoryBindInfo.html",
    "title": "Struct SparseBufferMemoryBindInfo | Citrus Engine",
    "keywords": "Struct SparseBufferMemoryBindInfo Namespace SharpVulkan Assembly Lime.dll public struct SparseBufferMemoryBindInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BindCount public uint BindCount Field Value uint Binds public nint Binds Field Value nint Buffer public Buffer Buffer Field Value Buffer"
  },
  "api/SharpVulkan.SparseImageFormatFlags.html": {
    "href": "api/SharpVulkan.SparseImageFormatFlags.html",
    "title": "Enum SparseImageFormatFlags | Citrus Engine",
    "keywords": "Enum SparseImageFormatFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SparseImageFormatFlags Fields AlignedMipSize = 2 None = 0 NonstandardBlockSize = 4 SingleMiptail = 1"
  },
  "api/SharpVulkan.SparseImageFormatProperties.html": {
    "href": "api/SharpVulkan.SparseImageFormatProperties.html",
    "title": "Struct SparseImageFormatProperties | Citrus Engine",
    "keywords": "Struct SparseImageFormatProperties Namespace SharpVulkan Assembly Lime.dll public struct SparseImageFormatProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AspectMask public ImageAspectFlags AspectMask Field Value ImageAspectFlags Flags public SparseImageFormatFlags Flags Field Value SparseImageFormatFlags ImageGranularity public Extent3D ImageGranularity Field Value Extent3D"
  },
  "api/SharpVulkan.SparseImageFormatProperties2.html": {
    "href": "api/SharpVulkan.SparseImageFormatProperties2.html",
    "title": "Struct SparseImageFormatProperties2 | Citrus Engine",
    "keywords": "Struct SparseImageFormatProperties2 Namespace SharpVulkan Assembly Lime.dll public struct SparseImageFormatProperties2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint Properties public SparseImageFormatProperties Properties Field Value SparseImageFormatProperties StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.SparseImageMemoryBind.html": {
    "href": "api/SharpVulkan.SparseImageMemoryBind.html",
    "title": "Struct SparseImageMemoryBind | Citrus Engine",
    "keywords": "Struct SparseImageMemoryBind Namespace SharpVulkan Assembly Lime.dll public struct SparseImageMemoryBind Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Extent public Extent3D Extent Field Value Extent3D Flags public SparseMemoryBindFlags Flags Field Value SparseMemoryBindFlags Memory public DeviceMemory Memory Field Value DeviceMemory MemoryOffset public ulong MemoryOffset Field Value ulong Offset public Offset3D Offset Field Value Offset3D Subresource public ImageSubresource Subresource Field Value ImageSubresource"
  },
  "api/SharpVulkan.SparseImageMemoryBindInfo.html": {
    "href": "api/SharpVulkan.SparseImageMemoryBindInfo.html",
    "title": "Struct SparseImageMemoryBindInfo | Citrus Engine",
    "keywords": "Struct SparseImageMemoryBindInfo Namespace SharpVulkan Assembly Lime.dll public struct SparseImageMemoryBindInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BindCount public uint BindCount Field Value uint Binds public nint Binds Field Value nint Image public Image Image Field Value Image"
  },
  "api/SharpVulkan.SparseImageMemoryRequirements.html": {
    "href": "api/SharpVulkan.SparseImageMemoryRequirements.html",
    "title": "Struct SparseImageMemoryRequirements | Citrus Engine",
    "keywords": "Struct SparseImageMemoryRequirements Namespace SharpVulkan Assembly Lime.dll public struct SparseImageMemoryRequirements Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields FormatProperties public SparseImageFormatProperties FormatProperties Field Value SparseImageFormatProperties ImageMipTailFirstLod public uint ImageMipTailFirstLod Field Value uint ImageMipTailOffset public ulong ImageMipTailOffset Field Value ulong ImageMipTailSize public ulong ImageMipTailSize Field Value ulong ImageMipTailStride public ulong ImageMipTailStride Field Value ulong"
  },
  "api/SharpVulkan.SparseImageOpaqueMemoryBindInfo.html": {
    "href": "api/SharpVulkan.SparseImageOpaqueMemoryBindInfo.html",
    "title": "Struct SparseImageOpaqueMemoryBindInfo | Citrus Engine",
    "keywords": "Struct SparseImageOpaqueMemoryBindInfo Namespace SharpVulkan Assembly Lime.dll public struct SparseImageOpaqueMemoryBindInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BindCount public uint BindCount Field Value uint Binds public nint Binds Field Value nint Image public Image Image Field Value Image"
  },
  "api/SharpVulkan.SparseMemoryBind.html": {
    "href": "api/SharpVulkan.SparseMemoryBind.html",
    "title": "Struct SparseMemoryBind | Citrus Engine",
    "keywords": "Struct SparseMemoryBind Namespace SharpVulkan Assembly Lime.dll public struct SparseMemoryBind Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public SparseMemoryBindFlags Flags Field Value SparseMemoryBindFlags Memory public DeviceMemory Memory Field Value DeviceMemory MemoryOffset public ulong MemoryOffset Field Value ulong ResourceOffset public ulong ResourceOffset Field Value ulong Size public ulong Size Field Value ulong"
  },
  "api/SharpVulkan.SparseMemoryBindFlags.html": {
    "href": "api/SharpVulkan.SparseMemoryBindFlags.html",
    "title": "Enum SparseMemoryBindFlags | Citrus Engine",
    "keywords": "Enum SparseMemoryBindFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SparseMemoryBindFlags Fields Metadata = 1 None = 0"
  },
  "api/SharpVulkan.SpecializationInfo.html": {
    "href": "api/SharpVulkan.SpecializationInfo.html",
    "title": "Struct SpecializationInfo | Citrus Engine",
    "keywords": "Struct SpecializationInfo Namespace SharpVulkan Assembly Lime.dll public struct SpecializationInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Data public nint Data Field Value nint DataSize public PointerSize DataSize Field Value PointerSize MapEntries public nint MapEntries Field Value nint MapEntryCount public uint MapEntryCount Field Value uint"
  },
  "api/SharpVulkan.SpecializationMapEntry.html": {
    "href": "api/SharpVulkan.SpecializationMapEntry.html",
    "title": "Struct SpecializationMapEntry | Citrus Engine",
    "keywords": "Struct SpecializationMapEntry Namespace SharpVulkan Assembly Lime.dll public struct SpecializationMapEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ConstantId public uint ConstantId Field Value uint Offset public uint Offset Field Value uint Size public PointerSize Size Field Value PointerSize"
  },
  "api/SharpVulkan.StencilFaceFlags.html": {
    "href": "api/SharpVulkan.StencilFaceFlags.html",
    "title": "Enum StencilFaceFlags | Citrus Engine",
    "keywords": "Enum StencilFaceFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum StencilFaceFlags Fields FaceBack = 2 FaceFront = 1 FrontAndBack = FaceFront | FaceBack None = 0"
  },
  "api/SharpVulkan.StencilOperation.html": {
    "href": "api/SharpVulkan.StencilOperation.html",
    "title": "Enum StencilOperation | Citrus Engine",
    "keywords": "Enum StencilOperation Namespace SharpVulkan Assembly Lime.dll public enum StencilOperation Fields DecrementAndClamp = 4 DecrementAndWrap = 7 IncrementAndClamp = 3 IncrementAndWrap = 6 Invert = 5 Keep = 0 Replace = 2 Zero = 1"
  },
  "api/SharpVulkan.StencilOperationState.html": {
    "href": "api/SharpVulkan.StencilOperationState.html",
    "title": "Struct StencilOperationState | Citrus Engine",
    "keywords": "Struct StencilOperationState Namespace SharpVulkan Assembly Lime.dll public struct StencilOperationState Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CompareMask public uint CompareMask Field Value uint CompareOperation public CompareOperation CompareOperation Field Value CompareOperation DepthFailOperation public StencilOperation DepthFailOperation Field Value StencilOperation FailOperation public StencilOperation FailOperation Field Value StencilOperation PassOperation public StencilOperation PassOperation Field Value StencilOperation Reference public uint Reference Field Value uint WriteMask public uint WriteMask Field Value uint"
  },
  "api/SharpVulkan.StructureType.html": {
    "href": "api/SharpVulkan.StructureType.html",
    "title": "Enum StructureType | Citrus Engine",
    "keywords": "Enum StructureType Namespace SharpVulkan Assembly Lime.dll public enum StructureType Fields AndroidSurfaceCreateInfo = 1000008000 ApplicationInfo = 0 BindSparseInfo = 7 BufferCreateInfo = 12 BufferMemoryBarrier = 44 BufferViewCreateInfo = 13 CommandBufferAllocateInfo = 40 CommandBufferBeginInfo = 42 CommandBufferInheritanceInfo = 41 CommandPoolCreateInfo = 39 CommandProcessCommandsInfo = 1000086002 CommandReserveSpaceForCommandsInfo = 1000086003 ComputePipelineCreateInfo = 29 CopyDescriptorSet = 36 DebugMarkerMarkerInfo = 1000022002 DebugMarkerObjectNameInfo = 1000022000 DebugMarkerObjectTagInfo = 1000022001 DebugReportCallbackCreateInfo = 1000011000 DedicatedAllocationBufferCreateInfo = 1000026001 DedicatedAllocationImageCreateInfo = 1000026000 DedicatedAllocationMemoryAllocateInfo = 1000026002 DescriptorPoolCreateInfo = 33 DescriptorSetAllocateInfo = 34 DescriptorSetLayoutCreateInfo = 32 DeviceCreateInfo = 3 DeviceEventInfo = 1000091001 DeviceGeneratedCommandsFeatures = 1000086005 DeviceGeneratedCommandsLimits = 1000086004 DeviceQueueCreateInfo = 2 DisplayEventInfo = 1000091002 DisplayModeCreateInfo = 1000002000 DisplayPowerInfo = 1000091000 DisplayPresentInfo = 1000003000 DisplaySurfaceCreateInfo = 1000002001 EventCreateInfo = 10 ExportMemoryAllocateInfo = 1000056001 ExportMemoryWin32HandleInfo = 1000057001 ExternalMemoryImageCreateInfo = 1000056000 FenceCreateInfo = 8 FormatProperties2 = 1000059002 FramebufferCreateInfo = 37 GraphicsPipelineCreateInfo = 28 ImageCreateInfo = 14 ImageFormatProperties2 = 1000059003 ImageMemoryBarrier = 45 ImageViewCreateInfo = 15 ImportMemoryWin32HandleInfo = 1000057000 IndirectCommandsLayoutCreateInfo = 1000086001 InstanceCreateInfo = 1 LoaderDeviceCreateInfo = 48 LoaderInstanceCreateInfo = 47 MappedMemoryRange = 6 MemoryAllocateInfo = 5 MemoryBarrier = 46 MirSurfaceCreateInfo = 1000007000 ObjectTableCreateInfo = 1000086000 PhysicalDeviceFeatures2 = 1000059000 PhysicalDeviceImageFormatInfo2 = 1000059004 PhysicalDeviceMemoryProperties2 = 1000059006 PhysicalDeviceProperties2 = 1000059001 PhysicalDeviceSparseImageFormatInfo2 = 1000059008 PipelineCacheCreateInfo = 17 PipelineColorBlendStateCreateInfo = 26 PipelineDepthStencilStateCreateInfo = 25 PipelineDynamicStateCreateInfo = 27 PipelineInputAssemblyStateCreateInfo = 20 PipelineLayoutCreateInfo = 30 PipelineMultisampleStateCreateInfo = 24 PipelineRasterizationStateCreateInfo = 23 PipelineRasterizationStateRasterizationOrder = 1000018000 PipelineShaderStageCreateInfo = 18 PipelineTessellationStateCreateInfo = 21 PipelineVertexInputStateCreateInfo = 19 PipelineViewportStateCreateInfo = 22 PresentInfo = 1000001001 QueryPoolCreateInfo = 11 QueueFamilyProperties2 = 1000059005 RenderPassBeginInfo = 43 RenderPassCreateInfo = 38 SamplerCreateInfo = 31 SemaphoreCreateInfo = 9 ShaderModuleCreateInfo = 16 SparseImageFormatProperties2 = 1000059007 SubmitInfo = 4 SurfaceCapabilities2 = 1000090000 SwapchainCounterCreateInfo = 1000091003 SwapchainCreateInfo = 1000001000 ValidationFlags = 1000061000 ViSurfaceCreateInfoNn = 1000062000 WaylandSurfaceCreateInfo = 1000006000 Win32KeyedMutexAcquireReleaseInfo = 1000058000 Win32SurfaceCreateInfo = 1000009000 WriteDescriptorSet = 35 XcbSurfaceCreateInfo = 1000005000 XlibSurfaceCreateInfo = 1000004000"
  },
  "api/SharpVulkan.SubmitInfo.html": {
    "href": "api/SharpVulkan.SubmitInfo.html",
    "title": "Struct SubmitInfo | Citrus Engine",
    "keywords": "Struct SubmitInfo Namespace SharpVulkan Assembly Lime.dll public struct SubmitInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CommandBufferCount public uint CommandBufferCount Field Value uint CommandBuffers public nint CommandBuffers Field Value nint Next public nint Next Field Value nint SignalSemaphoreCount public uint SignalSemaphoreCount Field Value uint SignalSemaphores public nint SignalSemaphores Field Value nint StructureType public StructureType StructureType Field Value StructureType WaitDstStageMask public nint WaitDstStageMask Field Value nint WaitSemaphoreCount public uint WaitSemaphoreCount Field Value uint WaitSemaphores public nint WaitSemaphores Field Value nint"
  },
  "api/SharpVulkan.SubpassContents.html": {
    "href": "api/SharpVulkan.SubpassContents.html",
    "title": "Enum SubpassContents | Citrus Engine",
    "keywords": "Enum SubpassContents Namespace SharpVulkan Assembly Lime.dll public enum SubpassContents Fields Inline = 0 SecondaryCommandBuffers = 1"
  },
  "api/SharpVulkan.SubpassDependency.html": {
    "href": "api/SharpVulkan.SubpassDependency.html",
    "title": "Struct SubpassDependency | Citrus Engine",
    "keywords": "Struct SubpassDependency Namespace SharpVulkan Assembly Lime.dll public struct SubpassDependency Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DependencyFlags public DependencyFlags DependencyFlags Field Value DependencyFlags DestinationAccessMask public AccessFlags DestinationAccessMask Field Value AccessFlags DestinationStageMask public PipelineStageFlags DestinationStageMask Field Value PipelineStageFlags DestinationSubpass public uint DestinationSubpass Field Value uint SourceAccessMask public AccessFlags SourceAccessMask Field Value AccessFlags SourceStageMask public PipelineStageFlags SourceStageMask Field Value PipelineStageFlags SourceSubpass public uint SourceSubpass Field Value uint"
  },
  "api/SharpVulkan.SubpassDescription.html": {
    "href": "api/SharpVulkan.SubpassDescription.html",
    "title": "Struct SubpassDescription | Citrus Engine",
    "keywords": "Struct SubpassDescription Namespace SharpVulkan Assembly Lime.dll public struct SubpassDescription Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ColorAttachmentCount public uint ColorAttachmentCount Field Value uint ColorAttachments public nint ColorAttachments Field Value nint DepthStencilAttachment public nint DepthStencilAttachment Field Value nint Flags public SubpassDescriptionFlags Flags Field Value SubpassDescriptionFlags InputAttachmentCount public uint InputAttachmentCount Field Value uint InputAttachments public nint InputAttachments Field Value nint PipelineBindPoint public PipelineBindPoint PipelineBindPoint Field Value PipelineBindPoint PreserveAttachmentCount public uint PreserveAttachmentCount Field Value uint PreserveAttachments public nint PreserveAttachments Field Value nint ResolveAttachments public nint ResolveAttachments Field Value nint"
  },
  "api/SharpVulkan.SubpassDescriptionFlags.html": {
    "href": "api/SharpVulkan.SubpassDescriptionFlags.html",
    "title": "Enum SubpassDescriptionFlags | Citrus Engine",
    "keywords": "Enum SubpassDescriptionFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SubpassDescriptionFlags Fields None = 0"
  },
  "api/SharpVulkan.SubresourceLayout.html": {
    "href": "api/SharpVulkan.SubresourceLayout.html",
    "title": "Struct SubresourceLayout | Citrus Engine",
    "keywords": "Struct SubresourceLayout Namespace SharpVulkan Assembly Lime.dll public struct SubresourceLayout Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ArrayPitch public ulong ArrayPitch Field Value ulong DepthPitch public ulong DepthPitch Field Value ulong Offset public ulong Offset Field Value ulong RowPitch public ulong RowPitch Field Value ulong Size public ulong Size Field Value ulong"
  },
  "api/SharpVulkan.Surface.html": {
    "href": "api/SharpVulkan.Surface.html",
    "title": "Struct Surface | Citrus Engine",
    "keywords": "Struct Surface Namespace SharpVulkan Assembly Lime.dll public struct Surface : IEquatable<Surface> Implements IEquatable<Surface> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Surface Null Field Value Surface Methods Equals(Surface) Indicates whether the current object is equal to another object of the same type. public bool Equals(Surface other) Parameters other Surface An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Surface, Surface) public static bool operator ==(Surface left, Surface right) Parameters left Surface right Surface Returns bool operator !=(Surface, Surface) public static bool operator !=(Surface left, Surface right) Parameters left Surface right Surface Returns bool"
  },
  "api/SharpVulkan.SurfaceCapabilities.html": {
    "href": "api/SharpVulkan.SurfaceCapabilities.html",
    "title": "Struct SurfaceCapabilities | Citrus Engine",
    "keywords": "Struct SurfaceCapabilities Namespace SharpVulkan Assembly Lime.dll public struct SurfaceCapabilities Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CurrentExtent public Extent2D CurrentExtent Field Value Extent2D CurrentTransform public SurfaceTransformFlags CurrentTransform Field Value SurfaceTransformFlags MaxImageArrayLayers public uint MaxImageArrayLayers Field Value uint MaxImageCount public uint MaxImageCount Field Value uint MaxImageExtent public Extent2D MaxImageExtent Field Value Extent2D MinImageCount public uint MinImageCount Field Value uint MinImageExtent public Extent2D MinImageExtent Field Value Extent2D SupportedCompositeAlpha public CompositeAlphaFlags SupportedCompositeAlpha Field Value CompositeAlphaFlags SupportedTransforms public SurfaceTransformFlags SupportedTransforms Field Value SurfaceTransformFlags SupportedUsageFlags public ImageUsageFlags SupportedUsageFlags Field Value ImageUsageFlags"
  },
  "api/SharpVulkan.SurfaceCapabilities2.html": {
    "href": "api/SharpVulkan.SurfaceCapabilities2.html",
    "title": "Struct SurfaceCapabilities2 | Citrus Engine",
    "keywords": "Struct SurfaceCapabilities2 Namespace SharpVulkan Assembly Lime.dll public struct SurfaceCapabilities2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields CurrentExtent public Extent2D CurrentExtent Field Value Extent2D CurrentTransform public SurfaceTransformFlags CurrentTransform Field Value SurfaceTransformFlags MaxImageArrayLayers public uint MaxImageArrayLayers Field Value uint MaxImageCount public uint MaxImageCount Field Value uint MaxImageExtent public Extent2D MaxImageExtent Field Value Extent2D MinImageCount public uint MinImageCount Field Value uint MinImageExtent public Extent2D MinImageExtent Field Value Extent2D Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType SupportedCompositeAlpha public CompositeAlphaFlags SupportedCompositeAlpha Field Value CompositeAlphaFlags SupportedSurfaceCounters public uint SupportedSurfaceCounters Field Value uint SupportedTransforms public SurfaceTransformFlags SupportedTransforms Field Value SurfaceTransformFlags SupportedUsageFlags public ImageUsageFlags SupportedUsageFlags Field Value ImageUsageFlags"
  },
  "api/SharpVulkan.SurfaceCounterFlags.html": {
    "href": "api/SharpVulkan.SurfaceCounterFlags.html",
    "title": "Enum SurfaceCounterFlags | Citrus Engine",
    "keywords": "Enum SurfaceCounterFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SurfaceCounterFlags Fields None = 0 VerticalBlank = 1"
  },
  "api/SharpVulkan.SurfaceFormat.html": {
    "href": "api/SharpVulkan.SurfaceFormat.html",
    "title": "Struct SurfaceFormat | Citrus Engine",
    "keywords": "Struct SurfaceFormat Namespace SharpVulkan Assembly Lime.dll public struct SurfaceFormat Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ColorSpace public ColorSpace ColorSpace Field Value ColorSpace Format public Format Format Field Value Format"
  },
  "api/SharpVulkan.SurfaceTransformFlags.html": {
    "href": "api/SharpVulkan.SurfaceTransformFlags.html",
    "title": "Enum SurfaceTransformFlags | Citrus Engine",
    "keywords": "Enum SurfaceTransformFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SurfaceTransformFlags Fields HorizontalMirror = 16 HorizontalMirrorRotate180 = 64 HorizontalMirrorRotate270 = 128 HorizontalMirrorRotate90 = 32 Identity = 1 Inherit = 256 None = 0 Rotate180 = 4 Rotate270 = 8 Rotate90 = 2"
  },
  "api/SharpVulkan.Swapchain.html": {
    "href": "api/SharpVulkan.Swapchain.html",
    "title": "Struct Swapchain | Citrus Engine",
    "keywords": "Struct Swapchain Namespace SharpVulkan Assembly Lime.dll public struct Swapchain : IEquatable<Swapchain> Implements IEquatable<Swapchain> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Null public static readonly Swapchain Null Field Value Swapchain Methods Equals(Swapchain) Indicates whether the current object is equal to another object of the same type. public bool Equals(Swapchain other) Parameters other Swapchain An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(Swapchain, Swapchain) public static bool operator ==(Swapchain left, Swapchain right) Parameters left Swapchain right Swapchain Returns bool operator !=(Swapchain, Swapchain) public static bool operator !=(Swapchain left, Swapchain right) Parameters left Swapchain right Swapchain Returns bool"
  },
  "api/SharpVulkan.SwapchainCounterCreateInfo.html": {
    "href": "api/SharpVulkan.SwapchainCounterCreateInfo.html",
    "title": "Struct SwapchainCounterCreateInfo | Citrus Engine",
    "keywords": "Struct SwapchainCounterCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct SwapchainCounterCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType SurfaceCounters public uint SurfaceCounters Field Value uint"
  },
  "api/SharpVulkan.SwapchainCreateFlags.html": {
    "href": "api/SharpVulkan.SwapchainCreateFlags.html",
    "title": "Enum SwapchainCreateFlags | Citrus Engine",
    "keywords": "Enum SwapchainCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum SwapchainCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.SwapchainCreateInfo.html": {
    "href": "api/SharpVulkan.SwapchainCreateInfo.html",
    "title": "Struct SwapchainCreateInfo | Citrus Engine",
    "keywords": "Struct SwapchainCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct SwapchainCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Clipped public RawBool Clipped Field Value RawBool CompositeAlpha public CompositeAlphaFlags CompositeAlpha Field Value CompositeAlphaFlags Flags public SwapchainCreateFlags Flags Field Value SwapchainCreateFlags ImageArrayLayers public uint ImageArrayLayers Field Value uint ImageColorSpace public ColorSpace ImageColorSpace Field Value ColorSpace ImageExtent public Extent2D ImageExtent Field Value Extent2D ImageFormat public Format ImageFormat Field Value Format ImageSharingMode public SharingMode ImageSharingMode Field Value SharingMode ImageUsage public ImageUsageFlags ImageUsage Field Value ImageUsageFlags MinImageCount public uint MinImageCount Field Value uint Next public nint Next Field Value nint OldSwapchain public Swapchain OldSwapchain Field Value Swapchain PreTransform public SurfaceTransformFlags PreTransform Field Value SurfaceTransformFlags PresentMode public PresentMode PresentMode Field Value PresentMode QueueFamilyIndexCount public uint QueueFamilyIndexCount Field Value uint QueueFamilyIndices public nint QueueFamilyIndices Field Value nint StructureType public StructureType StructureType Field Value StructureType Surface public Surface Surface Field Value Surface"
  },
  "api/SharpVulkan.SystemAllocationScope.html": {
    "href": "api/SharpVulkan.SystemAllocationScope.html",
    "title": "Enum SystemAllocationScope | Citrus Engine",
    "keywords": "Enum SystemAllocationScope Namespace SharpVulkan Assembly Lime.dll public enum SystemAllocationScope Fields Cache = 2 Command = 0 Device = 3 Instance = 4 Object = 1"
  },
  "api/SharpVulkan.ValidationCheck.html": {
    "href": "api/SharpVulkan.ValidationCheck.html",
    "title": "Enum ValidationCheck | Citrus Engine",
    "keywords": "Enum ValidationCheck Namespace SharpVulkan Assembly Lime.dll public enum ValidationCheck Fields All = 0"
  },
  "api/SharpVulkan.ValidationFlags.html": {
    "href": "api/SharpVulkan.ValidationFlags.html",
    "title": "Struct ValidationFlags | Citrus Engine",
    "keywords": "Struct ValidationFlags Namespace SharpVulkan Assembly Lime.dll public struct ValidationFlags Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields DisabledValidationCheckCount public uint DisabledValidationCheckCount Field Value uint DisabledValidationChecks public nint DisabledValidationChecks Field Value nint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.Version.html": {
    "href": "api/SharpVulkan.Version.html",
    "title": "Struct Version | Citrus Engine",
    "keywords": "Struct Version Namespace SharpVulkan Assembly Lime.dll public struct Version Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Version(uint, uint, uint) public Version(uint major, uint minor, uint patch) Parameters major uint minor uint patch uint Properties Major public uint Major { get; } Property Value uint Minor public uint Minor { get; } Property Value uint Patch public uint Patch { get; } Property Value uint Operators implicit operator uint(Version) public static implicit operator uint(Version version) Parameters version Version Returns uint"
  },
  "api/SharpVulkan.VertexInputAttributeDescription.html": {
    "href": "api/SharpVulkan.VertexInputAttributeDescription.html",
    "title": "Struct VertexInputAttributeDescription | Citrus Engine",
    "keywords": "Struct VertexInputAttributeDescription Namespace SharpVulkan Assembly Lime.dll public struct VertexInputAttributeDescription Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Binding public uint Binding Field Value uint Format public Format Format Field Value Format Location public uint Location Field Value uint Offset public uint Offset Field Value uint"
  },
  "api/SharpVulkan.VertexInputBindingDescription.html": {
    "href": "api/SharpVulkan.VertexInputBindingDescription.html",
    "title": "Struct VertexInputBindingDescription | Citrus Engine",
    "keywords": "Struct VertexInputBindingDescription Namespace SharpVulkan Assembly Lime.dll public struct VertexInputBindingDescription Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Binding public uint Binding Field Value uint InputRate public VertexInputRate InputRate Field Value VertexInputRate Stride public uint Stride Field Value uint"
  },
  "api/SharpVulkan.VertexInputRate.html": {
    "href": "api/SharpVulkan.VertexInputRate.html",
    "title": "Enum VertexInputRate | Citrus Engine",
    "keywords": "Enum VertexInputRate Namespace SharpVulkan Assembly Lime.dll public enum VertexInputRate Fields Instance = 1 Vertex = 0"
  },
  "api/SharpVulkan.Viewport.html": {
    "href": "api/SharpVulkan.Viewport.html",
    "title": "Struct Viewport | Citrus Engine",
    "keywords": "Struct Viewport Namespace SharpVulkan Assembly Lime.dll public struct Viewport Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Viewport(float, float, float, float, float, float) public Viewport(float x, float y, float width, float height, float minDepth = 0, float maxDepth = 1) Parameters x float y float width float height float minDepth float maxDepth float Fields Height public float Height Field Value float MaxDepth public float MaxDepth Field Value float MinDepth public float MinDepth Field Value float Width public float Width Field Value float X public float X Field Value float Y public float Y Field Value float"
  },
  "api/SharpVulkan.Vulkan.html": {
    "href": "api/SharpVulkan.Vulkan.html",
    "title": "Class Vulkan | Citrus Engine",
    "keywords": "Class Vulkan Namespace SharpVulkan Assembly Lime.dll public static class Vulkan Inheritance object Vulkan Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ApiVersion public static readonly Version ApiVersion Field Value Version AttachmentUnused public const uint AttachmentUnused = 4294967295 Field Value uint QueueFamilyIgnored public const uint QueueFamilyIgnored = 4294967295 Field Value uint RemainingArrayLayers public const uint RemainingArrayLayers = 4294967295 Field Value uint RemainingMipLevels public const uint RemainingMipLevels = 4294967295 Field Value uint WholeSize public const ulong WholeSize = 18446744073709551615 Field Value ulong Properties InstanceLayerProperties public static LayerProperties[] InstanceLayerProperties { get; } Property Value LayerProperties[] Methods CreateInstance(ref InstanceCreateInfo, AllocationCallbacks*) public static Instance CreateInstance(ref InstanceCreateInfo createInfo, AllocationCallbacks* allocator = null) Parameters createInfo InstanceCreateInfo allocator AllocationCallbacks* Returns Instance GetInstanceExtensionProperties(string) public static ExtensionProperties[] GetInstanceExtensionProperties(string layerName = null) Parameters layerName string Returns ExtensionProperties[]"
  },
  "api/SharpVulkan.Win32KeyedMutexAcquireReleaseInfo.html": {
    "href": "api/SharpVulkan.Win32KeyedMutexAcquireReleaseInfo.html",
    "title": "Struct Win32KeyedMutexAcquireReleaseInfo | Citrus Engine",
    "keywords": "Struct Win32KeyedMutexAcquireReleaseInfo Namespace SharpVulkan Assembly Lime.dll public struct Win32KeyedMutexAcquireReleaseInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AcquireCount public uint AcquireCount Field Value uint AcquireKeys public nint AcquireKeys Field Value nint AcquireSyncs public nint AcquireSyncs Field Value nint AcquireTimeoutMilliseconds public nint AcquireTimeoutMilliseconds Field Value nint Next public nint Next Field Value nint ReleaseCount public uint ReleaseCount Field Value uint ReleaseKeys public nint ReleaseKeys Field Value nint ReleaseSyncs public nint ReleaseSyncs Field Value nint StructureType public StructureType StructureType Field Value StructureType"
  },
  "api/SharpVulkan.Win32SurfaceCreateFlags.html": {
    "href": "api/SharpVulkan.Win32SurfaceCreateFlags.html",
    "title": "Enum Win32SurfaceCreateFlags | Citrus Engine",
    "keywords": "Enum Win32SurfaceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum Win32SurfaceCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.Win32SurfaceCreateInfo.html": {
    "href": "api/SharpVulkan.Win32SurfaceCreateInfo.html",
    "title": "Struct Win32SurfaceCreateInfo | Citrus Engine",
    "keywords": "Struct Win32SurfaceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct Win32SurfaceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags public Win32SurfaceCreateFlags Flags Field Value Win32SurfaceCreateFlags InstanceHandle public nint InstanceHandle Field Value nint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType WindowHandle public nint WindowHandle Field Value nint"
  },
  "api/SharpVulkan.WriteDescriptorSet.html": {
    "href": "api/SharpVulkan.WriteDescriptorSet.html",
    "title": "Struct WriteDescriptorSet | Citrus Engine",
    "keywords": "Struct WriteDescriptorSet Namespace SharpVulkan Assembly Lime.dll public struct WriteDescriptorSet Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BufferInfo public nint BufferInfo Field Value nint DescriptorCount public uint DescriptorCount Field Value uint DescriptorType public DescriptorType DescriptorType Field Value DescriptorType DestinationArrayElement public uint DestinationArrayElement Field Value uint DestinationBinding public uint DestinationBinding Field Value uint DestinationSet public DescriptorSet DestinationSet Field Value DescriptorSet ImageInfo public nint ImageInfo Field Value nint Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType TexelBufferView public nint TexelBufferView Field Value nint"
  },
  "api/SharpVulkan.XcbSurfaceCreateFlags.html": {
    "href": "api/SharpVulkan.XcbSurfaceCreateFlags.html",
    "title": "Enum XcbSurfaceCreateFlags | Citrus Engine",
    "keywords": "Enum XcbSurfaceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum XcbSurfaceCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.XcbSurfaceCreateInfo.html": {
    "href": "api/SharpVulkan.XcbSurfaceCreateInfo.html",
    "title": "Struct XcbSurfaceCreateInfo | Citrus Engine",
    "keywords": "Struct XcbSurfaceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct XcbSurfaceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Connection public nint Connection Field Value nint Flags public XcbSurfaceCreateFlags Flags Field Value XcbSurfaceCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType Window public uint Window Field Value uint"
  },
  "api/SharpVulkan.XlibSurfaceCreateFlags.html": {
    "href": "api/SharpVulkan.XlibSurfaceCreateFlags.html",
    "title": "Enum XlibSurfaceCreateFlags | Citrus Engine",
    "keywords": "Enum XlibSurfaceCreateFlags Namespace SharpVulkan Assembly Lime.dll [Flags] public enum XlibSurfaceCreateFlags Fields None = 0"
  },
  "api/SharpVulkan.XlibSurfaceCreateInfo.html": {
    "href": "api/SharpVulkan.XlibSurfaceCreateInfo.html",
    "title": "Struct XlibSurfaceCreateInfo | Citrus Engine",
    "keywords": "Struct XlibSurfaceCreateInfo Namespace SharpVulkan Assembly Lime.dll public struct XlibSurfaceCreateInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Dpy public nint Dpy Field Value nint Flags public XlibSurfaceCreateFlags Flags Field Value XlibSurfaceCreateFlags Next public nint Next Field Value nint StructureType public StructureType StructureType Field Value StructureType Window public uint Window Field Value uint"
  },
  "api/SharpVulkan.html": {
    "href": "api/SharpVulkan.html",
    "title": "Namespace SharpVulkan | Citrus Engine",
    "keywords": "Namespace SharpVulkan Classes ResultExtensions SharpVulkanException The base class for errors that occur in SharpVulkan. Vulkan Structs AllocationCallbacks AndroidSurfaceCreateInfo ApplicationInfo AttachmentDescription AttachmentReference BindSparseInfo Buffer BufferCopy BufferCreateInfo BufferImageCopy BufferMemoryBarrier BufferView BufferViewCreateInfo ClearAttachment ClearColorValue ClearColorValue.Float32Array ClearColorValue.Int32Array ClearColorValue.Uint32Array ClearDepthStencilValue ClearRect ClearValue CommandBuffer CommandBufferAllocateInfo CommandBufferBeginInfo CommandBufferInheritanceInfo CommandPool CommandPoolCreateInfo CommandProcessCommandsInfo CommandReserveSpaceForCommandsInfo ComponentMapping ComputePipelineCreateInfo CopyDescriptorSet DebugMarkerMarkerInfo DebugMarkerMarkerInfo.ColorArray DebugMarkerObjectNameInfo DebugMarkerObjectTagInfo DebugReportCallback DebugReportCallbackCreateInfo DedicatedAllocationBufferCreateInfo DedicatedAllocationImageCreateInfo DedicatedAllocationMemoryAllocateInfo DescriptorBufferInfo DescriptorImageInfo DescriptorPool DescriptorPoolCreateInfo DescriptorPoolSize DescriptorSet DescriptorSetAllocateInfo DescriptorSetLayout DescriptorSetLayoutBinding DescriptorSetLayoutCreateInfo Device DeviceCreateInfo DeviceEventInfo DeviceGeneratedCommandsFeatures DeviceGeneratedCommandsLimits DeviceMemory DeviceQueueCreateInfo DispatchIndirectCommand Display DisplayEventInfo DisplayMode DisplayModeCreateInfo DisplayModeParameters DisplayModeProperties DisplayPlaneCapabilities DisplayPlaneProperties DisplayPowerInfo DisplayPresentInfo DisplayProperties DisplaySurfaceCreateInfo DrawIndexedIndirectCommand DrawIndirectCommand Event EventCreateInfo ExportMemoryAllocateInfo ExportMemoryWin32HandleInfo ExtensionProperties ExtensionProperties.ExtensionNameArray Extent2D Extent3D ExternalImageFormatProperties ExternalMemoryImageCreateInfo Fence FenceCreateInfo FormatProperties FormatProperties2 Framebuffer FramebufferCreateInfo GraphicsPipelineCreateInfo Image ImageBlit ImageBlit.DestinationOffsetsArray ImageBlit.SourceOffsetsArray ImageCopy ImageCreateInfo ImageFormatProperties ImageFormatProperties2 ImageMemoryBarrier ImageResolve ImageSubresource ImageSubresourceLayers ImageSubresourceRange ImageView ImageViewCreateInfo ImportMemoryWin32HandleInfo IndirectCommandsLayout IndirectCommandsLayoutCreateInfo IndirectCommandsLayoutToken IndirectCommandsToken Instance InstanceCreateInfo LayerProperties LayerProperties.DescriptionArray LayerProperties.LayerNameArray MappedMemoryRange MemoryAllocateInfo MemoryBarrier MemoryHeap MemoryRequirements MemoryType ObjectTable ObjectTableCreateInfo ObjectTableDescriptorSetEntry ObjectTableEntry ObjectTableIndexBufferEntry ObjectTablePipelineEntry ObjectTablePushConstantEntry ObjectTableVertexBufferEntry Offset2D Offset3D PhysicalDevice PhysicalDeviceFeatures PhysicalDeviceFeatures2 PhysicalDeviceImageFormatInfo2 PhysicalDeviceLimits PhysicalDeviceLimits.LineWidthRangeArray PhysicalDeviceLimits.MaxComputeWorkGroupCountArray PhysicalDeviceLimits.MaxComputeWorkGroupSizeArray PhysicalDeviceLimits.MaxViewportDimensionsArray PhysicalDeviceLimits.PointSizeRangeArray PhysicalDeviceLimits.ViewportBoundsRangeArray PhysicalDeviceMemoryProperties PhysicalDeviceMemoryProperties.MemoryHeapsArray PhysicalDeviceMemoryProperties.MemoryTypesArray PhysicalDeviceMemoryProperties2 PhysicalDeviceProperties PhysicalDeviceProperties.DeviceNameArray PhysicalDeviceProperties.PipelineCacheUuidArray PhysicalDeviceProperties2 PhysicalDeviceSparseImageFormatInfo2 PhysicalDeviceSparseProperties Pipeline PipelineCache PipelineCacheCreateInfo PipelineColorBlendAttachmentState PipelineColorBlendStateCreateInfo PipelineColorBlendStateCreateInfo.BlendConstantsArray PipelineDepthStencilStateCreateInfo PipelineDynamicStateCreateInfo PipelineInputAssemblyStateCreateInfo PipelineLayout PipelineLayoutCreateInfo PipelineMultisampleStateCreateInfo PipelineRasterizationStateCreateInfo PipelineRasterizationStateRasterizationOrder PipelineShaderStageCreateInfo PipelineTessellationStateCreateInfo PipelineVertexInputStateCreateInfo PipelineViewportStateCreateInfo PointerSize The maximum number of bytes to which a pointer can point. Use for a count that must span the full range of a pointer. Equivalent to Windows type SIZE_T. PresentInfo PushConstantRange QueryPool QueryPoolCreateInfo Queue QueueFamilyProperties QueueFamilyProperties2 RawBool A boolean value stored on 4 bytes (instead of 1 in .NET). RawColor4 Interop type for a Color4 (RGBA, 4 floats). RawInt4 Interop type for a Int4 (4 ints). Rect2D RenderPass RenderPassBeginInfo RenderPassCreateInfo Sampler SamplerCreateInfo Semaphore SemaphoreCreateInfo ShaderModule ShaderModuleCreateInfo SparseBufferMemoryBindInfo SparseImageFormatProperties SparseImageFormatProperties2 SparseImageMemoryBind SparseImageMemoryBindInfo SparseImageMemoryRequirements SparseImageOpaqueMemoryBindInfo SparseMemoryBind SpecializationInfo SpecializationMapEntry StencilOperationState SubmitInfo SubpassDependency SubpassDescription SubresourceLayout Surface SurfaceCapabilities SurfaceCapabilities2 SurfaceFormat Swapchain SwapchainCounterCreateInfo SwapchainCreateInfo ValidationFlags Version VertexInputAttributeDescription VertexInputBindingDescription Viewport Win32KeyedMutexAcquireReleaseInfo Win32SurfaceCreateInfo WriteDescriptorSet XcbSurfaceCreateInfo XlibSurfaceCreateInfo Enums AccessFlags AndroidSurfaceCreateFlags AttachmentDescriptionFlags AttachmentLoadOperation AttachmentStoreOperation BlendFactor BlendOperation BorderColor BufferCreateFlags BufferUsageFlags BufferViewCreateFlags ColorComponentFlags ColorSpace CommandBufferLevel CommandBufferResetFlags CommandBufferUsageFlags CommandPoolCreateFlags CommandPoolResetFlags CommandPoolTrimFlags CompareOperation ComponentSwizzle CompositeAlphaFlags CullModeFlags DebugReportError DebugReportFlags DebugReportObjectType DependencyFlags DescriptorPoolCreateFlags DescriptorPoolResetFlags DescriptorSetLayoutCreateFlags DescriptorType DeviceCreateFlags DeviceEventType DeviceQueueCreateFlags DisplayEventType DisplayModeCreateFlags DisplayPlaneAlphaFlags DisplayPowerState DisplaySurfaceCreateFlags DynamicState EventCreateFlags ExternalMemoryFeatureFlags ExternalMemoryHandleTypeFlags FenceCreateFlags Filter Format FormatFeatureFlags FramebufferCreateFlags FrontFace ImageAspectFlags ImageCreateFlags ImageLayout ImageTiling ImageType ImageUsageFlags ImageViewCreateFlags ImageViewType IndexType IndirectCommandsLayoutUsageFlags IndirectCommandsTokenType InstanceCreateFlags InternalAllocationType LogicOperation MemoryHeapFlags MemoryMapFlags MemoryPropertyFlags ObjectEntryType ObjectEntryUsageFlags PhysicalDeviceType PipelineBindPoint PipelineCacheCreateFlags PipelineCacheHeaderVersion PipelineColorBlendStateCreateFlags PipelineCreateFlags PipelineDepthStencilStateCreateFlags PipelineDynamicStateCreateFlags PipelineInputAssemblyStateCreateFlags PipelineLayoutCreateFlags PipelineMultisampleStateCreateFlags PipelineRasterizationStateCreateFlags PipelineShaderStageCreateFlags PipelineStageFlags PipelineTessellationStateCreateFlags PipelineVertexInputStateCreateFlags PipelineViewportStateCreateFlags PolygonMode PresentMode PrimitiveTopology QueryControlFlags QueryPipelineStatisticFlags QueryPoolCreateFlags QueryResultFlags QueryType QueueFlags RasterizationOrder RenderPassCreateFlags Result SampleCountFlags SamplerAddressMode SamplerCreateFlags SamplerMipmapMode SemaphoreCreateFlags ShaderModuleCreateFlags ShaderStageFlags SharingMode SparseImageFormatFlags SparseMemoryBindFlags StencilFaceFlags StencilOperation StructureType SubpassContents SubpassDescriptionFlags SurfaceCounterFlags SurfaceTransformFlags SwapchainCreateFlags SystemAllocationScope ValidationCheck VertexInputRate Win32SurfaceCreateFlags XcbSurfaceCreateFlags XlibSurfaceCreateFlags"
  },
  "api/YuzuGenerated.LimeCloner.html": {
    "href": "api/YuzuGenerated.LimeCloner.html",
    "title": "Class LimeCloner | Citrus Engine",
    "keywords": "Class LimeCloner Namespace YuzuGenerated Assembly Lime.dll public class LimeCloner : ClonerGenBase Inheritance object AbstractCloner Cloner ClonerGenBase LimeCloner Inherited Members ClonerGenBase.clonerCache ClonerGenBase.ValueCopyCloner(Cloner, object) Cloner.Instance Cloner.ShallowObject(object) Cloner.Deep<T>(T) Cloner.IsCopyable(Type, CommonOptions) Cloner.GetCloner(Type) Cloner.GetCloner<T>() Cloner.GetMerger(Type) Cloner.GetMerger<T>() Cloner.DeepObject(object) Cloner.MergeObject(object, object) AbstractCloner.Options AbstractCloner.Shallow<T>(T) AbstractCloner.Merge<T>(T, T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Clone_Lime_RenderOptimizer__ContentBox(Cloner, object) protected static ContentBox Clone_Lime_RenderOptimizer__ContentBox(Cloner cl, object src) Parameters cl Cloner src object Returns ContentBox Clone_Lime_RenderOptimizer__ContentPlane(Cloner, object) protected static ContentPlane Clone_Lime_RenderOptimizer__ContentPlane(Cloner cl, object src) Parameters cl Cloner src object Returns ContentPlane Clone_Lime_RenderOptimizer__ContentRectangle(Cloner, object) protected static ContentRectangle Clone_Lime_RenderOptimizer__ContentRectangle(Cloner cl, object src) Parameters cl Cloner src object Returns ContentRectangle Clone_Lime_RenderOptimizer__ContentSizeComponent(Cloner, object) protected static ContentSizeComponent Clone_Lime_RenderOptimizer__ContentSizeComponent(Cloner cl, object src) Parameters cl Cloner src object Returns ContentSizeComponent Clone_Lime_Schema__LayerMetadata__LayerVersion(Cloner, object) protected static LayerMetadata.LayerVersion Clone_Lime_Schema__LayerMetadata__LayerVersion(Cloner cl, object src) Parameters cl Cloner src object Returns LayerMetadata.LayerVersion Clone_Lime_SignedDistanceField__SDFInnerShadowMaterial(Cloner, object) protected static SDFInnerShadowMaterial Clone_Lime_SignedDistanceField__SDFInnerShadowMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns SDFInnerShadowMaterial Clone_Lime_SignedDistanceField__SDFShadowMaterial(Cloner, object) protected static SDFShadowMaterial Clone_Lime_SignedDistanceField__SDFShadowMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns SDFShadowMaterial Clone_Lime_SignedDistanceField__SignedDistanceFieldMaterial(Cloner, object) protected static SignedDistanceFieldMaterial Clone_Lime_SignedDistanceField__SignedDistanceFieldMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns SignedDistanceFieldMaterial Clone_Lime__AlphaIntensityComponent(Cloner, object) protected static AlphaIntensityComponent Clone_Lime__AlphaIntensityComponent(Cloner cl, object src) Parameters cl Cloner src object Returns AlphaIntensityComponent Clone_Lime__AlphaIntensityMaterial(Cloner, object) protected static AlphaIntensityMaterial Clone_Lime__AlphaIntensityMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns AlphaIntensityMaterial Clone_Lime__Animation(Cloner, object) protected static Animation Clone_Lime__Animation(Cloner cl, object src) Parameters cl Cloner src object Returns Animation Clone_Lime__AnimationBlender(Cloner, object) protected static AnimationBlender Clone_Lime__AnimationBlender(Cloner cl, object src) Parameters cl Cloner src object Returns AnimationBlender Clone_Lime__AnimationBlending(Cloner, object) protected static AnimationBlending Clone_Lime__AnimationBlending(Cloner cl, object src) Parameters cl Cloner src object Returns AnimationBlending Clone_Lime__AnimationClip(Cloner, object) protected static AnimationClip Clone_Lime__AnimationClip(Cloner cl, object src) Parameters cl Cloner src object Returns AnimationClip Clone_Lime__AnimationTrack(Cloner, object) protected static AnimationTrack Clone_Lime__AnimationTrack(Cloner cl, object src) Parameters cl Cloner src object Returns AnimationTrack Clone_Lime__Animation__AnimationData(Cloner, object) protected static Animation.AnimationData Clone_Lime__Animation__AnimationData(Cloner cl, object src) Parameters cl Cloner src object Returns Animation.AnimationData Clone_Lime__Animator_Alignment(Cloner, object) protected static Animator<Alignment> Clone_Lime__Animator_Alignment(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Alignment> Clone_Lime__Animator_Anchors(Cloner, object) protected static Animator<Anchors> Clone_Lime__Animator_Anchors(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Anchors> Clone_Lime__Animator_AudioAction(Cloner, object) protected static Animator<AudioAction> Clone_Lime__Animator_AudioAction(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<AudioAction> Clone_Lime__Animator_Blending(Cloner, object) protected static Animator<Blending> Clone_Lime__Animator_Blending(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Blending> Clone_Lime__Animator_Boolean(Cloner, object) protected static Animator<bool> Clone_Lime__Animator_Boolean(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<bool> Clone_Lime__Animator_ClipMethod(Cloner, object) protected static Animator<ClipMethod> Clone_Lime__Animator_ClipMethod(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<ClipMethod> Clone_Lime__Animator_Color4(Cloner, object) protected static Animator<Color4> Clone_Lime__Animator_Color4(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Color4> Clone_Lime__Animator_EmissionType(Cloner, object) protected static Animator<EmissionType> Clone_Lime__Animator_EmissionType(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<EmissionType> Clone_Lime__Animator_EmitterShape(Cloner, object) protected static Animator<EmitterShape> Clone_Lime__Animator_EmitterShape(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<EmitterShape> Clone_Lime__Animator_HAlignment(Cloner, object) protected static Animator<HAlignment> Clone_Lime__Animator_HAlignment(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<HAlignment> Clone_Lime__Animator_ISprite(Cloner, object) protected static Animator<ISprite> Clone_Lime__Animator_ISprite(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<ISprite> Clone_Lime__Animator_ITexture(Cloner, object) protected static Animator<ITexture> Clone_Lime__Animator_ITexture(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<ITexture> Clone_Lime__Animator_Int32(Cloner, object) protected static Animator<int> Clone_Lime__Animator_Int32(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<int> Clone_Lime__Animator_LayoutDirection(Cloner, object) protected static Animator<LayoutDirection> Clone_Lime__Animator_LayoutDirection(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<LayoutDirection> Clone_Lime__Animator_List_Animesh__SkinnedVertex(Cloner, object) protected static Animator<List<Animesh.SkinnedVertex>> Clone_Lime__Animator_List_Animesh__SkinnedVertex(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<List<Animesh.SkinnedVertex>> Clone_Lime__Animator_Matrix44(Cloner, object) protected static Animator<Matrix44> Clone_Lime__Animator_Matrix44(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Matrix44> Clone_Lime__Animator_MovieAction(Cloner, object) protected static Animator<MovieAction> Clone_Lime__Animator_MovieAction(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<MovieAction> Clone_Lime__Animator_NodeReference_Camera3D(Cloner, object) protected static Animator<NodeReference<Camera3D>> Clone_Lime__Animator_NodeReference_Camera3D(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<NodeReference<Camera3D>> Clone_Lime__Animator_NodeReference_Node3D(Cloner, object) protected static Animator<NodeReference<Node3D>> Clone_Lime__Animator_NodeReference_Node3D(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<NodeReference<Node3D>> Clone_Lime__Animator_NodeReference_Spline(Cloner, object) protected static Animator<NodeReference<Spline>> Clone_Lime__Animator_NodeReference_Spline(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<NodeReference<Spline>> Clone_Lime__Animator_NodeReference_Spline3D(Cloner, object) protected static Animator<NodeReference<Spline3D>> Clone_Lime__Animator_NodeReference_Spline3D(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<NodeReference<Spline3D>> Clone_Lime__Animator_NodeReference_Widget(Cloner, object) protected static Animator<NodeReference<Widget>> Clone_Lime__Animator_NodeReference_Widget(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<NodeReference<Widget>> Clone_Lime__Animator_NumericRange(Cloner, object) protected static Animator<NumericRange> Clone_Lime__Animator_NumericRange(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<NumericRange> Clone_Lime__Animator_ParticlesLinkage(Cloner, object) protected static Animator<ParticlesLinkage> Clone_Lime__Animator_ParticlesLinkage(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<ParticlesLinkage> Clone_Lime__Animator_Quaternion(Cloner, object) protected static Animator<Quaternion> Clone_Lime__Animator_Quaternion(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Quaternion> Clone_Lime__Animator_RenderTarget(Cloner, object) protected static Animator<RenderTarget> Clone_Lime__Animator_RenderTarget(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<RenderTarget> Clone_Lime__Animator_SerializableFont(Cloner, object) protected static Animator<SerializableFont> Clone_Lime__Animator_SerializableFont(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<SerializableFont> Clone_Lime__Animator_SerializableSample(Cloner, object) protected static Animator<SerializableSample> Clone_Lime__Animator_SerializableSample(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<SerializableSample> Clone_Lime__Animator_ShaderId(Cloner, object) protected static Animator<ShaderId> Clone_Lime__Animator_ShaderId(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<ShaderId> Clone_Lime__Animator_Single(Cloner, object) protected static Animator<float> Clone_Lime__Animator_Single(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<float> Clone_Lime__Animator_String(Cloner, object) protected static Animator<string> Clone_Lime__Animator_String(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<string> Clone_Lime__Animator_TextOverflowMode(Cloner, object) protected static Animator<TextOverflowMode> Clone_Lime__Animator_TextOverflowMode(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<TextOverflowMode> Clone_Lime__Animator_Thickness(Cloner, object) protected static Animator<Thickness> Clone_Lime__Animator_Thickness(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Thickness> Clone_Lime__Animator_VAlignment(Cloner, object) protected static Animator<VAlignment> Clone_Lime__Animator_VAlignment(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<VAlignment> Clone_Lime__Animator_Vector2(Cloner, object) protected static Animator<Vector2> Clone_Lime__Animator_Vector2(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Vector2> Clone_Lime__Animator_Vector3(Cloner, object) protected static Animator<Vector3> Clone_Lime__Animator_Vector3(Cloner cl, object src) Parameters cl Cloner src object Returns Animator<Vector3> Clone_Lime__Animesh(Cloner, object) protected static Animesh Clone_Lime__Animesh(Cloner cl, object src) Parameters cl Cloner src object Returns Animesh Clone_Lime__Audio(Cloner, object) protected static Audio Clone_Lime__Audio(Cloner cl, object src) Parameters cl Cloner src object Returns Audio Clone_Lime__AudioRandomizerComponent(Cloner, object) protected static AudioRandomizerComponent Clone_Lime__AudioRandomizerComponent(Cloner cl, object src) Parameters cl Cloner src object Returns AudioRandomizerComponent Clone_Lime__BezierKeyframe_NumericRange(Cloner, object) protected static BezierKeyframe<NumericRange> Clone_Lime__BezierKeyframe_NumericRange(Cloner cl, object src) Parameters cl Cloner src object Returns BezierKeyframe<NumericRange> Clone_Lime__BezierKeyframe_Single(Cloner, object) protected static BezierKeyframe<float> Clone_Lime__BezierKeyframe_Single(Cloner cl, object src) Parameters cl Cloner src object Returns BezierKeyframe<float> Clone_Lime__BezierKeyframe_Vector2(Cloner, object) protected static BezierKeyframe<Vector2> Clone_Lime__BezierKeyframe_Vector2(Cloner cl, object src) Parameters cl Cloner src object Returns BezierKeyframe<Vector2> Clone_Lime__BezierKeyframe_Vector3(Cloner, object) protected static BezierKeyframe<Vector3> Clone_Lime__BezierKeyframe_Vector3(Cloner cl, object src) Parameters cl Cloner src object Returns BezierKeyframe<Vector3> Clone_Lime__BlendingOption(Cloner, object) protected static BlendingOption Clone_Lime__BlendingOption(Cloner cl, object src) Parameters cl Cloner src object Returns BlendingOption Clone_Lime__BloomMaterial(Cloner, object) protected static BloomMaterial Clone_Lime__BloomMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns BloomMaterial Clone_Lime__BlurMaterial(Cloner, object) protected static BlurMaterial Clone_Lime__BlurMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns BlurMaterial Clone_Lime__Bone(Cloner, object) protected static Bone Clone_Lime__Bone(Cloner cl, object src) Parameters cl Cloner src object Returns Bone Clone_Lime__BoneArray(Cloner, object) protected static BoneArray Clone_Lime__BoneArray(Cloner cl, object src) Parameters cl Cloner src object Returns BoneArray Clone_Lime__Button(Cloner, object) protected static Button Clone_Lime__Button(Cloner cl, object src) Parameters cl Cloner src object Returns Button Clone_Lime__Camera3D(Cloner, object) protected static Camera3D Clone_Lime__Camera3D(Cloner cl, object src) Parameters cl Cloner src object Returns Camera3D Clone_Lime__CheckBox(Cloner, object) protected static CheckBox Clone_Lime__CheckBox(Cloner cl, object src) Parameters cl Cloner src object Returns CheckBox Clone_Lime__Color4SimpleAnimationCurve(Cloner, object) protected static Color4SimpleAnimationCurve Clone_Lime__Color4SimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns Color4SimpleAnimationCurve Clone_Lime__ColorCorrectionMaterial(Cloner, object) protected static ColorCorrectionMaterial Clone_Lime__ColorCorrectionMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns ColorCorrectionMaterial Clone_Lime__ComboBox(Cloner, object) protected static ComboBox Clone_Lime__ComboBox(Cloner cl, object src) Parameters cl Cloner src object Returns ComboBox Clone_Lime__CommonMaterial(Cloner, object) protected static CommonMaterial Clone_Lime__CommonMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns CommonMaterial Clone_Lime__DissolveComponent(Cloner, object) protected static DissolveComponent Clone_Lime__DissolveComponent(Cloner cl, object src) Parameters cl Cloner src object Returns DissolveComponent Clone_Lime__DissolveMaterial(Cloner, object) protected static DissolveMaterial Clone_Lime__DissolveMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns DissolveMaterial Clone_Lime__DistortionMaterial(Cloner, object) protected static DistortionMaterial Clone_Lime__DistortionMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns DistortionMaterial Clone_Lime__DistortionMesh(Cloner, object) protected static DistortionMesh Clone_Lime__DistortionMesh(Cloner cl, object src) Parameters cl Cloner src object Returns DistortionMesh Clone_Lime__DistortionMeshPoint(Cloner, object) protected static DistortionMeshPoint Clone_Lime__DistortionMeshPoint(Cloner cl, object src) Parameters cl Cloner src object Returns DistortionMeshPoint Clone_Lime__DocumentHeader(Cloner, object) protected static DocumentHeader Clone_Lime__DocumentHeader(Cloner cl, object src) Parameters cl Cloner src object Returns DocumentHeader Clone_Lime__DropDownList(Cloner, object) protected static DropDownList Clone_Lime__DropDownList(Cloner cl, object src) Parameters cl Cloner src object Returns DropDownList Clone_Lime__EditBox(Cloner, object) protected static EditBox Clone_Lime__EditBox(Cloner cl, object src) Parameters cl Cloner src object Returns EditBox Clone_Lime__EmitterShapePoint(Cloner, object) protected static EmitterShapePoint Clone_Lime__EmitterShapePoint(Cloner cl, object src) Parameters cl Cloner src object Returns EmitterShapePoint Clone_Lime__FXAAMaterial(Cloner, object) protected static FXAAMaterial Clone_Lime__FXAAMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns FXAAMaterial Clone_Lime__FilesystemAssetBundle__FileInfo(Cloner, object) protected static FilesystemAssetBundle.FileInfo Clone_Lime__FilesystemAssetBundle__FileInfo(Cloner cl, object src) Parameters cl Cloner src object Returns FilesystemAssetBundle.FileInfo Clone_Lime__FloatBezierAnimationCurve(Cloner, object) protected static FloatBezierAnimationCurve Clone_Lime__FloatBezierAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns FloatBezierAnimationCurve Clone_Lime__FloatSimpleAnimationCurve(Cloner, object) protected static FloatSimpleAnimationCurve Clone_Lime__FloatSimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns FloatSimpleAnimationCurve Clone_Lime__FlowLayout(Cloner, object) protected static FlowLayout Clone_Lime__FlowLayout(Cloner cl, object src) Parameters cl Cloner src object Returns FlowLayout Clone_Lime__Folder__Descriptor(Cloner, object) protected static Folder.Descriptor Clone_Lime__Folder__Descriptor(Cloner cl, object src) Parameters cl Cloner src object Returns Folder.Descriptor Clone_Lime__Font(Cloner, object) protected static Font Clone_Lime__Font(Cloner cl, object src) Parameters cl Cloner src object Returns Font Clone_Lime__FontChar(Cloner, object) protected static FontChar Clone_Lime__FontChar(Cloner cl, object src) Parameters cl Cloner src object Returns FontChar Clone_Lime__Frame(Cloner, object) protected static Frame Clone_Lime__Frame(Cloner cl, object src) Parameters cl Cloner src object Returns Frame Clone_Lime__GradientComponent(Cloner, object) protected static GradientComponent Clone_Lime__GradientComponent(Cloner cl, object src) Parameters cl Cloner src object Returns GradientComponent Clone_Lime__GradientControlPoint(Cloner, object) protected static GradientControlPoint Clone_Lime__GradientControlPoint(Cloner cl, object src) Parameters cl Cloner src object Returns GradientControlPoint Clone_Lime__GradientMaterial(Cloner, object) protected static GradientMaterial Clone_Lime__GradientMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns GradientMaterial Clone_Lime__HBoxLayout(Cloner, object) protected static HBoxLayout Clone_Lime__HBoxLayout(Cloner cl, object src) Parameters cl Cloner src object Returns HBoxLayout Clone_Lime__HSLComponent(Cloner, object) protected static HSLComponent Clone_Lime__HSLComponent(Cloner cl, object src) Parameters cl Cloner src object Returns HSLComponent Clone_Lime__HSplitter(Cloner, object) protected static HSplitter Clone_Lime__HSplitter(Cloner cl, object src) Parameters cl Cloner src object Returns HSplitter Clone_Lime__Image(Cloner, object) protected static Image Clone_Lime__Image(Cloner cl, object src) Parameters cl Cloner src object Returns Image Clone_Lime__ImageCombiner(Cloner, object) protected static ImageCombiner Clone_Lime__ImageCombiner(Cloner cl, object src) Parameters cl Cloner src object Returns ImageCombiner Clone_Lime__IntSimpleAnimationCurve(Cloner, object) protected static IntSimpleAnimationCurve Clone_Lime__IntSimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns IntSimpleAnimationCurve Clone_Lime__LayerMetadata(Cloner, object) protected static LayerMetadata Clone_Lime__LayerMetadata(Cloner cl, object src) Parameters cl Cloner src object Returns LayerMetadata Clone_Lime__LayerMetadata__LayerVersion(Cloner, object) protected static LayerMetadata.LayerVersion Clone_Lime__LayerMetadata__LayerVersion(Cloner cl, object src) Parameters cl Cloner src object Returns LayerMetadata.LayerVersion Clone_Lime__Layout(Cloner, object) protected static Layout Clone_Lime__Layout(Cloner cl, object src) Parameters cl Cloner src object Returns Layout Clone_Lime__LayoutConstraints(Cloner, object) protected static LayoutConstraints Clone_Lime__LayoutConstraints(Cloner cl, object src) Parameters cl Cloner src object Returns LayoutConstraints Clone_Lime__LinearLayout(Cloner, object) protected static LinearLayout Clone_Lime__LinearLayout(Cloner cl, object src) Parameters cl Cloner src object Returns LinearLayout Clone_Lime__Marker(Cloner, object) protected static Marker Clone_Lime__Marker(Cloner cl, object src) Parameters cl Cloner src object Returns Marker Clone_Lime__MarkerBlending(Cloner, object) protected static MarkerBlending Clone_Lime__MarkerBlending(Cloner cl, object src) Parameters cl Cloner src object Returns MarkerBlending Clone_Lime__Matrix44SimpleAnimationCurve(Cloner, object) protected static Matrix44SimpleAnimationCurve Clone_Lime__Matrix44SimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns Matrix44SimpleAnimationCurve Clone_Lime__Mesh3D(Cloner, object) protected static Mesh3D Clone_Lime__Mesh3D(Cloner cl, object src) Parameters cl Cloner src object Returns Mesh3D Clone_Lime__Mesh_Mesh3D__Vertex(Cloner, object) protected static Mesh<Mesh3D.Vertex> Clone_Lime__Mesh_Mesh3D__Vertex(Cloner cl, object src) Parameters cl Cloner src object Returns Mesh<Mesh3D.Vertex> Clone_Lime__Model3D(Cloner, object) protected static Model3D Clone_Lime__Model3D(Cloner cl, object src) Parameters cl Cloner src object Returns Model3D Clone_Lime__Model3DAttachmentParser__MeshOptionFormat(Cloner, object) protected static Model3DAttachmentParser.MeshOptionFormat Clone_Lime__Model3DAttachmentParser__MeshOptionFormat(Cloner cl, object src) Parameters cl Cloner src object Returns Model3DAttachmentParser.MeshOptionFormat Clone_Lime__Model3DAttachmentParser__ModelAnimationFormat(Cloner, object) protected static Model3DAttachmentParser.ModelAnimationFormat Clone_Lime__Model3DAttachmentParser__ModelAnimationFormat(Cloner cl, object src) Parameters cl Cloner src object Returns Model3DAttachmentParser.ModelAnimationFormat Clone_Lime__Model3DAttachmentParser__ModelAttachmentFormat(Cloner, object) protected static Model3DAttachmentParser.ModelAttachmentFormat Clone_Lime__Model3DAttachmentParser__ModelAttachmentFormat(Cloner cl, object src) Parameters cl Cloner src object Returns Model3DAttachmentParser.ModelAttachmentFormat Clone_Lime__Model3DAttachmentParser__ModelComponentsFormat(Cloner, object) protected static Model3DAttachmentParser.ModelComponentsFormat Clone_Lime__Model3DAttachmentParser__ModelComponentsFormat(Cloner cl, object src) Parameters cl Cloner src object Returns Model3DAttachmentParser.ModelComponentsFormat Clone_Lime__Model3DAttachmentParser__ModelMarkerFormat(Cloner, object) protected static Model3DAttachmentParser.ModelMarkerFormat Clone_Lime__Model3DAttachmentParser__ModelMarkerFormat(Cloner cl, object src) Parameters cl Cloner src object Returns Model3DAttachmentParser.ModelMarkerFormat Clone_Lime__Model3DAttachmentParser__UVAnimationFormat(Cloner, object) protected static Model3DAttachmentParser.UVAnimationFormat Clone_Lime__Model3DAttachmentParser__UVAnimationFormat(Cloner cl, object src) Parameters cl Cloner src object Returns Model3DAttachmentParser.UVAnimationFormat Clone_Lime__Model3DAttachment__MaterialRemap(Cloner, object) protected static Model3DAttachment.MaterialRemap Clone_Lime__Model3DAttachment__MaterialRemap(Cloner cl, object src) Parameters cl Cloner src object Returns Model3DAttachment.MaterialRemap Clone_Lime__Model3D__MeshData(Cloner, object) protected static Model3D.MeshData Clone_Lime__Model3D__MeshData(Cloner cl, object src) Parameters cl Cloner src object Returns Model3D.MeshData Clone_Lime__Movie(Cloner, object) protected static Movie Clone_Lime__Movie(Cloner cl, object src) Parameters cl Cloner src object Returns Movie Clone_Lime__NineGrid(Cloner, object) protected static NineGrid Clone_Lime__NineGrid(Cloner cl, object src) Parameters cl Cloner src object Returns NineGrid Clone_Lime__Node3D(Cloner, object) protected static Node3D Clone_Lime__Node3D(Cloner cl, object src) Parameters cl Cloner src object Returns Node3D Clone_Lime__NodeReference_Camera3D(Cloner, object) protected static NodeReference<Camera3D> Clone_Lime__NodeReference_Camera3D(Cloner cl, object src) Parameters cl Cloner src object Returns NodeReference<Camera3D> Clone_Lime__NodeReference_Spline(Cloner, object) protected static NodeReference<Spline> Clone_Lime__NodeReference_Spline(Cloner cl, object src) Parameters cl Cloner src object Returns NodeReference<Spline> Clone_Lime__NodeReference_Widget(Cloner, object) protected static NodeReference<Widget> Clone_Lime__NodeReference_Widget(Cloner cl, object src) Parameters cl Cloner src object Returns NodeReference<Widget> Clone_Lime__Node__AssetBundlePathComponent(Cloner, object) protected static Node.AssetBundlePathComponent Clone_Lime__Node__AssetBundlePathComponent(Cloner cl, object src) Parameters cl Cloner src object Returns Node.AssetBundlePathComponent Clone_Lime__NoiseMaterial(Cloner, object) protected static NoiseMaterial Clone_Lime__NoiseMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns NoiseMaterial Clone_Lime__NumericEditBox(Cloner, object) protected static NumericEditBox Clone_Lime__NumericEditBox(Cloner cl, object src) Parameters cl Cloner src object Returns NumericEditBox Clone_Lime__NumericRangeBezierAnimationCurve(Cloner, object) protected static NumericRangeBezierAnimationCurve Clone_Lime__NumericRangeBezierAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns NumericRangeBezierAnimationCurve Clone_Lime__NumericRangeSimpleAnimationCurve(Cloner, object) protected static NumericRangeSimpleAnimationCurve Clone_Lime__NumericRangeSimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns NumericRangeSimpleAnimationCurve Clone_Lime__PackedAssetBundle__Manifest(Cloner, object) protected static PackedAssetBundle.Manifest Clone_Lime__PackedAssetBundle__Manifest(Cloner cl, object src) Parameters cl Cloner src object Returns PackedAssetBundle.Manifest Clone_Lime__ParticleEmitter(Cloner, object) protected static ParticleEmitter Clone_Lime__ParticleEmitter(Cloner cl, object src) Parameters cl Cloner src object Returns ParticleEmitter Clone_Lime__ParticleModifier(Cloner, object) protected static ParticleModifier Clone_Lime__ParticleModifier(Cloner cl, object src) Parameters cl Cloner src object Returns ParticleModifier Clone_Lime__ParticlesMagnet(Cloner, object) protected static ParticlesMagnet Clone_Lime__ParticlesMagnet(Cloner cl, object src) Parameters cl Cloner src object Returns ParticlesMagnet Clone_Lime__PointObject(Cloner, object) protected static PointObject Clone_Lime__PointObject(Cloner cl, object src) Parameters cl Cloner src object Returns PointObject Clone_Lime__Polyline(Cloner, object) protected static Polyline Clone_Lime__Polyline(Cloner cl, object src) Parameters cl Cloner src object Returns Polyline Clone_Lime__PolylinePoint(Cloner, object) protected static PolylinePoint Clone_Lime__PolylinePoint(Cloner cl, object src) Parameters cl Cloner src object Returns PolylinePoint Clone_Lime__PostProcessingComponent(Cloner, object) protected static PostProcessingComponent Clone_Lime__PostProcessingComponent(Cloner cl, object src) Parameters cl Cloner src object Returns PostProcessingComponent Clone_Lime__PreviewMetadata(Cloner, object) protected static PreviewMetadata Clone_Lime__PreviewMetadata(Cloner cl, object src) Parameters cl Cloner src object Returns PreviewMetadata Clone_Lime__QuaternionCompressedAnimationCurve(Cloner, object) protected static QuaternionCompressedAnimationCurve Clone_Lime__QuaternionCompressedAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns QuaternionCompressedAnimationCurve Clone_Lime__QuaternionSimpleAnimationCurve(Cloner, object) protected static QuaternionSimpleAnimationCurve Clone_Lime__QuaternionSimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns QuaternionSimpleAnimationCurve Clone_Lime__RichText(Cloner, object) protected static RichText Clone_Lime__RichText(Cloner cl, object src) Parameters cl Cloner src object Returns RichText Clone_Lime__SerializableCompoundFont(Cloner, object) protected static SerializableCompoundFont Clone_Lime__SerializableCompoundFont(Cloner cl, object src) Parameters cl Cloner src object Returns SerializableCompoundFont Clone_Lime__SerializableFont(Cloner, object) protected static SerializableFont Clone_Lime__SerializableFont(Cloner cl, object src) Parameters cl Cloner src object Returns SerializableFont Clone_Lime__SerializableSample(Cloner, object) protected static SerializableSample Clone_Lime__SerializableSample(Cloner cl, object src) Parameters cl Cloner src object Returns SerializableSample Clone_Lime__SerializableSprite(Cloner, object) protected static SerializableSprite Clone_Lime__SerializableSprite(Cloner cl, object src) Parameters cl Cloner src object Returns SerializableSprite Clone_Lime__SerializableTexture(Cloner, object) protected static SerializableTexture Clone_Lime__SerializableTexture(Cloner cl, object src) Parameters cl Cloner src object Returns SerializableTexture Clone_Lime__ShadowParams(Cloner, object) protected static ShadowParams Clone_Lime__ShadowParams(Cloner cl, object src) Parameters cl Cloner src object Returns ShadowParams Clone_Lime__SharpenMaterial(Cloner, object) protected static SharpenMaterial Clone_Lime__SharpenMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns SharpenMaterial Clone_Lime__SignedDistanceFieldComponent(Cloner, object) protected static SignedDistanceFieldComponent Clone_Lime__SignedDistanceFieldComponent(Cloner cl, object src) Parameters cl Cloner src object Returns SignedDistanceFieldComponent Clone_Lime__SimpleAnimationCurve_Alignment(Cloner, object) protected static SimpleAnimationCurve<Alignment> Clone_Lime__SimpleAnimationCurve_Alignment(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<Alignment> Clone_Lime__SimpleAnimationCurve_Anchors(Cloner, object) protected static SimpleAnimationCurve<Anchors> Clone_Lime__SimpleAnimationCurve_Anchors(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<Anchors> Clone_Lime__SimpleAnimationCurve_AudioAction(Cloner, object) protected static SimpleAnimationCurve<AudioAction> Clone_Lime__SimpleAnimationCurve_AudioAction(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<AudioAction> Clone_Lime__SimpleAnimationCurve_Blending(Cloner, object) protected static SimpleAnimationCurve<Blending> Clone_Lime__SimpleAnimationCurve_Blending(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<Blending> Clone_Lime__SimpleAnimationCurve_Boolean(Cloner, object) protected static SimpleAnimationCurve<bool> Clone_Lime__SimpleAnimationCurve_Boolean(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<bool> Clone_Lime__SimpleAnimationCurve_ClipMethod(Cloner, object) protected static SimpleAnimationCurve<ClipMethod> Clone_Lime__SimpleAnimationCurve_ClipMethod(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<ClipMethod> Clone_Lime__SimpleAnimationCurve_EmissionType(Cloner, object) protected static SimpleAnimationCurve<EmissionType> Clone_Lime__SimpleAnimationCurve_EmissionType(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<EmissionType> Clone_Lime__SimpleAnimationCurve_EmitterShape(Cloner, object) protected static SimpleAnimationCurve<EmitterShape> Clone_Lime__SimpleAnimationCurve_EmitterShape(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<EmitterShape> Clone_Lime__SimpleAnimationCurve_HAlignment(Cloner, object) protected static SimpleAnimationCurve<HAlignment> Clone_Lime__SimpleAnimationCurve_HAlignment(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<HAlignment> Clone_Lime__SimpleAnimationCurve_ISprite(Cloner, object) protected static SimpleAnimationCurve<ISprite> Clone_Lime__SimpleAnimationCurve_ISprite(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<ISprite> Clone_Lime__SimpleAnimationCurve_ITexture(Cloner, object) protected static SimpleAnimationCurve<ITexture> Clone_Lime__SimpleAnimationCurve_ITexture(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<ITexture> Clone_Lime__SimpleAnimationCurve_LayoutDirection(Cloner, object) protected static SimpleAnimationCurve<LayoutDirection> Clone_Lime__SimpleAnimationCurve_LayoutDirection(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<LayoutDirection> Clone_Lime__SimpleAnimationCurve_MovieAction(Cloner, object) protected static SimpleAnimationCurve<MovieAction> Clone_Lime__SimpleAnimationCurve_MovieAction(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<MovieAction> Clone_Lime__SimpleAnimationCurve_NodeReference_Camera3D(Cloner, object) protected static SimpleAnimationCurve<NodeReference<Camera3D>> Clone_Lime__SimpleAnimationCurve_NodeReference_Camera3D(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<NodeReference<Camera3D>> Clone_Lime__SimpleAnimationCurve_NodeReference_Node3D(Cloner, object) protected static SimpleAnimationCurve<NodeReference<Node3D>> Clone_Lime__SimpleAnimationCurve_NodeReference_Node3D(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<NodeReference<Node3D>> Clone_Lime__SimpleAnimationCurve_NodeReference_Spline(Cloner, object) protected static SimpleAnimationCurve<NodeReference<Spline>> Clone_Lime__SimpleAnimationCurve_NodeReference_Spline(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<NodeReference<Spline>> Clone_Lime__SimpleAnimationCurve_NodeReference_Spline3D(Cloner, object) protected static SimpleAnimationCurve<NodeReference<Spline3D>> Clone_Lime__SimpleAnimationCurve_NodeReference_Spline3D(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<NodeReference<Spline3D>> Clone_Lime__SimpleAnimationCurve_NodeReference_Widget(Cloner, object) protected static SimpleAnimationCurve<NodeReference<Widget>> Clone_Lime__SimpleAnimationCurve_NodeReference_Widget(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<NodeReference<Widget>> Clone_Lime__SimpleAnimationCurve_ParticlesLinkage(Cloner, object) protected static SimpleAnimationCurve<ParticlesLinkage> Clone_Lime__SimpleAnimationCurve_ParticlesLinkage(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<ParticlesLinkage> Clone_Lime__SimpleAnimationCurve_RenderTarget(Cloner, object) protected static SimpleAnimationCurve<RenderTarget> Clone_Lime__SimpleAnimationCurve_RenderTarget(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<RenderTarget> Clone_Lime__SimpleAnimationCurve_SerializableFont(Cloner, object) protected static SimpleAnimationCurve<SerializableFont> Clone_Lime__SimpleAnimationCurve_SerializableFont(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<SerializableFont> Clone_Lime__SimpleAnimationCurve_SerializableSample(Cloner, object) protected static SimpleAnimationCurve<SerializableSample> Clone_Lime__SimpleAnimationCurve_SerializableSample(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<SerializableSample> Clone_Lime__SimpleAnimationCurve_ShaderId(Cloner, object) protected static SimpleAnimationCurve<ShaderId> Clone_Lime__SimpleAnimationCurve_ShaderId(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<ShaderId> Clone_Lime__SimpleAnimationCurve_String(Cloner, object) protected static SimpleAnimationCurve<string> Clone_Lime__SimpleAnimationCurve_String(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<string> Clone_Lime__SimpleAnimationCurve_TextOverflowMode(Cloner, object) protected static SimpleAnimationCurve<TextOverflowMode> Clone_Lime__SimpleAnimationCurve_TextOverflowMode(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<TextOverflowMode> Clone_Lime__SimpleAnimationCurve_VAlignment(Cloner, object) protected static SimpleAnimationCurve<VAlignment> Clone_Lime__SimpleAnimationCurve_VAlignment(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleAnimationCurve<VAlignment> Clone_Lime__SimpleKeyframe_Alignment(Cloner, object) protected static SimpleKeyframe<Alignment> Clone_Lime__SimpleKeyframe_Alignment(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Alignment> Clone_Lime__SimpleKeyframe_Anchors(Cloner, object) protected static SimpleKeyframe<Anchors> Clone_Lime__SimpleKeyframe_Anchors(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Anchors> Clone_Lime__SimpleKeyframe_AudioAction(Cloner, object) protected static SimpleKeyframe<AudioAction> Clone_Lime__SimpleKeyframe_AudioAction(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<AudioAction> Clone_Lime__SimpleKeyframe_Blending(Cloner, object) protected static SimpleKeyframe<Blending> Clone_Lime__SimpleKeyframe_Blending(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Blending> Clone_Lime__SimpleKeyframe_Boolean(Cloner, object) protected static SimpleKeyframe<bool> Clone_Lime__SimpleKeyframe_Boolean(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<bool> Clone_Lime__SimpleKeyframe_ClipMethod(Cloner, object) protected static SimpleKeyframe<ClipMethod> Clone_Lime__SimpleKeyframe_ClipMethod(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<ClipMethod> Clone_Lime__SimpleKeyframe_Color4(Cloner, object) protected static SimpleKeyframe<Color4> Clone_Lime__SimpleKeyframe_Color4(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Color4> Clone_Lime__SimpleKeyframe_EmissionType(Cloner, object) protected static SimpleKeyframe<EmissionType> Clone_Lime__SimpleKeyframe_EmissionType(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<EmissionType> Clone_Lime__SimpleKeyframe_EmitterShape(Cloner, object) protected static SimpleKeyframe<EmitterShape> Clone_Lime__SimpleKeyframe_EmitterShape(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<EmitterShape> Clone_Lime__SimpleKeyframe_HAlignment(Cloner, object) protected static SimpleKeyframe<HAlignment> Clone_Lime__SimpleKeyframe_HAlignment(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<HAlignment> Clone_Lime__SimpleKeyframe_ISprite(Cloner, object) protected static SimpleKeyframe<ISprite> Clone_Lime__SimpleKeyframe_ISprite(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<ISprite> Clone_Lime__SimpleKeyframe_ITexture(Cloner, object) protected static SimpleKeyframe<ITexture> Clone_Lime__SimpleKeyframe_ITexture(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<ITexture> Clone_Lime__SimpleKeyframe_Int32(Cloner, object) protected static SimpleKeyframe<int> Clone_Lime__SimpleKeyframe_Int32(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<int> Clone_Lime__SimpleKeyframe_LayoutDirection(Cloner, object) protected static SimpleKeyframe<LayoutDirection> Clone_Lime__SimpleKeyframe_LayoutDirection(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<LayoutDirection> Clone_Lime__SimpleKeyframe_List_Animesh__SkinnedVertex(Cloner, object) protected static SimpleKeyframe<List<Animesh.SkinnedVertex>> Clone_Lime__SimpleKeyframe_List_Animesh__SkinnedVertex(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<List<Animesh.SkinnedVertex>> Clone_Lime__SimpleKeyframe_Matrix44(Cloner, object) protected static SimpleKeyframe<Matrix44> Clone_Lime__SimpleKeyframe_Matrix44(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Matrix44> Clone_Lime__SimpleKeyframe_MovieAction(Cloner, object) protected static SimpleKeyframe<MovieAction> Clone_Lime__SimpleKeyframe_MovieAction(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<MovieAction> Clone_Lime__SimpleKeyframe_NodeReference_Camera3D(Cloner, object) protected static SimpleKeyframe<NodeReference<Camera3D>> Clone_Lime__SimpleKeyframe_NodeReference_Camera3D(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<NodeReference<Camera3D>> Clone_Lime__SimpleKeyframe_NodeReference_Node3D(Cloner, object) protected static SimpleKeyframe<NodeReference<Node3D>> Clone_Lime__SimpleKeyframe_NodeReference_Node3D(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<NodeReference<Node3D>> Clone_Lime__SimpleKeyframe_NodeReference_Spline(Cloner, object) protected static SimpleKeyframe<NodeReference<Spline>> Clone_Lime__SimpleKeyframe_NodeReference_Spline(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<NodeReference<Spline>> Clone_Lime__SimpleKeyframe_NodeReference_Spline3D(Cloner, object) protected static SimpleKeyframe<NodeReference<Spline3D>> Clone_Lime__SimpleKeyframe_NodeReference_Spline3D(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<NodeReference<Spline3D>> Clone_Lime__SimpleKeyframe_NodeReference_Widget(Cloner, object) protected static SimpleKeyframe<NodeReference<Widget>> Clone_Lime__SimpleKeyframe_NodeReference_Widget(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<NodeReference<Widget>> Clone_Lime__SimpleKeyframe_NumericRange(Cloner, object) protected static SimpleKeyframe<NumericRange> Clone_Lime__SimpleKeyframe_NumericRange(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<NumericRange> Clone_Lime__SimpleKeyframe_ParticlesLinkage(Cloner, object) protected static SimpleKeyframe<ParticlesLinkage> Clone_Lime__SimpleKeyframe_ParticlesLinkage(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<ParticlesLinkage> Clone_Lime__SimpleKeyframe_Quaternion(Cloner, object) protected static SimpleKeyframe<Quaternion> Clone_Lime__SimpleKeyframe_Quaternion(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Quaternion> Clone_Lime__SimpleKeyframe_RenderTarget(Cloner, object) protected static SimpleKeyframe<RenderTarget> Clone_Lime__SimpleKeyframe_RenderTarget(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<RenderTarget> Clone_Lime__SimpleKeyframe_SerializableFont(Cloner, object) protected static SimpleKeyframe<SerializableFont> Clone_Lime__SimpleKeyframe_SerializableFont(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<SerializableFont> Clone_Lime__SimpleKeyframe_SerializableSample(Cloner, object) protected static SimpleKeyframe<SerializableSample> Clone_Lime__SimpleKeyframe_SerializableSample(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<SerializableSample> Clone_Lime__SimpleKeyframe_ShaderId(Cloner, object) protected static SimpleKeyframe<ShaderId> Clone_Lime__SimpleKeyframe_ShaderId(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<ShaderId> Clone_Lime__SimpleKeyframe_Single(Cloner, object) protected static SimpleKeyframe<float> Clone_Lime__SimpleKeyframe_Single(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<float> Clone_Lime__SimpleKeyframe_String(Cloner, object) protected static SimpleKeyframe<string> Clone_Lime__SimpleKeyframe_String(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<string> Clone_Lime__SimpleKeyframe_TextOverflowMode(Cloner, object) protected static SimpleKeyframe<TextOverflowMode> Clone_Lime__SimpleKeyframe_TextOverflowMode(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<TextOverflowMode> Clone_Lime__SimpleKeyframe_Thickness(Cloner, object) protected static SimpleKeyframe<Thickness> Clone_Lime__SimpleKeyframe_Thickness(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Thickness> Clone_Lime__SimpleKeyframe_VAlignment(Cloner, object) protected static SimpleKeyframe<VAlignment> Clone_Lime__SimpleKeyframe_VAlignment(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<VAlignment> Clone_Lime__SimpleKeyframe_Vector2(Cloner, object) protected static SimpleKeyframe<Vector2> Clone_Lime__SimpleKeyframe_Vector2(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Vector2> Clone_Lime__SimpleKeyframe_Vector3(Cloner, object) protected static SimpleKeyframe<Vector3> Clone_Lime__SimpleKeyframe_Vector3(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleKeyframe<Vector3> Clone_Lime__SimpleText(Cloner, object) protected static SimpleText Clone_Lime__SimpleText(Cloner cl, object src) Parameters cl Cloner src object Returns SimpleText Clone_Lime__SkinnedVertexListSimpleAnimationCurve(Cloner, object) protected static SkinnedVertexListSimpleAnimationCurve Clone_Lime__SkinnedVertexListSimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns SkinnedVertexListSimpleAnimationCurve Clone_Lime__SkinningWeights(Cloner, object) protected static SkinningWeights Clone_Lime__SkinningWeights(Cloner cl, object src) Parameters cl Cloner src object Returns SkinningWeights Clone_Lime__Slider(Cloner, object) protected static Slider Clone_Lime__Slider(Cloner cl, object src) Parameters cl Cloner src object Returns Slider Clone_Lime__Spline(Cloner, object) protected static Spline Clone_Lime__Spline(Cloner cl, object src) Parameters cl Cloner src object Returns Spline Clone_Lime__Spline3D(Cloner, object) protected static Spline3D Clone_Lime__Spline3D(Cloner cl, object src) Parameters cl Cloner src object Returns Spline3D Clone_Lime__SplineGear(Cloner, object) protected static SplineGear Clone_Lime__SplineGear(Cloner cl, object src) Parameters cl Cloner src object Returns SplineGear Clone_Lime__SplineGear3D(Cloner, object) protected static SplineGear3D Clone_Lime__SplineGear3D(Cloner cl, object src) Parameters cl Cloner src object Returns SplineGear3D Clone_Lime__SplinePoint(Cloner, object) protected static SplinePoint Clone_Lime__SplinePoint(Cloner cl, object src) Parameters cl Cloner src object Returns SplinePoint Clone_Lime__SplinePoint3D(Cloner, object) protected static SplinePoint3D Clone_Lime__SplinePoint3D(Cloner cl, object src) Parameters cl Cloner src object Returns SplinePoint3D Clone_Lime__SpriteData(Cloner, object) protected static SpriteData Clone_Lime__SpriteData(Cloner cl, object src) Parameters cl Cloner src object Returns SpriteData Clone_Lime__StackLayout(Cloner, object) protected static StackLayout Clone_Lime__StackLayout(Cloner cl, object src) Parameters cl Cloner src object Returns StackLayout Clone_Lime__Submesh3D(Cloner, object) protected static Submesh3D Clone_Lime__Submesh3D(Cloner cl, object src) Parameters cl Cloner src object Returns Submesh3D Clone_Lime__Tab(Cloner, object) protected static Tab Clone_Lime__Tab(Cloner cl, object src) Parameters cl Cloner src object Returns Tab Clone_Lime__TabBar(Cloner, object) protected static TabBar Clone_Lime__TabBar(Cloner cl, object src) Parameters cl Cloner src object Returns TabBar Clone_Lime__TableLayout(Cloner, object) protected static TableLayout Clone_Lime__TableLayout(Cloner cl, object src) Parameters cl Cloner src object Returns TableLayout Clone_Lime__TableLayoutCell(Cloner, object) protected static TableLayoutCell Clone_Lime__TableLayoutCell(Cloner cl, object src) Parameters cl Cloner src object Returns TableLayoutCell Clone_Lime__TableLayoutColumn(Cloner, object) protected static TableLayoutColumn Clone_Lime__TableLayoutColumn(Cloner cl, object src) Parameters cl Cloner src object Returns TableLayoutColumn Clone_Lime__TableLayoutRow(Cloner, object) protected static TableLayoutRow Clone_Lime__TableLayoutRow(Cloner cl, object src) Parameters cl Cloner src object Returns TableLayoutRow Clone_Lime__TextStyle(Cloner, object) protected static TextStyle Clone_Lime__TextStyle(Cloner cl, object src) Parameters cl Cloner src object Returns TextStyle Clone_Lime__TextureParams(Cloner, object) protected static TextureParams Clone_Lime__TextureParams(Cloner cl, object src) Parameters cl Cloner src object Returns TextureParams Clone_Lime__ThicknessSimpleAnimationCurve(Cloner, object) protected static ThicknessSimpleAnimationCurve Clone_Lime__ThicknessSimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns ThicknessSimpleAnimationCurve Clone_Lime__TiledImage(Cloner, object) protected static TiledImage Clone_Lime__TiledImage(Cloner cl, object src) Parameters cl Cloner src object Returns TiledImage Clone_Lime__TwistComponent(Cloner, object) protected static TwistComponent Clone_Lime__TwistComponent(Cloner cl, object src) Parameters cl Cloner src object Returns TwistComponent Clone_Lime__TwistMaterial(Cloner, object) protected static TwistMaterial Clone_Lime__TwistMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns TwistMaterial Clone_Lime__VBoxLayout(Cloner, object) protected static VBoxLayout Clone_Lime__VBoxLayout(Cloner cl, object src) Parameters cl Cloner src object Returns VBoxLayout Clone_Lime__VSplitter(Cloner, object) protected static VSplitter Clone_Lime__VSplitter(Cloner cl, object src) Parameters cl Cloner src object Returns VSplitter Clone_Lime__Vector2BezierAnimationCurve(Cloner, object) protected static Vector2BezierAnimationCurve Clone_Lime__Vector2BezierAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns Vector2BezierAnimationCurve Clone_Lime__Vector2SimpleAnimationCurve(Cloner, object) protected static Vector2SimpleAnimationCurve Clone_Lime__Vector2SimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns Vector2SimpleAnimationCurve Clone_Lime__Vector3BezierAnimationCurve(Cloner, object) protected static Vector3BezierAnimationCurve Clone_Lime__Vector3BezierAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns Vector3BezierAnimationCurve Clone_Lime__Vector3CompressedAnimationCurve(Cloner, object) protected static Vector3CompressedAnimationCurve Clone_Lime__Vector3CompressedAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns Vector3CompressedAnimationCurve Clone_Lime__Vector3SimpleAnimationCurve(Cloner, object) protected static Vector3SimpleAnimationCurve Clone_Lime__Vector3SimpleAnimationCurve(Cloner cl, object src) Parameters cl Cloner src object Returns Vector3SimpleAnimationCurve Clone_Lime__VideoPlayer(Cloner, object) protected static VideoPlayer Clone_Lime__VideoPlayer(Cloner cl, object src) Parameters cl Cloner src object Returns VideoPlayer Clone_Lime__Viewport3D(Cloner, object) protected static Viewport3D Clone_Lime__Viewport3D(Cloner cl, object src) Parameters cl Cloner src object Returns Viewport3D Clone_Lime__VignetteMaterial(Cloner, object) protected static VignetteMaterial Clone_Lime__VignetteMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns VignetteMaterial Clone_Lime__WaveComponent(Cloner, object) protected static WaveComponent Clone_Lime__WaveComponent(Cloner cl, object src) Parameters cl Cloner src object Returns WaveComponent Clone_Lime__WaveMaterial(Cloner, object) protected static WaveMaterial Clone_Lime__WaveMaterial(Cloner cl, object src) Parameters cl Cloner src object Returns WaveMaterial Clone_Lime__Widget(Cloner, object) protected static Widget Clone_Lime__Widget(Cloner cl, object src) Parameters cl Cloner src object Returns Widget Clone_Lime__WidgetAdapter3D(Cloner, object) protected static WidgetAdapter3D Clone_Lime__WidgetAdapter3D(Cloner cl, object src) Parameters cl Cloner src object Returns WidgetAdapter3D"
  },
  "api/YuzuGenerated.LimeDeserializer.html": {
    "href": "api/YuzuGenerated.LimeDeserializer.html",
    "title": "Class LimeDeserializer | Citrus Engine",
    "keywords": "Class LimeDeserializer Namespace YuzuGenerated Assembly Lime.dll public class LimeDeserializer : BinaryDeserializerGenBase Inheritance object AbstractDeserializer AbstractReaderDeserializer BinaryDeserializer BinaryDeserializerGenBase LimeDeserializer Inherited Members BinaryDeserializerGenBase.readCache BinaryDeserializerGenBase.makeCache BinaryDeserializerGenBase.PrepareReaders(ReaderClassDef) BinaryDeserializer.Instance BinaryDeserializer.BinaryOptions BinaryDeserializer.Initialize() BinaryDeserializer.ReadDateTimeOffset() BinaryDeserializer.ReadAny() BinaryDeserializer.ReadIntoCollection<T>(ICollection<T>) BinaryDeserializer.ReadIntoCollectionNG<T>(object) BinaryDeserializer.ReadCollection<I, E>() BinaryDeserializer.ReadList<T>() BinaryDeserializer.ReadListRecord(Func<object>) BinaryDeserializer.ReadIntoDictionary<K, V>(IDictionary<K, V>) BinaryDeserializer.ReadIntoDictionaryNG<K, V>(object) BinaryDeserializer.ReadDictionary<K, V>() BinaryDeserializer.ReadIDictionary<I, K, V>() BinaryDeserializer.ReadDictionaryRecord<K>(Func<object>) BinaryDeserializer.ReadArray<T>() BinaryDeserializer.ReadArrayNDim(Type, int) BinaryDeserializer.ReadArrayNDim(Type, int, Func<object>) BinaryDeserializer.ReadAction<T>() BinaryDeserializer.ClearClassIds() BinaryDeserializer.ReadIntoObject<T>(object) BinaryDeserializer.ReadIntoObjectUnchecked<T>(object) BinaryDeserializer.ReadObject<T>() BinaryDeserializer.ReadObjectUnchecked<T>() BinaryDeserializer.EnsureClassDef(Type) BinaryDeserializer.ReadStruct<T>() BinaryDeserializer.ReadIntoStruct<T>(ref T) BinaryDeserializer.ReadStructUnchecked<T>() BinaryDeserializer.FromReaderInt() BinaryDeserializer.FromReaderInt(object) BinaryDeserializer.FromReaderInt<T>() BinaryDeserializer.IsValidSignature() BinaryDeserializer.CheckSignature() BinaryDeserializer.FromString(string) BinaryDeserializer.FromString<T>(string) BinaryDeserializer.FromString(object, string) AbstractReaderDeserializer.Reader AbstractReaderDeserializer.FromReader(object, BinaryReader) AbstractReaderDeserializer.FromStream(object, Stream) AbstractReaderDeserializer.FromBytes(object, byte[]) AbstractReaderDeserializer.FromReader(BinaryReader) AbstractReaderDeserializer.FromStream(Stream) AbstractReaderDeserializer.FromBytes(byte[]) AbstractReaderDeserializer.FromReader<T>(BinaryReader) AbstractReaderDeserializer.FromStream<T>(Stream) AbstractReaderDeserializer.FromBytes<T>(byte[]) AbstractReaderDeserializer.Error(string, params object[]) AbstractReaderDeserializer.FindType(string) AbstractReaderDeserializer.CheckExpectedType(string, Type) AbstractReaderDeserializer.objStack AbstractReaderDeserializer.GetAction<T>(string) AbstractReaderDeserializer.MakeDelegate(MethodInfo) AbstractReaderDeserializer.MakeDelegateAction(MethodInfo) AbstractDeserializer.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/YuzuGenerated.html": {
    "href": "api/YuzuGenerated.html",
    "title": "Namespace YuzuGenerated | Citrus Engine",
    "keywords": "Namespace YuzuGenerated Classes LimeCloner LimeDeserializer"
  },
  "articles/assets/asset_cooking.html": {
    "href": "articles/assets/asset_cooking.html",
    "title": "Asset cooking | Citrus Engine",
    "keywords": "Asset cooking Raw assets Assets with following extensions are copied as is and packed with deflate: .json .cfg .csv extensions specified using RawAssetExtensions field of citrus project configuration file. .txt except cooking rules and model 3d attachment files. Assets with following extensions are copied as is and not packed: .ttf .otf .ogv .shader .xml .raw .bin Images .png files. Note The sprite data can be accessed in code through ISprite. To retrieve a sprite from by asset path use SpritePool.GetSprite. Fonts .tft files and .cft files Scenes .tan files Sounds .ogg files Models .fbx + .attachment.txt files"
  },
  "articles/assets/atlas_packing.html": {
    "href": "articles/assets/atlas_packing.html",
    "title": "Atlas packing | Citrus Engine",
    "keywords": "Atlas packing Orange offers a choice of two algorithms for packing sprites into atlases. These are Guillotine and NFP nesting. Guillotine packing The guillotine algorithm can only operate on the rectangular representation of sprites, i.e. even if they have been polygonized only their rectangular representation will be considered. To use this algorithm, specify one of the values Memory or DrawCalls for the cooking rule AtlasOptimization. Both imply the same packing algorithm. But Memory uses heuristics to optimize the ratio of useful atlas space to empty space, while DrawCalls optimizes the number of sprites per atlas and ignores empty areas. No other cooking rules affect this kind of packing. NFP Nesting packing An alternative is the NFP nesting algorithm. To use it set cooking rule AtlasOptimization to PolyPack. NFP nesting mostly benefits from using polygonized sprites. See Sprite Polygonization The only cooking rule to configure for NFP Nesting is PolyPack.Rotation which can be None, Any and Right. Which sets how it is allowed to rotate sprites during packing. Not at all, by any angle or only right angles. Atlas settings AtlasItemPadding used to set required distance between sprites in atlas, supported by all packing methods. Default value is 1 meaning each atlas item will have a padding of 1 resulting in at least 2 pixels between any pair of atlas items. Why would you need a distance between atlas items? Because of Texture Bleeding MaxAtlasSize sets maximum size of an atlas, supported by all packing methods. Default value is 2048. On many occasions you should consider setting it to 1024 to reduce loading time sacrificing draw call count. AtlasDebug will draw triangulation for polygonized sprites and rectangular border over rectangular sprites in atlas."
  },
  "articles/assets/cooking_rules.html": {
    "href": "articles/assets/cooking_rules.html",
    "title": "Cooking rules | Citrus Engine",
    "keywords": "Cooking rules To be used in a game application, the source asset files must go through a number of transformations. The set of these transformations we call \"asset cooking\" and the system for configuring the transformations \"cooking rules\". Asset cooking options are set and propagated using cooking rules files. Cooking rules files are placed in the asset directory and could be named in two ways: #CookingRules.txt <asset_filename_with_extension>.txt e.g. illuminator.png.txt In first case cooking rules are applied to all files and directories in current directory recursively until overridden with another cooking rules. In second case cooking rules are only applied to specified asset file. Cooking rules only override concrete rule lines specified. A target (see Targets) can be specified for each rule according to the grammar. For example Ignore(iOS) Yes sets Ignore rule to Yes for iOS only. Rules with no target specified are implicitly bound to root target Any. There's a list of default targets, which are Win, Mac, iOS and Android. Other targets can be configured in .citproj project file. Cooking rules in this form are deduced only within the file where the cooking rules are defined. Each rule is deduced in the context of the current target, according to the priority of inheritance of the targets and in the order in which the rules are written. It follows that rules described for a particular target do not cause overloading of rule values in cooking rules which are deeper in the directory tree. If you declare an Ignore(iOS) Yes rule in the current directory, you can still overload it with an Ignore Yes rule located in the directory below, even if the current target is iOS. To propagate the overloading of target-specific rules down the directory tree, use ! before the rule. Thus !Ignore(iOS) Yes can no longer be overloaded anywhere down the directory hierarchy by any rule, as long as its target has a lower priority. Format grammar: rule_list: one of rule '\\n' rule_list rule rule: [ '!' ] rule_name ['(' target_name ')'] ' ' rule_value '\\n' target_name: one of 'Any' 'Win' 'Mac' 'iOS' 'Android' <user_defined_target> rule_name: one of 'Image.ImportMode' 'Sprite.Mesh' 'Sprite.AtlasName' 'MipMaps' 'HighQualityCompression' 'PVRFormat' 'DDSFormat' 'GenerateOpacityMask' 'Bundles' 'Ignore' 'Only' 'Alias' 'ADPCMLimit' 'TextureScaleFactor' 'AtlasOptimization' 'ModelCompression' 'WrapMode' 'MinFilter' 'MagFilter' 'AtlasItemPadding' 'AtlasDebug' 'MaxAtlasSize' 'Polygonization.MaxVertexCount' 'Polygonization.MinVertexCount' 'Polygonization.Detail' 'Polygonization.AlphaThreshold' 'Polygonization.SizeThreshold' 'PolyPack.Rotation' e.g.: Rule1(Target1) Value Rule2(Target1) Value Rule2(Target1) Value Rule3 Value ... !Rule1(Target2) Value Rule10 Value ... Rules Common rules Applicable to any kind of asset. Bundles List of bundle names separated by space. The Asset will get into all the listed bundles. Default value is Data. Ignore Yes or No Asset will be ignored if Yes. Often used with target specified. Default is No. Only Yes or No. Asset will not be ignored only for specified target. Makes no sense without the target. Default is No. Alias <string> Asset will be renamed to the alias value in bundle. By default there's no alias. Sound rules ADPCMLimit value is in Kb. .ogg files less than value in size will be converted to ADPCM/IMA4 format for faster loading. Image rules Image.ImportMode value is Sprite or Texture. Default is Sprite. Sprites get packed into atlas. And with Texture image will be converted to output format directly. TextureScaleFactor value is . Default is 1.0f. Image size will rescaled to this value. Sprite rules Sprite.Mesh value is Rect or Poly. Default is Rect. See Sprite Polygonization for details. Sprite.AtlasName value is either <string> for custom atlas name or ${DirectoryName} to use current directory name as an atlas name. Default value is empty string. AtlasOptimization value is one of Memory, DrawCalls, PolyPack. Default is Memory. See Atlas Packing for details. Texture rules MipMaps HighQualityCompression PVRFormat one of: PVRTC4 Falls back to PVRTC2 if image has no alpha PVRTC4_Forced PVRTC2 RGBA4 RGB565 ARGB8 RGBA8 Used for iOS and Android. DDSFormat value is one of DXTi, ARGB8, RGBA8. Only used on Windows and MacOS. in case of DXTi for images with alpha channel bc3 format will be used, otherwise bc1. ARGB8, RGBA8 are equivalent and mean uncompressed image data in dds container. WrapMode value is one of Clamp, Repeat, MirroredRepeat. Texture wrap mode. Default is Clamp. MinFilter value is Linear or Nearest. Texture min filter. Default is Linear. MagFilter value is Linear or Nearest. Texture mag filter, default is Linear. GenerateOpacityMask values is Yes or No. Default is No. Should an opacity mask be generated. Opacity masks are used for pixel precise hit test. Dimensions of opacity mask are texture dimensions divided by 2. Alpha threshold for generating mask is 12. Model rules ModelCompression value is Deflate or LZMA. Default is Deflate. Atlas rules AtlasItemPadding default is 1 AtlasDebug Yes or No default is No MaxAtlasSize default is 2048 See Atlas Packing for details. Polygonization rules Polygonization.MaxVertexCount default is 100 Polygonization.MinVertexCount default is 3 Polygonization.Detail default is 2000 Polygonization.AlphaThreshold default is 1 Polygonization.SizeThreshold default is 128 See Sprite Polygonization for details. PolyPack rules PolyPack.Rotation value is one of None, Right, Any See Sprite Polygonization for details."
  },
  "articles/assets/sprite_polygonization.html": {
    "href": "articles/assets/sprite_polygonization.html",
    "title": "Sprite polygonization | Citrus Engine",
    "keywords": "Sprite polygonization The reason we would like to describe images with something other than a rectangle is to get rid of transparent pixels in the image (which can occupy quite large areas), as well as to pack the images more tightly into the atlas. By sacrificing the number of vertices. Important Some code does not work with non rectangular sprites. For example NineGrid, DistortionMesh, ImageSprite in TextStyle, FontGlyph, Animesh, Image as an ImageCombiner argument, TiledImage. If you are writing code which only works with rectangular sprites use ISprite.ValidateRectangular ISprite.ValidateRectangular will produce error console output in Tangerine and will throw in application unless Application.IsProduction flag is set in which case it's silently ignored. Sprite.Mesh A sprite mesh is the way an image is described by the vertices that make up the triangles that contain the pixels of an image. The type of a mesh for a sprite can be set using the Sprite.Mesh cooking rule. Possible values are Rect and Poly. If Rect is selected then the original rectangle of the image is used as a mesh. 4 vertices, 6 indices, 2 triangles. The ISprite.IsRectangular of the resulting sprite will be set to true. If you select Poly, a polygonization process will take place over the image to build a set of triangles describing the opaque pixels of the image. The ISprite.IsRectangular of the resulting sprite will be set to false. Note A polygonal representation can be convex, concave, disjoint, contain holes, but cannot have self-intersections. Polygonization cooking rules Since there is no single correct polygonization, polygonization can be adjusted by the following cooking rules. Polygonization.MaxVertexCount maximum allowed number of vertices in polygonal representation. Default value is 100. Polygonization.MinVertexCount minimal allowed number of vertices in polygonal representation. Default value is 3. Note Even if you specify an interval for example from 3 to 6 vertices, it may happen that the algorithm cannot reduce the number of vertices less than 8. That is, the algorithm does not always reach 4, 5, 6, 7, 8 vertices, etc. Polygonization.AlphaThreshold threshold value for pixel's alpha. Pixels with an alpha value strictly lower than the threshold are considered transparent. Default value is 1. Polygonization.SizeThreshold threshold value for the image size. If both width and height of the image are less than or equal to the threshold, then such an image is not polygonized and the original image rectangle is used as the polygonal approximation. However, the resulting sprite will have an bool IsRectangular value of false. The default size threshold value is 128. Polygonization.Detail allows you to set how much the polygonal approximation of the image accurately describes the area of opaque pixels in the image. Makes sense somewhere between 300 and 20000. In practice, something in the 500 to 2000 range is more likely to be recommended. Semantically, it means the required number of saved pixels per vertex of the sprite, after which you should stop reducing the number of vertices in the polygonal approximation. You can think of it as \"how many saved pixels per vertex is enough. For example, a value of 10000 would mean that we are satisfied if one vertex saves a square with a side of 100 pixels. Default value is 2000. It is suggested to choose the optimal degree of polygonalization by experiment. It generally depends on the ratio of vertex cost to pixel cost in terms of performance. Which in turn depends on the amount of operations performed on a specific vertex on CPU/GPU, as well as the specific content of the fragment shader and the capabilities of supported devices. In some specific cases denser atlas packing may outweigh above mentioned vertex/pixel cost tradeoff, in some cases not. Try different values, look at the resulting atlases with the AtlasDebug cooking rule turned on, measure performance on different devices, and make a conclusion about the optimal degree of polygonalization. In the graphs below you can observe (hover over the graph for more information): The ratio of the total number of vertices to the total pixel area of the sprites. Dependence of the number of pixels per vertex on Polygonization.Detail. The data was obtained from a large sample set of images from a real project. Algorithm Сheck if the image satisfies the size threshold. If not, the rectangle is used and the polygonization stops. According to the threshold value of alpha the the initial polygonization is constructed, which contains \"all\" possible vertices. The cycle of vertex reduction begins. By choosing the optimal one from the set of different operations, which can reduce the number of vertices, the contour is transformed into a new contour with fewer vertices. No more than 3 vertices can be reduced at a time. As long as the maximum number of vertices is not reached, the reduction continues unconditionally. In the interval between the minimum and maximum allowed number of vertices, the reduction may stop when the required \"detail\" is reached. If the required detail has not been reached in the allowed range, the reduction stops when the minimum allowed number of vertices is reached, or the algorithm cannot apply any reduction operation without exceeding the boundaries of the original image rectangle."
  },
  "articles/assets/tangerine_font_configuration.html": {
    "href": "articles/assets/tangerine_font_configuration.html",
    "title": "Tangerine font configuration | Citrus Engine",
    "keywords": "Tangerine font configuration Tangerine Font Configuration (tftconf) is an asset describing how to create Tangerine Font asset (tft). The format is JSON: Property Type Description Height float Font's point size that will be used to generate the font's texture. Padding int Characters in the font texture need some padding between them so they can be rendered separately. This padding is specified in pixels.Padding also creates room for the SDF gradient. The larger the padding, the smoother the transition, which allows for higher-quality rendering and larger effects, like thicker outlines. CharSets CharSet That's the main part of configuration file that describes what font files and symbols should be used for Tangerine Font creation. ExcludeChars string Characters that will be ignored during the font generation step. IsSdf bool If it's true Signed Distance Font (SDF) will be generated otherwise simple bitmap font. SdfScale float When using an SFD font, a higher resolution results in finer gradients, which produces higher quality text. That's why it's a common way to sample characters at high resolution to create good gradients and then downscale. For example you can generated 8k textures with bigger font size and then downscale them to 4k with SdfScale = 0.5f. TextureSize Vector2 Size for each texture before downscale. CustomKerningPairs CustomKerningPairs Kerning pairs are used to adjust the spacing between specific character pairs, to produce a more visually pleasing result. Note that many fonts do not have kerning pairs or may not satisfy your needs so you can simply add your own pairs or override ones taken from the font file. Margin float Obsolete. Expands AC width. Was used for workarounds. CharSet Property Type Description Chars string A list of characters to be used for font generation. Can be null or empty (see ExtractFromDictionaries). Font string Path (relative to asset directory) to font file from which glyphs will be taken. See supported font formats. ExtractFromDictionaries string A comma separated set of localizations (e.g. \"EN,RU,CN\"). If it's null or empty existing Chars are used, otherwise Chars are extracted from localization dictionaries (e.g. \"Dictionary.RU.txt\" or \"Dictionary.txt\" for EN). Vector2 array of two numbers (YuzuCompact). [12, 34] CustomKerningPairs It's a dictionary with character key and array of KerningPair values. Each kerning pair in array represents kerning amount that should be applied if character follows array's key of the dictionary. For example this: CustomKerningPairs: { 'A': [['V', -2]] } means that position of V should be decreased by 2 if it follows A. KerningPair Array of two elements: char and float (YuzuCompact). ['V', -3] Supported formats Supported font formats are those that are supported by FreeType: TrueType files (.ttf) and collections (.ttc) Type 1 font files both in ASCII (.pfa) or binary (.pfb) format Type 1 Multiple Master fonts Type 1 CID-keyed fonts OpenType/CFF (.otf) font CFF/Type 2 fonts Adobe CEF fonts (.cef), used to embed fonts in SVG documents with the Adobe SVG viewer plugin Windows FNT/FON bitmap fonts Apple's TrueType GX fonts are supported as normal TTFs (the advanced tables are ignored) The 'kern' table Only old, windows-only-compatible 'kern' table is supported. If your font have \"new\" 'kern' table - extracting kerning pairs won't work. You should resave font, forcing old 'kern' table in any font editor (for example - FontForge). More info info about 'kern' table can be found here https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6kern.html Info about resaving font can be found here https://github.com/fontforge/fontforge/issues/3435 How to generate font Place a font file inside Fonts directory (e.g. Digits.ttf) Place a configuration file inside Fonts directory. Example of .tftconf to generate SDF font with digits only: { \"CharSets\":[ { \"Chars\":\"0123456789\", \"Font\":\"Fonts/Digits.ttf\" } ], \"Height\":170, \"IsSdf\":true, \"SdfScale\": 0.25, \"Padding\":36, \"TextureSize\":[4096,4096] } Run Invalidate Fonts action via Orange or Tangerine (Orange -> Invalidate Fonts) You'll be notified after engine finishes font generation. You should be able to see Digits.ttf and Digit.png files in Fonts directory Unfortunately you have to restart Tangerine for changes to take place :( Troubleshooting I generated my font, but don't see any kind of kerning pairs from initial font This will happen when font has any kind of kerning pairs (GPOS, for example) table instead of legacy, windows-compatible ones. This can be fixed by resaving original font within font editor (fontforge) with compatible 'kern' table. This problem fully described there https://github.com/fontforge/fontforge/issues/3435"
  },
  "articles/assets/tangerine_image_settings.html": {
    "href": "articles/assets/tangerine_image_settings.html",
    "title": "Preparing images for use with Citrus engine | Citrus Engine",
    "keywords": "Preparing images for use with Citrus engine Different monitors display the same colors differently. To make the image look almost the same on all devices, color profiles have been invented for images and displays. For image files that contain a color profile, color-managed applications convert colors from one color space to another. Photoshop and Windows Photos are examples of color-managed applications. Citrus and Paint are examples of applications without color management. They assume that a color profile of the image matches a display profile. If in fact the profiles do not match, we get distorted colors. sRGB IEC 61966-2.1 is the most common color space. It is the color space that should be used to create images for Citrus engine. It looks pretty much the same on all displays. When creating new images in Photoshop When creating new images in the Photoshop, check the \"Color Profile\" field. When you open an existing image in Photoshop If an image was created in another profile, in Photoshop you can convert the image to sRGB IEC 61966-2.1 color space with Edit menu command: Edit->Assign Profile The conversion options can be absolutely any, but the destination space is only sRGB IEC61966-2.1. Might be useful If you don't have Photoshop, you can view the current color profile of an image with the exiftool console utility https://exiftool.org/. To do this, use exiftool file.png command. TODO: Write about XMP metadata, bpp, interlacing, palette support"
  },
  "articles/assets/texture_bleeding.html": {
    "href": "articles/assets/texture_bleeding.html",
    "title": "Texture bleeding | Citrus Engine",
    "keywords": "Texture bleeding When the engine renders a scene it uses texture filtering to smooth transition between texels when it's magnified or minified. If textures lie right next to each other in a texture atlas then edge texels of the texture will blend into neighbor textures' texels causing such artifacts as seams on a tiled surface. In order to avoid the most common artifact AtlasItemPadding cooking rule is set to 1 pixel by default. AtlasItemPadding cooking rule adds spacing between textures in atlas and fills it with edge pixels. Consider this example. Surface is tiled with teal squares. Teal square is packed with other textures with zero padding. That'll introduce visual artifacts for sure: atlas tiled surface However AtlasItemPadding set to 1 solves visual artifacts problem: atlas tiled surface But this may be not enough. Texture compression can lead to texture bleeding inside atlas: atlas tiled surface Correct way to solve compression bleeding is to increase value of AtlasItemPadding so it matches the size of compression block. For example compression block of ETC2 algorithm have 4x4 size, so in most cases 4 pixels should be enough for AtlasItemPadding to resolve compression bleeding problem: atlas tiled surface"
  },
  "articles/assets/validation.ru.html": {
    "href": "articles/assets/validation.ru.html",
    "title": "Валидация | Citrus Engine",
    "keywords": "Валидация Валидация позволяет контроллировать корректность данных в ассетах. В Цитрусе есть несколько способов вызова валидации и несколько способов связывания валидаторов с данными. Способы вызова валидации. Вызывать валидаторы можно с помощью Orange Action Validate Assets Если в .citproj файле есть ключ \"ValidateOnCook\": true то во время кука ассетов валидация будет вызвана для каждого нового или изменённого ассета. В случае ошибок валидации кук ассетов прерывается. В некоторых местах через интерфейс Танжерина. Например в инспекторе. Такая валидация неполная, вызывается не все валидаторы и не для всех объектов. Постепенно будет пополняться. Способы задания валидаторов Валидация по свойству Валидация по типу Валидация по расширению ассета В любом из этих случев вам надо реализовать интерфейс Lime.Validation.IValidator<T> где T это входной тип данных для валидации. В нём надо реализовать единственный метод IEnumerable<(Lime.Validation.Result Result, string Message)> Validate(T value); При вызове этого метода будет использована не генерик версия данного интерфейса Lime.Validation.IValidator, это подразумевает проверку на совместимость типа значения с типом указаным в реализации валидатора и, в случае прохождения проверки, последующий каст value из object в T. Проверка реализуется через IValidator.IsValueTypeCompatible. Генерик версии интерфейса валидатора содержит реализую данной проверки по-умолчанию: bool IValidator.IsValueTypeCompatible(object value, Type valueType) { return value is T || typeof(T).IsAssignableFrom(valueType); } которая позволяет проверять удовлетворительность типа, даже если value == null. Lime.Validation.Result может быть Info, Error или Warning. В Message должен содержаться текст соответствующий результату. Этот метод должен перечислять пары результат и сообщение согласно логике валидатора. Примеры валидаторов можно посмотреть в Lime.Validation. Все валидаторы не должны иметь состояния, т.к. не гарантируется, будут ли они пересозданы или закешированы в той или иной ситуации. Далее реализация этого интерфейса либо регистрируется в Orange.ValidationRunner либо является атрибутом проперти или класса. Валидация свойства Валидаторы свойств извлекаются из атрибутов свойства с помощью рефлексии. То есть чтобы повесить валидатор на свойство надо унаследоваться от System.Attribute и реализовать IValidator<T>, а затем применить его к свойству. Такие валидаторы можно параметризировать и в каждом конкретном случае передавать параметры применимые к конкретному свойству. Например см. Lime.Validation.Range. Только для валидаторов свойств проводится проверка на реализацию интерфейса Lime.Validation.IRequireOwner, если она есть, то перед вызовом валидации валидатору будет назначен владелец. При этом проверяемое значение для свойства не обязательно должно быть уже присвоено, т.к. оно передаётся в Validate отдельно. Только для валидаторов свойств проводится проверка не реализацию интерфейса Lime.Validation.PassThroughEnumerable, если она есть, то такие валидаторы будучи назначенными на свойства будут применяться не к самому свойству, а к его элементам, если свойство реализует IEnumerable. Это верно также для вложенных перечислений, например public List<List<List<int>>> List { get; set; }. Отстановка спуска по вложенности перечислений происходит в момент когда генерик атрибут очередноо IEnumerable проходит проверку IValidator.IsValueTypeCompatible Валидаторы свойств вызываются для всех свойств маркированных YuzuMember через Orange.ValidationRunner.ValidateObject (который можно использовать в своих валидаторах ассетов, а также используется для валидации сцен), а также для YuzuMember и TangerineInspect маркированных полей валидаторы свойств будут вызваны в инспекторе в Танжерине. (И в некоторых других интерфейсах редактирования свойств в танжерине). Валидация типа Аналогично валидации свойства, но атрибут применяется к объявлению типа. Вызывается через Orange.ValidationRunner.ValidateObject для всех значений. Вызывается для всех значений свойств в Танжерине в инспекторе. Для поиска атрибутов валидации также перечисляются интерфейсы, которые реализует рантайм тип данного значения свойства. Валидация ассета Такой валидатор должен валидировать значение типа string. Это путь к ассету в текущем бандле (входной бандл для кука, asset directory). Если данный ассет можно десериализовать в инстанс некого класса, то для из него можно вызвать Orange.ValidationRunner.ValidateObject и перечислить его результаты. При куке ассетов для каждого нового или изменённого файла в директории ассетов проекта, если данный файл попадает в один из cooking stages, вызываются все валидаторы зарегистрированные через Orange.ValidationRunner.RegisterAssetValidator. Также через Orange Action -> Validate Everything валидаторы ассетов будут вызваны для каждого ассета в директории ассетов. Примеры того, что можно валидировать. Символы в путях и айди. Если у вас в проекте естьк акие-то соглашения по именованию, можно проверять эти соглашения. Для изображений можно проверять что они не сильно большие, если попробовать частично выяснить кладётся ли оно в атлас или нет, то в случае если нет, можно проверять, насколько оно не вписывается в степень двойки. Про размер изображений -- проверять размер на диске, то есть если по факту файл занимает в несколько раз больше чем разжатое изображение, возможно там какая-то метадата лишняя. Можно проверять, что цветовой профиль отсутсвует или указан СРГБ, который должен у нас использоваться согласно документации. Ну и что угодно в кастомных компонентах и виджетах. Убеждаться, что для текстуры виджета установленны параметры, которые требуются данному виджету. (Например WrapModeU/V == Clamp/Mirror) Проверять, что бандл сцены и бандл ассета совпадают (Warning). Примеры валидаторов Большинство этих валидаторов \"одноразовые\" в том смысле, что их использование имеет смысл только внутри движка и они используются только в одном месте. SizeInfoAttribute предполагая наличие у типа свойства Texture сопоставляет значение Vector2 поля на которое повешен и размер текстуры. При несовпадении выводит сообщение и результат типа Info. RatioInfoAttribute аналогично предыдущему, но следит за соотношением сторон. RangeAttribute диапазон допустимых значенй для свойства. DefaultCharsetAttribute содержание в строке недопустимых символов. MatchRegexAttribute соответствие строки на регулярному выражению TileImageTextureAttribute врап мод текстуры для TiledImage NodeParentCompositionAttribute допустимость данного типа родительской ноды для его дочерней ноды. Допустмые родители задаются через атрибут TangerineAllowedParentTypes NodeChildrenCompositionAttribute допустимость данного типа дочерней ноды для его родительской ноды. Допустмые типы дочерних нод задаются через атрибут TangerineAllowedChildrenTypes NodeComponentOwnerCompositionAttribute допустимость данного типа владельца для компонента. Допустимые владельцы задаются через атрибут AllowedComponentOwnerTypes. ContentsPathAttribute существование внешней сцены. KeyframePropertyValuesAttribute вызывает существующие валидаторы свойств, для каждого значения свойства на ключевых кадрах. EnsureKeyframeListOrderAttribute отсортированность списка ключевых кадров по номеру кадра. EnsureOnlyOneAnimatorPerPropertyAttribute наличие не более чем одного аниматора для свойства. EnsureMarkerListOrderAttribute отсортсированность маркеров в списке маркеров анимации по номеру кадра. SerializableAssetExistsAttribute существование сериализуемого ассета в текущем бандле. Расширения для сериализуемых ассетов указываются с помощью атрибута SerializableAssetAttribute. Класс сериализуемого ассета должен реализовывать интерфейс ISerializableAsset. FilePathExistsAttribute существование файла в текущем бандле."
  },
  "articles/changelog/1.0.0.0.html": {
    "href": "articles/changelog/1.0.0.0.html",
    "title": "Version 1.0.0.0 | Citrus Engine",
    "keywords": "Version 1.0.0.0 Legend Legend 📝 jira issue link 🧪 gitlab merge request link 🐞 bug fix ⚡️ improve performance ✨ new feature 💥 breaking change ♻️ refactoring 🧹 chore ✅ test 📝📝📝📝🧪 List validator ✨: Validation system. See ./Docs/articles/assets/validation.ru.md Commits: 🧪[Validation] Add charset validator for animation track id 🧪Update Docs 🧪[Validation] Remove unwanted code; make regex walidator pass-through 🧪[Validation] Fix case of nested null value validation for IPassThroughEnumerable validators 🧪[Validation] Fix asset extensions declared with SerializableAssetAttribute; fix style 🧪[Mac] Fix compilation 🧪[Validation] Fix minor validation issues; Make validate on cook optional with ValidateOnCook option in citproj file 🧪Fix compilation 🧪🍋[FileProperty] To FilePropertyAttribute add an option to not cut off file extension 🧪[Validation] Apply charset validation for animation and marker ids 🧪[Validation] Add validation to make sure asset path exist. Refactor file property editors and inspector property registry. Introduce ISerializableAsset Update project files 🧪📝📝 Add validators for marker and keyframe order and a validator for ensuring there's no multiple animators of same property belonging to same animation 🧪[Validation] Add validator for validation of keyframe values, validating properties they belong to 🧪📝[Validation] Add ContentsPath validator 🧪📝[Validation] Add node and component composition validation. Move code deciding if Trigger and ContentPath should be inspected into TangerineIgnoreIf in Node 🧪📝[Validation] Move validators into Validation class and remove Tangerine prefix from their names 🧪📝[Validation] Core of the validation system 🧪🍊 Add ICookingStage.EnumerateFiles 🧪Fix crash in ThemedTextView 🧪Seal NodeReference class 🧪📝[Validation] Move validators into separate file 🧪Fix code style 🧪📝[Validation] Move validation attributes to Lime/Source/Validation.cs 🧪🍋 Move attribute caches to Lime. Make it internal but allow more of Tangerine to access Lime internals. 🧪📝[Examples] Fix assets 🧪📝🍊 Add list validation mechanism Add interface for validatable editors Add include in Tangerine.UI.Mac.csproj Add storage of validators to CommonPropertyEditor Change passing list validators 📝🧪 Unpack bundle ✨: New Orange action Unpack Bundle Commits: 🧪📝🍊 New action Unpack Bundle 📝🧪 Fix OutOfAnimationScope in CompoundAnimation 🐞: whole timeline displayed as inactive in compound animations in Tangerine Commits: 🧪📝🍊 Don't draw OutOfAnimationScope in CompoundAnimation 📝🧪 Crash when removing ZeroPose 🐞: crash in Tangerine when removing ZeroPose animation Commits: 🧪📝🍋 Add null check for animator.Owner in AnimationExtensionMethods.Contains 📝🧪 Crash in Inspect Root Node 🐞: crash in Tangerine when selecting root Commits: 🧪📝🍊 Return null if nodes contains only root 📝🧪 Console autoscroll ✨: Tangerine console autoscroll: toolbar button, auto disable by scrolling Commits: 🧪📝 Dont invoke OnScrollPositionChangedByUser if it actually didnt change 🧪📝 Rename OnMouseScroll, recolor dark theme icons 🧪📝 Disable autoscroll after mouse scroll 🧪📝🍊 Add autoscroll button 📝🧪 Console search ✨: Tangerine console search bar Commits: 🧪📝 Fix code style and UI 🧪📝🍊[UI] Add console commands; add console colors 🧪📝[Console] Optimize text search and highlighting; redesign search panel; add ability to zoom in and out 🧪📝🍊[Console] Add ability to search for text occurrences; highlight matches 📝🧪 Cant set wrap mode Commits: 🧪📝 Fix not being able to set certain cooking rules with root target (Any) 📝🧪 Render to png blending 🐞: Fix double render to texture in Tangerine -> Render Png Sequence ✨: Add option to demultiply alpha in Tangerine -> Render Png Sequence Commits: 🧪📝🍊 Replace linq with \"for\" and move renderChain 🧪📝🍊 Add demultiply alpha option for render to png 🧪📝🍊 Remove double add to RenderChain 📝🧪 ImproveRenderToPng ✨: Add option \"Crop by content\" to Tangerine Tools->Render to Png Sequence Commits: 🧪📝🍊 Fix after review 🧪📝🍊 Add option to crop PNG by content 📝🧪 Fix crash on document reload 🐞: Tangerine crash when unloaded document is being modified on disk and tries to restore it's state. Commits: 🧪📝🍊 Add comment about Null state that it doesn't solve the root of the problem 🧪📝🍊 Use default state for not loaded document instead of forcing Load() 🧪📝🍊 Ensure that the document is loaded before preserving its state 📝🧪 Keyframes disappear if you change easings 🐞: Visually disappearing keyframes in Tangerine when marker easing is changed. Commits: 🧪🍋🍊 Replace EffectiveAnimatorsSet with EffectiveAnimatorsPerHost 🧪🍋🍊 Integrate EasedAnimator into IAbstractAnimator 📝🧪 Native crash on macOS 🐞: native crash on mac os when glsl shader contains default precision qualifiers Commits: 🧪📝🍋 Fix PlatformShader.ProcessSource If some shader contains \"precision highp float;\", it will be replaced with \"precision float;\". Then, when calling the GL.GetShaderInfoLog function, we will get a native crash. Tested on MacBook Pro (m1). We must delete the \"precision \\w+ \\w+;\" lines completely, since partial deletion will cause an exception or a native crash on platforms other than Windows. 📝📝🧪 Fix remote scripting style Commits: 🧪📝 Fix style 🧪📝 Update .editorconfig 🧪 Merge remote-tracking branch 'origin/CIT/2248_code_style_naming_rules' into CIT/2289_fix_remote_scripting_style 🧪📝 Setup code-style naming rules for Roslyn analyzers 🧪📝 Fix compilation 🧪📝 Update .editorconfig 🧪📝 Fix remote scripting compilation 📝🧪 Darken the timeline lines outside the animation ✨: tangerine: Dim out of the animation scope timeline rows Commits: 🧪📝🍊 Tune out of animation scope colors 🧪📝🍊 Dim unavailable timeline rows 📝🧪 Rework the animation panel navigation algorithm ✨: tangerine: double click on an animation will not change current container if owner of the animation is in scope of current timeline container Commits: 🧪📝🍊 Add a blue color mark for the current container in the animation panel 🧪📝🍊 Simplify TraverseRootManager Rename TraverseTarget => TraverseRootManager Rename TraverseTarget.Recalculate => TraverseRootManager.CalcTraverseRootNode Remove explicit operator Node(TraverseTarget traverseTarget) 🧪📝🍊 Add TraverseTarget class. Remove RebuildIfSelectedChangedTask and transfer its mission to TraverseTarget class. The TraverseTarget class will also reduce the number of RebuildTreeView calls. TraverseTarget class will reduce calculations in ChangeWatcher and in RebuildTreeView. When you clear the selected scene items, the animation panel will not be rebuilt. 🧪📝🍊 Make the code for highlighting a node on the timeline more accessible 🧪📝🍊 Fix \"Show Current Animation\" button in AnimationsPanel. 🧪📝🍊 Rename ExpandPath => ExpandNodePathInTimeline 🧪📝🍊 Fix LcaSolver Do not invoke enumerator.MoveNext() again if the first one returned false. 🧪📝🍊 Remake NavigateToAnimation Now, if Document.Current.Container is not a descendant of animation.OwnerNode, we should not execute NavigateToNode.Perform(animation.OwnerNode... when animation.OwnerNode is not in an external scene. 🧪📝🍊 Add HighlightAnimation for TreeViewItemPresentation 🧪📝🍊 Add alt+click shortcut for scrolling to the clicked node 🧪📝🍊 Add ExpandPath operation 📝🧪 Migration cases Commits: 🧪📝 Add sprite migration cases 📝🧪 Add burst distance ✨: new ParticleEmitter.Action Reset use to avoid teleport-trails in number per distance mode ✨: new ParticleEmitter.BurstDistance proprty. When > 0 sets emitter mode to burst per distance which mean it will spawn Number of particles each BurstDistance units. Commits: 🧪📝🍋 Restrict BurstDistance in Tangerine; add even more comments 🧪📝🍋 Add more comments 🧪📝🍋 Restrict SpawnBetweenFrames to work only for NumberPerSecond 🧪📝🍋 Add support for linkage widget in NumberPerDistance mode of ParticleEmitter 🧪📝🍋 Fix BurstDistance bugs during fast ParticleEmitter movement 🧪📝🍋 Add burst per distance feature for ParticleEmitter 📝🧪 Engine memory leaks 🐞: Memory leak. Don't share animator keyframes if keyframe value type implements INodeReference. Commits: 🧪📝🍋 Clone keyframes if they contain NodeReference 📝🧪 Integrate nanovg ✨: Integrate C# port of NanoVG to make Tangerine interface more beautiful (less jagged lines, more round things) Commits: 🧪📝 Fix alpha slider presentation 🧪📝 Fix ThemedAreaSlider drag 🧪📝 Take in account padding for sliders and spline widget 🧪📝 Update docs submodule 🧪📝 Preallocate NanoVG contexts 🧪📝 Fix compilation in iOS 🧪📝 Sync .csproj 🧪📝 Reshape slider thumbnail to circle 🧪📝 Rework ThemedAreaSlider. Derive it from the Slider, remove redundant properties, make cute display 🧪📝 Fix scissor calculation 🧪📝 Fix dependency flaw 🧪📝 Style fixed 🧪📝 Add README.md, LICENSE.txt for NanoVG 🧪📝 Enchance NanoVG antialiasing 🧪📝 Render NineGrid with NanoVG 🧪📝 Replace NanoVG.Transform with Matrix32 🧪📝 Remove unnecessary Renderer.Flush() 🧪📝 Don't call Renderer.Flush() if the material parameters have not been changed 🧪📝 Remove unused using 🧪📝 Render keyframes with NanoVG 🧪📝 Various improvements in RendererNvg 🧪📝 Remove RenderBatch max vertices limitation 🧪📝 Use NanoVG for various Tangerine presenters 🧪📝 Implement common drawing methods in RendererNvg static class 🧪📝 Refactoring, code clean up 🧪📝 Render widgets borders with NanoVG 🧪📝 Add some overloads to NanoVG.Context 🧪📝 Use NanoVG for various controls 🧪📝 Eliminate text rendering from NanoVG, improve style 🧪📝 Integrate NanoVG into Lime 📝🧪 Preserve viewport state on document reopening ✨(tangerine): Preserve selection, scene view position and zoom, selection, current animation, current frame and scene items collapse state when reloading modified document. Commits: 🧪📝 Decided to get rid of continuous syncing of document view state in favour of syncing on demand 🧪📝🍊 Represent document state as components with data 🧪📝🍊 Preserve viewport state on document reload 📝🧪 Spawn particles between frames ✨: Add Lime.ParticleEmitter.SpawnBetweenFrames flag. When set to true it spawns particles as if they where spawned uniformly distributed between current frame and previous frame. This flag is true by default in Tangerine when creating new particle systems, but is false for all previously created particle emitters. This feature is especially useful when emitters moves fast enough to notice gaps between frames. Commits: 🧪📝🍋 Use correct interpolation method for ParticleEmitter 🧪📝🍋 Add feature to spawn particles in between frames positions while ParticleEmitter is moving 📝🧪 Improve DissolveComponent examples: ✨: New example effect ./Examples/Tests/**/DissolveComponent.cs Commits: 🧪📝[Tests] Fix Dissolve shader precision 🧪📝[Tests] Add Dissolve test sample 🧪📝[Tests] Add new DissolveComponent 📝🧪 Reduce the frequency of AnimationsPanel.RebuildTreeView calls ⚡️(tangerine): Don't rebuild animation panel tree view with each animation frame change when in animation mode to change marker label to bold if it's on current frame. Use change watcher per marker instead. Commits: 🧪📝🍊 Don't call RebuildTreeView for AnimationsPanel when changing Document.Current.AnimationFrame 📝🧪 User friendly inspector warnings ✨(tangerine): Collapse multiple inspector info/warnings/errors into single widget when selecting multiple nodes. Commits: 🧪📝🍊 Add inspector warnings counters for multiselection 📝🧪 Fix particles uvs 🐞: Incorrect UVs in Examples/**/ParticleEmitter3D.cs Commits: 🧪📝[Examples] Assign correct uvs for 3D particles 📝🧪 Propagate cooking rules ✨: Allow to propagate cooking rules for given target down the filesystem hierarchy, overriding other cooking rules according to target priority. Use ! before the rule to set an override. e.g. !<rule>(<target>) <value> Commits: 🧪📝🍊 Fix bugs in cooking rules: Make sure rule value is set when a single rule is overridden Do not use null as default target sentinel when invoking CookingRulesBuilder.Build Fix NRE in cooking rules editor when rule value is null 🧪📝 Fix cooking rules editor to support correct display of where deduced rules did come from and fix other bugs do not set rules.SourcePath to null for rules record for the rules file itself, Ignore = true is enough above fixes numerous crashes in cooking rules editor make sure new source path is provided when inherit-cloning cooking rules do not initialize or display cooking rules editor when current project is Project.Null refill targets from the project when current project changes fix locating cooking rules affecting the rule in the file with respect to rule propagation 🧪📝 Introduce cooking rule propagation. the syntax is !<rule>(<target>) <value>, when ! is present (<target>) is optional rules overrides now store reference to ParticularCookingRules which is the source of override above can be used to check if this rules override some rule by itself of it is propagated from some parent rules 🧪📝🍊 Get rid of CommonRules, generalize it to special kind of Target: Target.RootTarget with name Any also do not fill invisible (yet) target picker with hidden targets in Tangerine 🧪📝 Add Orange action which saves all cooking rules per target in json format the action is \"Save deduced cooking rules\" you select a directory where to save the files and each file name will be <project_name>_<target_name>.json use it to check global regressions in deduced cooking rules for whole projects. 📝🧪 Exclude cooking rules from dictionary processing 🐞: Exclude cooking rules for dictionary file from \"Update Localization Dictionary\" action processing Commits: 🧪📝🍊 Add checking for cooking rules in dictionary processing 📝🧪 Engine memory leaks 🐞: Memory leak in static Lime.MagnetData Commits: 🧪📝🍋 Clear ParticleEmitter.magnets after use. If ParticleEmitter.magnets is not cleared after use, we will get a memory leak. 📝🧪 Tangerinefileproperty save extension option ✨(tangerine): Add TrimExtension option to TangerineFilePropertyAttribute set to true by default for compatibility. Commits: 🧪📝 Make TrimExtension public 🧪📝 Remove TrimExtension override from CustomFilePropertyEditor 🧪📝 Rename SaveFileExtension to TrimExtension, fix indent 🧪📝 Add option to save file extension to TangerineFileProperty 📝🧪 Fix paste in MarkerPropertiesDialog 🐞(tangerine): Ctrl+V and other commands not working in Marker Properties Dialog Commits: 🧪📝🍊 Move MarkerPropertiesDialog out of transaction 📝🧪 3d particles examples: ParticleEmitter3D implementation. See ./Examples/Tests/Tests.Types/ParticleEmitter3D/ Commits: 🧪📝[Examples] Check for indices overflow 🧪📝[Examples] Remove no longer needed lock 🧪📝[Examples] Remove boundingRect parameter 🧪📝[Examples] Release mesh on render object's release 🧪📝[Examples] Remove changes from Matrix44; Move look at calculation to ParticleEmitter3D 🧪📝[Examples] Rotate initial Direction 🧪📝[Examples] Use fixed size meshes 🧪📝[Examples] Make material cache non-static 🧪📝[Examples] Apply initial scale to velocity vectors 🧪📝[Examples] Add ParticleEmitter3D 📝🧪 Select animation on creation ✨(tangerine): Navigate to animation after creating one Commits: 🧪📝🍊 Select animation on creation 📝🧪 Animation addition from timeline ♻️: Move animation adding commands into TimelineCommands.* 🐞: Rename \"Add\" to \"Add Animation\" ✨: Add animation adding commands to context menu of timeline nodes (to which it is possible to add animations) Commits: 🧪📝🍊 Refactor EditMenu properties 🧪📝🍊 Make animation addition commands available for timeline; Restrict animation addition for external scenes 📝🧪 Fix ParticleEmitter rendering in WidgetAdapter3D 🐞: ParticleEmitter inside WidgetAdapter3D with ParticleLinkage set to Root incorrectly calculates the transformation Commits: 🧪📝🍋 Fix ParticleEmitter rendering inside WidgetAdapter3D 📝🧪 Fix mesh pooling in ExtrudeAlongSplineComponent 🐞: Race condition in Examples/ExtrudeAlongSplineComponent when pooling meshes Commits: 🧪📝[Examples] Remove interlocked; Make mesh related classes private 🧪📝[Examples] Fix mesh pooling in ExtrudeAlongSplineComponent 📝🧪 Rework the animation panel for the hierarchical timeline ✨: In Animation panel of Tangerine adding to displaying all ancestors of current container display also shared ancestors of selected nodes. i.e. nodes which all have all of selected nodes as descendants. Commits: 🧪📝🍊 In animation panel additionally display common ancestors for selected nodes 📝🧪 Roslyn analyzers style: setup analyzers to enforce code style Commits: 🧪📝🍋[GLES] Consistent argument names between win and android 🧪📝 Fix code style 🧪📝 Setup analyzers add analyzers to windows Lime, Orange and Tangerine projects generate comment header for auto generated cloners and deserializers setup analyzer configs: .editorconfig, stylecop.json, Menees.Analyzers.Settings.xml extract common analyzers code from win csproj files into ./Analyzers.targets 📝🧪 Fix particle emitters bounding rect calculation 🐞: ParticleEmitter's BoundingRect calculation Commits: 🧪📝🍋 Transform Quadrangle instead of Rectangle 🧪📝🍋 Fix ParticleEmitter's BoundingRect calculation 📝🧪 Remove triggers after nodetypeconvert 🐞: converting node type didn't skip animators unavailable in the context of new type ♻️: new Tangerine.Core.PropertyInspection static class to tell if property can be animated or inspected Commits: 🧪📝 Fix code style 🧪📝 Fix after rebase 🧪📝 Inline CanAnimateProperty, rename _CanInpectProperty 🧪📝 Cache CanInspectProperty and CanAnimateProperty methods 🧪📝 Create CanAnimateProperty method 🧪📝 Move code to the PropertyInspection class 🧪📝 Check property attributes in dest type 🧪📝 Do not copy animator for Trigger if dest type cannot have children 📝🧪 Fix conflicting animations display bug 🐞: marking animation as having insufficient priority when it's not active and active one with the same name is not visible in animation panel rename preference AnimationPanelReversedOrder => AnimationsPanelDisplayRootAtTheEnd and change it's description Commits: 🧪📝🍊 Improve readability of UpdateWarnings code in AnimationsPanel.cs rename preference AnimationPanelReversedOrder => AnimationsPanelDisplayRootAtTheEnd change above preference description move nodeItems from private field into closure refactor AnimationsPanel.UpdateWarnings 🧪📝🍊 Add stripped-down LCA check for conflicting animations 📝🧪 Model does not update after changing fbx 🐞: Not invalidating WeakReferenceCache for animation inside AnimationData when a model was updated on disk with animation changes Commits: 🧪📝🍋🍊 Fix animations loading after changing 3D models 📝🧪 Fix bundles index overwriting 🐞: Tangerine did not modify Data/.index file when cooking assets which resulted in increased cook/build times on large projects due to not caching asset hashes Commits: 🧪📝🍊 Move common code for Function and Action into separate method 📝🧪 Centrify viewport on legacy animations transition 🐞: Center timeline on animation's caret position even when animation switch is implicit. That is the case when navigating between nodes when current animation is of Legacy kind. Commits: 🧪📝🍊 Centrify timeline viewport at caret position on animations switching 📝🧪 Fix animation stretch crash 🐞: Stretching keyframes with \"Animation Stretch Mode\" on the Timeline will no longer crash Commits: 🧪📝 Add comment 🧪📝 Rename removeAnimator to removeEmptyAnimator 🧪📝 Don't remove animator when stretching animation 📝🧪 Show path to broken texture in assetcooker ✨: When copying images into texture atlas in case of an exception a name of the problematic image file will be reported Commits: 🧪📝 Pass inner exception 🧪📝 Catch exception in SyncAtlases 📝🧪 Extrude along 3d spline Commits: 🧪📝[Examples] Remove setters from ExtrudeShape's members 🧪📝[Examples] Assign empty List to ExtrudeShape members by default 🧪📝 Use Queue and lock for mesh pool 🧪📝[Examples] Add mesh pool for ExtrudeAlongSplineComponent 🧪📝[Examples] Add ExtrudeAlongSplineComponent 📝🧪 Refactor persistence ♻️: rename Persistence ReadObject/WriteObject group of methods to ReadFrom<Source>, WriteTo<Destination> where <Source> and <Destination> can be String, File, Bundle, Stream, CurrentBundle. remove <T> from Persistence.WriteTo* methods. rename object instance to object @object in arguments. add additional read/write source/target. Persistence methods no longer require string path as first argument in read/write methods. Persistence.YuzuCommonOptions renamed to Persistence.YuzuOptions Commits: 🧪📝 Rebuild RemoteScripting.dll on Mac 🧪📝[Migrations] Refactor persistence: rename method to Write/Read_To/From_<source/target> pattern remove from write methods rename object instance to object @object in args add additional read/write source/target 📝🧪 Fix timeline selection synchronization 🐞: Make sure last node selected in the scene view is visible in the timeline. Commits: 🧪📝🍊 Fix SceneItem timeline position calculation in EnsureSceneItemVisible 📝🧪 Tangerine navigator ✨: document and panel navigation dialog -- convenient way to navigate between documents Commands: Replaces GenericCommands.NextDocument and GenericCommands.PreviousDocument (Ctrl+Tab, Ctrl+Shift+Tab) Remember, you can hold Control after pressing Ctrl+Tab or Ctrl+Shift+Tab While opened you can use mouse or keyboard arrows, or continue pressing Tab/Shift+Tab When selecting a panel instead of a document, the panel is activated and gets focus, though you may have to continue pressing Tab inside the panel to reach desired control Colors: Navigator.PanelBackground Navigator.ListBackground Navigator.AccentColor Navigator.HoveredItemBackground Commits: 🧪📝🍋🍊 Fix code style 🧪📝🍋🍊 Make separate KeyboardFocusScope for the list of panels and documents 🧪📝🍋🍊 Fix for macOS 🧪📝🍊 Rename DocumentNavigator => NavigatorDialog 🧪📝🍊 Receive events through the native menu of the main window 🧪📝🍊 Remove custom colors 🧪📝🍊 Fix crash when opening DocumentNavigator without a roject 🧪📝🍊 Remove redundant checks and add DocumentNavigator.Show 🧪📝🍊 Change the style of the navigator window on the Mac OS There is a problem with windows without a close button on the mac. Such windows cannot be closed. Without the close button, the event responsible for closing the window is interrupted somewhere. This can be bypassed, but the desired event is not available in our window system. 🧪📝🍊 Add comment for ClearAndSaveConflictingShortcuts 🧪📝🍊 Rename Navigator => DocumentNavigator 🧪📝🍊 Throw an exception if NextDocument or PreviousDocument shortcuts are changed 🧪📝🍊 Remove unused references 🧪📝🍊[Mac] Update Tangerine.Mac.csproj 🧪📝🍊 Show navigator when calling NextDocument PreviousDocument commands 🧪📝🍊 Add Navigator 🧪📝🍊 Add NavigatorColors 📝🧪 Fix ktx total memory Commits: 🧪📝 Fix not tracking total texture memory used for ETC2 compressed textures refactor vram memory tracking make CommonTexture.TotalMemoryUsed thread safe 📝🧪 Update help link in tangerine Commits: 🧪📝🍊 Update Documentation links 📝🧪 Fix KeyFunction and Shader typos Commits: 🧪📝🍊 Fix typos in KeyFunction and ShaderId enums 📝🧪 Fix error on paste node Commits: 🧪📝🍊 Catch all exceptions on paste 📝🧪 Fix invisible keyframes Commits: 🧪📝🍋 Copy version when cloning TypedKeyframeList 📝🧪 Fix WidgetAdapter3D rendering in Tangerine Commits: 🧪📝 Fix grammar 🧪📝🍋 Fix WidgetAdapter3D rendering 📝🧪 Fix ExceptionHandling crash new event Lime.Application.UnhandledExceptionOnUpdate which is raised whenever an exception is thrown on update by any Lime.Window Tangerine exception handling no longer binds to specific windows, it is now using Lime.Application.UnhandledExceptionOnUpdate instead to handle exceptions not only in docking managed windows Lime.Application.Windows is now only accessible for enumeration, you can no longer modify it Lime.Application.Windows now contains main window on iOS and Android Commits: 🧪📝 Add/Remove window to Application.Windows on iOS and Android for consistency 🧪📝🍋[Window][Application] Subscribe application to window's unhandled exception on update from application when adding or removing window. Not from window itself. 🧪📝🍊 Make IsGitInPath readonly 🧪📝🍊 Set Application.UnhandledExceptionOnUpdate before creating main window 🧪📝🍊 Remove UnhandledExceptionOccurred event from DockManager 🧪📝🍊 Make global UnhandledExceptionOnUpdate 🧪📝🍊 Change git error message 🧪📝🍊 Output message if git is not installed"
  },
  "articles/changelog/2.0.0.0.html": {
    "href": "articles/changelog/2.0.0.0.html",
    "title": "Version 2.0.0.0 | Citrus Engine",
    "keywords": "Version 2.0.0.0 Legend Legend 📝 jira issue link 🧪 gitlab merge request link 🐞 bug fix ⚡️ improve performance ✨ new feature 💥 breaking change ♻️ refactoring 🧹 chore ✅ test 📝🧪 Animation compression 💥: Migration required. Lime schema version: 5 -> 6. ✨(lime): Introduce lossless animation compression for 3d models. ✨(lime): Add missing Vector3.Min/Max methods. ♻️(lime): New IAnimationCurve Animator.Curve/ReadonlyCurve extension points for different animation curves. Animator.Keys/ReadonlyKeys are now actually stored in curves. ✨(lime): New protected Node.CloneRaw which executes node clone without invoking clone.NotifyOnBuild. Commits: 🧪📝 Migrate empty and test projects 🧪📝 Update yuzu generated binary deserializers and cloners 🧪📝 Fix migration and schema version after rebase 🧪📝 Revert changes to persistence 🧪📝🍊 Set SyncModels StageVersion to 1 🧪📝 Rename CloneHierarchy -> CloneRaw 🧪📝🍋 Refactoring 🧪📝🍋 Add missing changes 🧪📝🍋🍊 Update lime persistence schema; Add Animator migration 🧪📝🍋 Rename LegacyAnimationCurve -> SimpleAnimationCurve; Remove YuzuMember from Animator.ReadonlyKeys; Fix Animator.Duration; Update deserializers/cloners 🧪📝🍊 Update TangerineAssetBundle version 🧪📝🍋 Fix Animator with empty curve 🧪📝🍊 Increase SyncModels.StageVersion, TangerineAssetBundle.CurrentVersion 🧪📝🍋[Model3DAttachment] Fix rotation keyframe reduction tolerance 🧪📝🍋[CompressedAnimationCurveEvaluator] Fix IndexOutOfRangeException 🧪📝🍋 Fix projects 📝🍊 Fix .csproj 🧪📝🍊[Model3DAttachment] Fix model animators counting 🧪📝🍋🍊 Fix after rebase 🧪📝🍋🍊 Add CompressAnimations property to Model3DAttachment 🧪📝🍋🍊 Animation compression initial implementation 📝🧪 Fix sdf migration Commits: 🧪📝 Fix SDF migration: handle TextStyle without SDF but with ImageSprite among TextStyles with SDF inside RichText 📝🧪 AndroidSeparatedGameThread ✨(lime,android): On Android process update and input on a separate thread other than ui thread called game thread. On Android Clipboard.Text will throw NotSupportedException Instead use Clipboard.GetTextAsync/SetTextAsync on all platforms CommonWindow.SafeAreaInsetsChanged will be raised on game thread Stop using choreographer to invoke on frame callbacks. new method Lime.Application.IsInUIThread new method Lime.Application.IsInGameThread new method Lime.Application.RunOnUIThread new method Lime.Application.RunOnGameThread Commits: 🧪📝🍋 Add Clipboard.GetTextAsync/SetTextAsync 🧪📝[Android] Fix empty project 🧪📝🍋[Android] Fix application initialization 🧪📝🍋 AndroidGameView refactoring 🧪📝🍋 AndroidGameView refactoring 🧪📝 Fix compilation errors 🧪📝🍋[Android] Separate game thread and ui thread 📝🧪 Robot legacy Commits: 🧪📝 Add warning comments and obsolete for legacy code imported from project specific engine fork 🧪Allow to override Node.RecalcGloballyFrozen and Widget.RecalcGloballyVisible to customize additional logic for frozen and visible. 📝🧪 Workaround to avoid race condition in texture pool 🐞(lime): Race condition in TexturePool. Commits: 🧪📝🍋 Add workaround to avoid race condition in TexturePool 📝🧪 Fix black breadcrumbs Commits: 🧪📝 Fix black breadcrumbs in lookup dialog. ThemedSimpleText had default black color and nested ThemedButtons started using it in render object which lead to regression 📝📝🧪 Sdf fixup and migration ✨(lime): New SDF component property BaseColor to specify basic color of the text. 🐞(lime): SDF component's outline and gradient color alpha was not used. migration: Lime 4 -> 5: Color part of Widget's Color and SimpleText's TextColor (or TextStyle's TextColor) will be migrated into BaseColor of the SDF component for texts which used SDF. Alpha of the outline and gradient will be set to 255 since it was not used, to avoid accidental disappearance of SDF outline or base. Animators are supported, migration splits color and alpha and shift color part to BaseColor animator. If though there are Color and TextColor animators at the same time migration will throw. There are other cases when this migration is unsupported which should be solved manually, though not likely to happen. See migration log when migrating. ✨(lime): Allow to animate all properties of SDF. Though it's highly advised against that because animating material properties spams memory with new material instances. Use only when necessary. 🐞(lime): Fix calculating hash code for multiple classes related to SDF component. ✨(lime): Introduce Hasher.End32() which can be used for int GetHashCode() implementation. 🐞(lime): Remove Animaable.Clone() Commits: 🧪📝 Dont ivalidate inner shadows when changing text softness 🧪📝 Migrate example and empty projects 🧪📝 Fix applying alpha twice in SDF Material shader 🧪📝 Add sdf outline and gradient alpha migration 🧪📝 Fix migration 🧪📝 Review fixes: use hard casts, invalidate shadow material provider when changin shadow params owner (which happens when cloning to set materialProvider to null) 🧪📝 Fix SDFComponent migration 🧪📝 Fix color alpha for BaseColor and OutlineColor of SDF text 🧪📝 Fix GetHashCode for GradientControlPoint, ColorGradient, sdf materials 🧪📝 Generate schema v2 for Examples/Tests 🧪📝 Update schema and bump version 🧪📝 Update Yuzu generated binary deserializers and cloners 🧪📝 Introduce SDFComponent property for base color of a font. Write migration for fixing regress from 📝 📝🧪 Crash when removing component 🐞(tangerine): Fix crash when removing a component with keys from different animations. Commits: 🧪📝🍊 Fix DeleteComponent 📝🧪 Add the ability to change ScrollDirection in ListView ✨(lime): Add the ability to change scroll direction in list view. Commits: 🧪🍋 Update schema without bumping it's version. Note that it's safe because in this case only types which were never serialized got removed from schema. 🧪📝🍋 Add missing logic on Add/Remove item 🧪📝🍋 Small improvements in ListView 🧪📝🍋 Rename PrepareWidgetBeforeInsertion => AdjustWidgetSize 🧪📝🍋 Remove ScrollViewWithSlider.OnScrollDirectionChanged() 🧪📝🍋 Make ScrollView.ScrollDitection virtual and override it in ListView instead of using 'new Property' 🧪📝🍋 Check ScrollDirection before assignment 🧪🍋 Support widget's global color in themed button's render object 🧪📝🍋 Fix scroll view layout invalidation when setting scroll direction. Support layout debug presenter by ScrollView.Layout 🧪🍋 Fix crash when adding layout debug presenter to widget with anchor layout. 🧪📝[Examples] Add some playground-like testcases for scroll view stuff to Examples/Tests (win only) 🧪🍋 Update yuzu generated binary deserializers and cloners 🧪🍋 Setup YuzuDontGenerateCloner attributes for types. Remove some of YuzuDontGenerateDeserializer attributes 🧪🍋🍊 Improve schema/cloners/deserializers generation: Introduce YuzuDontGenerateClonersAttribute to allow exclude types from generating cloners separately from deserializers. Move attributes controlling cloners/deserializers generation to LimePersistence.cs. Add comments for above mentioned and attributes controlling node/component deserialization. Improve type filters when enumerating types for generating cloners/deserializers: Don't generate deserializers for types with RemoveOnAssetCookAttribute and NodeComponentDontSerializeAttribute. Separate filter for generating cloners taking into account only YuzuDontGenerateClonerAttribute Introduce type filtering when generating schema; use it to filter out types with NodeComponentDontSerializeAttribute from schema. 🧪📝🍋 Add the ability to change ScrollDirection in ThemedScrollView 🧪📝🍋 Add the ability to change ScrollDirection in ListView 📝🧪 Emitter legacy fixes 🐞(lime): Fixed regression in NodeCompatibilityExtensions.Update(this node, float delta): legacy way to update node stopped updating particle emitters, because their update behavior was moved into \"after animation\" stage. Fixed NRE when trying to update particle emitter in a legacy case of particle emitter not belonging to NodeManager driven hierarchy. Commits: 🧪📝 Fix emitter random initialization with null manager 🧪📝 Fix emitter was not updating 📝🧪 Resizable marker dialog ✨(tangerine): Make marker properties dialog window resizable. Commits: 🧪📝🍊 Make MarkerPropertiesDialog resizable 📝🧪 Fix image combiner 🐞(lime): ImageCombiner with CutOut operation not working on Android Commits: 🧪📝 Fix ImageCombiner's CutOut option on Android: This is done fixing ambiguity when selecting ShaderOptions's enum item Name by value 4. This ambiguity was resolving to Count string on Android and CutOutTextureBlending on Windows and then used in the shader as a define. 📝🧪 Immediate sound state after play 🐞(lime,audio): Make sure sound returns the same state that was set to it immediately, without need for extra update. Commits: 🧪📝 QueueBuffers() on Play/Resume. This ensures IsStopped == false after the invocation. 🧪Revert \"📝🍋[Audio] Update state of a sound immediately after Play is called\" This reverts commit af1235f625cdd8840f326d1a2edd94108264c22b. 🧪📝🍋[Audio] Update state of a sound immediately after Play is called 📝🧪 Fix packed asset bundle perf ⚡️(lime): About x2 improve in performance when opening packed asset bundle. Commits: 🧪📝 Make sorting of index in PackedAssetBundle optional to reduce performance penalty when its not needed 📝🧪 Fix font pool perf ⚡️(lime): Don't enumerate all files of current bundle when looking up a font in font pool. Commits: 🧪📝 Don't enumerate all files in bundle when looking up a font. Cease support of deprecated font extension .fnt 📝🧪 Copy rect sprite when polypack pixel edge 🐞(orange): When packing rectangular (non-polygonized) sprites into an atlas using polygonal packing method, duplicate sprite edges by one pixel along the perimeter. Commits: 🧪📝 Fix not extruding pixel edges of a rectangular sprite when packing atlases with PolygonalPack 📝🧪 Case sensitive render targets 🐞(lime): Make parsing render targets case insensitive. Fix SerializableSprite.SerializableSprite validator to pass render targets. Commits: 🧪📝 Fix invalid path validation for serializable sprite 🧪📝🍋 Parse render targets in a case insensitive way 📝🧪 Get html from clipboard 🐞(lime,android): Allow for MimetypeTextHtml mime type to be treated as a text in the clipboard on Android. Commits: 🧪📝[Android] Add comment about using MimetypeTextHtml 🧪📝[Android] Make possible to get HTML content from Clipboard 📝🧪 Circular interpolation assert fail 🐞(lime): asserts in numeric properties of a widget going off because of negative animation time Commits: 🧪📝 Clamp easings interpolation parameter 📝🧪 Fix AggregateAssetBundle 🐞(lime): fix race condition when enumerating files from aggregated asset bundle Commits: 🧪📝🍋 Make EnumerateFiles thread safe in AggregateAssetBundle 📝🧪 Replace pvrtextoolcli with ffi calls to pvrtexlib ♻️(orange): use PVRTexLib instead of PVRTexToolCLI 🐞(orange): fix stuck when cooking textures Commits: 🧪📝🍊 Remove dead code 🧪📝🍊 PvrTexLib, TextureConverter refactoring 🧪📝🍊 Replace PVRTexToolCLI with FFI calls to PVRTexLib 🧪📝🍊 Refactor BundleUtils 📝🧪 Convert unpacked textures to png ✨(orange): Add ability to convert textures to .png when unpacking a bundle ♻️(lime, orange, tangerine): Rename CookingUnitHash -> OriginHash in AssetBundle Commits: 🧪📝🍋🍊 Rename CookingUnitHash -> OriginHash in AssetBundle 🧪📝🍊 Refactor BundleUtils 🧪📝🍊 Refactor UI 🧪📝🍋🍊 Use source file ContentsHash as a CookingUnitHash for unpacked files; Use this notion to determine difference between packed and unpacked with specific options bundles 🧪📝 review suggestions: fix interface make png-atlases checkbox disabled when unpack bundles is not set make png-atlases checkbox enabled by default dont fiddle with one unpack checkbox when toggling the other rename CLI argument to unpack atlases and related methods/variables in Orange/UserInterface 🧪🍋 Fix being able to (un)check disabled check box 🧪📝🍋 Generate Lime persistence schema 🧪📝🍊 Replace *UnpackedAssetBundle with UnpackedAssetBundle that has option to decompress textures 🧪📝🍊🍋 Rename UnpackedAssetBundle -> FilesystemAssetBundle, DecompressedTexturesUnpackedAssetBundle -> SourceFormatUnpackedAssetBundle; Add RawUnpackedAssetBundle 🧪📝🍊🍋 Support incremental bundle unpack + texture decompression 🧪📝🍊 Add option to decompress textures after bundle unpack 📝🧪 3d model animation quality Commits: 🧪📝🍋 Generate schema 🧪📝🍊 Implement keyframe reduction options in model 3D attachment 🧪📝🍊 Implement Ramer–Douglas–Peucker algorithm for keyframe reduction 🧪📝🍊 Improve quality of quaternion key reducer algorithm 🧪📝🍊 Normalize quaternion keyframes 🧪📝🍊 Bump TangerineAssetBundle version 🧪📝🍊 Add stage version to SyncModels cooking unit hash 📝🧪 Fix citrus engine binaries version check 🐞(orange, tangerine): Fix checking if Orange or Tangerine is built from current Citrus's HEAD. Commits: 🧪📝🍊 Fix citrus engine binaries version check 📝🧪 Pvrtc to etc ♻️(orange): Remove PVRTC texture format support. Use ETC2 instead. Commits: 🧪📝🍊 Use ETC2 instead of PVR on iOS 📝🧪 Replace compression tools with pvrtextool ♻️(lime, orange): Replace NVCompress, EtcTool with PvrTexTool. Commits: 🧪📝🍋🍊 Add support for ETC2_RGB 🧪📝🍋🍊 Remove DDS support; Use PVR for all platforms 🧪📝🍋 Fix PVRTC compression 🧪📝🍋 Remove support for KTX container 🧪📝🍋 Refactor reading DDS headers to support old-fashioned Xamarin projects 🧪📝🍊🍋 Replace NVCompress and EtcTool with PVRTexTool; Rewrite DDS parsing 📝🧪 Fix citrus engine binaries version check 🐞(orange, tangerine): Fix checking if Orange or Tangerine is built from current HEAD. Commits: 🧪📝 Fix citrus engine binaries version check [Win] Update Launcher 📝🧪 LoadTextureTest ✅: Test loading of images cooked with different meaningful combinations of image related cooking rules. Commits: 🧪📝 Add texture test 🧪📝 Add texture scene and assets 📝🧪 Nodes test ✅: Basic tests for various node kinds and their properties in EmptyProjects/Tests. Commits: 🧪📝 Add Nodes test and assets 🧪📝 Add GetBitmap, HasVisiblePixels 🧪📝 Add WaitWhileSilent 🧪[Tests] Change log format, log level names 📝🧪 Change batching ✨(lime): Redesign internal batching mechanism to allow for batches of max 65536 indices or 1Kb of vertices. (e.g. 37 449 Lime.Vertex of 28 bytes in size) Commits: 🧪📝🍋 Amend comments and VertexBufferCapacity 🧪[Examples] Display draw call count in debug info for Examples/Tests. 🧪📝 Fix compilation after rebase. 🧪📝🍋 Release buffers on next update; Create correct batch region 🧪📝🍋 Store atlas texture reference in RenderBatch 🧪📝🍋 Fix out of range exception 🧪📝🍋 Refactor 🧪📝🍋 Refactor 🧪📝🍋 Set fixed size for index and vertex buffers 🧪📝🍋 Use unamanged memory storage for indicies 🧪📝🍋 Make RenderBatch data only struct; Make RenderList static 🧪📝🍋 Make RenderBatch data only class; Return lightweight RenderBatchRegion instead of RenderBatch 🧪📝🍋 Handle buffers in RenderList instead of using multiple Meshes 📝📝📝🧪 Polypack ✨: Polygonal atlas packing, see docs: Asset Cooking Cooking Rules Atlas Packing Sprite Polygonization ✨(examples/tests): new DebugHitTestComponent to visualize hit test result over a widget. Don't forget to use GenerateOpacityMask Yes cooking rule for transparent images. 🐞: Bug in checking if pixel is transparent. 🐞: Remove texture clip mode validator from TiledImage.Sprite 🐞(tangerine): Bug in TiledImage.IsTiledAlongY/IsTiledAlongX setters. 🐞: Bug in TiledImage hit test. ✨(orange): New action Collect Atlas Statistics ✨: New Lime.Toolbox methods IsNumericType, IsFloatingPointType, IsIntegralType ✨(orange): When cooking assets in case of exception safely commit already cooked assets to the bundle on disk, so you can continue cooking next time from where you left not loosing any progress. ✨(tangerine): Automatic polygon mesh generation for animesh (AnimeshTrace). 🐞: Override GetFileAttributes in MemoryAssetBundle 🐞(orange): Implement ImportFileRaw in VerboseAssetBundle ✨(tangerine): Generic number property editor for use in cooking rules editor for any numeric types. Commits: 🧪📝 Fix compilation after rebase 🧪📝 Remove Validation.TileImageTexture validator since tile image no longer requires texture clamp mode to be set to repeat 🧪📝 Implement generic numeric property editor and use it in cooking rules editor 🧪📝🍊 When generating rect topology for an atlas item setup indices and vertices in a way lime code expects it to be 🧪📝🍊 Fix bug: make sure sprites with rectangular mesh are marked so when packing with polypack 🧪📝🍊 Fix cases when suboptimal atlas size may be choosen. E.g. when there's a long sprite which has been rotated 🧪📝 Do not rotate rectangular sprites when packing with polypack. Existing rendering code for widgets is often using uvs only for 0th and 3rd vertices making further assumptions as if sprite is axis aligned rectangle in an atlas. 🧪🍋[TiledImage] Fix bug in hit test for tiled image 🧪🍊[TiledImage] Fix inability to edit TileSize (into negative values) when on a frame with a keyframe for the IsTiledAlongX/Y property. Because setting any property will trigger applying all current keyframes. 🧪📝🍋 Inorder not to crash when widget is not visible validate if sprite is rectangular after checking if it's visible for widgets requiring sprite to be rectangular 🧪📝[Sprite] Hopefully improve performance of TransformUVCoordinatesToAtlasSpace for rectangular sprites 🧪📝[Sprite] Fix incorrect check for transparent pixel 🧪[Examples] Fix crash in DebugHitTestComponent 🧪🍊 Fix cooking rules editor saving incorrect rule identifiers 🧪📝 +Examples/Tests/DebugHitTestComponent to help test hit test by displaying hit test result for a widget 🧪📝🍊[Mac] Add missing project reference 🧪📝 Fix compilation on mac. 🧪📝 Fix compilation on mac 🧪📝 Update Docs. 🧪📝 Change default polypack rotation to any, change default polygonization detail to 2000 🧪📝 Remove cooking rules: CustomRules, AtlasPacker, PolyPackForceMaxQuality, PolyPackNFPMaxQuality. Rename PolygonalPack to PolyPack. Add comments for cooking rules. Change default polygonization alpha threshold 25 => 1. 🧪fixup squash with code style fix 🧪📝 Add a fall back for a case when a single image can not be packed into an atlas using NFP nesting 🧪📝[Nester] Fix absence of sorting polygons within same group (image) 🧪📝 Make Clipper.IntRect read only 🧪📝🍊 Improve atlas statistics by adding total pack ratio 🧪📝 Improve code style. 🧪🍊 Safely Commit bundle being cooked to disk on exception or abort. 🧪📝 Rename poly-related cooking rules, change their default values 🧪📝🍊 Polygonization improvements: new orange Action `Collect Atlas Statistics' cooking rule to disable polygonization of image width and height both are equal to or less than size threshold introduce cooking rule for polygonization alpha threshold remove cooking rule for selecting polygonization metric introduce cooking rule for polygonization detail introduce new metric for controlling polygonization with detail rule based on research add Area and DescendantsArea to IReadOnlyPolygon fix code style in ContourApproximator.cs 🧪📝🍊 Ensure inclusivness of canvas right top border 🧪📝🍊 Try merge if unable to approximate 🧪📝🍊 Add hack to handle undefined behaviour in open path clipping 🧪📝🍊 Update polygon area in StepBack 🧪📝🍊 Recalculate transforms in Split 🧪📝🍊 Remove duplicate cooking rules and apply minor style fixes 🧪📝🍊 Undo last approximation that results in passing shape matching norm upper bound 🧪📝🍊 Refactor Moments 🧪📝🍊 Add option to disable history in ContourApproximator 🧪📝🍊 Add SpriteRotation 🧪📝[Nester] Add right angle rotations constraint 🧪📝🍊 Try find another incident constrained edge to compute visibility polygon if given is the edge of triangulation 🧪📝🍊 Reverse polygons without LINQ 🧪📝🍊 Pack items with default rotation if they can't be packed with optimal 🧪📝🍊 Set AtlasItem.Image to rect if atlas optimization is PolygonalPack but ShouldPolygonize is not set 🧪📝🍊 Add support for self intersecting contours; Add undo for polygon merge; Fix bugs, floating point issues; Refactor 🧪📝🍊 Enclose image contour approximation in try catch block 🧪📝🍊 Warn about fully transparent image and pack rect instead of approximated contour 🧪📝🍊 Fix animesh tracing 🧪📝 Restore lost changes after rebase. Refactor a bit 🧪📝🍊 Add README and License for PolyNester and Clipper 🧪📝🍊 Fix after rebase 🧪📝🍊 Add cooking rules to control polygonizations and polyponal packing 🧪📝🍊 Add Hu Moments and shape match norm calculation 🧪📝🍊 Refactor ContourApproximator 🧪Fix reuse of Nester; Fix NFP caching; Refactoring; Catch up with latest changes in Polypack repo 🧪📝🍊 Pack images with multiple objects; Speed up packing using NFP cache 🧪📝🍊 Clamp to edge in Rasterizer 🧪📝🍊 Group items into compatibility cohorts 🧪📝🍊 Fine tune last atlas size 🧪📝🍊 Add polygonal packing using NFP nesting 🧪📝🍊 Make Rasterizer more robust 🧪📝🍊 Remove genetic 🧪📝🍊🍋 Apply lost chagnes; Fix after rebase 🧪📝🍊 Catch up with latest changes 🧪📝🍊 Epxose chromosomes 🧪📝🍊 Add VisibilityPolygonMergeStrategy 🧪📝🍊 Add triangular expansion method for computing visibility polygon 🧪📝🍊 Add better mesh retrieval algorithm 🧪📝🍊 Refactor ContourApproximator; Add IMergeStrategy and it's naive implementation 🧪📝🍊 Improve polygon merging 🧪📝🍊 Add a read only way to access Halfedges 🧪📝🍊 Do not randomize chromosome when creating a copy 🧪📝🍊 Improve Physics: thick atlas borders, multiple gravity vectors 🧪📝🍊 Add per image mutators 🧪📝🍊 Speed up EvaluatorForCreepMutation; Make evaluation function totally continuous 🧪📝🍊 Precalcalculate sin\\cos values 🧪📝🍊 Use vertex following contour tracing algorithm instead of pixel following 🧪📝🍊[HET] Fix contrained edge insertion 🧪📝🍊 Make approximation more robust 🧪📝🍊 Use Id to compare vertices 🧪📝[HET]🍊 Add stochastic triangle search 🧪📝🍊[HET] Check if vertex was removed in AddVertex 🧪📝🍊 Add vertex following contour tracing algorithm 🧪📝🍊 User Parallel.For in task executor 🧪📝🍊 Add Seed cooking rule and Reseed method to IRandomNumberGenerator interface 🧪📝🍊 Add ShowMesh cooking rule 🧪📝🍊 Pick optimal atlas size for polypack 🧪📝🍊 Fix typo 🧪📝🍊[Genetics] Improve Physics 🧪📝🍊 Add Rasterizer 🧪📝🍊 Add MaximumVertexNumber cooking rule 🧪📝🍊 Fix polygon expanding for 180 angles 🧪📝🍊 Sync projects; Update cloners and deserializers 🧪📝🍊[Genetics] Reimplement ParallelTaskExecutor 🧪📝🍊 Skip one pixel borders 🧪📝🍊[HET] Add AllowSplitBoundaryEdges in order to get rid of self intersecting polygons 🧪📝🍊 Add Physics 🧪📝🍊[Genetic] Add right angle rotations option 🧪📝🍊[Polypack] Add polygonal packing support 🧪📝🍊[Genetics] Allow to change contribution of absent images to fitness value during evolution 🧪Add ShouldPolygonize cooking rule 🧪Fix compilation 🧪📝 Fix after rebase 🧪📝🍊 Minor fixes for approximation of image with tight border 🧪📝🍊 Add merging between hole and border which lies inside 🧪📝🍊 Add BendOutBothNeighbors transform 🧪📝🍊 Add BendOutNeighbor transform 🧪📝🍊 Fix undoing steps in CountourApproximator 🧪📝🍊[HET] Fix border vertex removal when it's on the line with adjacent vertices 🧪📝🍊 Add genetics implentation for polygonal packing 🧪📝🍊 Add clipper library 🧪📝🍊 Add genetics 🧪📝🍊 Move HET, Contour tracing and approximation code to Orange 🧪📝🍊 Fix compilation on Mac 🧪📝🍊[HET] Add Trace state 🧪📝🍊 Implement stateful ContourApproximator with undo operation 🧪📝🍊 Fix simple contour approximation; Change alpha threshold comparison 🧪📝🍊 Fix PointInPolygon predicate 🧪📝🍊[HET] Fix boundary vertex removal 🧪📝🍊 Remove min instead of next vertex while applying sides intersection transform 🧪📝🍊 Remove unnecessary constrained edges in ApplyMerge 🧪📝🍊 Fix undoing of failed approximation; Add self check method 🧪📝🍊 Assign polygon index 🧪📝🍊[HET] Fix constrained edge insertion 🧪📝🍊 Ensure boundary edges are constrained; Choose more appropriate parameter types for ITopology.ConstructFrom 🧪📝🍊 Add contour approximation algorithm 🧪📝🍊 Add contour tracing algoritm 🧪📝🍊 Fix minor bugs in HET 🧪📝🍊 Add parameter validation for HET methods 🧪📝🍊 Fix HET constructors 🧪📝🍊 Check if vertex was already removed 🧪📝🍊 Copy vertices in the contructor 🧪📝🍊 Return bool indicating opeartion success from InsertConstrainedEdge 🧪📝🍊[Animesh] Precalculate necessary transforms 🧪📝🍋🍊 Use Vector2 instead of SkinnedVertex 📝📝🧪 Alias collision ✨(orange): Allow for the same asset alias if asset bundle is different. The same asset alias within the same asset bundle is still undefined behavior. Commits: 🧪📝 Review based small refactoring 🧪📝 Split cooking rules per bundle in order to narrow alias collision scope to each bundle. (instead of all assets in all bundles) 🧪📝🍊 Refactor asset cooker and asset stage to eliminate stages accessing asset cooker directly. Instead compose and provide required data to stages explicitly from the asset cooker. 📝🧪 Timeline show all current animation keys ✨(tangerine): Use Expand Keyframes in Timeline command of animation context menu to locate all of the animation keyframes on the timeline. Commits: 🧪📝 Rename ExpandPathsToKeyframes to ExpandKeyframesInTimeline 🧪📝🍊 Expand path to the animation owner 🧪📝🍊 Make the animation current before executing \"Expand paths to keyframes\" command 🧪📝🍊 Scroll timeline to the first widget with animation keyframes 🧪📝🍊 Add command \"Expand paths to keyframes\" to AnimationTreeViewItemPresentation 📝🧪 Benchmark tools and scenes ✨(qa,examples): More detailed and GPU specific performance benchmarks: series of synthetic test scenes auto-tuning the tests scene to reach desired FPS detailed diagrams using python scripts measure GPU time and CPU time (update, render, vsync) Commits: 🧪📝[Tests] Add comments to charts parameters 🧪📝[Tests] Improve compare_mean_for_all_scenes Decrease the text separators in the column captions. Do not draw the draw calls metric, because it is expressed in quantity, not in time. Improve captions that show percentage changes in columns. 🧪📝[Tests] Improve compare_mean_for_metric Change grouping of columns. Decrease the text separators in the column captions. 🧪📝[Tests] Remove draw_calls_metric from mean_deviation 🧪📝[Tests] Make automatic layout for charts 🧪📝[Tests] Change DateTime format 🧪📝[Tests] Redesign the directory structure from ..\\scene\\scene-variant\\date-time\\.. to ..\\date-time\\scene\\scene-variant\\.. 🧪📝[Tests] Add requirements.txt 🧪📝[Tests] Add validation for RunCount, RunDuration, PauseBetweenRuns 🧪📝[Tests] Fix charts indexing 🧪📝[Tests] Fix analyzers issues and code style 🧪📝[Tests] Rename RemoteScriptingStorage folder 🧪📝[Tests] Use relative paths in charts 🧪📝 Move Citrus\\Charts to Examples\\Tests\\Charts 🧪📝🍋 Use PipelineStageFlags.AllCommands to measure GPU time 🧪📝🍋 Move drawCallsLogger from PlatformRenderer to Renderer 🧪📝🍋 Inline HasCompletedFrame 🧪📝🍋 Rename frameCompletedFenceValue => lastPendingFenceValue 🧪📝🍋 Optimize GpuProfiler.CalculateDeltaTime Vulkan guarantees that the bits outside the mask are zero 🧪📝[Examples] Replace Math.Log2 with Math.Log Math.Log2 is not supported everywhere 🧪📝 Add scripts to draw charts 🧪📝[Tests][Win] Read the rendering backend from the arguments 🧪📝[Tests] Refactoring 🧪📝[Tests] Fix path for saving files 🧪📝[Tests][Win] Add bat files to run the game with Vulkan 🧪📝🍋 Add logger for draw calls 🧪📝[Tests] Fix DownloadResults test 🧪📝[Tests] Close dialog after the CollectData test 🧪📝[Tests] Fix BinarySearch() 🧪📝[Tests] Try to retest the scene on invalid results 🧪📝[Tests] Close dialog after the CalculateProfile test 🧪📝[Tests] Add a delay before running the CalculateProfile test 🧪📝[Tests] Fix binary search 🧪📝[Tests] Make more convenient paths for profiling data As a result of various circumstances it may be necessary to manually assemble a dataset from different runs. New paths will help with this. 🧪📝[Tests] Rename the scene folder with the profiling data 🧪📝[Tests] Reorder folders in Lime.Profiler.Logger.IntermediatePath 🧪📝[Tests] Rename IncludeInTest.OneSingleAtlas => SingleAtlas 🧪📝[Tests] Add sub folder for CollectData.RunTest() start time 🧪📝[Tests] Add various tests to obtain performance data 🧪📝[Tests] Add FileProperty FileProperty is needed to select a file with a performance profile that is outside the Data folder 🧪📝[Tests] Fix exception \"Method not found\" 🧪📝[Tests][iOS] Allow Scripts.dll to be interpreted 🧪📝🍋 Add loggers to Lime.Window 🧪📝[Tests] Use Profiler configurations for Lime 🧪📝🍋 Add Logger to Vulkan Swapchain This will get the time spent on v-sync 🧪📝[Tests] Add necessary links to frameworks and projects to Tests.citproj 🧪connect GpuProfiler to Lime.*.csproj 🧪connect logger to Lime.*.csproj 🧪📝🍋 Connect GpuProfiler to Vulkan PlatformRenderContext 🧪📝🍋 Add GpuProfiler In the current state allows to get the time that the GPU spent on drawing a frame 🧪📝🍋 Add Logger 🧪📝[Tests] Add scenes for performance testing 📝🧪 Timeline twitches when scaling the selection 🐞(tangerine): Fix timeline twitching when scaling selected keyframes with mouse in animation stretch mode. Commits: 🧪📝🍊 Fix timeline twitching when scaling the selection 📝🧪 Fix menu popup position 🐞(lime): Fix bug when system popup menu wasn't displayed at current mouse cursor position. Commits: 🧪📝🍋 Fix menu popup position 📝🧪 Tooltips for files in FilesystemView ✨(tangerine): Add tooltips to filenames in filesystem view for items which text doesn't fit into the container. Commits: 🧪📝 Add tooltip only if text width exceeds max allowed text width 🧪📝🍊 Add TooltipComponent for FilesystemItem 📝🧪 Fix console font size 🐞(tangerine): Improve the look of Console text at default console font size. Fix bugs when changing console font size. Commits: 🧪📝 Fix the look of Tangerine console font by reverting default font size to 16. Also fix font zoom handling. 📝🧪 Workaround for mouse wheel support on android 🐞(lime): Fix very rare android crash when checking for mouse wheel support. Commits: 🧪📝🍋[Android] Check for null in IsMouseWheelSupported 📝🧪 Locked clipboard crash 🐞(lime, tangerine): Rare windows-only crash when other process is locking system clipboard. Commits: 🧪📝🍋[Win] Catch and swallow exceptions in clipboard setter. See comment for more information. 📝🧪 Ios programatic orientation change crash 🐞(ios): Rare Vulkan crash when changing device orientation. Commits: 🧪📝🍋[iOS] Update swapchain as late as possible 📝🧪 Update yuzu null in dict value 🐞(yuzu): Allow to serialize null values in dictionaries when using binary format. Commits: 🧪📝 Update Yuzu: fix serializing null values in dictionaries when using binary format 📝🧪 Fix arithmetic overflow in XorShiftRandom 🐞(lime): Fix crash due to arithmetic overflow in XorShiftRandom Commits: 🧪📝🍋 Inject BitOperations into System.Numerics namespace 🧪📝🍋 Fix arithmetic overflow in XorShiftRandom 📝🧪 Fix color conversion for 64bpp image on Mac and iOS 🐞(orange, lime): Fix cooking 64bpp images on Mac and iOS. Commits: 🧪📝🍋 Fix color conversion for 64bpp images on Mac and iOS 📝🧪 Fix screen flickering on adreno 308 🐞(lime): Fix visual artifacts on devices with Adreno 308 GPU. See https://bugzilla.mozilla.org/show_bug.cgi?id=1712290 for details Commits: 🧪📝🍋 Invalidate vertex buffer bindings 🧪📝🍋 Recreate buffer instead of orphaning on Andreno 308 devices 📝🧪 Check Orange and Tangerine versions only in Release 🐞(orange,tangerine): Don't check if build commit hash is up to date in Debug configuration. Commits: 🧪📝🍊[Win] Check Orange and Tangerine binaries only in Release 📝🧪 Narrow metal device pool because of semaphore simulation 🐞(lime,ios): Instead of Metal use OpenGL on devices not supporting Apple3 GPU family. Which are Apple A7: iPhone 5S, iPad Air, iPad Mini 2 & Mini 3; and Apple A8 devices: iPhone 6 and 6 Plus, iPad Mini 4, iPad Air 2. Because VkSemaphore is emulated on CPU if GPU doesn't belong to Apple3 family and Citrus started using it in performance critical place. Commits: 🧪📝🍋[iOS] Use OpenGL on devices that doesn't support Apple3 GPU family 📝🧪 Version check for Orange and Tangerine binaries ✨(orange,tangerine): Auto-rebuild Tangerine/Orange in case it was build on different Citrus commit. Commits: 🧪📝 Change confirmation text 🧪📝🍊[Win] Suggest to rebuild if the commit file is not found 🧪📝[Launcher][Win] Rebuild Launcher 🧪📝[Launcher]🍊[Win] Add const for citrus_commit_hash 🧪📝🍊 Rename Orange.Toolbox.CheckBinariesVersion 🧪📝[Launcher] Rename SaveCommit => SaveCitrusCommitToBinaries 🧪📝[Launcher]🍊 Rename commit.txt => citrus_commit_hash 🧪📝[Orange.GUI][Win] Check version of binary files when starting Orange.GUI 🧪📝🍊[Win] Check version of binary files when starting Tangerine 🧪📝🍊[Win] Add CheckBinariesVersion 🧪📝[Launcher][Win] Add \"commit.txt\" file to the output directory 📝🧪 Tool window indication ✨(tangerine): Add visual indication for a panel with keyboard input focus on it. new color for focused panel title bar ColorTheme.Current.Docking.FocusedPanelTitleBackground Commits: 🧪📝🍊 Add title background color for focused panel 🧪📝🍊 Invalidate all Application.Windows when Widget.Focused changed 🧪📝🍊 Optimise active window outline drawing 🧪📝 Draw outline around active window 📝📝🧪 Make tab switching even faster ✨(tangerine): Significantly improve performance of switching between documents when there's at least one large document with a lot of external scenes is open. Rewrite external scene cache and algorithm used for propagating changes made in external scenes opened as separate document or modified on disk. ✨(lime): Improve exception handling: expand on exception context details by adding more info to exception.Data when failing to load node or model attachment. ✨(tangerine): Improve exception and error handling: Fix and add more details to error message when failing to save a scene Display full stack trace including inner exceptions plus exception.Data when showing error message for exceptions unhandled on update. Commits: 🧪📝 Process dummy operation after AttachViews() Some user code uses operation processors for business logic. Guarantee that everything is up after switching documents. 🧪📝 Eliminate GC.Collect() since it brings performace penalty on document close 🧪📝 Fix NRE 🧪🍋🍊 Improve exception handling and code style. 🧪📝 Propagate animation state on document switch Make animation state part of document state hash, clone and replace external scene subtree if animation changed 🧪📝 New way of animations synchronization Synchronize animations in the global apply order 🧪📝 Remove unused field 🧪📝 Fix documents circular dependency tracking and contents hash calculation 🧪📝 Fix animation synchronization 🧪📝 Sync external scenes cache after animation fastforward Animation fastforward may change the hierarchy 🧪📝 Simplify CleanupExternalScenesCache() 🧪📝 Keep the original fbx path when opening an fbx model, but require changing the t3d name when saving 🧪📝 Improve save document error alert 🧪📝 Rework external scenes cache Do not load a document form hdd if its already contained in the scenes cache; Implement scene cache cleanup; Return the document back to the scenes cache when the document is closed. 🧪📝 Use state hash instead of timestamp to deduce modified external scenes 📝🧪 Revert with create sometype 🐞(tangerine): Uncheck create toolbar buttons on revert document. Commits: 🧪📝🍊 Fix selection of buttons after revert 📝🧪 Simultaneous work Create SomeType ✨(tangerine): Make toolbar buttons for Create <something> commands mutually exclusive (radio group) on UI level by introducing RadioCommand. Commits: 🧪📝 Rename SingleCheckCommand -> RadioCommand; rename file; put enum into class and rename enum to CommandGroup 🧪📝🍋🍊 Fix simultaneous check of Create SomeType 📝🧪 Ctrl tab crash without project 🐞(tangerine): Crash when using Ctrl+Tab menu with no open documents. Commits: 🧪📝🍊 Ctrl+Tab crash without project 📝🧪 Fixup ✨(tangerine): Add degree and percent symbols next to HSV sliders for color picker. Commits: 🧪📝🍊 Change range for SV in the HSV slider from 0 - 1 to 0 - 100. Also display percent symbol for SV and degree symbol for H 🧪Revert \"📝🍊 Change range for SV in the HSV slider from 0 - 1 to 0 - 100\" This reverts commit c750133429a481d24544500f62181050016e9b78. 📝🧪 Optimize bundle patching ✨(lime): Improve packed asset bundle fragmentation and performance: Introduce options DontRefreshBundleChecksumOnDispose DontCleanupBundleOnDispose allowing to disable calculating checksum and cleaning bundle on dispose which can be time consuming. To mitigate fragmentation as much as possible without resorting to compactification, files are now written inside \"holes\" left from files removed from the bundle. (e.g. when applying a patch) Commits: 🧪📝🍋 Refactor working with unused space in bundles 🧪📝🍋 Fix after review 🧪📝🍋 Fix calculate unused space for bundle with empty files 🧪📝🍋 Fix calculate unused space for end of bundle 🧪📝🍋 Add possibility to skip cleanup PackedAssetBundle on dispose 🧪📝🍋 Make public DontRefreshBundleChecksumOnDispose property 🧪📝🍋 Optimize bundle patching logic 📝🧪 Hsv slider range 🐞(tangerine): Change Saturation and Value ranges in color picker from [0; 1] to [0; 100] for consistency with majority of software. Commits: 🧪📝🍊 Change range for SV in the HSV slider from 0 - 1 to 0 - 100 📝🧪 Curves for keyframes are displayed after deletion 🐞(tangerine): On the timeline in the curve mode display curves for selected animator only. Commits: 🧪📝🍊 Clear curves when switching animators 📝🧪 All children mode in animation panel ✨(tangerine): Add Show all children button to animation panel. Pressing the button switches animations filter to display only children node's animations starting from current container. Commits: 🧪📝🍊 Add \"show all children\" mode for AnimationsPanel 🧪📝🍊 Remove unused code 📝🧪 Create spline point 3d crash 🐞(tangerine): Fix crash when trying to create a spline3d point outside of spline3d. Commits: 🧪📝🍊 Fix crash on Create Spline Point 3D 📝🧪 Invalidate cached viewport 🐞(lime): Fix cached viewport invalidation in Node3D. Commits: 🧪📝🍋 Remove override of OnParentChanged in Node3D 🧪📝🍋 Refactor 🧪📝🍋[Tests] Add DirtyFlag.Viewport in order to invalidate cached viewport in Node3D; Add tests for viewport invalidation 📝🧪 Particle emitter seed ✨(lime): Options to specify ParticleEmitter random number generator and seed. ParticleEmitter.UseCustomSeed ParticleEmitter.Seed ParticleEmitter.ResetRandom() new public interface IRandom new public interface IRandomProvider new required service DefaultRandomProvider added to NodeManager's service provider refactor ServiceRegistry new class XorShiftRandom implementing IRandom Commits: 🧪📝🍋 Add implementation of BitOperations for Xamarin; Remove TangerineInspect from seed properties 🧪📝🍋 Add default implementation for IRandomProvider.Create() 🧪📝🍋 Rename rng -> random 🧪📝🍋 Sync projects 🧪📝🍋 Add IRandom 🧪📝🍋🍊[Tests] Rename; Create random on update if needed; Do not serialize Seed and UseCustomSeed 🧪📝🍋 Add XorShiftRandom; Use XorShiftRandom as default 🧪📝🍋 Add unit tests for SerivceRegistry 🧪📝🍋 Add option to specify seed for ParticleEmitter's random; Use IRandomNumberGeneratorProvider service in order to obtain random number generator 🧪📝🍋 Add exception message to ServiceProviderExtensions.RequireService 🧪📝🍋 Support interfaces and base classes query in ServiceRegistry 📝🧪 Support for Cyrillic paths in FBXSDK method calls 🐞(orange): Fix support for paths with non ANSI characters in FBXSDK method calls. Commits: 🧪📝🍋 Convert path to utf-8 when loading FBX scene FBX sdk uses UTF-8 internally 📝🧪 Filesystem view crash root folders 🐞(tangerine): Crash when clicking on dropdown of system disks in filesystem view. Commits: 🧪📝🍊 Resolve icon sprite for root folders 📝🧪 TraverseScenesTest ✨(tests): Improve automated testing: implement scene traversing for Examples/Test. Commits: 🧪📝[Tests] Ignore RemoteScriptingStorage directory 🧪📝[Tests] Fix path to benchmark library 🧪﻿📝[Tests] Fix analyzers issues in Tests.QualityAssurance project 🧪📝[Tests] Setup analyzers for Tests.QualityAssurance project 🧪📝[Tests] Refactor and fixes after review 🧪📝[Tests] Add Traverse Scenes Test 🧪📝[Tests] Add tag to CrossFadeIntoTask, add WaitCrossfade Coroutine 🧪📝[Tests] Add back button to scenes 📝🧪 Update yuzu inline compacts binary deserialization ⚡️(yuzu): Inline deserialization of compact types in generated binary deserializer. Commits: 🧪📝 Update yuzu generated binary deserializers 🧪📝 Update Yuzu. Optimized generated binary deserializers for compact types. 📝🧪 Set camera default settings ✨(tangerine): Setup default settings for Camera3D. Commits: 🧪📝 🍊 set Camera3D default settings on creation. 📝🧪 Remove experimental timeline hierarchy 🐞(tangerine): Remove experimental timeline hierarchy checkbox. Commits: 🧪📝 🍊 Remove experimental timeline hierarchy checkbox. From now on this option will be always enabled. 📝🧪 Fix bug with console search 🐞(tangerine): Crash in console when pressing Previous/Next buttons with zero search results. Commits: 🧪📝🍊 Add check for empty list of highlights 📝🧪 Fix drag gesture with post motion crash 🐞(lime): Crash when removing drag gesture with inertial motion strategy from Node.Gestures while the gesture is in inertial motion state. Commits: 🧪📝[Gestures] Skip gestures with null Owner when iterating over active gestures because they have been removed from Node.Gestures 📝🧪 Render sequence 🐞(tangerine): Fix Render to Png Sequence not working when invoked from lookup dialog. Commits: 🧪📝🍊 Use MainWindow context for RenderToPngSequence 📝🧪 Keyboard focus 🐞(tangerine): Don't stop displaying keyboard focus border around a control widget when control widget is under mouse cursor. Commits: 🧪📝🍋 Change condition to get a render object in KeyboardFocusBorderPresenter 📝🧪 Fix icon caching for folders 🐞(tangerine): Display custom folder icons in filesystem pane. Commits: 🧪📝🍊 Add dictionary to cache different folders icons in filesystem 📝🧪 Conflict animation markers 🐞(tangerine): Fix conflict of animation markers when performing node type convert (e.g. to Button which is decorated with default Button markers) Commits: 🧪📝🍊 All markers moved when converting And all default markers are removed if there were markers before conversion 📝🧪 Fix crashes when viewport camera is not set 🐞(tangerine): Fix multiple crashes when viewport camera is not set. Commits: 🧪📝🍋 Fix crashes when viewport camera is not set 📝📝🧪 Fix file selection in the PSD importer ✨(lime, tangerine): Add IsAssetPath parameter to TangerineFilePropertyAttribute which allows to select files in inspector not necessarily located in project asset directory. Commits: 🧪📝📝🍋🍊 Add the ability to select files that are not assets via TangerineFileProperty 📝🧪 Select nodes with Ctrl when the exposition processor is active 🐞(tangerine): Fix node selection with Ctrl when Exposition Processor is active. Commits: 🧪📝🍊 Fix label size 🧪📝🍊 Do not show NavigatorDialog when the document is in exposition mode 📝🧪 Fix scene stats orange action 🐞: Fix orange action \"Collect statistics for persistent data\" used to research and compare scene loading performance and structure Commits: 🧪📝🍊 Fix collect persistent data stats orange action 📝🧪 Override rendering backend ✨(tangerine): Add cli option --rendering-backend (one of OpenGL ES20 Vulkan) and Tangerine.OpenGL.bat to start tangerine with desired rendering backend. Use natemcmaster' CommandLineUtils for cli parsing. Commits: 🧪📝 Fix problem where one file would not open when opening multiple files. 🧪📝 Add argument descriptions 🧪📝 Fix code style 🧪📝 Show output of help command and not launch Tangerine 🧪📝 Not load files that don't exist, in case Tangerine is running. 🧪📝 Exit from Tangerine if incorrect rendering backend was passed, or if invalid file path was passed 🧪📝 Fix error when the file path was not passed 🧪📝[Mac] Add a missing dependency 🧪📝 Add file path parsing using Command Line Utils 🧪📝 Add ignore all unknown options and arguments 🧪📝 Add output of allowed values to the help message. 🧪📝 Delete ES20 and Vulkan bat files 🧪📝 Check Vulkan availability after checking command line arguments 🧪📝 Try to select Vulkan if command line argument is not provided 🧪📝 Set Vulkan as default backend 🧪📝 Change CommandLineParser to McMaster.Extensions.CommandLineUtils 🧪📝 Add command line option to override rendering backend 📝🧪 Fix crash on missed external scene 🐞(tangerine): Crash when external scene is missing while animation fast forwarder cache has already been built for it. Commits: 🧪📝 Fix crash on missed external scene 📝🧪 Fix slider behaviour 🐞(tangerine): Fix being able to drag themed area slider while editing text value of a slider Commits: 🧪📝 Fix slider behaviour 📝🧪 Start to eliminate dependency on current document from inspector content 🐞(tangerine): make it so other instances of inspector (remote scripting RPC properties editing dialog) won't crash when there's no open documents Commits: 🧪📝🍊 Start to eliminate dependency on current document from InspectorContent 📝🧪 Tooltip show time limit Commits: 🧪📝 Increase the time limit for displaying tooltips by default 📝🧪 Fix orange cachemode none Commits: 🧪📝 Not use cache when cache mode is None 📝🧪 ImplementParametersForRemoteScripts Commits: 🧪📝🍊 Process history commands on PostEarlyUpdateStage 🧪 fix_ci Commits: 🧪[CI] Update CI 📝📝📝🧪 ImplementParametersForRemoteScripts ✨(remote scripting): rpc params and Tangerine interface to edit rps params Commits: 🧪📝🍊 Add comment to ProjectUserPreferences.RemoteScriptingProcedureCalls field 🧪📝[RemoteScriptingClient subtree] Merge RemoteScriptingClient.git (commit 17f6735896945931ffe44e36e2c773e13153dc96) 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' changes from cd8389744..1c77d1000 1c77d1000 📝 Change paths to use RemoteScriptingClient as subtree in Citrus 17f673589 📝 Catch up with RemoteScripting 9dfbfd854 📝 Disable vsync during FramesSkippingTimeFlow REVERT: cd8389744 📝 Change paths to use RemoteScriptingClient as subtree in Citrus git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: 1c77d10008fffa41a72bde359a316f58a84a6a07 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' content from commit cd8389744 git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: cd83897444b3ceb11de6c1245ccaa9fe80a8d75a 🧪📝🍊 Restore last used remote procedure call parameters in RemoteProcedureCallDialog 🧪📝🍊 Implement dialog for setting up remote procedure call parameters 🧪📝[RemoteScripting] Make it possible to use parameters in remote procedure calls 📝🧪 Locate msbuild vs2022 🐞(orange): Locating msbuild17 on win with only vs2022 installed Commits: 🧪📝[Win]🍊 Locate msbuild on systems with only vs2022 installed 📝🧪 Implement qaa on citrus Commits: 🧪📝 Include Benchmark into Examples/Tests project 🧪📝[Benchmark subtree] Merge Benchmark.git (commit c3e12b6f2c2e481483e10856bc4a8799829ae96a) 🧪Squashed 'Lime/Extensions/Benchmark/' content from commit ad72a2d49 git-subtree-dir: Lime/Extensions/Benchmark git-subtree-split: ad72a2d49efb45b5e73cdb408c875b45424ecb38 🧪 fix_ci_yml_formatting Commits: 🧪[CI][Docs] Fix yml indent formatting; Update Docs 📝🧪 Scenes not opening from explorer 🐞(tangerine): Tangerine documents didn't open with Explorer's \"Open With\" Commits: 🧪📝🍊 Fix Persistence settings in TangerineSingleInstanceKeeper With default settings, OnAnotherInstanceArgsRecieved won't be able to read the arguments. 📝🧪 Implement qaa on citrus ✨(examples): Implement QualityAssurance in Examples/Tests Commits: 🧪📝[Example/Tests] Add possibility to write and run script in Tangerine 🧪📝🍊[RemoteScripting] Add possibility to skip project building 🧪📝[Example/Tests] Preserve code from linker on Android and iOS 🧪📝[Example/Tests] Add possibility to preserve scripts from linker 🧪📝[Example/Tests] Catch up Example/Tests project with current version of RemoteScriptingClient Extension 🧪📝[RemoteScriptingClient subtree] Merge RemoteScriptingClient.git (commit a125524754dd7eb57951fa436a57e521896c7ac3) 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' content from commit cd8389744 git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: cd83897444b3ceb11de6c1245ccaa9fe80a8d75a 📝🧪 Improve DissolveComponent ✨(examples): Add mask rotation and rotation pivot to dissolve component. Commits: 🧪📝[Tests] Add RotationPivot property to DissolveComponent 🧪📝[Tests] Add MaskRotation property to DissolveComponent 🧪📝[Tests] Use matMaskUV matrix to transmit UV of the mask to the shader 📝🧪 Android project files are blocking the win project build 🐞(examples): Ignore Resource.designer.cs files in Win projects. Those files are generated when building for android producing errors in Win build after Android build. Commits: 🧪📝[Examples] Remove \"Resources\\Resource.designer.cs\" from *.Types.Win.csproj 📝📝📝🧪 Fix sprite and stub load Commits: 🧪Migrate examples scenes to version 4 🧪🍋 Bump schema version to 4 and generate schema 🧪📝 Fix invalidating stub textures loaded on non render thread 🧪📝 Fix loading sprites with absolute path while loading scene 🧪📝 Setup serializable asset validator for SerializableSprite 📝🧪 Fix redudant external scenes cloning 🐞(tangerine): Redundant external scenes cloning when switching tabs. Commits: 🧪📝 Fix redundant external scenes cloning 📝🧪 Improve trigger selection dialog ✨(tangerine): New interface for trigger selection dialog: compact preview layout, tags, selected triggers bubble up to the top section. ✨(tangerine): Marker tags: set up tags in marker properties, filter by tags in animation panel and trigger selection dialog. Commits: 🧪[Examples] Migrate examples to fresh schema version 🧪📝🍋🍊 Add minor fixes; Bump schema version 🧪🍊 Refactor saving json/project; Use LF instead of CRLF when saving json. 🧪📝🍊 Fix duplication of tags during creation; fix disappearing tag button on tag duplication 🧪📝🍊 Add VSplitter to TriggerSelectionDialog 🧪📝🍊 Fix crashes Fix crash on duplicated markers; Fix crash on animation rename / remove while in TriggerSelectionDialog (can be achieved with Ctrl+Z). 🧪📝🍊 Generalize GetItemUnderMouse for TreeView 🧪📝🍊 Make tags expandable in MarkerPropertiesDialog 🧪📝🍊 Fix typos and bugs; Improve UI/UX 🧪📝🍋 Update cloners and deserializer 🧪📝🍊 Add Tagbar to AnimationsPanel; Refactor and fix visual bugs 🧪📝🍊 Beautify TriggerSelectionDialog interface 🧪📝🍋 Fix crash and typos 🧪📝🍊 Add async tags reloading from .citproj upon update 🧪📝🍊🍋 Use Guid instead of int to identify tags 🧪📝🍊 Apply .citproj formatting for Orange.Json.RewriteOrigin 🧪📝🍊🍋 Use SortedSet instead of HashSet for Marker.Tags 🧪📝🍊 Add TagDatabase providing project-level tags collection 🧪📝🍊 Improve trigger dialog visuals a bit 🧪📝🍊 Rework TriggerSelectionDialog using TreeView 🧪📝🍋 Add Marker.Tags 📝🧪 Offset and opaque for spline extrusion ✨(examples): Add opaque and tile offset to extrude along spline component. Commits: 🧪📝🍋 Add Opaque to ExtrudeAlongSplineComponent 🧪📝[Examples] Add TileOffset and use of Opaque 📝🧪 Use Opaque in ParticleEmitter3D ✨(examples): use Opaque in particle emitter 3d Commits: 🧪📝[Examples] Use Opaque 📝📝🧪 CIT/2310/2329_crash_when_switching_tabs Commits: 🧪📝📝🍊 Fix crash when switching scene tabs If Document.Current.SceneTreeVersion does not match the version inside the ItemsInAnimationScope, the IsItemInAnimationScope method should return false. 📝📝📝🧪 Sprites ✨(render)💥: Introduce sprites. Before sprites instance of a texture under the hood could possibly be part (only rectangular) of a texture atlas. With this change a Texture (as it should be) starts representing only whole texture loaded from an image. To express sub-region of a texture or use texture atlasing Lime.Sprite should be used. This change introduces new Citrus Schema version and requires asset migration. Because multiple fields of type ITexture turned into fields of type ISprite. If you have project declared types with field of type ITexture, they should be changed to ISprite if atlas support is desired. That will require you to write project level migration. new types: new interface ISprite new class Sprite new class SpriteData new class SpritePool new class SerializableSprite Use ISprite.TransformUVCoordinatesToAtlasSpace to transform UVs from sprite space to atlas space and pass them to Renderer methods. Much slower for non rectangular sprites. Use ISprite.ValidateRectangular to throw diagnostic exception in case code expects sprite asset to be rectangular. Property type changes of Widgets and Font related classes: Font.Textures => Font.Sprites FontCharCollection.Textures => FontCharCollection.Sprites FontChar.TextureIndex => FontChar.SpriteIndex Animesh.Texture => Animesh.Sprite (rectangular only) IMaterialComponentOwner.Texture => IMaterialComponentOwner.Sprite TextStyle.ImageTexture => TextStyle.ImageSprite (rectangular only) DistortionMesh.Texture => DistortionMesh.Sprite (rectangular only) Image.Texture => Image.Sprite (rectangular only if used as image combiner argument) If sprite is not rectangular UV0 and UV1 properties won't work NineGrid.Texture => NineGrid.Sprite (rectangular only) ParticleModifier.Texture => ParticleModifier.Sprite TiledImage.Texture => TiledImage.Sprite (rectangular only) Widget.Texture => Widget.Sprite Class Lime.TextureAtlasElement removed, new class SpriteData is used instead. Text related only Lime.Sprite and all related names changed to Lime.Glyph and *Glyph respectively. See Lime.Graphics.GlyphList.cs. Also CharDef renamed to CharPosition. ITexture has following members removed (use sprites instead): SurfaceSize AtlasUVRect AtlasTexture TransformUVCoordinatesToAtlasSpace New ITexture member UnderlyingTexture. Do not use, it's a workaround for batching to work properly. Will be removed in future. Removed class MovieTexture, it's functionality is inlined into Lime.Movie. Removed PlatformRenderer SetTextureLegacy. Renderer DrawTriangleStrip and DrawTriangleFan expect vertices uvs to already be transformed to atlas space. Care to do it in calling code if using Sprites. Renderer.DrawSprite now accepts ISprite instead of ITexture and doesn't accept UVs. There's also new Renderer.DrawTexture methods which accept ITexture and UVs. Expect UVs to already be transformed to atlas space in case passed textures is a texture atlas provided by sprite. Tiling doesn't require setting WrapMode to Repeat any more, instead Lime.ShaderOptions.Tiled is used. In that case shader expects uniform vec4 texCoordsLocalToAtlasTransform first two components should be uv offset and two others uv rectangle size in atlas space. TiledImage now uses this mechanism. WrapMode.Repeat is still there and works. Use SerializableSprite or SpritePool.Instance.GetSprite() to load sprites. In first case sprite will only be actually loaded on demand when accessing sprite properties. When loading sprites if asset has no sprite data in a bundle, but texture exists rectangular sprite is created from that texture. New cooking rules where introduces and some cooking rules where renamed reflecting coming changes to cooking rule schema naming: TextureAtlas becomes Sprite.AtlasName and it's special value None is removed. new cooking rule Image.ImportMode specifying how an image should be imported when cooking. Possible values are Texture and Sprite, the default is Sprite Sprite.Mesh Poly Rect, the default is Rect Setting WrapMode to not Clamp will no longer automatically import image as Texture, instead warning is produced in case Image.ImportMode is set to Sprite .citproj file will use field Version for project version. CookingRules will be automatically migrated for project version 0. New static flag Lime.Application.IsProduction. Use in production builds. Disables diagnostic exceptions and sets Texture2D.IsStubTextureTransparent to flag value. So substitute blue-white checkered pattern will not be used for missing textures and transparent one will be used instead. New property PackedAssetBundle.DontRefreshBundleChecksumOnDispose set to false by default. Can be set to true if check sum is not needed and/or same bundle is being opened/closed (via dispose) a lot to improve performance. New method Texture2D.TryLocateTextureInCurrentBundle. Doesn't locate sprites, only textures. 🐞: Cache transparent stub texture in separate variable, so textures intended to be checkered pattern won't disappear in production. Texture2D.IsStubTextureTransparent is now internal use Lime.Application.IsProduction instead Obsolete TexturePool.DiscardUnusedTextures removed. Lime.Vertex.Pos is now Vector2 instead of Vector4. 🐞: Lime.Graphics.Platform.Vulkan.PlatformRenderContext.Validation: fixed validation layer name and change diagnostic text output method to System.Diagnostics.Trace.WriteLine Commits: 🧪📝 rename SpritePackingMode => SpriteMesh 🧪📝 Remove comment left out after rebase 🧪📝 Make SpritePool non static with static Instance field 🧪📝[Examples] Migrate example projects 🧪🍋 Generate Schema version 2 🧪🍋 Update Yuzu Generated Cloners 🧪📝 Seal Sprite, SpriteData, SerializableSprite classes 🧪📝[Examples] Fix Examples/Tests compilation 🧪[CI] Generate Lime Schema when running pipeline for win, fail if there are any changes 🧪Sprite migration For Examples/Tests 🧪sprite migration up sprites migrations dont require schema for font migrations 🧪📝 Manually revert all assets to state before Sprites 🧪📝 Add 3d models tests More examples in \\Data\\Shell\\Sprites\\3d 🧪📝 Update Tests with sprite examples Add sprite tests UV animation test Rectangle vs Poly tests Mesh and tiled images test 🧪📝 Update Examples code to support sprites 🧪📝 Fix TiledImage validators and validate its sprite to be rectangular 🧪🍋[Vulkan] Use Trace instead of Logger for validation messages 🧪📝 Refactor Sprite: Meld Vector2[] vertices and Vector2[] uvs into Sprite.Vertex[] Do not store int atlas rectangle Store Size as Vector2 Store AtlasSize as Vector2 (pass it through SpriteData) Improve performance of TransformUVCoordinatesToAtlasSpace for most frequent cases (rect, 0 0, 1 1) 🧪🍋[Vulkan] Fix validation layer name, VK_LAYER_LUNARG_standard_validation is deprecated 🧪🍋[Renderer] Avoid allocations when filling vertex buffer in DrawTexture 🧪🍋[Renderer] Change Vertex format Position: Vector4 => Vector2 🧪📝[Sprite] Fix checking if sprite texture is not render texture to decide if it should be serialized 🧪🍊 GetPngFileInfo: fix argument name 🧪🍋[PackedAssetBundle] Dont calc bundle checksum on dispose for read only bundle; Add option to disable calculating bundle checksum on dispose 🧪🍋[SerializableSprite] Instead of triggering sprite/texture load when setting SerializationPath use EnsureSprite method for all getters that require underlying sprite to be loaded. 🧪📝 Add SerializableSprite.ToString() 🧪📝 Fix broken batching 📝 Fix NRE in RenderList.GetBatch 🧪🍋[Sprite][Texture] Fix sprite/texture loading: Pool Textures as sprites Fix caching stub texture when there are two kinds of stub texture in production mode. Fix wrong size for nullSprite by setting it immediately regardless of render thread Fix the way sprites are loaded in Tangerine, previous way was too slow due to the nature of asset bundles 🧪🍊 Cooking rules migration mechanism, migrate cooking rules to changes introduced with sprites: introduce Version field to .citproj files SpriteAtlasName can no longer be null When image wrap mode is not set to clamp instead of automatically importing it as texture produce warning Allow . in cooking rule names throw on encountering Sprite.AtlasName set to None, instead of which Image.ImportMode Texture should be used Get rid of \"Exclusive atlas\" concept, refactor sync atlases [CookingRules] Provide cooking rule source when warning about WrapMode 🧪🍊 New Json.Save, Json.SetValue 🧪📝 Implement Sprites: 📝 Remove TextureAtlasElement.cs Throw if sprites used with text are not rectangle packed 🍊 Add \"SpritePackingMode\" to cooking rules SpriteData.CreateFromTextureRect => SpriteData.CreateRectangularFromTexture Sprite.Atlas => Sprite.AtlasTexture Add Lime.Application.IsProdiction flags which will serve as a safeguard for defensive exceptions. Sprite.PackingMode => Sprite.IsRectangular Add Sprite.ValidateRectangular as a common way to produce errors when sprite should be rectangular but it's not. ValidateRectangular for DistortionMesh, NineGrid, TiledImage, Animesh, TextSprite, image being ImageCombiner argument. Allow periods in cooking rules (e.g. SpriteAtlas.Name instead of SpriteAtlasName) Rename CR: Atlas => Sprite.AtlasName Rename CR: TextureImportAs => Image.ImportMode Remove SafeInvoke from EmptyProject. Rename SpriteOld family to Glyph family of identifiers Use shader for tiling 📝🧪 Inspector support for editing dictionaries with int keys Commits: 🧪📝 Review fixes 🧪📝🍊 Implement dictionary property editor for generic keys, restrict for int and string 📝🧪 IPersistOnReplaceContent ✨(lime): Components implementing IPersistOnReplaceContent won't be removed when instantiating external scenes. Commits: 🧪📝 Improve comment 🧪📝 Add IPersistOnReplaceContent and implement logic in Node.ReplaceConent. 📝🧪 Fix enumerating atlas size 🐞: Improve possible atlas size enumeration when packing images in atlas, improves atlas size by 50% in certain cases 🐞: Upscale texture to PoT regardless of it's wrap mode and texture params 🐞: Limit texture upscale to PoT with MaxAtlasSize 🐞: Limit downscale with 8 pixels 🐞: Remove odd hard limits for TextureScaleFactor (32 for Android and 256 for the rest) Commits: 🧪📝🍊 Improve atlas size enumeration, order by aspect ratio closest to square 🧪📝🍊 Fix enumerating atlas sizes when packing images to atlas 🧪📝🍊 Fix scaling images in Orange: Upscale texture to PoT regardless of it's wrap mode and texture params Limit texture upscale to PoT with MaxAtlasSize Limit downscale with 8 pixels Remove odd hard limits for TextureScaleFactor (32 for Android and 256 for the rest) 📝📝🧪 Examples schema Commits: 🧪📝[Examples] Generate schema 🧪📝 Improve project schema generation helper in Orange 🧪📝[Examples] Remove IsometricMesh and CustomTypes.tan from EmptyProject 📝📝🧪 Migrations ✨: Migrations Commits: 🧪📝 Account for data layers hash when computing cooking unit hash for scenes and models Also: fix bug in code cooker throw an exception when trying to register data layers more than once 🧪[CI][Win] build RemoteScripting in pipeline 🧪🍊 Improve error reporting 🧪📝[Examples] Migrate data 🧪📝[Migrations] Generate (lime, 1) schema 🧪📝 Setup Examples/* to use migrations 🧪🍋 Update yuzu generated binary deserializers and cloners\" 🧪📝 Implement preview metadata migration 🍊 Implement scene preview using document metadata 🧪📝[Migrations] Tests 🧪📝[Migrations] Major refactoring 🧪📝[Migrations] Core migrations implementation"
  },
  "articles/changelog/2.1.0.0.html": {
    "href": "articles/changelog/2.1.0.0.html",
    "title": "Version 2.1.0.0 | Citrus Engine",
    "keywords": "Version 2.1.0.0 Legend Legend 📝 jira issue link 🧪 gitlab merge request link 🐞 bug fix ⚡️ improve performance ✨ new feature 💥 breaking change ♻️ refactoring 🧹 chore ✅ test 📝🧪 Fix Mathf Normal Methods 🐞(lime): Fix Mathf.NormalRandom() methods returning -Infinity with about 1 / 2^24 probability due to Log(RandomFloat()) Commits: 🧪📝 cosmetics 🧪📝 Fix Mathf.NormalRandom() methods returning -Infinity due to Log(0) 📝🧪 Update Tangerine minimized dock windows ✨(lime): New window option UpdateMinimized. Windows only. Window will be updating even in minimized state. 🐞(tangerine): Make all tangerine windows update when minimized so console and remote scripting won't accumulate unprocessed messages in a large bulk. Commits: 🧪📝 Update Tangerine dock windows while in minimized state 📝🧪 Fix memory leaks during tangerine console operation 🐞(tangerine): Memory leak in console panel. Commits: 🧪📝 Fix memory leaks during Tangerine console operation 📝🧪 Fix sprite pool get texture dead lock 🐞(lime): fix dead lock in SpritePool.GetSprite() Commits: 🧪📝 Fix dead lock in method SpritePool.GetSprite(string) 📝🧪 Revert android separate game thread ♻️(lime): don't separate UI and game threads Commits: 🧪📝 Fix after rebase 🧪📝 Revert \"Merge branch 'CIT/2451_AndroidSeparatedGameThread' into 'master'\" This reverts commit 3119e42dea02c6f463feca018d6dd46170283d3b, reversing changes made to d49327adaa676e52b5a862bb076d97b28a82a02c. 🧪📝 Revert \"Merge branch 'CIT/2486_GameThreadFix' into 'master'\" This reverts commit 0c4139d1f721e115e96af7668253e7c0629e4feb, reversing changes made to f3560120a912f41dd484893e6f03465d93064b20. 🧪📝 Revert \"Merge branch 'CIT/2483_fix_android_initialization' into 'master'\" This reverts commit 65c56ad4e64e9f969f59189a716a402cceaf33b7, reversing changes made to 0c4139d1f721e115e96af7668253e7c0629e4feb. 📝🧪 Ninegrid texture scale ✨(lime): Add NineGrid.TextureScale setting. It gives more flexibility instead of hard dependence on the physical Sprite size in pixels. Commits: 🧪Update yuzu generated binary deserializers and cloners. Update lime v6 schema. 🧪📝🍊 Fix dragging nine grid offsets in tangerine when texture scale is not 1.0f 🧪📝🍋 Add NineGrid.TextureScale setting Gives more flexibility instead of hard dependence on the physical Sprite size in pixels HitTest can be broken for non-default TextureScale, not tested Shift-drag in Tangerine is broken for non-default TextureScale (FIXME) temp 📝🧪 Fix disabled editbox 🐞(lime): Edit boxes with Enabled == false were processing Delete, DeleteWord*, Submit, Cancel, Cut, Paste commands. Commits: 🧪📝[Editor] Fix editor with Enabled == false processing Delete, DeleteWord*, Submit, Cancel, Cut, Paste commands. 📝🧪 Caret fix 🐞(lime): Caret position in edit box was slightly off in Tangerine and very noticeably off when using SDF fonts. Commits: 🧪📝[Editor] Fix caret position for text input fields with SDF fonts 📝🧪 High dpi ✨: Improve high DPI support on windows. Commits: 🧪📝 Fix position of SystemShellContextMenu in tangerine for high dpi; Fix drop down list menu position when mouse transform is not identity. 🧪📝🍋 Round logical sizes to physical pixels 🧪📝🍋 Fix LocalToDesktop to return logical coordinates; Fix windows implementation of Menu 🧪📝🍋 Fix appearance on high dpi displays 📝🧪 Fixup Commits: 🧪📝 Fix Tangerine cant open EmptyProject 📝🧪 Refactor op processors ♻️(tangerine, lime): Refactor operations and exception handling: 🐞(Docs): Catch up with updated docfx. doc(tangerine): Write internal documentation for operation history. rename DocumentHistory -> OperationHistory extract OperationProcessors class and make it non static extract operations glued together into separate files split operation processors into categories change namespace Tangerine.UI.Timeline -> Tangerine.Timeline rename Lime.Exception -> Lime.LimeExcepion change signature of LimeException: no longer accepts arguments for formatting message, but accepts innerException instead improve exception handling in Tangerine move operations into different tangerine projects depending on which project using which operation rename Panel -> DockingPanel get rid of Pane in identifiers as a suffix. Use Panel instead. rename RollPane -> SceneTreePanel Move all operations in Tangerine into Tangerine.Operations namespace Basic classes for implementing new operations and processors reside in Tangerine.Core Keep all separate operation processors in Tangerine.Processors So now when instantiating OperationHistory you must pass instance of OperationProcessors to the constructor. Meaning now you can create multiple operation histories which process different sets of operations. When creating new operation history you most likely would like to add operations from Tangerine.Core.OperationProvider.NaturalOperationProcessorTypes which provide most basic operations on properties and collections. Remember that order in operations processors matters. If operation can be processed by multiple processors it will be done in order in which processors where added. Commits: 🧪📝 Update docs 🧪📝 Rebuild RemoteScripting.dll 🧪📝 Rename Lime.Exception -> Lime.LimeException to resolve ambiguity with System.Exception 🧪📝🍊 Refactor operations in tangerine: extract operations glued together into separate files change namespace Tangerine.UI.Timeline -> Tangerine.Timeline move operations into different tangerine projects depending on which project using which operation rename Panel -> DockingPanel get rid of Pane in identifiers as a suffix. Use Panel instead. rename RollPane -> SceneTreePanel 🧪🍊🍋 Improve exception handling. Add innerException argument to Lime.Exception. 🧪📝 Rename DocumentHistory => OperationHistory. Extract OperationProcessors class and make it non static. Split operation processors into categories 📝🧪 Model attachment fix ✨(lime, orange, tangerine): Add MergeMeshes option to model 3d attachment; Don't merge meshes by default Commits: 🧪📝 Update TangerineAssetBundle version; SyncModels.StageVersion 🧪📝 Update persistence schema 🧪📝 Add Model3DAttachment.MergeMeshes property 📝🧪 Fix restore original size 🐞(tangerine): Restore Original Size for image widgets not working Commits: 🧪📝[Sprite] Invalidate sprite in tangerine when it's texture's source image changes on disk 📝🧪 Optimize animation component Commits: 🧪📝 Move animation events from component to AnimationSystem 📝🧪 Swappy target framerate ✨(lime, android): add ability to limit the frame rate Commits: 🧪📝 Remove Window.SetTargetFps; Add ApplicationOptions.TargetFrameRate 🧪📝🍋 Add support for Swappy frame pacing library on Android 📝🧪 Avoid extra copy of texture ⚡(lime): optimize texture loading for performance and GC pressure Commits: 🧪📝🍋 Avoid extra copy of texture by considering file's extension 📝🧪 Fix android initialization 🐞(lime, android): Fix application initialization Commits: 🧪📝 Fix initialization on android 📝🧪 GameThreadFix 🐞(lime): don't invoke callbacks queued by Application.InvokeOnGameThread when the game thread is paused, instead defer these calls until the thread is resumed Commits: 🧪📝 Invoke user game events only if game thread isn't paused 📝🧪 Update android sdk Commits: 🧪📝[Yuzu]🍋 Update Android TargetFrameworkVersion to 13.0 📝🧪 Legacy particle linkage ✨(lime): add ParticlesLinkage.RootLegacy for compatibility reason and engine upgrade simplification Commits: 🧪📝 Update Lime persistence schema 🧪📝🍋 Add ParticlesLinkage.RootLegacy"
  },
  "articles/changelog/2.2.0.0.html": {
    "href": "articles/changelog/2.2.0.0.html",
    "title": "Version 2.2.0.0 | Citrus Engine",
    "keywords": "Version 2.2.0.0 Legend Legend 📝 jira issue link 🧪 gitlab merge request link 🐞 bug fix ⚡️ improve performance ✨ new feature 💥 breaking change ♻️ refactoring 🧹 chore ✅ test 📝🧪 Docs 🐞(docs): Update year, video links, required .NET SDK version 🐞(ci): Set UPLOAD_DOCS_TO_GITHUBto 1 when running pipeline to upload generated docs on github Commits: 🧪📝[CI] Control uploading docs to github with UPLOAD_DOCS_TO_GITHUB variable. 🧪📝 Update docs 📝🧪 Layout migration bug 🐞(lime)💥: Vertical justify layout alignment. 🐞(lime)💥: Fix layout alignments migration: Delete FlowLayout alignments other than justify, because they didn't work before migration Only propagate layout cell alignments to layout alignments if it's: stack layout to alignment axis orthogonal to layout direction of linear layout Commits: 🧪📝[Migration] Fix layout alignment migration: Delete FlowLayout alignments other than justify, because they didn't work before migration Only propagate layout cell alignments to layout alignments if it's: stack layout to alignment axis orthogonal to layout direction of linear layout 🧪📝🍋 Fix vertical justify layout alignment 📝🧪 Clone race 🐞(yuzu): Race condition in Yuzu.Clone.Cloner. Commits: 🧪📝 Update Yuzu: fix race condition in Yuzu.Cloner 📝🧪 Yuzu idict null 🐞(yuzu): Crash when deserializing null values into IDictionary implementation other than System.Collections.Generic.Dictionary<,> with Yuzu binary deserializer. Commits: 🧪📝 Update Yuzu: null value in IDictionary implementations crash fix 📝📝🧪 M3 ✨(examples): Add new example ./Examples/Match3 ✨(lime): When instantiating an external scene, don't add a component from external scene root to placeholder if placeholder already contains component of same type. Together with already present feature of not removing from placeholder components implementing IPersistOnReplaceContent this will facilitate prefab-like feature (with component granularity). 🐞(examples): Change dev panel text to black and font to SDF font in EmptyProject 🐞(tangerine): When creating a new project, handle case of new project name containing template project name as a substring. Commits: 🧪📝[Examples] Comment out profiler related dev panel items in Match3 example 🧪📝[NewProject] Handle case when new project name contains template name as a substring 🧪📝[Examples] Change dev panel font color to black, use SDF font in dev panel. 🧪📝🍋🍊 Allow to add components to external scene placeholders in Tangerine. Don't copy component from the root of an external scene to placeholder if placeholder node already has component of same type. 🧪📝[Examples] Add Match3 example 📝🧪 New project Lime ✨: Expose ThemedButton.TextWidget. ✨: New method Matrix32.TransformRectangle. ✨: Fill up all possible constant Alignment. values. ✨: Add optional parameter finishAction to public static IEnumerator<object> ExecuteAsync(Action asyncAction, Action finishAction = null) to be run after asyncAction is done. ✨: Improve LayoutDebugPresenter, introduce LayoutDebugComponent: Add presenter/component once to visualize all Layout.DebugRectangles down the hierarchy. Automatic alternating color selection for layout cell debug rectangle. Control depth of layout visualization. When using a component, use global Key.Up and Key.Down to change layout visualization depth. Internal ✨: Add CommandHandlerList.ConsumeAll() to use for blocking global commands. Launcher 🐞: Add unhandled exception handler to Launcher.Win. Orange ♻️💥: New default location of project's application solution and c sharp project: ./Application.<platform>/Application.<platform>.sln|csproj. Override Project in default targets if you want to keep previous names. ✨: New Orange.FileEnumerator option cutDirectoryPrefix (default: true). Set to false to enumerate absolute paths. ✨: New Orange.Toolbox.TargetPlatformFromString method. ✨: Allow to override Project, Hidden and Configuration for default targets (Win, Android, iOS, Mac, Web) in .citproj. ✨: Introduce $(AUTO_CONFIGURATION) substitution token for .citproj targets. $(AUTO_CONFIGURATION) => Tangerine.Release|Debug in Tangerine and Release|Debug in Orange. Use it to avoid creating Orange specific Orange.Release|Debug targets in projects and just use Release|Debug for citrus plugins loaded by orange. ✨: Add option to not write to console when starting a process with Orange.Process. ✨: Allow to set DotnetBuilder.WarningLevel. ✨: Support Web platform target in Orange (UI and cooking/building). 🐞: Fix Orange.FileEnumerator incorrectly cutting directory prefix when it ends with a slash. 🐞: Mute git executions from writing to console. 🐞: Don't display most of build warnings in console. 🧹: Update packages. Internal Add msvs solution parser Microsoft.DotNet.Cli.Sln.Internal from dotnet-sdk repository. Tangerine ✨: Creating new project: Implement dialog window interface for creating new project. Introduce distribution settings: submodule, or binary. Binary is a new one, when selected it's parsing template projects for dependencies and replaces all the dependencies with binary assembly dependencies, rewriting all the path to new project's local citrus binary directory, copying linked citrus source code files, cleaning solutions from citrus projects, pulling all the content and other citrus project dependencies into new project's csproj files. Optimize creating new project with citrus submodule distribution: Use shallow local clones first and then rewrite remote URL's to specified path. Fix relative paths replacement. Invoke new project + open project from new project dialog asynchronously. ✨: New Tangerine.UI.SpinnerBehavior. Add it on desired widget to display a spinner and block all the input. ✨: New TangerineDirectoryPropertyAttribute to mark properties to be edited with DirectoryPropertyEditor in inspector. ✨: Add TangerineDirectoryPropertyAttribute.IsRelativeToAssetDirectory. 🐞: Don't display most of build warnings in console. fix directory property editor crashing when there's no project open. ♻️💥: Rename FolderPropertyEditor -> DirectoryPropertyEditor. ♻️💥: Rename TangerineFilePropertyAttribute.IsAssetPath -> IsRelativeToAssetDirectory. Examples 🐞: Add explicit package reference to System.ComponentModel.Composition to CitrusPlugin projects. 🧹: Fix incorrect rename in paths to ./Extensions inside .csproj and .sln files. 🧹💥: Refactor and clean up EmptyProject structure: Get rid of shared project. Avoid using project name in directory names, only use prefix on root level application directories: Application.Win, Application.iOS etc. Kumquat ♻️💥: New default directory for generated code: ./Generated/Scenes/*. Use GeneratedScenesPath in .citproj file to override. ♻️💥: New default namespace pre🐞: namespace Game.Scenes.<bundle_name>;. Use GeneratedScenesNamespacePrefix in .citproj file to override. ♻️💥: New default project names for generated code: Scenes.<platform>.csproj. Commits: 🧪📝 Clean up NewProjectAction code. Implement spinner behavior, move new project + open project invocation from new project dialog to async, ensure spinner blocks input Add CommandHandlerList.ConsumeAll() to use for blocking global commands. Add optional parameter finishAction to public static IEnumerator<object> ExecuteAsync(Action asyncAction, Action finishAction = null) to be run after asyncAction is done 🧪📝 Fix and optimize creating new project with citrus submodule distribution. Fix relative paths replacement. Remove custom data layer name when creating a new project 🧪📝 Fix compilation after rebase 🧪Update dotnet sdk version in dotnet install script 🧪[Web]🍊 Complete Web as a separate supported platform on Orange level. Fix EmptyProject for Web 🧪📝[Examples] Fix QA in EmptyProject 🧪🍊[Win] Remove BootstrapperPackages 🧪📝🍊 Update Orange packages on Mac 🧪📝 NewProject: Support glob patterns in .csproj files, fix and refactor relative engine path translation between new project and template, support copying .cs files if project refers to citrus source code as a link. 🧪📝 Fix directory property editor crashing when there's no project open: Add TangerineDirectoryPropertyAttribute.IsRelativeToAssetDirectory Rename TangerineFilePropertyAttribute.IsAssetPath -> IsRelativeToAssetDirectory 🧪📝[Examples] Set EmptyProject.Win to UseWindowsForms=true, reference Lime from application project 🧪🍋 Improve coding style of TangerineAttributes.cs 🧪📝🍊 Introduce $(AUTO_CONFIGURATION) for .citproj targets. $(AUTO_CONFIGURATION) => Tangerine.Release|Debug in Tangerine and Release|Debug in Orange. Use to avoid creating Orange specific Orange.Release|Debug targets in projects and just use Release|Debug for citrus plugins loaded by orange. 🧪📝 Extract and deduplicate XML Doc traverse code, support imports transparently 🧪📝 Select supported target platforms when creating a new project 🧪🍊 Fix Tangerine/Directory.Build.props file 🧪📝🍊 Allow to set DotnetBuilder.WarningLevel, set it to 0 for Tangerine and OrangeGUI 🧪📝 Add option to not write to console when starting a process with Orange.Process; Use it to Mute git executions. 🧪[Launcher] Add unhandled exceptions handler to Launcher.Win 🧪📝🍊 Allow to override Project, Hidden and Configuration for default targets (Win, Android, iOS, Mac, Web). Use for compatibility in old projects. 🧪📝🍊 New default project application solution path: ./Application.<platform>/Application.<platform>.sln|csproj 🧪📝[Examples] Refactor and clean up EmptyProject structure: get rid of shared project avoid using project name in directory names, only use prefix on root level application directories: Application.Win, Application.iOS etc Breaking: New default kumquat directories, use \"GeneratedScenesNamespacePrefix\": \"Tests.\", \"GeneratedScenesPath\": \"Tests.GeneratedScenes\", to override 🧪🍋 Fix spacing in Lime.props 🧪📝 Clear empty solution project dependency sections when creating a new project 🧪📝 Add explicit package reference to System.ComponentModel.Composition to CitrusPlugin projects, update it in Orange.Win. Update NewtonsoftJson package in Orange 🧪📝 Initial version of creating a new project with binary distributed embedded Citrus engine 🧪📝 Default CitrusDistribution to use when creating a new project to embedded binary 🧪[Examples]🍊 Fix incorrect rename in paths to ./Extensions inside .csproj and .sln files 🧪🍊 Add Web Platform 🧪🍊 new Orange.Toolbox.TargetPlatformFromString method 🧪🍊 Fix/improve Orange.FileEnumerator: new option to cutDirectoryPrefix (default: true) fix incorrectly cutting directory prefix when it ends with a slash 🧪🍊 Coding style 🧪📝🍊 Add msvs solution parser Microsoft.DotNet.Cli.Sln.Internal from dotnet-sdk repository 🧪📝 Improve visual of New Project Dialog 🧪🍋 Coding style 🧪🍋 Improve LayoutDebugPresenter, introduce LayoutDebugComponent: Add presenter/component once to visualize all Layout.DebugRectangles down the hierarchy. Automatic alternating color selection for layout cell debug rectangle. Control depth of layout visualization. When using a component, use global Key.Up and Key.Down to change layout visualization depth. 🧪🍋 Add all possible constant Alignment. values 🧪🍋 New method Matrix32.TransformRectangle 🧪📝 Fix compilation after rebase 🧪📝 Fix new project creation and make up a window for new project options 🧪📝🍋 Expose ThemedButton.TextWidget 🧪📝🍊 Rename FolderPropertyEditor -> DirectoryPropertyEditor. New TangerineDirectoryPropertyAttribute to mark properties to be edited with DirectoryPropertyEditor in inspector. 📝📝🧪 Move assets Tangerine ✨(tangerine): New ✨: Move Assets: Select single item or multiple items in filesystem view. Invoke context menu by pressing right mouse button. Select Move Assets (has Citrus icon) from the menu. Dialog will appear, first it will scan all of the assets (mostly .tan) in the project to locate asset references which require rewriting when moving selected items. Select destination directory. Press Confirm and assets will be moved with all references to them updated. 🐞(tangerine): Fix multiple filesystem panel bugs. 🐞(tangerine): Crash when selecting simple animator while timeline curve edit mode is active. 🐞(tangerine): False positive AssertCurrentDocument cyclic dependency case check. Internal ✨(tangerine): New FilesystemPane property FilesystemView LastActiveView { get; private set; }. Lime ♻️(lime)💥: Refactor attribute caches. Removed: MethodAttributes, FieldAttributes, ClassAttributes, PropertyAttributes classes. Use Lime.Attributes instead. PropertyAttributes no longer respects citrus animated property path syntax. primitives, See TestTypeSystemComponent.cs. ✨(lime): Introduce Lime.Reflection with reflection utils, currently having GetIDictionary, GetIList, GetICollection allowing to get corresponding generic interface for given type. This is also useful because some Lime types implement multiple generic ICollection<> and those utils resolve ambiguity. ♻️(lime)💥: TangerineFilePropertyAttribute: T StringToValueConverter<T> -> object ConvertStringToValue string ValueToStringConverter<T>(Type, T) -> string ConvertValueToString(Type, object) ✨(lime): New Lime.Vector2 static fields: LeftDown, LeftUp, RightDown, RightUp. ✨(lime): New struct Lime.ValueAccessor, an abstraction over both System.Reflection.FieldInfo and System.Reflection.PropertyInfo. 🧹(lime): Implement non generic IList for Lime.NodeList. Internal ✨(lime): new Lime.AnimationUtils. methods: string SerializeComponentType(Type componentType) to get textual representation of a component type used in citrus animated property path syntax. string SerializeAnimationPath((object Owner, ValueAccessor Acessor)[] accessorChain) ✨(lime): new IAnimator property System.Reflection.PropertyInfo PropertyInfo { get; }, getter triggers animator binding. Others 🧹(examples): Add type system samples to Examples/Tests. 🧹(examples): Add Tests.PrimitiveWidget for rendering NanoVG primitives. 🧹(style): Use more of collection initializer syntax. 🧹: Silence SA1010. ♻️(orange): ValidationRunner now uses Lime.ValueAccessor. Commits: 🧪📝 Remove Lime.AnimationUtils.CanAnimate because it's not used 🧪📝 Mitigate possible component adding getter side effects using more general approach 🧪📝 Comment on MemoryBarrier in MoveAssetsDialog 🧪📝 Set MoveAssetsDialog title to 'Move Assets' 🧪📝 Set MoveAssetsDialog default destination same as source 🧪📝 Improve MoveAssetsDialog layout 🧪📝🍊 Fix moving scenes with Move Asset Dialog 🧪📝[Examples] Add test case for various type system features in serializable component 🧪📝 Rename ValueMemberInfo -> ValueAccessor, AssignmentPath -> AccessorChain 🧪📝 Improve location info in move assets dialog 🧪📝 Maintain FilesystemPanel.LastActiveView, to use it in MoveAssetsDialog as source directory. Fix FilesystemView focus issues. 🧪📝 Rework Move Assets Dialog code 🧪📝🍊 Refactor and bugfix FilesystemPane regarding view splits. 🧪📝🍋 new ReflectionUtils.cs 🧪📝🍋 Move animator target property path serialization to AnimationUtils.cs 🧪📝🍊 Fix false positive tracking of cyclic asset dependency, not taking asset extensions into account\" 🧪🍋 Implement non generic IList for Lime.NodeList 🧪📝 Coding style 🧪📝🍋 new IAnimator|Animator.PropertyInfo 🧪📝🍋 Rename ValueMemberInfo -> ValueMemberAdapter 🧪📝 Coding style 🧪🍋 Add static fields for diagonal directions to Vector2: LeftDown, LeftUp, RightDown, RightUp 🧪📝 Coding style 🧪🍊 Fix crash when selecting non Bezier animator with curve editor mode enabled. 🧪🍊[Validation] New ValueMemberInfo abstraction over PropertyInfo or FieldInfo. 🧪[Citrus] Refactor attribute cache. Rename IPropertyEditorParams.Type -> OwnerType. PropertyAttributes, FieldAttributes, ClassAttributes, MethodsAttributes removed. Use Lime.Attributes instead. Attribute cache method accepting string name removed. Use System.Reflection.MemberInfo, cache it on the upper level if necessary. new Animator<T>/IAnimator.PropertyInfo. PropertyInfo is cached and accessible. Style improvements in the vicinity of code affected by other changes. 🧪🍋 Fix coding style and comment on TangerineDropDownListPropertyEditorAttribute 🧪[Citrus] Ignore SA1010: Opening square brackets should not be preceded by a space. 🧪[Examples] New example widget Tests.Types.PrimitiveWidget for drawing NanoVG primitives using widgets. 🧪📝 Fix compilation 🧪📝🍊 Get rid of backslashes; improve destination field UX 🧪📝🍊 Fix fonts movement 🧪📝🍊 Fix MENUITEMINFO icon transparency 🧪📝🍊 Stop generating dozens of LayoutConstraints 🧪📝🍊 Fix races (except one) and typos 🧪📝🍊 Use TreeView for content represantation 🧪📝🍊 Move assets; fix typos 🧪📝🍊 Add AssetsMoveToDialog; unify WorkProgress API 📝🧪 Fix layout migration 🐞: Bug in layout migrations. Commits: 🧪📝 Fix layout migration 📝🧪 Warning level CI 🧹: Refactor CI script and split CI jobs into more jobs for clarity, more headspace for log, and possibly scaling run pipeline times. 🧹: Set WarningLevel=1 when building with launcher or in CI in order not to ignore Analyzers induced errors. 🧹: Turn documentation related style cop warning into suggestions to clean up the log. 🧹: Add YuzuGenerator.csproj to Tangerine sln files. 🧹: Remove x86 configuration from Tangerine.Mac.sln 🧹: Update Examples/Tests/Tests.QualityAssurance analyzers to reduce warnings. 🧹: Disable ErrorProne.Net.Structs analyzer since it's crashing. 🧹: Fix Examples/Tests/CitrusPlugin.Win.sln compilation in Tangerine.Release configuration Orange ♻️: Clean up and refactor Orange.SolutionBuilder/BuildSystem. It's now a single class named DotnetBuilder. 🐞: Fix running executable specified by OutputPath and AssemblyName with DotnetBuilder when project name has more than one period in it's name. Launcher 🧹💥: Move ./Orange/Launcher/* -> ./Launcher/* ♻️: Integrate Orange.DotnetBuilder into Launcher to use it's facilities to calculate output path. ✨: No longer required to specify path to run with Launcher since it's calculated automatically. 🧹: Update binaries. Tangerine 🧹: Move solution files next to Tangerine csproj files. 🐞: Fix checking if Orange/Tangerine was built on latest Citrus commit. Commits: 🧪🍊 Fix running executable specified by OutputPath and AssemblyName with DotnetBuilder when project name has more than one period in it's name 🧪[Launcher] Fix checking if Orange/Tangerine is built on latest Citrus commit 🧪🍊[Launcher][CI] Update paths to Launcher in various places 🧪[Mac][Win][Launcher] Move ./Orange/Launcher/ -> ./Launcher/. Update Launcher binaries. 🧪🍊 Move solution files next to Tangerine csproj files. 🧪[CI] Split jobs, refactor CI script. 🧪[Launcher] Integrate Orange.DotnetBuilder into launcher 🧪🍊 Clean up and refactor Orange.SolutionBuilder/BuildSystem. It's now a single class named DotnetBuilder. 🧪[Examples] Fix Examples/Tests/CitrusPlugin.Win.sln compilation in Tangerine.Release configuration 🧪📝 Silent more documentation related style warning try suggestion 🧪📝 fix compilation 🧪📝 Fix compilation and some warnings 🧪📝 Turn enum documentation analyzer to suggestion 🧪📝 Disable ErrorProne.Net.Structs analyzer since it's crashing 🧪📝 Update Examples/Tests/Tests.QualityAssurance analyzers to reduce warnings. Update ErrorProne.NET.Structs for all projects, hopefully it's crash will go away 🧪📝🍊 Add YuzuGenerator.csproj to sln files. Remove x86 configuration from Tangerine.Mac.sln 🧪📝[CI]🍊 Set WarningLevel to 1 See https://github.com/dotnet/roslyn-analyzers/issues/6263 📝🧪 Cli bundle picker loading plugins Orange 🐞: Disable bundle picker in Orange.CLI to avoid triggering excessive cooking rules calculation. 🐞: Fix not collecting plugin output paths to load when building plugins is disabled with --disable-build-plugin-targets. It's useful when project plugin targets are already built. Commits: 🧪📝🍊 Fix not collecting plugin output paths when building plugins is disabled with --disable-build-plugin-targets 🧪📝🍊 Don't refresh bundle picker in Orange.CLI to avoid triggering excessive cooking rules calculation 📝🧪 Size to scale layout ✨(lime): Use new property StackLayout.UseScale to make the layout affect scale instead of size. Commits: 🧪📝 Update lime schema v8 🧪📝 Add StackLayout.UseScale 📝📝📝🧪 Rework layout aligments ###Lime 💥: Massive layout rework, migration required. Lime schema version 7 -> 8. ✨: Add Layout.RowAlignment, Layout.ColumnAlignment, Layout.Alignment TableLayout row and column alignments, stretch, min size and max size are now in TableLayoutColumn and TableLayoutRow accessible via TableLayout.Columns/Rows 🧹: Remove Layout.DefaultCell as well as LayoutCell component: LayoutCell.Ignore moved to LayoutConstraints.Ignore LayoutCell.Stretch moved to LayoutConstraints.Stretch, stretch is no longer of type Vector2, now it's float. Per cell alignment removed. ColumnSpan and RowSpan moved to TableLayoutCell component, which should be added to children of node with TableLayout. Removed Widget.LayoutCell. Commits: 🧪Merge commit '12da2f73ba7be1f7f26651c6ec5102620a0a04f1' into CIT/1503_rework_layout_aligments 🧪Squashed 'Extensions/Benchmark/' changes from a1410073a..e714a8f30 e714a8f30 Change paths to use Benchmark as subtree in Citrus fe93bb03d Fix compilation errors introduced by layout changes in Citrus REVERT: a1410073a Change paths to use Benchmark as subtree in Citrus git-subtree-dir: Extensions/Benchmark git-subtree-split: e714a8f30f8176a16fcfe40985baeaddc6cd6f1b 🧪Squashed 'Extensions/Benchmark/' content from commit a1410073a git-subtree-dir: Extensions/Benchmark git-subtree-split: a1410073a9323485387ea5b106b66903b8e2e633 🧪Merge commit 'ea21e94232b48fff156be9e4aa1c9c95f90ecf84' into CIT/1503_rework_layout_aligments 🧪Squashed 'Extensions/RemoteScriptingClient/' changes from d0bf3967b..0805621ff 0805621ff Change paths to use RemoteScriptingClient as subtree in Citrus 9a686e75b Fix compilation errors introduced by layout changes in Citrus b1132701c 📝 Provide information about unhandled exceptions during test execution REVERT: d0bf3967b Change paths to use RemoteScriptingClient as subtree in Citrus git-subtree-dir: Extensions/RemoteScriptingClient git-subtree-split: 0805621ff8c372350c79cb0587aae62b426234fe 🧪Squashed 'Extensions/RemoteScriptingClient/' content from commit d0bf3967b git-subtree-dir: Extensions/RemoteScriptingClient git-subtree-split: d0bf3967b81d0f613d2fbd7e9f81adb6e6669aac 🧪📝 Fix Examples/Tests/Citrus plugin compilation in Tangerine.* configuration. 🧪📝 Fix citrus plugins 🧪📝 Update schema 🧪📝 Fix and update layout tests 🧪📝 Fix Alignment test 🧪📝 Migrate layout animators 🧪📝 Remove LayoutHolderList, use AnimableList instead 🧪📝 Migrate Citrus assets 🧪📝 Add layouts migration 🧪📝 Improve TableLayout Added MinWidth/MaxWidth to TableLayoutColumn (similar to Height in TableLayoutRow) Grid allocation is done based on the Rows, Columns list. If MinSize of some widget is larger than the allocated area for a cell, then the whole column/row is allocated. If MaxSize of a widget is less than the size of the cell area, then the widget is aligned according to Row.Alignment/Col.Alignment. 🧪📝 Make TableLayout.Columns and Rows editable in Tangerine 🧪📝 Get rid of LayoutConstraints.CrossAxisStretch MainAxisStretch -> Stretch Add FlowLayout.EqualizeWidgetHeights 🧪📝 Take in account padding for FlowLayout 🧪📝 Fix tangerine label \"Layout Cell\" -> \"Table Layout Cell\" 🧪📝 Fix MarkerProperties dialog layout 🧪📝 Fix dock panel stretches 🧪📝 Correct paddings for FlowLayout 🧪📝 New Justify behaviour 🧪📝 Fix aspect ratio constraint apply for FlowLayout 🧪📝 Rework layout alignments Add Layout.Alignment Remove Layout.DefaultCell Move stretches to LayoutConstraints for Linear/FlowLayout and to Columns/Rows for TableLayout LayoutCell is now for TableLayout only and called TableLayoutCell 📝 compilation errors 🧪📝 Introduce Layout.Alignment 📝🧪 Ci 🧹(ci): Don't run build stages on master. 🧹(ci): Build Examples/*/CitrusPlugin.Win|Mac.sln on build stages in Tangerine.Release configuration. Commits: 🧪📝[CI] Build Examples/*/CitrusPlugin in Tangerine.Release configuration on Win and Mac. 🧪📝[CI] Don't run build stages on master branch since they're already passed before merging. 📝🧪 Custom items for native context menu ✨(lime): Automatically clear user data after use if ICommand.ClearUserDataAfterUse was set. ✨(tangerine): Make it possible to add custom commands to SystemShellContextMenu. Make sure it works for multiple selection. Commits: 🧪📝🍊 Fix compilation on Mac 🧪📝🍋 Add comment for magic constant 🧪📝🍋 Change public to internal; fix typos 🧪📝🍋🍊 Enhance SystemShellContextMenu with a feature of adding custom commands 🧪📝🍋🍊 Add ClearUserDataAfterUse for commands API 📝🧪 Improve component icons on the timeline Tangerine ✨: Double click on timeline component icon navigates to the component in inspector. ✨: Timeline component icon context menu with Remove, Copy, Cut, Show in Inspector items. ✨: Dynamic spacer in inspector: scroll position will no longer shift when resizing inspector. Commits: 🧪📝[Timeline] Fix Remove Component 🧪📝🍊 Remove Id from inspector ScrollView 🧪📝🍊 Make the height of the footer dynamic 🧪📝🍊 Rework ShowInInspector with InspectorCommands 🧪📝🍊 Refactor ComponentIcon 🧪📝🍊 Add CopyComponent 🧪📝🍊 Improve component icons on the timeline 🧪📝🍊 Add id for inspector ScrollView and ComponentHeader 🧪📝🍊 Refactor InspectorContent 📝🧪 Regression fixes Yuzu 🐞: Race condition when resolving and caching ambiguous ICollection<> or IEnumerable<> interface. 🐞: YuzuGenerator not supporting readonly struct interface record static type modifiers apart from class when generating arbitrary nested partial type. Lime 🐞: Crash in exception handling when loading nested Nodes with exception and filling Exception.Data. 🐞: Race conditions in Lime.AttributeCache.*. Orange 🐞: Corrupting assembly name when changing extension to \".dll\" in PluginLoader.AssemblyResolve if assembly name contains a period. Tangerine 🐞: Selecting wrong editor for AspectRatio of ParticleEmitter. Commits: 🧪📝 Update Yuzu: fix bug in YuzuGenerator 🧪📝🍋 Fix crash by supporting multiple data for the same key in exception.Data 🧪📝[Inspector] Fix selecting wrong editor for AspectRatio of ParticleEmitter 🧪📝 Fix races in Lime.AttributeCache.*, implement comparer for dictionary key type 🧪📝 Fix corrupting assembly name when changing extension to \".dll\" in PluginLoader.AssemblyResolve 🧪📝 Update Yuzu: fix race 📝🧪 Aspect ratio constraint ✨: Add a new constraint LayoutConstraints.AspectRatio 🧹: Remove code duplicates for different Layout orientations Commits: 🧪📝 LayoutConstraints.AspectRatio implementation 📝🧪 Fix overdraw mode 🐞(lime): fix overdraw mode Commits: 🧪📝[Graphics] Fix overdraw visualization 📝🧪 Fix swapchain out of date Commits: 🧪📝[iOS] Fix swapchain size 📝🧪 Layout test ✨(examples): Layout test in Examples/Tests Commits: 🧪📝 Fix compilation 🧪📝 Use simple text parameters 🧪📝 Fix loop exit 🧪[QA-141] Add more parameters 🧪📝 Fixes after review Remove unused method Refactor GetCitrusProjectDirectory, move to Utils Add const int MaxChangedEntities Set properties list capacity with const, add FlushPropertiesList Try to get reference properties list only inside EntitySuccessfulyProcessed Fix formating Disable compare if not windows Change EnableCompare to enum TestMode 🧪📝 Add icons for comment component 🧪📝 Add 'TODO': comments 📝 Add comparison and save on difference 📝 Fix 0 widget skip in TableLayoutTest 📝 Fix save on difference, add comment to changed widget 📝 Change Widget to Image, refactor conditions in TableLayoutTest 🧪📝 Fix layout test's memory issues and perform interim review 📝 Add nested layout tests 📝 Add size changes to ProcessInternal to trigger OnSizeChanged 📝 Remove Tag 🧪📝 Rewrite tests Add StackLayoutTest Add LinearLayoutTest Add TableLayoutTest Add FlowLayoutTest Add ProcessWithGC 🧪📝 Add set to SourceWidget 🧪📝 Refactor GetVariations 📝 Add GetThicknesValues, remove excessive clone counts 📝 Remove ConstraintsTest 📝 Add GetAlignmentVariations 🧪📝 Don't keep reference to jobEntities 📝 Fix layout test's memory issues 📝 Fix typo 🧪📝🍋 Add validations to layouts and layout cells 🧪📝🍋 Add Thickness case to Validation.RangeAttribute 🧪📝 Add save scene, redo errorMessage in IgnoreHiddenTest 📝 move jobs processing in WidgetLayoutTest to avoid memory bloating 📝 Add validation to GetVariations methods Add GetVector2Variations method 🧪📝 Add comment component from EmptyProject 🧪📝 Add values to parameters 📝 Change naming Rename Transfrom2 to LayoutManagedProperties Rename GetThicknessVariations to GetPaddingVariations 🧪📝 Review fixes 📝 Fix typo 🧪📝 Rewrite test 🧪📝 Add layout test WIP 📝🧪 Implement example benchmark in tests ✨(examples): Benchmark examples in Examples/Tests Commits: 🧪📝 Implement example benchmark in Tests project 📝🧪 Locate project output ✨(orange): Automatically calculate project output path using cli based project evaluation This affects citproj: PluginAssemblies -> OrangeAndTangerine, Orange, Tangerine. You no longer have to specify full path to an assembly, use just assembly name now e.g. CitrusPlugin.dll. Orange will deduce output path for all applicable plugin targets (OrangeAndTangerineBuildTargets, OrangeBuildTargets, TangerineBuildTargets) and search those directories. This also affects remote scripting configuration. 💥: RemoteScripting.ProjectReferencesPath removed. RemoteScripting.BuildTarget will be evaluated for output path and the path will be searched for all RemoteScripting.ProjectReferences. Given all that you no longer have to configure project output path to be \"predictable\", i.e. stripping it of TFM and RID, in .NETX by using <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath> <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath> Commits: 🧪📝 Use .NET8 feature 'CLI-based project evaluation' to evaluate projects output directory and locate executable or assembly 📝🧪 Net8 ✨: Update to .NET8 💥: Move ./Lime/Extensions/* -> ./Extensions Commits: 🧪📝 Update references to extensions 🧪📝 Fix relative references paths for projects in ./Extensions/* 🧪Merge commit '7080abb23e4919f9381d0a51cfc2d3ac0fade67b' as 'Extensions/Benchmark' 🧪Squashed 'Extensions/Benchmark/' content from commit a1410073a git-subtree-dir: Extensions/Benchmark git-subtree-split: a1410073a9323485387ea5b106b66903b8e2e633 🧪Merge commit '93c561b753173b1df7169d2fac674be141669f57' as 'Extensions/RemoteScriptingClient' 🧪Squashed 'Extensions/RemoteScriptingClient/' content from commit d0bf3967b git-subtree-dir: Extensions/RemoteScriptingClient git-subtree-split: d0bf3967b81d0f613d2fbd7e9f81adb6e6669aac 🧪📝 Move ./Lime/Extensions/* -> ./Extensions/ 🧪📝 Remove RemoteScriptingClient and Benchamrk before relocating Extensions directory 🧪📝 Fix compilation: remove SharpVulkan.dll and ShaderCompilerBinding dlls from repo, Import SharpVulkan.props and ShaderCompilerBinding.Win.props instead update Microsoft.CodeAnalysis.NetAnalyzers version to 8.0.0 Update targetSdkVersion in Android example projects 33 -> 34 Use SupportedOSPlatformVersion in csproj instead of LSMinimumSystemVersion in plist for Tangerine.Mac 🧪📝 Update TargetFramework: net7.0* -> net8.0* 📝📝📝📝📝📝📝📝📝📝📝📝📝🧪 Net7 Citrus ✨: Migrate all projects to .NET7 Introduce ./Directory.Buid.props and ./Directory.Build.targets: those files will be automatically imported to every *.csproj they contain common setup applicable to all projects (or use conditions) uncomment DebugCsproj target to observe desired msbuild variable in build log adds parts of configuration divided by . as defines e.g. Tangerine.Profiler.Release -> TANGERINE;PROFILER;RELEASE adds PROFILER define to every tangerine project adds platform specific defines (ANDROID, iOS, MAC, WIN) depending on TargetFramework 🐞: Fixed lot of issues with Citrus or Game project located by the path containing spaces or non ANSI characters 🧹: Remove: 3rdParty/AndroidExpansionLibrary, 3rdParty/ChromiumWebBrowser, 3rdParty/monotouch-facebook, 3rdParty/Facebook_iOS 🧹: Analyzers.targets -> Analyzers.props 🧹: Update analyzers 🧹: Set SA1307 (The name of a public or internal field in C# does not begin with an upper-case letter.) severity to error 🧹: Remove 32bit stubs for MoltenVK Lime 💥: Remove Lime.Etc2Decoder 💥: Rename IAnimationHost -> IAnimatorHost 🐞: Handle unknown component type and indexer brackets on non indexer property cases crashing when parsing animation property path ✨: Refactor attribute caches in Lime, use them all over the code base whenever seemed useful which is expected to positively affect performance. See [CIT-2130][CIT-2129] Orange and Launcher ✨: Migrate to .NET7: Remove csproj synchronization feature. It is no longer needed at all with SDK style projects. Remove no longer needed build system support (msbuild, mdtool) Remove explicit nuget.exe usage 🐞: Disable dotnet node reuse when building with Orange 🐞: Reduce excessive logging about asset cache disabled with command line argument 🐞: Set warning level to 0 when building with building projects with Orange ✨: New Orange action \"Measure clone all scenes time\" Tangerine ✨: Automatically select latest .NET SDK for remote scripting 🐞: Fix not displaying icons for path with non ansi characters in filesystem view panel 🐞: Crash on removing component which has a nested property animator 🐞: Reduce filling attribute cache with a lot of unnecessary entries when enumerating suitable types for instance property editor 🐞: Fix crash when animator enters zombie state for reasons other than removing component Yuzu ✨: Migrate Yuzu to .NET7: Convert tests to .NET7 Delete platform specific project files except for Yuzu.iOS.csproj because of iOS specific define requirement Fix json float roundtrip test. See [CIT-2410] 🐞: Fix ToString/FromString for binary by using base64 encoding. See [CIT-2409] 🧹(ci): Run Yuzu.Tests ✨: Introduce YuzuGenerator for YuzuSerializeIf and YuzuSerializeItemIf attributes on instance methods. 🧹(style): Use implicit new() CI Set warning level to zero for building Launcher.Win, RemoteScripting.Win/Mac/Android Print dotnet info Run Yuzu tests on test stage of CI Run Citrus Tests in Release configuration Use dotnet build for building Launcher on Mac Commits: 🧪Merge commit 'cb5c0ca1dd5d8e7360eac0da848fa4bee9cd1c23' into CIT/2537_net7 🧪Squashed 'Lime/Extensions/Benchmark/' changes from 1f101d0a7..485e606a1 485e606a1 Change paths to use Benchmark as subtree in Citrus ed26ee8cf Migrate to .NET7. Delete .DotSettings REVERT: 1f101d0a7 📝 Change paths to use Benchmark as subtree in Citrus git-subtree-dir: Lime/Extensions/Benchmark git-subtree-split: 485e606a13d7f222b49ca8df5be11b007237c974 🧪Squashed 'Lime/Extensions/Benchmark/' changes from ad72a2d49..1f101d0a7 1f101d0a7 📝 Change paths to use Benchmark as subtree in Citrus a297bfb1b 📝 Standardize ScriptsPreserve file formatting 2c002b9a1 Merge branch 'QAA-11_BenchmarkImprovement' 28820c903 📝 Fix crash on save benchmark result as image 9504d7087 📝 Invoke the method IDataSource.SkipFrame() in the event that the target frame is not accessible. This approach can effectively assist in mitigating potential errors or obstacles that may arise during the data retrieval process. 3539d4ce9 📝 Catch up with new Citrus 832832ce4 📝 Add title for benchmark results and possibility to edit it 82092e51c 📝 Improve frame description on line chart d82632ae0 📝 Implement possibility to record custom metrics 0a3e1fd66 ﻿📝 Add possibility to add description to benchmark stage e2e3d773a ﻿📝 Catch up with code analizers 484cc1421 📝 Setup Analyzers REVERT: ad72a2d49 📝 Change paths to use Benchmark as subtree in Citrus git-subtree-dir: Lime/Extensions/Benchmark git-subtree-split: 1f101d0a78d84a5f74c62efab6171c1aa0d147dd 🧪Squashed 'Lime/Extensions/Benchmark/' content from commit ad72a2d49 git-subtree-dir: Lime/Extensions/Benchmark git-subtree-split: ad72a2d49efb45b5e73cdb408c875b45424ecb38 🧪Merge commit '54bbf15c896d31637cc273d4142e91d52abe5598' into CIT/2537_net7 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' changes from e3a85ee45..ec3ce610f ec3ce610f Change paths to use RemoteScriptingClient as subtree in Citrus b8b4ac980 Migrate to .NET7. Delete .DotSettings file REVERT: e3a85ee45 📝 Change paths to use RemoteScriptingClient as subtree in Citrus git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: ec3ce610f997d7699b86be5cc7642034a5d231bd 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' changes from 1c77d1000..e3a85ee45 e3a85ee45 📝 Change paths to use RemoteScriptingClient as subtree in Citrus 5f66bf8ab 📝 Skip code using by scripts from being linked 5e71dc25e 📝 Use file globbing in Android and iOS projects to avoid Orange csproj synchronization dbe3be80a 📝 Fix memory leak in Utils.GetBitmap method 5086a65f7 📝 Shared scripts enhancement e5a0976a9 📝 Fix getting device name on iOS 16 ea37072f5 📝 Fix WindowsFromLocker behavior on mobile platforms e423b7a29 Merge branch 'QAA-218_PreventPlayersInputWhileTestIsRunning' ec20bfc5d 📝 Implement WindowsFormLocker to prevent user interactions while test in progress b7e5053ec 📝 Prevent player's input while test is running e5468e5cf 📝 Make CoroutineMethodBuilder struct to prevent allocations REVERT: 1c77d1000 📝 Change paths to use RemoteScriptingClient as subtree in Citrus git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: e3a85ee4530a855f2dcc5af1b35732046cba43bb 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' changes from cd8389744..1c77d1000 1c77d1000 📝 Change paths to use RemoteScriptingClient as subtree in Citrus 17f673589 📝 Catch up with RemoteScripting 9dfbfd854 📝 Disable vsync during FramesSkippingTimeFlow REVERT: cd8389744 📝 Change paths to use RemoteScriptingClient as subtree in Citrus git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: 1c77d10008fffa41a72bde359a316f58a84a6a07 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' content from commit cd8389744 git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: cd83897444b3ceb11de6c1245ccaa9fe80a8d75a 🧪📝 Update Docs 🧪Update schema 🧪📝[CI] CI fixes and improvements: Set warning level to zero for building Launcher.Win, RemoteScripting.Win/Mac/Android Print dotnet info Run Yuzu tests on test stage of CI Run Citrus Tests in Release configuration Use dotnet build for building Launcher on Mac 🧪📝 Improve coding style by using implicit new() 🧪📝[Examples] Fix locating Data bundle in EmptyProject.Mac 🧪📝[RemoteScripting][Examples] Update framework references path to .NET7 location 🧪📝[Examples][Android] Force loading of Assets.Android assembly 🧪📝[Examples] Fix compilation 🧪📝 Migrate ./Examples projects to .NET7 🧪📝 Migrate Citrus/Tests projects to .NET7 🧪🍊 Fix crash when animator enters zombie state for reasons other than removing component 🧪🍊 Reduce filling attribute cache with a lot of unnecessary entries when enumerating suitable types for instance property editor 🧪🍊 Fix crash on removing component which has a nested property animator 🧪🍊 Fix not displaying icons for path with non ansi characters in filesystem view panel 🧪📝🍊 Automatically select the latest sdk for RemoteScripting 🧪📝🍊 Fix coding style 🧪📝 Migrate Tangerine project files to .NET7 🧪📝 Migrate Launcher to .NET7, refactor and improve: disable dotnet node reuse set warning level to zero update binaries remove explicit nuget restore feature remove sync projects feature use Microsoft.Windows.CsWin32 nuget package to access WinAPI 🧪🍊 New Orange action 'Measure clone all scenes time' 🧪📝🍊 Fix locating iOS binaries 🧪📝🍊 Set warning level to 0 when building with building projects with Orange 🧪🍊[CI] Reduce excessive logging about asset cache disabled with command line argument 🧪🍊 Disable dotnet node reuse when building with Orange 🧪📝🍊 Remove csproj sync feature, remove Nuget.cs/exe, remove no longer needed build systems, fix coding style. 🧪📝 Migrate Orange projects to .NET7 🧪📝 Migrate Kumquat projects and templates to .NET7 🧪📝🍋 Migrate DynamicFont projects to .NET7 🧪📝 Migrate RemoteScripting projects to .NET7 🧪📝🍋 Use Yuzu generators 🧪📝📝 Refactor attribute caches in Lime, use them all over the code base whenever seemed useful 🧪🍋 Handle unknown component type and indexer brackets on non indexer property cases crashing when parsing animation property path 🧪🍋 Comment on linq expressions usage 🧪🍋🍊 Rename term AnimationHost => AnimatorHost 🧪🍋 Comment on possible crash in NSGameView.cs 🧪📝🍋 Delete Etc2Decoder 🧪📝 Ignore coding style enforcement in SharpFont, HarfBuzz and Lime mac audio with .editorconfig files 🧪📝🍋 .NET7 related compilation fixes 🧪📝🍋[Mac] Lime.Audio coding style and compilation fixes 🧪📝[Mac]🍋 Remove NSApplication.IgnoreMissingAssembliesDuringRegistration = true 🧪📝🍋 Coding style fixes 🧪📝🍋 Use DllImportResolver to load libopenal32.so on Android 🧪📝🍋 Use NativeMemory.Copy/Fill in Lime.GraphicsUtility.CopyMemory/FillMemory in .NET7 🧪📝 Migrate Lime projects to .NET7 🧪📝 Migrate Lemon to .NET7 🧪📝 Ignore coding style enforcement in Lzma, MoltenVK, ShaderCompilerBinding and SharpVulkan with .editorconfig files 🧪📝 Move SharpVulkan source code one directory up to reduce excessive nesting 🧪📝 Migrate Lzma to .netstandard2.0. Remove binaries from under the version control. 🧪📝 SharpVulkan: Use DllImportResolver to load libvulkan.so on android 🧪📝 Migrate SharpVulkan to .NET7 🧪📝 Migrate MoltenVK to .NET7 remove stub project for 32 bit arch since we no longer support it 🧪📝 Migrate ShaderCompilerBinding to .NET7 🧪📝 3rdParty: add libEtc2Decoder.linkwith.cs. I'm not sure if it's needed at all, now, when I'm ready to merge, but it's better to remove it later if it's not needed. 🧪📝 Update Yuzu Update Yuzu 🧪📝 Introduce ./Directory.Buid.props and ./Directory.Build.targets: those files will be automatically imported to every *.csproj they contain common setup applicable to all projects (or use conditions) uncomment DebugCsproj target to observe desired msbuild variable in build log adds parts of configuration divided by . as defines e.g. Tangerine.Profiler.Release -> TANGERINE;PROFILER;RELEASE adds PROFILER define to every tangerine project adds platform specific defines (ANDROID, iOS, MAC, WIN) depending on TargetFramework 🧪[Analyzers] Set SA1307 severity to error 🧪📝 Analyzers: Rename Analyzers.targets -> Analyzers.props Update Analyzers 🧪Specify eol for .editorconfig files in .gitattributes 🧪Remove 3rdParty/Facebook_iOS 🧪Remove 3rdParty/monotouch-facebook 🧪Remove 3rdParty/ChromiumWebBrowser 🧪Remove 3rdParty/AndroidExpansionLibrary 📝📝📝📝📝📝📝📝🧪 Update remote scripting subtrees ✨: Updated RemoteScriptingClient and Benchmark subtrees Commits: 🧪📝 Catch up with new RemoteScriptingClient 🧪Merge commit '4647db56ad3405b11ef6539bec6abd881f0e9205' into QAA/296_update_remote_scripting_subtrees 🧪Squashed 'Lime/Extensions/Benchmark/' changes from ad72a2d49..1f101d0a7 1f101d0a7 📝 Change paths to use Benchmark as subtree in Citrus a297bfb1b 📝 Standardize ScriptsPreserve file formatting 2c002b9a1 Merge branch 'QAA-11_BenchmarkImprovement' 28820c903 📝 Fix crash on save benchmark result as image 9504d7087 📝 Invoke the method IDataSource.SkipFrame() in the event that the target frame is not accessible. This approach can effectively assist in mitigating potential errors or obstacles that may arise during the data retrieval process. 3539d4ce9 📝 Catch up with new Citrus 832832ce4 📝 Add title for benchmark results and possibility to edit it 82092e51c 📝 Improve frame description on line chart d82632ae0 📝 Implement possibility to record custom metrics 0a3e1fd66 ﻿📝 Add possibility to add description to benchmark stage e2e3d773a ﻿📝 Catch up with code analizers 484cc1421 📝 Setup Analyzers REVERT: ad72a2d49 📝 Change paths to use Benchmark as subtree in Citrus git-subtree-dir: Lime/Extensions/Benchmark git-subtree-split: 1f101d0a78d84a5f74c62efab6171c1aa0d147dd 🧪Squashed 'Lime/Extensions/Benchmark/' content from commit ad72a2d49 git-subtree-dir: Lime/Extensions/Benchmark git-subtree-split: ad72a2d49efb45b5e73cdb408c875b45424ecb38 🧪Merge commit 'd904d5d80ece7f423984771f645e705713c89fa6' into QAA/296_update_remote_scripting_subtrees 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' changes from 1c77d1000..e3a85ee45 e3a85ee45 📝 Change paths to use RemoteScriptingClient as subtree in Citrus 5f66bf8ab 📝 Skip code using by scripts from being linked 5e71dc25e 📝 Use file globbing in Android and iOS projects to avoid Orange csproj synchronization dbe3be80a 📝 Fix memory leak in Utils.GetBitmap method 5086a65f7 📝 Shared scripts enhancement e5a0976a9 📝 Fix getting device name on iOS 16 ea37072f5 📝 Fix WindowsFromLocker behavior on mobile platforms e423b7a29 Merge branch 'QAA-218_PreventPlayersInputWhileTestIsRunning' ec20bfc5d 📝 Implement WindowsFormLocker to prevent user interactions while test in progress b7e5053ec 📝 Prevent player's input while test is running e5468e5cf 📝 Make CoroutineMethodBuilder struct to prevent allocations REVERT: 1c77d1000 📝 Change paths to use RemoteScriptingClient as subtree in Citrus git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: e3a85ee4530a855f2dcc5af1b35732046cba43bb 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' changes from cd8389744..1c77d1000 1c77d1000 📝 Change paths to use RemoteScriptingClient as subtree in Citrus 17f673589 📝 Catch up with RemoteScripting 9dfbfd854 📝 Disable vsync during FramesSkippingTimeFlow REVERT: cd8389744 📝 Change paths to use RemoteScriptingClient as subtree in Citrus git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: 1c77d10008fffa41a72bde359a316f58a84a6a07 🧪Squashed 'Lime/Extensions/RemoteScriptingClient/' content from commit cd8389744 git-subtree-dir: Lime/Extensions/RemoteScriptingClient git-subtree-split: cd83897444b3ceb11de6c1245ccaa9fe80a8d75a 📝🧪 Fix for psd importer ✨(tan): Move GroupSceneItems/UngroupSceneItems operation to Tangerine.UI.SceneView making it available to plugins and extensions. Commits: 🧪📝 Move Group/UngroupSceneItems to Tangerine.UI.SceneView to fix PSDImporter extension compilation 📝🧪 CIT/2502 🧹(examples): Use Visual Studio 2022 for RemoteScripting in Tests project Commits: 🧪📝 Use Visual Studio 2022 for RemoteScripting in Tests project 📝🧪 Fix texture cooking 🐞(orange): fix texture cooking Commits: 🧪📝🍊[TextureConverter] Use UTF8 encoding for path 📝🧪 Surface created race 🐞(lime, android): Hopefully fix rare race when trying to invoke eglMakeCurrent while surface has not yet been created. Commits: 🧪📝[Andoid] Possible fix for rare crash when invoking eglMakeCurrent but eglSurface is still null 📝🧪 Document refactoring ♻️(tangerine): Separate Document and SceneDocument allowing for supporting multiple document types. ✨(tangerine): Introduce font config editor. Open .tftconf file in Tangerine to edit. Commits: 🧪📝 Sync .Mac.csproj 🧪📝 Uncomment the accidentally commented line. 🧪📝 Make Lime internals visible for FontEditor 🧪📝 Open .tftconf with FilesystemView 🧪📝 Make Document class document-type agnostic 🧪📝 Sync .csproj 🧪📝 Add FontEditor 🧪📝 Add Size property editor 🧪📝 Extract SceneDocument 📝🧪 Fix not setting curve for enum animators via animator registry 🐞(lime): Not initializing IAnimator.ReadonlyCurve when creating simple animation curve enum animator using animator registry leading to crashes whenever this method was used to create animators with simple animation curve. Commits: 🧪📝🍊 Fix not initializing Animator.Curve when creating enum animator via animtor registry 📝🧪 Android app exit ✨(lime, android): Implement Lime.Application.Exit() for Android. Commits: 🧪📝[Android] Implement Lime.Application.Exit() for Android 📝🧪 Scroll view scroll time limit ✨(lime): Add configurable time limit Lime.ScrollView.MaxScrollToItemTime for Lime.ScrollView.ScrollTo with default value 5. Commits: 🧪📝 Add configurable time limit for ScrollView.ScrollTo 📝🧪 Remove keyframe range fix 🐞(tangerine): Regression bug when removing keyframe ranges. Commits: 🧪📝🍊 Fix regression in RemoveKeyframeRange 📝🧪 Multicomponent bezier animators Lime 💥: Migration required, Lime schema version 6 -> 7. 💥: Animators created with default constructor no longer have default Curve/ReadonlyCurve set. It is now null by default. Set manually or use Lime.AnimatorRegistry methods. Obsolete explicit specializations of Animator<> removed. (e.g. Vector2Animator, FloatAnimator...) Rename AnimatorRegistry.CreateAnimator -> .CreateSimpleAnimator; Animators created with AnimatorRegistry.Instance will have their Curve/Readonly curve set to corresponding animation curve kind. Rename In/OutTangenet -> In/OutSlope in Bezier animation curve related code. BoxedKeyframeList<T> and AbstractBezierKeyframeCollection<T> Removed. Animation keyframe and keyframe lists renames: IKeyframe -> ISimpleKeyframe IKeyframeList -> ISimpleKeyframeCollection KeyframeParams -> SimpleKeyframeParams Keyframe<T> -> SimpleKeyframe<T> TypedKeyframeList<T> -> SimpleKeyframeCollection<T> ICommonKeyframe-> IKeyframe ICommonKeyframe<T> -> IKeyframe<T> ICommonKeyframeCollection -> IKeyframeCollection ICommonKeyframeCollection<T> -> IKeyframeCollection<T> Animator<T>.Keys/ReadonlyKeys now returns IKeyframeCollection<T>, IAnimator.Keys/ReadonlyKeys now returns IKeyframeCollection. Keyframe collections of simple and Bezier keyframes now implement multiple ICollection interfaces. Some LINQ expressions may fail to compile because of ambiguity, use explicit cast to fix it. Remove Clone() from IKeyframe and it's implementations. ✨: New Color4.RGBA(uint), Color4.RGB(uint) methods. ✨: Indexer for Lime.NumericRange ✨: New methods in AnimatorRegistry: CreateSimpleAnimator(Type) CreateSimpleAnimator(Type, string targetPropertyPath) CreateBezierAnimator(Type) CreateBezierAnimator(Type, string targetPropertyPath) CanAnimateWithSimpleCurve(Type) CanAnimateWithSimpleLinearInterpolation(Type) CanAnimateWithSimpleSmoothInterpolation(Type) CanAnimateWithEasing(Type) CanAnimateWithBezierCurve(Type) ♻️: Change IList<Keyframe<T>> implementation of TypedKeyframeList<T> to ICollection<Keyframe<T>>. ♻️: Remove IReadOnlyList<BezierKeyframe<T>> implementation from BezierKeyframeCollection<T> ✨: New Cloner.Clone<T>(object) overload for convenience. ✨: Improve enumerating types for yuzu code generation for generics and animation related types. Move animated type specific checks from Tangerine:KeyframeUtils.cs to Lime.AnimatorRegistry 🐞: Excessive AddRef in Animator<> constructor, which led to multiple bugs in tangerine and excessive allocations. Orange 🐞: Sync projects setting incorrect newlines. Tangerine 🐞: Crash in keyframe grid view, when removing an animator while curve editor mode is active then selecting the widget. 🐞: Crash in dark theme because of missing Bezier keyframe icon. ✨: Bezier animation curves for multi-component properties: Curve editor is now DPI aware. On top of float support Vector2, Vector3, NumericRange types for animation with Bezier curves Eraser tool: use middle mouse button on active curve. You can press it once or hold and drag. To pan hold middle mouse button with no mouse bound curve. Curve editor debug mode (for testing), see context menu. Context menu commands (depending on hovered object): Create Key Delete Key Reset Key Set interpolation (Bezier, Constant) Display ghost lines out of curve key range, corresponding to out of range values. Introduce mouse bound curve visualization. Change tangent, handle and keyframe visuals. Configurable colors: TangentHandleColor HoveredTangentHandleColor TangentLineColor KeyColor HoveredKeyColor GhostColor Configurable (with config) metrics (at TimelineUserPreferences.CurveEditorPreferences.: KeyRadius TangentHandleRadius TangentHandleLineWidth TangentLineWidth CurveLineWidth ActiveCurveLineWidth GhostLineWidth BindCurveDistance Tangerine Code ✨: New class Tangerine.Core.Transaction, returned by OperationHistory.BeginTransaction(): Always prefix it with using when acquiring. Don't forget to call transaction.Commit() when done. You can now pass Action to OperationHistory.BeginTransaction(Action) to be executed on transaction dispose. ✨: Clone extension methods for keyframe types. Commits: 🧪📝 Final chores 🧪📝 Remove empty Timeline/CurveEditor/CurveEditorUtils.cs 🧪📝[CurveEditor] Fix divergence of timline caret and curve editor caret line when pixel scaling != 1 🧪🍊 Rename TimelineMetrics.ColWidth -> ...ColumnWidth 🧪📝[CurveEditor] Fix mouse bound curve visualization changing while in process of editing curve with mouse 🧪📝[CurveEditor] Fix Bezier curve culling when rendering 🧪📝🍊[Mac] Fix compilation 🧪📝 Fix runtime crash in model importer 🧪📝 Migrate Examples 🧪📝 Bump lime schema version 6 -> 7. Migrate obsolete explicit Animator<> specializations. Update yuzu generated binary deserializers and cloners. 🧪📝 Improve enumerating types for yuzu codegen for generics and animation related types. Move animated types spec checks from Tangerine:KeyframeUtils.cs to Lime.AnimatorRegistry 🧪📝 Make sure AnimatorRegistry.CreateSimpleAnimator sets curve; Fix compilation of Examples/Tests 🧪📝 Remove more unused code. 🧪📝 Implement eraser tool (middle mouse button) for Bezier curve editor 🧪📝 Fix remaining Bezier curve editing accumulating precision loss issues 🧪📝 Changes: Remove obsolete explicitly specialized Animator<> implementations Fix excessive AddRef in Animator<> constructor, which led to multiple bugs Don't initialize Animator<>.Curve in constructor, leave it null be default Rename AnimatorRegistry.CreateAnimator -> CreateSimpleAnimator, make sure it's initialized with SimpleAnimationCurve<> Fix remaining invalid casts of Animator<>.Keys because of it's type changed in previous commits Remove unused code in curve editor Fix crash in keyframe grid view, when removing an animator while curve editor mode is active then selecting the widget 🧪📝 Fix SimpleKeyframeCollection<T> implementation of IKeyframeCollection.CopyTo 🧪📝 Delete BoxedSimpleKeyframeCollection and AbstractBezierKeyframeCollection 🧪📝 Remove Clone() from IKeyframe and it's implementations. Make replacement extension methods in KeyframeUtils.cs in Tangerine 🧪📝 Fix Bezier curve/keyframes related bugs 🧪📝 Renames: ICommonKeyframe-> IKeyframe ICommonKeyframe<T> -> IKeyframe<T> ICommonKeyframeCollection -> IKeyframeCollection ICommonKeyframeCollection<T> -> IKeyframeCollection<T> 🧪📝 Introduce ICommonKeyframeCollection<T> and change Animator.Keys type to it 🧪🍋 Add Cloner.Clone<T>(object) overload for convenience 🧪📝 Animation keyframe and keyframe lists renames: IKeyframe -> ISimpleKeyframe IKeyframeList -> ISimpleKeyframeCollection KeyframeParams -> SimpleKeyframeParams Keyframe<T> -> SimpleKeyframe<T> TypedKeyframeList<T> -> SimpleKeyframeCollection<T> BoxedKeyframeList<T> -> BoxedSimpleKeyframeList<T> 🧪📝 Start refactoring keyframe collections: Change IList<Keyframe<T>> implementation of TypedKeyframeList<T> to ICollection<Keyframe<T>>. Remove IReadOnlyList<BezierKeyframe<T>> implementation from BezierKeyframeCollection<T> As a result and a requirement for correctly working with Bezier animators, change implementation of RemoveKeyframeRange operation in Tangerine 🧪Fix multiple instances of misspelled word occured 🧪📝 Update project files 🧪🍊[Launcher] Make sync projects set correct newlines and indent 🧪📝 Split AnimationCurve.cs into multiple files 🧪📝 Make SetKeyframe.Perform and RemoveKeyframe.Perform aware of Bezier Keyframe specifics, introduce Set/RemoveKeyframeRaw. Add support for Vector3 Bezier keyframes 🧪📝 Make curve editor DPI aware 🧪📝 Changes: Rename In/OutTangenet -> InOutSlope in Bezier animation curve related code Assert NaN in IBezierAnimatorAdapter implementations Propertly set default bezier keyframe weights to 1/3 Add types animable with bezier curves to SupportsBezierInterpolation new clas Tangerine.Core.Transaction, returned by OperationHistory.BeginTransaction(): always prefix it with using when acquiring don't forget to call transaction.Commit() when done Simplify representation of hovered keyframe and tangent in curve editor Add numerous helper methods to Tangerine.Timeline.CurveEditor.Curve Implement correct SetKeyframe, RemoveKeyframe methods for dealing with setting only one component on multicomponent Bezier curves Debug mode for curve editor Curve editor commands: Delete Key, Create Key, Reset Key, Set interpolation to Constant/Bezier Correctly implement calculating required value range in curve editor Introduce \"mouse bound curve\" with additional visualization for it Rename helper methods for coordinate system conversion Additional debug curve achieved by sampling animator at regular intervals for cross checking correctness Refactor and improve curve rendering Rewrite curve editor utils Delete UpdateBezierKeyframe.cs Fix curve tangent editor Fix and thoroughly comment code responsible for moving keyframes in curve editor Move curve editor rendering metrics into timeline preferences Move curve editor rendering colors into color scheme Fix dark theme crash because of missing Bezier keyframe icon 🧪🍋 New Color4.RGBA(uint), Color4.RGB(uint) methods 🧪📝 Refactoring: AnimatorAdapter -> BezierAnimatorAdapter 🧪📝 Use AnimatorAdapter only for bezier curves, set bezier weights 1/3 by default 🧪📝 Separated editing of multicomponent bezier curves 🧪📝 Initial suport for Vector2 beziers 📝🧪 EglGetConfigs fix 🐞(lime, android): fix eglGetConfigs(), eglCreateWindowSurface(), eglInitialize() Commits: 🧪📝 Fix eglChooseConfig, eglCreateWindowSurface, eglInitialize 🧪📝🍋[Android] Fix IllegalArgumentException at eglGetConfigs() 📝🧪 Texture missing delegate broken 🐞(lime): Not raising TexturePool.TextureMissing event when sprite texture is missing. Commits: 🧪📝 Quick fix missing TextureMissing event raise when loading sprites 📝🧪 Disable sdl 🐞(lime): fix graphics context creation Commits: 🧪📝 Disable sdl 📝🧪 Dont throw in dummy window wait for rendering 🐞(lime): fix texture pool in windowless mode Commits: 🧪📝 Don't throw exception in DummyWindow.WaitForRendering() 📝🧪 Web support ✨(lime): web support Commits: 🧪📝🍋 Remove clipboard async methods 🧪📝 Update Yuzu 🧪📝 Update Yuzu 🧪📝 Update Yuzu 🧪📝🍋 Fix after rebase 🧪📝[Web] Temp canvas resize support 🧪📝[Web] Update meta-tags for Mac 🧪📝[Web][Demo] Centrify canvas in landscape mode 🧪📝[Web][Demo] Fix canvas size on mobile devices 🧪📝[Web][Demo] Add simple load indicator 🧪📝[Web][Demo] Make canvas responsive with CSS/JS 🧪📝🍋 Fix win compilation. Update project files. 🧪📝Update project files. Fix compilation 🧪📝[Web][Render] Temp fix render texture 🧪📝🍋[Web] Update CMakeLists 🧪📝🍋[Web] Update readme 🧪📝🍋[Web] Audio support 🧪📝[Web] Fix mouse position when scrolling 🧪📝🍋[Web] Add draft touch support TODO: It isn't working as intended since Key.TouchN does nothing for some reason 🧪📝🍋[Web] Fix input handling 🧪📝[Web] Add basic mouse support 🧪📝🍋 Update deserializers/cloners 🧪📝🍋[Web] Implement Window.FPS 🧪📝 Fix delta 🧪📝 Fixes 🧪📝 Fixes 🧪📝 Fixes 🧪📝 Fixes 🧪📝 Fixes 🧪📝🍋[Web] Fixes 🧪📝🍋[Web] Initial commit 📝🧪 File property editor bugs 🐞(tangerine): FilePropertyEditor not accepting extensions from TangerineFileProperty attribute and crashing if object to string converter returns null. Commits: 🧪📝🍊 Fix FilePropertyEditor not accepting extensions from TangerineFileProperty attribute and crashing if object to string converter returns null 📝🧪 Bezier animators ✨(yuzu): Update yuzu which has new ✨: it is now possible to resolve ambiguity for Yuzu when class implement multiple generic ICollection or IEnumerable interfaces. To do so you can use YuzuUseEnumerableInterface attribute or YuzuUseCollectionInterface. Attributes won't help with generic classes. For generic classes you can use Yuzu.Util.Public.InterfaceAmbiguityResolver callback, but it is static for now and is used by lime. ✨(lime): Add Rectangle.Min predefined rectangle which is inflatable by including any point. It's useful to start with when you want to get a bbox of many points. ✨(lime): Add Rectangle.IncludePoints method which accepts points as params and modifies the rectangle instead of returning new one like IncludingPoint method does. ✨(lime): Improve displaying Vector2 values in watches with DebuggerDisplay attribute. ✨(lime): Make it possible to deconstruct Vector2 values into tuples. ♻️(lime): Rename Lime.Model3DAttachment.Animation property StartFrame to FirstFrame for symmetry with LastFrame. 🐞(lime): Fix allocating and storing double the amount of source keyframes when processing model3d attachment animations. ♻️(lime): rename Lime.Mathf.BezierSpline -> Mathf.CubicBezier, Mathf.BezierTangent -> Mathf.CubicBezierDerivative. ✨(lime): new interfaces ICommonKeyframe, IAnimationCurveWithKeys, ICommonKeyframeCollection allowing to determine if animator's curve has keys and to inspect and modify it's keyframe collection disregarding curve kind. ✨(lime): Bezier animation curve implementation, new types: IBezierAnimationCurve, IBezierKeyframe, IAbstractBezierKeyframeCollection, AbstractBezierKeyframeCollection<T>, BezierKeyframeCollection<T>, BezierKeyframe<T>, BezierAnimationCurve<T>, FloatBezierAnimationCurve. ✨(lime): New method overload for Lime.AnimationUtils.FramesToSeconds accepting floating point frame value. ✨(lime): New animator property IsEmpty. ♻️(lime): Remove AddOrdered methods from keyframe list/collection classes for simple animation curves. Addmethod now behaves as AddOrdered with optimization for a case when new keyframe's frame is greater than the last keyframe's frame in the collection. ♻️(lime): Move static Keyframe class to KeyframeUtils in Tangerine. 💥(lime): It is now considered forbidden and not supported (for now undefined behavior) to modify keyframes already belonging to keyframe collection. Motivated by: firstly, modifying frame should trigger sort, which is not something we want to implement in lack of demand; and secondly, keyframes should probably become structs in the future. In spite of this change keyframe collections got methods like Update(int index, ...), bool Contains(int frame), int IndexOf(int frame), bool Remove(int frame), ICommonKeyframe GetByFrame(int frame). ✨(lime): Mathf.Lerp family of methods is now guaranteed to return exact end of interval values when parameter t is 0.0f or 1.0f. ✨(lime): New method Mathf.SolveCubicBezier solving cubic bezier for given value in [0; 1]. 💥(lime): Attribute TangerineKeyframeInterpolationAttribute removed. ✨(tangerine): Editor and partial support in other aspects for Bezier animation curves. Short manual: Only float properties are supported for now. To Create Bezier animator either RMB on property name in inspector and press Add Bezier Animator or hold RMB on keyframe icon left of property name in inspector and select rhombus icon. Both will be available only if there's no animator for the property yet. To go into curve editing mode check edit curves icon on timeline toolbox and select animator. Select multiple animators and edit them at the same time. Modifying property when there's an Bezier animator present will produce new Bezier keyframe. Double-click anywhere on timeline to create new keyframe when only one animator is selected. Double-click on the curve to create new keyframe when multiple animators are selected. RMB on Keyframe to delete it. RMB on the curve for menu to create keyframe or split curve with keyframe without modifying the curve. You can freely drag keyframes. If you drag keyframes on each other the one you're not dragging will be deleted. You can freely move tangents. Hold Alt before dragging tangent handle to change it's lock state. I.e. it will unlock if it's already locked and vice versa. \"locked tangents\" means in tangent and out tangent of the keyframe provide smooth transition and are edited together disregarding which one you're dragging. Reselect the animator to reset view and fit all the curve into the view. Keyframe operations with Bezier keyframe on timeline in grid mode were not tested and may be broken, please report. ✨(tangerine): Disable unsupported key function types given the type of the animated property. For example only step is supported for boolean properties. Commits: 🧪📝 Update schema 📝 Update schema 🧪[Cook] Fix copying double the amount of source keyframes when processing model3d attachment animations 🧪🍋[Math] Make sure lerp returns exact values of its arguments when t = 0.0f and t = 1.0f 🧪📝 Support bezier keyframes in keyframe interface in inspector 🧪📝 Implement Bezier curve editor for animators in Tangerine 🧪📝🍋 Implement Bezier animation curve 📝🧪 Fit to container rotation 🐞(tangerine): Fit to Content not working correctly when applied to widgets with non zero rotation. Commits: 🧪📝🍊 Fix FitToContent not working correclty when widget is rotated 📝🧪 Emitter sprite frames 🐞(tangerine): Particle frame animation not working. Commits: 🧪📝 Fix particle emitter frame animation not working in Tangerine 📝🧪 Crash persistence clone null 🐞(lime): Crash when trying to use Lime.Persistence.Clone to clone null value. Commits: 🧪📝 Fix crash when trying to clone null value with Persistence.Clone 📝🧪 Copy emitter crash 🐞(lime): Crash when invoking update on particle emitter with no parent and ParticleLinkage set to Root. Commits: 🧪📝[ParticleEmitter] When getting root linkage widget start searching for root with the widget itself, not the parent 📝🧪 Improve texture decompression speed 🐞(orange): Greatly improve the speed of unpacking bundles when \"Convert to PNG\" is selected. Commits: 🧪📝🍊 Use C# file I/O methods instead of PVRTexLib's"
  },
  "articles/changelog/master.html": {
    "href": "articles/changelog/master.html",
    "title": "Version master | Citrus Engine",
    "keywords": "Version master Legend Legend 📝 jira issue link 🧪 gitlab merge request link 🐞 bug fix ⚡️ improve performance ✨ new feature 💥 breaking change ♻️ refactoring 🧹 chore ✅ test"
  },
  "articles/citrus_project/citrus_project_configuration.html": {
    "href": "articles/citrus_project/citrus_project_configuration.html",
    "title": "Citrus project configuration | Citrus Engine",
    "keywords": "Citrus project configuration Citrus project configuration is provided via a JSON (currently Newtonsoft.Json parseable) file with extension .citproj. ProjectDirectory is considered to be a directory where project configuration file is located. Whenever it is stated that path is relative, implied it's relative to ProjectDirectory unless stated otherwise. Root level Property Type Description Name string Project name. Orange expects it to appear in directory structure as described. AssetsDirectory string can be used to override default Assets Directory ./Data/ BundlesOutputDirectory string Relative path to a directory where Orange will place produced asset bundles. Default value is ./Bundles/ GeneratedScenesPath string Path for scene code generated by Kumqat. Default is GeneratedScenes DictionariesPath string Path to dictionaries directory relative to assets directory. Default is Lime.Localization.DictionariesPath = \"Localization\". UnresolvedAssembliesDirectory string default: $\"{ProjectName}.OrangePlugin/bin/$(CONFIGURATION)/\" GeneratedDeserializerPath string Path to save yuzu generated binary deserializers for application types if used. CitrusDirectory string relative path to Citrus engine directory. Default is ./Citrus/. Should be set if path deviates from the default. SkipAssetsCooking bool Option to omit assets cooking. SkipCodeCooking bool Option to omit Kumquat code generation. Should be set to true if project doesn't use Kumquat. RawAssetExtensions string Space separated extensions for files to be treated as raw assets in form .xxx .yyy .zzz... LocalizeOnlyTaggedSceneTexts string TODO AddContextToLocalizedDictionary bool TODO Targets List<Target> Lists user defined targets. XCodeProject XCodeProject Setting specific to XCodePproject generation. PluginAssemblies PluginAssemblies Describes which assemblies should be loaded by Orange/Tangerine. AssetCache AssetCache Asset Cache settings RemoteScripting Dictionary<string, RemoteScripting> TODO ResolutionSettings ResolutionSettings TODO ApplyAnimationBlenderInTangerine bool Allows you to enable BlendAnimationEngine in Tangerine which is turned off by default Target See Targets XCodeProject Property Type Description DataFolder TODO Resources TODO AssetCache: Property Type Description ServerAddress string address of the FTP server ServerUsername string username to use when connect to server ServerPath string TODO PluginAssemblies Property Type Description OrangeAndTangerine List<string> paths to assemblies to be loaded by Tangerine and Orange Orange List<string> paths to assemblies to be loaded by Orange only Tangerine List<string> paths to assemblies to be loaded by Tangerine only OrangeAndTangerineBuildTargets List<string> list of Target to build when opening project with Tangerine and Orange OrangeBuildTargets List<string> list of Target to build when opening project with Orange TangerineBuildTargets List<string> list of Target to build when opening project with Tangerine Assembly paths may contain Substitute tokens. Assembly paths are relative to project directory. ResolutionSettings Property Type Description IsLandscapeDefault bool default: true TODO Resolutions List<Resolution> list of resolutions TODO Markers List<Marker> list of markers TODO Resolution Property Type Description Name string resolution name Width number width Height number height ResolutionMarkers List<string> TODO Marker Property Type Description Name string TODO LandscapeMarker string TODO PortraitMarker string TODO RemoteScripting Property Type Description ScriptsPath string TODO ScriptsAssemblyName string TODO BuildTarget string TODO FrameworkReferencesPath string TODO ProjectReferencesPath string TODO ProjectReferences List<string> TODO FrameworkReferences string TODO EntryPointsClass string TODO RemoteStoragePath string TODO Substitute tokens $(PLATFORM) => Win or Mac $(CONFIGURATION) => Debug or Release $(HOST_APPLICATION) => Orange or Tangerine"
  },
  "articles/citrus_project/cooking.html": {
    "href": "articles/citrus_project/cooking.html",
    "title": "Building Game Assets | Citrus Engine",
    "keywords": "Building Game Assets"
  },
  "articles/citrus_project/directory_structure.html": {
    "href": "articles/citrus_project/directory_structure.html",
    "title": "Citrus project directory structure | Citrus Engine",
    "keywords": "Citrus project directory structure ./<ProjectName>.citproj project configuration ./Data/ default assets directory /Localization/ default dictionaries path /Fonts/ fixed path for fonts ./<ProjectName>.Android/ <ProjectName>.Android.csproj <ProjectName>.Android.sln ./<ProjectName>.Game/ <ProjectName>.Game.projitems <ProjectName>.Game.shproj ./<ProjectName>.GeneratedScenes/ <ProjectName>.GeneratedScenes.Android.csproj <ProjectName>.GeneratedScenes.iOS.csproj <ProjectName>.GeneratedScenes.Mac.csproj <ProjectName>.GeneratedScenes.Win.csproj ./<ProjectName>.iOS/ <ProjectName>.iOS.csproj <ProjectName>.iOS.sln ./<ProjectName>.Mac/ <ProjectName>.Mac.csproj <ProjectName>.Mac.sln ./<ProjectName>.Win/ <ProjectName>.Win.csproj <ProjectName>.Win.sln"
  },
  "articles/citrus_project/quickstart.html": {
    "href": "articles/citrus_project/quickstart.html",
    "title": "Quickstart guide | Citrus Engine",
    "keywords": "Quickstart guide"
  },
  "articles/citrus_project/targets.html": {
    "href": "articles/citrus_project/targets.html",
    "title": "Targets | Citrus Engine",
    "keywords": "Targets Target combines in itself what project, under what platform and in what configuration to build. Also you can bind asset cooking rules to the target. You will specify the target when building a project in orange. The ability to inherit targets allows you to override only the necessary target properties. But that's not all. Targets are used in cooking rules, so that specific rules work only in the context of a specific target. In the case of cooking rules, the order in which targets are inherited determines the priority of cooking rules relative to each other. See Cooking rules for details. To add custom targets, use the targets field in the project configuration file. See. Citrus project configuration Default target names are iOS, Android, Win, Mac. There is also a hidden root target called Any. Any target declared without specifying a BaseTarget will inherit from the Any target. In the same way, cooking rules without any explicit targeting are considered to be associated with the Any target. Any target is setup as follows: name: \"Any\", projectPath: null, cleanBeforeBuild: null, platform: null, configuration: null, hidden: true Note that even though platform for target Any is set to null, the code will always return the current platform selected in the GUI when referring to the Platform property in the case of the root target. So if there is a need to inherit not from one of the default platform targets, but from Any then you need to explicitly specify values for all target properties. Targets inherited directly from Any cannot be used as build targets unless you overload their platform explicitly. But such targets can be useful for delimiting the cooking rules. Target configuration section for citproj file: Property Type Description CleanBeforeBuild bool If clean step should be invoked before building the project. false by default. Name string Target name will be diaplayed in Orange and Tangerine interface. Bundles List<string> List of bundle names required by this target. Configuration string Configuration to build in terms of VS projects. Default targets have it set to Release Project string Relative path to VS .csproj or .sln file to build. Default is ./<project_name>.<platform>/<project_name>.<platform>.sln BaseTarget string Name of target to inherit. Hidden bool Hides target from GUI. false by default. Warning If any property but Name and BaseTarget is not specified or set to null it will be inherited from specified BaseTarget. Tip Project, Configuration and BaseTarget properties may contain Substitute tokens."
  },
  "articles/citrus_project/windows_native_dependencies/building_FreeType.html": {
    "href": "articles/citrus_project/windows_native_dependencies/building_FreeType.html",
    "title": "| Citrus Engine",
    "keywords": "Сборка FreeType FreeType - это зависимость HarfBuzz-a. Он будет построен вместе с прочими зависимостями HarfBuzz-a. Наши изменения во FreeType Patch для x64 windows (258824f2ba2a3a1cd69c3ad68112283f8c885f09) Мы используем FreeType через SharpFont, который является частью DynamicFont-а. С этим есть опредёлённые проблемы. SharpFont маршалит long как IntPtr. Это прекрасно работает в сборках движка под Windows(x86), MacOS(x64), iOS(x64), Android(x64). Однако это не работает для сборки движка под Windows(x64) In the Unix world, there were a few possible arrangements for the sizes of integers and pointers for 64-bit platforms. The two mostly widely used were ILP64 (actually, only a very few examples of this; Cray was one such) and LP64 (for almost everything else). The acronynms come from 'int, long, pointers are 64-bit' and 'long, pointers are 64-bit'. Type ILP64 LP64 LLP64 char 8 8 8 short 16 16 16 int 64 32 32 long 64 64 32 long long 64 64 64 pointer 64 64 64 For 64-bit systems, the primary Unix 'de facto' standard is LP64 — long and pointer are 64-bit (but int is 32-bit). The Windows 64-bit standard is LLP64 — long long and pointer are 64-bit (but long and int are both 32-bit). Это не ошибка FreeType-а, это ошибка SharpFont-а. Ребята из SharpFont-а предлагают исправлять это через патч, который применяется к FreeType-у. Собственно это мы и сделали с FreeType-ом. Этот патч заменяет long на __int64 в некоторых местах. Это опасное изменение, о котором нужно помнить. В будущем нужно исправить SharpFont, который интегрирован в наш движок, и ревертнуть патч из FreeType-а. Текстовый поиск Visual Studio выдал ~600 мест в DynamicFont, которые потенциально придется изменить. Поддержка субпиксельного рендеринга (d9501bb52fd802883806ab0d724dcb8c4c699689) В ftoption.h включен дефайн FT_CONFIG_OPTION_SUBPIXEL_RENDERING. Можно увидедеть результат работы этой опции, если сделать скриншот текста в движке. Нужно задать масштаб картинки > 200%"
  },
  "articles/citrus_project/windows_native_dependencies/building_HarfBuzz.html": {
    "href": "articles/citrus_project/windows_native_dependencies/building_HarfBuzz.html",
    "title": "| Citrus Engine",
    "keywords": "Сборка HarfBuzz и его зависимостей Шаги сборки Скачать репозиторий HarfBuzz-а Установить mingw-w64 Установить Meson Запустить сборку через Meson Скачать репозиторий HarfBuzz-а Мы используем свой форк HarfBuzz-a: https://gitlab.game-forest.com:8888/Common/3rdparty/harfbuzz. Также в нашем gitlab репозитории содержатся форки зависимостей HarfBuzz-a. Для сборки HarfBuzz-a нужно выкачать только наш форк. Остальные зависимости установятся автоматически. Установить MinGW-w64 MinGW-w64 распространяется через SourceForge.net https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/ При установке нужно выбрать следующие опции (см. таблицу и скриншот): Опция Значение Architecture x86_64 Threads posix Exception seh После этого необходимо выбрать расположение для MinGW Важно! В пути к MinGW не должно быть пробелов. В ином случае вы получите ошибку во время компиляции одной из библиотек зависимостей HarfBuzz-a. Установить Meson Meson - это система сборки. https://mesonbuild.com/Getting-meson.html На данный момент это основной способ сборки HarfBuzz-a. У HarfBuzz-а много опций и библиотек зависимостей. Meson автоматически скачает и соберёт все зависимости. Управлять зависимостями нужно через опции. В нашем форке HarfBuzz-a всё уже настроено. Запустить сборку через Meson Чтобы начать сборку HarfBuzz-а, нужно запустить скрипт build-for-citrus-win64.sh Для этого открываем директорию, в которую установили MinGW (для меня это C:\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0). В этой директории должен лежать файл mingw-w64.bat. Нужно заменить последнюю строчку в этом файле (\"C:\\WINDOWS\\system32\\cmd.exe\") на путь к git bash (для меня это \"C:\\Program Files\\Git\\git-bash.exe\"). После этого запускаем mingw-w64.bat. Должно открыться окно gitbash. Вместе с ним может открыться окно cmd, которое можно сразу закрыть. В открывшемся gitbash-e переходим в директорию с HarfBuzz-ом (для меня это C:\\Users\\dshcherbina\\Desktop\\harfbuzz). Теперь нужно запустить скрипт:sh .\\ci/build-for-citrus-win64.sh Этот скрипт должен отработать без ошибок. В результате его работы должен получиться набор библиотек в ...\\harfbuzz\\win32build\\harfbuzz-win32\\"
  },
  "articles/citrus_project/windows_native_dependencies/native_dependencies_win64_support.html": {
    "href": "articles/citrus_project/windows_native_dependencies/native_dependencies_win64_support.html",
    "title": "Native dependencies win64_support | Citrus Engine",
    "keywords": "Native dependencies win64_support В этом документе описаны нативные зависимости под виндовс и мас, которые были затронуты в эпике win64_support. Оглавление [x] Lemon [x] ShaderCompiler [x] ShaderCompilerBinding.Win [x] OpenAL [x] OpenTK [x] Newtonsoft.Json [x] FbxSdk [x] FreeType [x] HarfBuzz Lemon Источник: исходный код в Citrus\\Lemon Включает в себя Theora https://www.theora.org/ Vorbis and Tremor https://xiph.org/vorbis/ yuv2rgb http://wss.co.uk/pinknoise/yuv2rgb/ Используется при взаимодействии с .ogg .ogv .oga .ogx .spx .opus .ogm файлами. Список изменений: Стандартная конфигурация Lemon.vcxproj теперь нацелена на x64 Для перехода на x64 отключены оптимизации, связанные с ассемблерными вставками LemonNative.dll пересобран под x64 ShaderCompiler Источник: исходный код в Citrus\\3rdParty Включает в себя: glslang https://github.com/KhronosGroup/glslang SPIRV-Tools https://github.com/KhronosGroup/SPIRV-Tools spirv-headers https://github.com/KhronosGroup/SPIRV-Headers.git SPIRV-Cross https://github.com/KhronosGroup/SPIRV-Cross Автор: Костя Егоров kegorov Список изменений: ShaderCompiler.dll пересобран под x64 ShaderCompilerBinding.Win Источник: исходный код в Citrus\\3rdParty Автор: Костя Егоров kegorov Используется в процессе компиляции шейдеров. (Компиляция шейдерев происходит при первом использовании материала (IMaterial)) Список изменений: Стандартная конфигурация ShaderCompilerBinding.Win.csproj теперь нацелена на x64 ShaderCompilerBinding.Win.dll пересобран под x64 OpenAL Источник: nuget (утанавливается как зависимость OpenTK) Используется аудиосистемой движка. Список изменений: OpenAL теперь устанавливается из nuget-а Версия изменена и зависит от OpenTK OpenTK Версия: 3.1.0 Источник: nuget OpenTK.GLControl По крайней мере используется в процессе рендеринга в Empty Project-е, код из OpenTK используется аудиосистемой движка. (Типы данных из OpenTK используются, даже если ОpenGL не используется в качесте бэкенда. Возможно, что-то подскажет Костя Егоров kegorov) Список изменений: OpenTK теперь устанавливается из nuget-а Версия обновлена с 1.1.2 до 3.1.0 Удалены библиотеки в 3rdParty/OpenTK/ Добавлены библиотеки в 3rdParty/OpenTK/Dependencies_x64. (замена аналогичных библиотек в 3rdParty/OpenTK/Dependencies_x86/) d3dcompiler_47.dll libEGL.dll libGLESv2.dll Примечания: Библиотеки в 3rdParty/OpenTK/Dependencies_x64 необходимы для запуска OpenGL ES 2.0 на виндовс. Они получены путём сборки google/angle со следующими параметрами (OpenGL ES 2.0 эмулируется через DirectX 9): is_debug = false angle_enable_d3d9 = true angle_enable_d3d11 = false angle_enable_gl = true angle_enable_gl_desktop = false angle_enable_metal = false angle_enable_vulkan = false angle_build_all = false enable_stripping = true build_angle_perftests = false angle_enable_null = false Newtonsoft.Json Версия: 12.0.3 Источник: nuget Newtonsoft.Json Отрабатывает отрабатывает при чтении файлов сцены, при десериализации объектов. Список изменений: Newtonsoft.Json теперь устанавливается из nuget-а Версия обновлена с 6.0.0.0 до 12.0.3 FbxSdk Источник: https://gitlab.game-forest.com:8888/rshutov/FbxSdk Отрабатывает отрабатывает при импорте 3d моделей. Список изменений: Добавлена конфигурация для x64 FbxSdk.dll пересобран под x64 MFDecoder Источник: исходный код в Citrus\\3rdParty Написан на базе примеров в msdn: https://docs.microsoft.com/en-us/windows/win32/medfound/processing-media-data-with-the-source-reader Используется в VideoPlayer. Список изменений: Добавлена конфигурация для x64 MFDecoder.dll пересобран под x64 FreeType Версия: 2.10.4 Источник: наш форк https://gitlab.game-forest.com:8888/Common/3rdparty/freetype Исходный репозиторий: https://gitlab.freedesktop.org/freetype/freetype Отрабатывает во время запуска движка. Отвечает за растеризацию глифов. Список изменений: Версия для виндовс обновлена с 2.10.1 до 2.10.4 Версия для виндовс собрана как зависимость HarfBuzz Добален патч, который позволяет использовать FreeType через SharpFont в приложении с архитектурой x64 на виндовс. (Этот патч не оказывает влияния на остальные платформы. Патч описан в файле building_FreeType.md.) libfreetype-6.dll пересобран под x64 HarfBuzz Версия: 2.8.1 Источник: наш форк https://gitlab.game-forest.com:8888/Common/3rdparty/harfbuzz Исходный репозиторий: https://github.com/harfbuzz/harfbuzz Отрабатывает во время генерации шрифтов. Отвечает за межсимвольные интервалы. Список изменений: Версия для виндовс обновлена с 2.5.3 до 2.8.1 Обновлена версия FreeType. (Изначально при сборке HarfBuzz-а используется некоторый форк FreeType-а, но там старая версия FreeType-а. Оригиналый FreeType с версии 2.10.3 поддерживает систему сборки (Meson), которая используется в этом процессе. Теперь используется наш форк оригинального репозитория FreeType-а.) В версии для виндовс отключена поддержка cairo и fontconfig (cairo и fontconfig используются для тестирования HarfBuzz, но мы эти тесты не используем.) В нашем GitLab созданы форки для зависимостей HarfBuzz-а. (Эти форки будут использоваться для сборки HarfBuzz-а.) HarfBuzz (ветка для нужд движка: 2.8.1_citrus, ссылки на зависимости заменены на наши форки) FreeType (ветка для нужд движка: 2.10.4_citrus, ссылки на зависимости заменены на наши форки) Zlib (ветка для нужд движка: 1.2.11_citrus, ссылки на зависимости заменены на наши форки) Glib (ветка для нужд движка: 2.58.1_citrus) Libpng (ветка для нужд движка: master) Libffi (ветка для нужд движка: citrus) ProxyLibintl (ветка для нужд движка: citrus) Примечания: Последовательность действий для сборки HarfBuzz-а подробно описана в файле building_HarfBuzz.md."
  },
  "articles/citrus_project/windows_native_dependencies/windows_dependency_list.html": {
    "href": "articles/citrus_project/windows_native_dependencies/windows_dependency_list.html",
    "title": "Dependency list | Citrus Engine",
    "keywords": "Dependency list Windows Library Source Version SharpVulkan Source code at Citrus\\3rdParty / https://github.com/jwollen/SharpVulkan ??? ShaderCompilerBinding.Win Source code at Citrus\\3rdParty ??? ShaderCompiler Source code at Citrus\\3rdParty ??? OpenAL (openal.org)[http://openal.org/downloads/] (6.14.357.24)? by file size wrap_oal.dll Same as above 2.2.0.5 Newtonsoft.Json Nuget / https://github.com/JamesNK/Newtonsoft.Json/tree/8.0.3 ? 8.0.3 MFDecoder Source code at Citrus\\3rdParty, written by Citrus team based on MSDN example ??? LZMA Source code at Citrus\\3rdParty https://sourceforge.net/projects/sevenzip/ ??? HarfBuzz By file size https://github.com/harfbuzz/harfbuzz/releases/tag/2.5.3 ? (2.5.3)? by file size FreeType https://gitlab.freedesktop.org/freetype/freetype/-/tree/VER-2-10-1 FreeType 2.10.1 FbxSdk https://gitlab.game-forest.com:8888/rshutov/FbxSdk ??? OpenTK https://github.com/opentk/opentk/tree/1.1-2 1.1.2 glslang https://github.com/KhronosGroup/glslang SPIRV-Tools https://github.com/KhronosGroup/SPIRV-Tools spirv-headers https://github.com/KhronosGroup/SPIRV-Headers.git SPIRV-Cross https://github.com/KhronosGroup/SPIRV-Cross Theora Part of Lemon https://www.theora.org/ Vorbis and Tremor Part of Lemon https://xiph.org/vorbis/ yuv2rgb Part of Lemon http://wss.co.uk/pinknoise/yuv2rgb/ OpenTK may have multiple dependencies of it's own: https://github.com/opentk/opentk/tree/1.1-2/ https://github.com/opentk/opentk/tree/1.1-2/Dependencies/license All platforms, not necessarily native Yuzu is using some code from Grisu https://github.com/kring/grisu.net Lime includes adapted code from NvgSharp https://github.com/rds1983/NvgSharp Orange uses modified version of PolyNester from https://github.com/touzov1012/poly-nest and Clipper from https://sourceforge.net/projects/polyclipping/files/"
  },
  "articles/internal/extensions.html": {
    "href": "articles/internal/extensions.html",
    "title": "How to write your own extension? | Citrus Engine",
    "keywords": "How to write your own extension?"
  },
  "articles/internal/operations.ru.html": {
    "href": "articles/internal/operations.ru.html",
    "title": "Пользователи меняют состояние документа, а потом хотят отменить свои действия | Citrus Engine",
    "keywords": "Пользователи меняют состояние документа, а потом хотят отменить свои действия Функциональность, которая решает эту проблему называется обычно Undo/Redo. В танжерине у нас есть всё чтобы это обеспечить. Заводим инстанс OperationHistory и отдаём ему инстанс OperationProcessors в который уже добавлены или можно добавлять потом реализации IOperationProcessor. Реализуем IOperation -- это у нас будут операции, они только хранят данные. Код, который применяет или отменяет операцию надо писать в реализации IOperationProcessor. И теперь когда хотим что-то сделать, делаем так: using (operationHistory.BeginTransaction()) { // ... someOperation.Perform(someData); } Вкратце -- это всё. Дальше подробности. Операции Операциями называем реализации IOperation. Но для удобства есть класс Operation в котором уже есть общие удобные методы для большинства операций. Операции хранят данные, кода который применяет операцию в самих операциях нет. Этот код лежит в их процессорах. Операции бывают примитивные и производные. Примитивные Примитивные -- это которые реализуют IOperation. Это те операции, которые работают непосредственно с изменяемой моделью данных и НЕ используют никакие другие примитивные операции. Т.е. только работа с моделью данных. У примтивных операций мы по соглашению, а не по интерфейсу реализуем какой-то метод, который должен отдать новый инстанс этой операции в текущий инстанс OperationHistory без активации транзации. По соглашению этот метод мы называем public static void Perform(<args...>) public class AwesomeOperation { // ... public static void Perform(<args...>) { OperationHistory.Current.Perform(new AwesomeOperation(<args...>); } //... } Если транзакция в момент этого вызова не активна, то так нельзя -- всё упадёт. Транзакция уже должна быть открыта при вызове. Среди примитивных операций мы выделяем натуральные, вот они: DelegateOperation SetProperty SetIndexedProperty InsertIntoList RemoveFromList InsertIntoList<TList, TElement> RemoveFromList<TList, TElement> AddIntoCollection<TCollection, TElement> RemoveFromCollection<TCollection, TElement> RemoveFromDictionary<TDictionary, TKey, TValue> InsertIntoDictionary<TDictionary, TKey, TValue> Это самые базовые операции, которые ничего не знают про лайм или танжерин и работают со стандартными типами дот нета. Их список в Tangerine.Core.OperationProvider.NaturalOperationProcessorTypes. In English that would be called \"Natural Operations\", \"Primitive Operations\" and \"Derivative Operations\". Производные Производные же операции -- это просто какие-то классы, у которых есть какой-то статический метод, который мы вызываем и они уже вызывают множественные другие примтивные или производные операции, обязательно внутри транзакции, которую они должны открыть сами. Обычно этот метод как и у примтивных называется public static void Perform. Важно что производные операции должны сами открывать транзакцию для всего что вызывают. Это значит, что производные операции должны знать про инстанс OperationHistory у которого они будут открывать транзакцию. Это может быть глобальтная переменная, сервис или просто передавать его им в Perform. Вообще был соблазн назвать производные операции составными -- Compound operations. Но у нас так повелось, что к абстракциям, которые имеют в имени Compound обычно их интерфейс позволяет как-то оперировать с тем, из чего они состоят, тут же такого нет -- пользователь может только \"применить операцию\" Operation Processor Вот операции хранят данные, а процессоры -- это непосредственно то, что выполняет работу по модификации модели, используя данные в операции. Процессор операций это класс, который реализует IOperationProcessor. Для удобства есть abstract class OperationProcessor<TOperation> или abstract class SymmetricOperationProcessor. Лучше наследоваться от них, если только процессор не \"косметический\". Обычно процессоры операций пишутся прямо внутри операции как вложенный класс. OperationHistory OperationHistory -- центральное место через которое осуществляется работа с операциями. Когда создаёшь OperationHistory -- туда надо передать все поддерживаемые им процессоры операций. Одну операцию может обрабатывать несколько различных процессоров. Например если хочется как-то косметически отреагировать на происхождение операций. В некотором смысле вся эта абстракция -- это такая реализация publish subscribe. Перформ операции -- это рейз ивента с его данными. А процессоры -- это хэндлеры этого ивента. При чём каждый процессор хэндлит как \"накатывание\" операции, так и её \"откатывание\". Надо написать как происходит выборка какой процессор к какой операции и что можно добавляя интерфейсы на операцию хэндлить специфические операции отдельно. У OperationHistory есть свойство Current -- оно всегда указывает на текущую OperationHistory в рамках текущей транзакции. Не является потокобезопасным -- одно на все потоки. Если так выйдет, что мы внутри одной транзакции, вызываем другую и при этом эти транзакции вызывются у разных инстансов OperationsHistory и поведение не определено. Не делайте так (пока что). Если транзакция не активна, то это свойство будет null. Но вообще если вместо зануления после выхода из транзакции возвращать то что \"было\", то может этого будет достаточно. Все операции должны быть вызваны внутри транзакции. Чтобы это сделать достаточно просто using (operationHistory.BeginTransaction()) { // ... someOperation.Perform(someData); } Внутри транзакции можно в любой момент вызвать operationHistory.CommitTransaction(); чтобы \"закоммитить\" текущие изменения. Но в конце транзакции изменения всегда коммитятся. Надо дописать что это значит и выяснить зачем в реализации многих операций вызывается коммит руками, если в конце транзакции коммит вызывается автоматически. Ещё казалось бы можно делать так operationHistory.BeginTransaction(); // ... someOperation.Perform(someData); operationHistory.EndTransaction() Но так делать не стоит, потому что если код транзации бросит исключение, то окончание транзации вызвано не будет, поэтому используйте using. Вообще если нет нужды, то я бы эти методы скрыл и сделал один метод NewTransaction который делает то же что и бегин, но только его всегда надо юзать через using Хотя на такой случай у нас есть public void DoTransaction(Action block) Который выполняет ваш код внутри транзакции. Если внутри такой транзакции будет брошено исключение, то вызовется ExceptionHandler. Это ивент, на который можно подписаться у OperationHistory. В него передаётся исключение. Если хэндлер ивента возвращает тру то, а если нет то. Но пооду в любом случае исключение проглатывается ололо? Если вы используете историю документа, то ExceptionHandler назначается документом и отхватывает только установку кейфрейма вне скоупа текущей анимации. Все остальные прглатываются? Ещё есть CommitTransaction про него надо сюда написать. И есть RollbackTransaction про него надо сюда написать. также есть методы Undo() Redo() с ними всё ясно. и есть ExternalModification про него надо сюда написать. OperationProcessors Это тот класс, инстанс которого надо создать и наполнить типами всех процессоров, которые мы хотим чтобы поддерживались нашей историей операций. Порядок имеет значение. Куда всё класть В каждом из проектов танжерина операции надо класть в отдельный файл на каждую операцию, в папочку Operations внутри проекта. Если есть отдельные от операций процессоры, то их надо класть в папочку Processors внутри папочки Operations. Все вообще операции должны попадать в неймспейс Tangerine.Operations, отдельные процессоры соответственно в Tangerine.Processors"
  },
  "articles/internal/tangerine_scene_tree.html": {
    "href": "articles/internal/tangerine_scene_tree.html",
    "title": "Tangerine scene tree | Citrus Engine",
    "keywords": "Tangerine scene tree What is a scene tree and why do we need one? A scene tree is an object tree of class SceneItem, which is a hierarchy parallel to the node tree. But unlike the node hierarchy, it takes into account the placement of nodes within folders, the hierarchical organization of bones, etc. This significantly simplifies visualization of the scene structure, as well as its editing, hiding the whole mechanism of index recalculation for folders and bones behind the scene tree API. Visually, the scene tree can be seen as a timeline element, on the animations panel and on the scene hierarchy panel. The reference to the root of the tree is in the document: Document.Current.SceneTree. The node of the tree is an object of the SceneItem class (currently Row, will be renamed to SceneItem in the future). How to modify the scene tree In order to properly add nodes, folders, animations, etc., you must use the LinkSceneItem.Perform() method. You can never add nodes directly to a NodeList collection. This is because within itself a node has an additional folder hierarchy that is not directly created to the NodeList. And if you add a node to the NodeList using AddIntoCollection.Perform() the folder structure will be broken. To build a scene tree for a new node (just created or cloned) execute the following code: var sceneItem = Document.Current.SceneTreeBuilder.BuildForNode(node); Then you can add it to the document's scene tree like this: LinkSceneItem.Perform(Document.Current.SceneItem, 0, sceneItem); But as said in the previous paragraph, there is an overload LinkSceneItem.Perform() which takes a Node and internally calls BuildForNode(). To translate a node, animation, property into an existing SceneItem you need to use the Document.Current.GetSceneItemForObject() method. Bones are also added to nodes and parent bones using LinkSceneItem.Perform(). If the parent SceneItem is also a bone, the index passed to this method is the index of the binding of the bone to the parent bone. If the current SceneItem refers to a node, its children (the SceneItem.Items collection) are arranged in the following order: animations, animated properties, child nodes. Accordingly, if the parent node has 1 animation and 2 animated properties, then calling LinkSceneItem.Perform(parentNodeItem, 0, childNodeItem); will insert the childNodeItem not at the zero position, but at the third position in the parentNodeItem.Items list."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Citrus Engine | Citrus Engine",
    "keywords": "Citrus Engine Major engine components are named after Citrus fruits. In the repository you'll see various directories. Following is what they are about: Tangerine -- asset editor Orange -- game asset cooker; projects builder and runner Lime -- core library Examples -- example projects also used as templates for new projects Yuzu -- serialization library Kumquat -- scenes code generator Lemon -- bindings for native libraries How to run To run Tangerine and Orange you'll need .NET8 SDK installed. When it's installed use ./Orange.bat and ./Tangerine.bat to run Orange or Tangerine. Creating new project To create a new project use File->New Project in Tangerine. More information about working with Citrus projects you can read here."
  },
  "articles/old/Android.html": {
    "href": "articles/old/Android.html",
    "title": "ПРИКРЕПЛЕНИЕ РЕСУРСОВ К ПРИЛОЖЕНИЮ | Citrus Engine",
    "keywords": "ПРИКРЕПЛЕНИЕ РЕСУРСОВ К ПРИЛОЖЕНИЮ В Xamarin.Android ресурсы приложения могут быть представлены 3 способами: AndroidAssets, AndroidResources и EmbeddedResources. Первые 2 способа нативны для платформы андроид, третий способ -- универсальный для любых .NET приложений. Отличие AndroidAssets от AndroidResources в том, что первый способ предполагает хранение сырых ресурсов, в то время как в AndroidResources могут включаться файлы только определенных типов и для них препроцессор генерит код для быстрого доступа. Оба этих способа нам не подходят так-как Data.Android нельзя положить в AndroidResources (препроцессор не знает что это), а если положить этот файл в AndroidAssets, то Xamarin.Android предоставляет только потоковый доступ к файлу (нельзя читать его с произвольной позиции). Ресурсы мы будем прикреплять методом EmbeddedResources. Однако, если положить Data.Android в главную сборку, то не работает оптимизация Fast assembly deployment (главная сборка игры будет включать XXX мегабайтный файл ресурсов и заливаться на устройство каждый раз при запуске приложения). Поэтому рекомендуется создать одельную сборку для ресурсов (скажем: Assets.Anroid) и в нее положить Data.Android. В результате ресурсы будут копироваться на устройство только после их пересборки. Резюме: Ресурсы нужно хранить в отдельной сборке (Assets.Android) методом EmbeddedResources. ПОДДЕРЖКА СЖАТЫХ ТЕКСТУР Как хорошо известно, Андроид поддерживает зоопарк стандартов сжатых текстур. Чтобы не создавать отдельный дистрибутив под каждый формат, Цитрус использует единственный поддерживаемый всеми формат - ETC1. К сожалению данный формат не поддерживает альфа-канал. Для решения этой проблемы существует несколько способов, описанных в статье: http://malideveloper.arm.com/develop-for-mali/sample-code/etcv1-texture-compression-and-alpha-channels/ В цитрусе мы реализуем способ №2 - для каждой текстуры с альфа каналом создается отдельная текстура с маской. КАК ИСПОЛЬЗОВАТЬ НАТИВНЫЕ БИБЛИОТЕКИ Руководство здесь: developer.xamarin.com/guides/android/advanced_topics/using_native_libraries/ Но вот кое-что авторы не доработали: если какая-либо сборка содержит нативную библиотеку, то на эту сборку обязана ссылаться главная сборка приложения. В противном случае вы будете долго разбираться: почему же моя нативная библиотека не попала в .apk? В частности главная сборка игры ОБЯЗАНА иметь ссылку на Lemon.Android.dll Если нативная библиотека использует JNI, то для того чтобы она была проинициализирована нужно вызвать: Java.Lang.JavaSystem.LoadLibrary(\"library\"); КАК ПЕРЕСОБИРАТЬ OPENAL OpenAL для андроида скачивается с http://repo.or.cz/w/openal-soft/android.git Чтобы OpenTK не падал нужно пропатчить модуль ALc.с. При возвращении из alcGetString() нужно делать поверку на NULL: return (value == NULL) ? \"\" : value; КАК ПОСТАВИТЬ ADB-ДРАЙВЕР ДЛЯ KINDLE FIRE PHONE Дравера качаются отсюда, а не из Android SDK Manager: https://s3.amazonaws.com/android-sdk-manager/redist/Fire_Phone.zip КАК ЗАЛЕПИТЬ ПРОБЛЕМУ \"JARTOXML ... Unsupported major.minor version 51.0\" Нужно установить Jdk1.7 http://download.oracle.com/otn-pub/java/jdk/7u71-b14/jdk-7u71-windows-i586.exe Затем в Program Files(x86)/Java, переименовать jdk.1.6.0_39 во что-то непотребное"
  },
  "articles/old/HowToMakeStandaloneBuildOnWin32.html": {
    "href": "articles/old/HowToMakeStandaloneBuildOnWin32.html",
    "title": "| Citrus Engine",
    "keywords": "Установить Cygwin с пакетом pkg-config и всеми пакетами mingw В папку [Your_Game].Win/bin/Release скопировать файл MakeBundleWin32.sh В файле MakeBundleWin32.sh отредактировать пути к Mono, имя игры и сборки Запустить в командной строке: bash MakeBundleWin32.sh"
  },
  "articles/old/Making XCode Project.html": {
    "href": "articles/old/Making XCode Project.html",
    "title": "| Citrus Engine",
    "keywords": "1.) Открыть файл *.citproj проекта и прописать в нём информацию, необходимую для сбора ресурсов XCode-проекта. Блок информации выглядит следующим образом (на примере проекта Game): XCodeProject: { DoSvnUpdate: false, DoSvnCommit: false, Resources: '*.dll *.exe *.png Game Data.iOS .monotouch-32 .monotouch-64', DataFolder: 'Game_XCode_Project_Data', Version: '6.55' } Следует обратить особое внимание на поля \"Resources\" и \"DataFolder\". В поле \"Resources\" указываются через пробел маски файлов и папок, которые на следующем шаге будут автоматически скопированы в папку проекта XCode. В примере, приведённом выше, маску \"Game\" нужно заменить на соответствующую названию проекта. Все остальные маски нужно оставить как есть, при необходимости можно добавить другие маски в целях копирования в XCode-проект других файлов. В поле \"DataFolder\" указывается каталог, в котором у нас будет создан XCode-проект. Этот каталог лучше создать в каталоге iOS-проекта игры. 2.) Запускаем Orange на Mac. Загружаем citproj-файл проекта в Citrus Project. Выбираем в Target platform режим iPhone/iPad. Внизу в выпадающем списке слева от кнопки \"Go\" выбираем пункт \"Update XCode Project\". Нажимаем кнопку \"Go\". Набираемся терпения и ждём. Убеждаемся по логу в консоли, что всё прошло нормально и все необходимые файлы успешно скопированы. В конце лога мы должны увидеть надпись \"Elapsed Time ...\" 3.) Открываем XCode. Заходим последовательно через меню в File --> New --> Project. Выбираем iOS -> Application -> Single View Application. В \"Product Name\" пишем название нашего проекта. Выбираем папку, куда будет сохранён наш XCode-проект. В качестве этой папки выбираем ранее созданную на первом шаге папку, находящуюся в папке iOS-проекта нашей игры. Нажимаем кнопку \"Create\". В дереве файлов созданного XCode-проекта удаляем всё лишнее, кроме файлов \"Info.plist\" и \"*.app\" (* - название проекта). Каталоги, в которых лежат эти (\"Info.plist\" и \"*.app\") файлы, соответственно тоже не удаляем. 4.) Теперь нам осталось добавить в наш XCode-проект файлы нашей игры, которые подготовил Orange на втором шаге. Но здесь есть один важный момент. Библиотеки *.dll для нашей игры положились в папки \".monotouch-32\" и \".monotouch-64\". А для Мака папки, имя которых начинается с точки, считаются скрытыми и более того, оболочка XCode не разрешит в дерева проекта создавать папки с использованием символа точки в имени. Поэтому, нужно во-первых, сделать, чтобы Mac в Finder'е показывал скрытые файлы и папки. Для этого нужно выполнить следующие команды в консоли: defaults write com.apple.finder AppleShowAllFiles -bool YES killall Finder Перезапускаем Finder, заходим в каталог XCode-проекта и убеждаемся, что папки \".monotouch-32\" и \".monotouch-64\" стали видны. Далее, убираем точку в имени с обеих папок. Теперь в дереве файлов проекта в XCode вверху на названии проекта делаем правый клик и выбираем \"Add files to...\". Открываем в появившемя окошке папку с проектом XCode, выбираем все файлы и папки \"monotouch-32\" и \"monotouch-64\" (без точек, т.к. мы их переименовали), скопированные Orange на втором шаге и добавляем их в проект. Теперь сохраняем проект, закрываем XCode, идём в папку проекта, ставим обратно точки вначале имён папок \"monotouch-32\" и \"monotouch-64\". А теперь эти точки нужно также поставить в файле проекта XCode. Поскольку оболочка XCode не позволяет использовать точки в именах папок, то делать это прийдётся вручную и с помощью хорошего текстового редактора (стандартный TextEdit не пойдёт, он нарушает кодировку; нужен, например, Sublime Text). Скачиваем и устанавливаем Sublime Text, открываем xcodeproj путём правого клика и выбора пункта \"Show Package Contents\". Открываем через Sublime Text файл \"project.pbxproj\", ищем при помощи поиска ссылки на папки \"monotouch-32\" и \"monotouch-64\", ставим там точки в начале их имени. Сохраняем файл, выходим. Снова открываем проект в XCode. Запускаем. Всё."
  },
  "articles/old/SmoothAssetsLoading.html": {
    "href": "articles/old/SmoothAssetsLoading.html",
    "title": "| Citrus Engine",
    "keywords": "Плавная подгрузка ресурсов в цитрусе. Цитрус не требует каких-либо специальных действий для подгрузки текстур, звуков и прочих ресурсов. Однако, если во время игры потребуется загрузить какую либо тяжеловесную анимацию, то игра может подвиснуть и испортить игроку удовольствие, а игра потерять в рейтинге. Нахождение мест подгрузки \"тяжелых\" ресурсов осложняется тем фактом, что на iOS игра подвисает в тех местах, где на PC все гладко. Для выявления таких мест есть супер-метод: запуск игры с параметром \"--Jerky\". Если запустить игру с этим параметром, то цитрус начинает симулировать задержки при подгрузке ресурсов, причем в лог попадает список файлов с указанием времени загрузки (время рассчитывается пропорционально размеру файла). Хорошо: проблемные ресурсы обнаружены, что дальше? Дальше есть два способа избавится от задержек: Синхронная загрузка во время черного экрана на старте уровня Асинхронная загрузка если во время игры происходит резкая смена сеттинга (режим мини-игры, упавший с небес бонус и т.д.) Синхронная загрузка реализуется следующим паттерном: Создаются все тяжелые сцены. Если определенная сцена потребуется для неоднократного создания игровых объектов, можно использовать паттерн \"прототип\": Например: Класс Ninja содержит сцену NinjaRoot и статический прототип NinjaProto. NinjaProto подгружается в начале игры, и далее, когда нужно с него делается быстрая копия (Node.DeepCloneFast()) и сохраняется в NinjaRoot. Для сцен делается кеширующая подгрузка графики методом Node.Preload(). Этот метод пробегается по всем детям и подгружает всю требуемую графику. Те текстуры, на которые нет прямых ссылок из сцен, подгружаются методом: TexturePool.Instance.PreloadAll(pathPrefix) TexturePool.Instance.Preload(assetPath) Асинхронная загрузка. Итак к нам упал с неба бонус, нужно срочно подгрузить 5 мегов текстур и звуков. Как сделать плавно? А все очень просто, нужно использовать те же методы что и выше, только загрузку делать в параллельном потоке (создание сцен и подгрузка графики в Цитрусе потокобезопасно). Вот пример: private IEnumerator SpawnNinjaTask() { yield return BackgroundOperation.Run(PreloadNinja); // Теперь можно нашего ниндзю показать в игре var ninja = ninjaProto.DeepCloneFast (); ... } static void PreloadNinja() { if (ninjaProto == null) { ninjaProto = new Frame(\"Game/Bonuses/Ninja\"); } ninjaProto.Preload(); } Ну, а вызывать SpawnNinjaTask нужно из нашего замечательного CoolWorkflow. Со сценами и текстурами все ясно, а что насчет звуков? А со звуками все просто. Цитрусовый звуковой движок теперь ВСЕГДА подгружает звуки асинхронно. Для пользователя задержка перед воспроизведением звука (если он не был еще закэширован) в четверть секунды незаметна, зато игра больше не лагает. Все методы для контроля звука (Volume, Pan, Pitch) работают как и раньше, но перед Pause/Resume нужно проверить что звук действительно был загружен (Sound.Loaded == true). Что еще есть в цитрусе, связанное с многопоточностью? static void Application.InvokeOnMainThread(Action action); Этот метод выполняет действие в главном потоке, между апдейтом и рендерингом кадра. Если мы сейчас в главном потоке, действие выполняется немедленно. Этот метод особенно полезен на iOS, т.к. многие iOS-апишные колбэки вызываются не из главного потока. Что почитать? Погуглите про: System.ComponentModel.BackgroundWorker -- класс-обертка для выполнения операций в параллельном потоке; System.Collections.Concurrent -- набор thread-safe коллекций, которые появились в .NET 4.0."
  },
  "articles/orange/intro.html": {
    "href": "articles/orange/intro.html",
    "title": "Orange | Citrus Engine",
    "keywords": "Orange"
  },
  "articles/profiling/overdraw.html": {
    "href": "articles/profiling/overdraw.html",
    "title": "Overdraw | Citrus Engine",
    "keywords": "Overdraw With Overdraw mode you can determine the number of fragment shader calls for each pixel on the screen. ⚠ If objects are rendered to an intermediate buffer, and then this buffer is drawn to the main framebuffer, the Overdraw metric will be equal to 1 for the whole intermediate buffer. You can observe this effect at least for post-processing. Getting started Tangerine The Overdraw mode is configured through the profiler pane. You can enable this mode with Profiler pane or you can use scene command Toggle Overdraw Mode. You can set custom overdraw colors with gradient editor on Profiler pane. Code Use property Overdraw.Enabled in namespace Lime.Profiler.Graphics to enable overdraw visualization mode. It's disabled by default. To find out whether the Overdraw mode is currently enabled, use the Overdraw.EnabledAtUpdateThread and Overdraw.EnabledAtRenderThread for update and render threads respectively. Use Gradient property in OverdrawInterpreter class in namespace Lime.Profiler.Graphics to configure colors. Project level overdraw support To enable overdraw support in the engine, define PROFILER symbol at following projects: Lime Tangerine.UI.Profiler (only if you want to use overdraw in the scene editor) Tangerine.UI.SceneView (only if you want to use overdraw in the scene editor) The easiest way to do it: For Tangerine Overdraw mode is enabled by default. So you don't have to do anything For game use Lime project configuration Release.Profiler or Debug.Profiler ⚠ The profiler code inside Lime is enclosed in define guard. This is done to exclude a negative impact on the size of the executable files of the game. So if you are writing code that depends on the profiler code, you must surround it with define guard and you must also set PROFILER symbol in the properties of these projects. // define guard #if PROFILER // place your code here #endif // PROFILER Overdraw foreground UI To draw the interface on top of the overdraw, you need to add OverdrawForegroundComponent to a Widget. If overdraw mode is disabled, OverdrawForegroundComponent has no effect on rendering. If overdraw mode is enabled, objects are drawn with their original materials after all objects in the scene. ⚠ Objects do not change their transform, hierarchy position location. Only rendering order is changed. That means clickability of the widgets is being preserved. ⚠ OverdrawForegroundComponent affects all child nodes. How it works Scene rendering in overdraw mode is divided into three phases: Rendering the scene to a render texture Interpret results with a given gradient Draw objects with OverdrawForegroundComponent In the first phase, we redirect the rendering of all objects to a render texture. replace object shaders and blending. Overdraw shaders are created by replacing the body of the main function of the original fragment shaders: // Original fragment shader void main() { // shader code ... gl_FragColor = // shader code ... // shader code ... } // Overdraw fragment shader void main() { gl_FragColor = vec4(1 / 256, 0, 0, 1); } The vertex shader never changes. Also, every draw call of scene objects will use additive blending. As a result, we will get a render texture filled with shades of red. In the second phase, we apply a gradient to this render texture to make the individual overdraw states more distinguishable. There can be 256 overdraw states in total. And next, we draw the results on top of the scene. In the final third phase, we draw object subtrees that have OverdrawForegroundComponent at their root. For this, objects are added to a separate RenderChain. Objects are also added to the original scene RenderChain, but in this chain they will not be rendered! This is done for the hit test to work. Overdraw metrics You can also get an average number of redraws for all game (scene) pixels for a frame. Nodes with OverdrawForegroundComponent will not affect this metric. Set Overdraw.MetricRequired to true and subscribe to Overdraw.MetricCreated event. ⚠ Overdraw.MetricCreated(float averageOverdraw, int pixelCount) will be invoked from render thread. ⚠ Obtaining the metric is a very expensive operation. The higher your screen resolution, the worse the performance."
  },
  "articles/profiling/synthetic_benchmark.html": {
    "href": "articles/profiling/synthetic_benchmark.html",
    "title": "| Citrus Engine",
    "keywords": "Синтетические бенчмарки Сitrus В движке есть встроенные инструменты для замеров производительности вне игровых проектов, так называемые синтетические бенчмарки. В инструментарий входят: Сцены для синтетических тестов с различными игровыми объектами (Image, TiledImage, SimpleText и так далее) Логгеры для различных метрик в Lime - GPU, CPU (Render, Update, Vsync) Cкрипты на языке Python для построения графиков Скрипты RemoteScripting для сбора метрик Сбор метрик Запуск сбора метрик осуществляется через скрипты RemoteScripting в редакторе Tangerine. Скрипты находятся в проекте Examples\\Tests Соответственно для мобильных платформ на устройствах должны быть соответствующие билды проекта Tests. Запуск скриптов для сбора метрик происходит также, как и обычный запуск скриптов (см. RemoteScripting) ВАЖНО! Для корректной работы скриптов необходимо открыть Inspector и заполнить поля, выбрав любой виджет на сцене. После того, как устройство было подключено к хосту, необходимо запустить скрипты в определенном порядке: Calculate device performance profile - выбор целевого количества кадров в секунду. Создается файл профиля, в котором указано, сколько копий каждой сцены необходимо, чтобы достичь выбранного результата. Профиль сохраняется по пути \\Examples\\Tests\\StorageForRemoteScripting\\ в формате json Run performance test - запуск бенчмарков. В качестве параметра необходимо указать сгенерированный ранее профиль. Из параметров - интервал замера производительности, интервал паузы между сценами и количество повтора интервалов. Результаты бенчмарка будут сохранены на подключенном устройстве. Download performance test results - скачивает результаты прогона бенчмарков в директорию \\Examples\\Tests\\StorageForRemoteScripting Remove performance test results - удаляет результаты прогона бенчмарков с устройства. Собранные метрики в бинарном формате хранятся по пути\\Examples\\Tests\\StorageForRemoteScripting и имеют структуру вида %дата_прогона%\\%бенчмарк%\\%сцена% Построение графиков Скрипты для построения графиков находятся по пути \\Examples\\Tests\\Charts Для запуска скриптов необходим Python3 (3.6). Все необходимые зависимости можно установить через pip -r requirements.txt Результаты для каждой сцены поделены на SingleAtlas и DifferentAtlases - оптимизированная и неоптимизированная версия текстурного атласа. Существует 2 вида графиков: гистограмма (draw_histogram.py) столбчатая диаграмма (draw_bars_for_all.py) Гистограмма Конфигурация: scene_a = '2022-09-02_13-17-47\\\\ImagesBenchmark\\\\SingleAtlas' scene_b = '2022-10-04_15-18-47\\\\ImagesBenchmark\\\\SingleAtlas' device_name = \"kek\" profile_name = \"Profile for kek 55 fps.json\" Столбчатая диаграмма: Конфигурация: device_name = \"msi\" profile_name = \"Profile for msi 55 fps.json\" launch_times = ( '2022-09-02_13-17-47', '2022-09-03_13-17-47', '2022-09-04_13-17-47', ) scene_names = ( \"DistortionMeshBenchmark/SingleAtlas\", \"DistortionMeshBenchmark/DifferentAtlases\", \"ImagesBenchmark/SingleAtlas\", \"ImagesBenchmark/DifferentAtlases\", \"NineGridBenchmark/SingleAtlas\", \"NineGridBenchmark/DifferentAtlases\", \"ParticleEmitterBenchmark/SingleAtlas\", \"ParticleEmitterBenchmark/DifferentAtlases\", \"SdfTextBenchmark/SingleAtlas\", \"SimpleTextBenchmark/SingleAtlas\", ) У столбчатой диаграммы есть 2 режима отображения: сравнения средних показателей по конкретной сцене (compare_mean_for_scene) сравнение средних показателей по конкретной метрике (compare_mean_for_metric) Для использование конкретного метода нужно раскомментировать нужную строчку в скрипте: compare_mean_for_metric(target_metric, filtered_scenes, reference_time_for_comparison) compare_mean_for_all_scenes(scenes, reference_time_for_comparison) Сохранение диаграммы Для сохранения диаграммы достаточно нажать выделенную кнопку и выбрать, куда сохранить."
  },
  "articles/specifications/coding_conventions.html": {
    "href": "articles/specifications/coding_conventions.html",
    "title": "Именования | Citrus Engine",
    "keywords": "Именования Всегда: Используй CamelCase в названиях разныхПеременных, МетодовКлассов и т.д. Всегда: Используй заглавные буквы согласно договорённости: Сущность Написание Namespace С большой буквы Type (class, struct) С большой буквы Method (private, public) С большой буквы Property (private, protected, public) С большой буквы Event (private, protected, public) С большой буквы Delegate (private, protected, public) С большой буквы Field (private, protected) С маленькой буквы Field (public) С большой буквы Enum value С большой буквы Parameter С маленькой буквы Variable С маленькой буквы Constant (private, protected, public, in-code) С большой буквы Предпочтительно: Используй для bool такие названия, чтобы название представляло собой вопрос. Например: IsWidgetHidden, AreTasksComplete, CanPlayerExit. Нежелательно: Использовать Венгерскую нотацию или любой другой способ определения типа в идентификаторах. // Неправильно: int iCounter; string strName; // Правильно: int counter; string name; Никогда: Никогда не используй Screaming Caps // Неправильно: public static const string SHIPPINGTYPE = \"DropShip\"; // Правильно: public static const string ShippingType = \"DropShip\"; Нежелательно: Использовать сокращения, кроме общепринятых аббревиатур. Всегда: Капитализируй аббревиатуры так же, как и обычные слова в названиях. Исключение: аббревиатуры, состоящие из 2 букв // Правильные названия: public string Html; public object UI; private int id; Нежелательно: Использовать символ подчёркивания и другие неалфавитные символы // Неправильно: public DateTime client_Appointment; // Правильно: public DateTime clientAppointment; Никогда: Никогда не используй символ подчёркивания в начале имени // Неправильно: private DateTime _registrationDate; // Правильно: private DateTime registrationDate; Всегда: Начинай название интерфейса с буквы I // Правильно: public interface IShape { } Предпочтительно: Использовать названия файлов, соответствующие названию главного класса в них. Всегда: Синхронизируй структуру файлов и структуру неймспесов // ProjectFolder/Main.cs: namespace Project { class Main { ... } } // ProjectFolder/Module/ClassA.cs: namespace Project.Module { class ClassA { ... } } // ProjectFolder/Module/Submodule/ClassB.cs: namespace Project.Module.Submodule { class ClassB { ... } } Всегда: Используй названия в единственном числе для enum и в множественном числе для Flags public enum Color { Red, Green, Blue, } [Flags] public enum Dockings { None = 0, Top = 1, Right = 2, Bottom = 4, Left = 8, } Никогда: Никогда не используй обрезанные слова в названиях // Неправильно GetWin // Правильно: GetWindow Всегда: Используй следующие стандартные имена аргументов: Унарный оператор - value Equals-подобный метод - other Бинарный оператор - lhs, rhs Метод с N параметрами одинакового типа: value1, value2, ..., valueN Всегда: Называй ивенты следующим образом: Заканчивай название на -ing, если ивент вызывается до или во время главного действия. Заканчивай название на -ed, если ивент вызывается после главного действия. (имеется в виду past participle т.е. третья форма для irregular verbs) Заканчивай название метода на _EventName, если он присваивается ивенту с названием EventName. Называй метод OnEventName, если он вызывает ивент с названием EventName. class A { public delegate void UpdateDelegate(); public event UpdateDelegate Updating; public event UpdateDelegate Updated; private void Update() { OnUpdating(); // ... OnUpdated(); } private void OnUpdating() { Updating(); } private void OnUpdated() { Updated(); } } class MyWidget { private void Method() { a.Updating += MyWidget_Updating; a.Updated += MyWidget_Updated; } } Всегда: называй переменные означающие количество чего-либо в стиле <something>Count, где <something> в единственном числе. Всегда: называй переменные индекса как index или <something>Index, если это не сокращённая форма (i, j, k, etc) Предпочитительно: формируй имена переменных и методов в стиле естественных языков: // Правильно: var shortName = \"Leo\"; var fullName = \"Leonardo\"; // Неправильно: var nameFull = \"Donatello\"; var nameShort = \"Don\"; Всегда: добавляй к методу префикс try если выполняются следующие пункты: обязательно: метод возвращает bool обязательно: если от метода ожидается возвращемое значение, то оно получается через out обязательно: метод не бросит исключений. желательно: есть такой же метод без try, в случае неудачи бросающий исключение. Оформление комментариев Всегда: Пиши комментарии на английском языке. Предпочтительно: Располагать комментарий на предыдущей строке, а не в конце строки комментируемого кода. Всегда: Начинай комментарий с заглавной буквы и заканчивай точкой. Всегда: Вставляй пробел между символами комментария // и текстом комментария // Правильно: // The following declaration creates a query. It does not run // the query. Никогда: Никогда не создавай форматированные блоки звёздочек вокруг комментариев // Неправильно: //**************************** //* Very important comment * //**************************** // Правильно: // Very important comment Предпочтительно: Указывать автора в тексте комментари // Правильно: // Linus Torvalds: this method was not implemented // because it would take too much time. Всегда: Оставляй комментарий, если вкручиваешь костыль или реализуешь какую-то неочевидную логику. Никогда: Никогда не используй комментарии в блоках /**/. Форматирование Всегда: Используй табуляцию вместо пробелов для отступов. Всегда: Используй пробелы вместо табуляции для выравнивания. Всегда: Используй вертикальное выравнивание скобочек вместо египетского выравнивания. Исключения: if циклы switch object and collection initializers lambda expressions Всегда: Вставляй пробелы между бинарными операторами и операндами. Всегда: Для однострочных лямбд, object and collection initializers отделяй внутреннюю часть от фигурных скобок одним пробелом. Всегда: Отделяй [] пробелом справа и не отделяй слева, в синтаксисе объявлений и инициализаций. // Правильно: int[] dogs = new int[] { 1, 2, 3 }; // Не правильно: int [] dogs = new int [] { 1, 2, 3 }; Предпочтительно: Использовать LINQ в виде цепочек методов, а не sql-подобные LINQ вызовы // Нежелательно: var names = from item in collection select item.Name; // Желательно: var names = collection .Select(item => item.Name); Всегда: Форматируй switch statement согласно следующим правилам: однострочные case допустимы, если тело case из одной строчки считая break вставляй отступ перед case если тело case обрамляется в фигурные скобки, то откывающая скобка должна быть расположена на одной строчке с case, а закрывающая на отдельной строчке, на уровне вложенности соответствующего case; break или return в таком случае должен оставаться внутри фигурных скобок Примеры правильного форматирования switch statement: public List<ChestBonusConfig> Config { get { switch (Kind) { case SlotKind.StarterPack: return The.Config.StarterPackContents; case SlotKind.ProductPack: return The.Config.GetProductPackConfig(Index); case SlotKind.CoinPack: case SlotKind.ButtonMore: return null; default: throw new ArgumentOutOfRangeException(); } } } private Widget GetBasicWidget() { switch (ParticlesLinkage) { case ParticlesLinkage.Parent: return ParentWidget; case ParticlesLinkage.Other: { var widget = ParentWidget; while (widget != null) { if (widget.Id == LinkageWidgetName) { return widget; } widget = widget.ParentWidget; } return null; } case ParticlesLinkage.Root: default: return (Parent != null) ? WidgetContext.Current.Root : null; } switch (type) { case SignatureType.BinaryUnordered: yd = new BinaryDeserializer { Options = defaultYuzuCommonOptions, BinaryOptions = new BinarySerializeOptions { Unordered = true }, }; break; case SignatureType.BinaryOrdered: yd = new BinaryDeserializer { Options = defaultYuzuCommonOptions, }; break; case SignatureType.Json: SkipBomIfPresent(ms); yd = new JsonDeserializer { JsonOptions = defaultYuzuJSONOptions, Options = defaultYuzuCommonOptions }; break; default: throw new System.Exception(\"Unexpected Case\"); } Всегда: Используй кодировку UTF-8. Расположение и структура кода Всегда: Пиши только одно выражение в строке // Неправильно: a = 5; b = \"kek\"; c = new Example(a, b); // Правильно: a = 5; b = \"kek\"; c = new Example(a, b); Всегда: Пиши только одно объявление в строке // Неправильно: int a, b; string c; char d; // Правильно: int a; int b; string c; char d; Нежелательно: Писать выражения на одной строке с if // Нежелательно: if (true) return; // Желательно: if (true){ return; } Предпочтительно: Оборачивать даже однострочные выражения в фигурные скобки // Нежелательно: if (true) return; // Желательно: if (true){ return; } Всегда: Добавляй одну пустую строку между объявлениями методов и свойств. Нежелательно: Писать строки длиннее 100 символов. Никогда: Никогда не пиши строк длиннее 120 символов. Всегда: Оставляй перенос на новую строку в конце файла. Всегда: Оставляй бинарный оператор на той же строке, что и первый операнд. // Неправильно: var a = someLongLongLongLongLongLongLongVariableName1 || someLongLongLongLongLongLongLongVariableName2; // Правильно: var a = someLongLongLongLongLongLongLongVariableName1 || someLongLongLongLongLongLongLongVariableName2; Всегда: Добавляй перенос строки между return и длинным выражением. // Неправильно: return someLongLongLongLongLongLongLongVariableName1 || someLongLongLongLongLongLongLongVariableName2; // Правильно: return someLongLongLongLongLongLongLongVariableName1 || someLongLongLongLongLongLongLongVariableName2; Всегда: Располагай длинные выражения отдельно от if и скобочек. // Неправильно: if (someLongLongLongLongLongLongLongVariableName1 || someLongLongLongLongLongLongLongVariableName2) { ... } // Правильно: if ( someLongLongLongLongLongLongLongVariableName1 || someLongLongLongLongLongLongLongVariableName2 ) { ... } Использование языка Всегда: Используй обобщённые названия типов вместо системных типов, таких как Int16, Single, UInt64 и т.д. // Неправильно: String firstName; Int32 lastIndex; Boolean isSaved; // Правильно: string firstName; int lastIndex; bool isSaved; Всегда: Используй var для всех типов кроме простых. Нежелательно: Использовать var для простых типов. Всегда: Явно указывай модификатор доступа private. Нежелательно: Использовать директиву #region. Предпочтительно: Использовать авто-свойства (Auto-Implemented Properties) вместо public полей. Всегда: дополняй окончания блочных директив препроцессора комментарием, дублирующим выражение в первой директиве данного блока в той же строке. // Например #if ANDROID && BFG_LIB Lime.Application.DiscardOpenGLObjects(); #endif // ANDROID && BFG_LIB Желательно: Указывать имя параметра в месте вызова, если параметр типа bool // Например void Func(bool flag) {} Func(flag: true); Документация Предпочтительно: Использовать следующие тэги: <param> <see> <summary> Никогда: Никогда не используй тэг <see> в комментарии более одного раза."
  },
  "articles/tangerine/animation/animation.html": {
    "href": "articles/tangerine/animation/animation.html",
    "title": "Animation Overview | Citrus Engine",
    "keywords": "Animation Overview Citrus provides very flexible and powerful animation system. In general it is frame-based interpolation of property values between keyframes. There are two main types of animations: Parallel All animations in Citrus are parallel by default. Animations are stored in nodes. You can see the list of available animations for current container from Animations Panel. Main features of parallel animations: multiple animations can be played simultaneously; you can combine multiple animations into one using Compound Animation; you can set blending between animations; you can animate the whole nodes subtree using a single animation. There are three types of parallel animations: Default -- just a simple animation; ZeroPose -- animation which sets \"zero-pose\". It is like T-Pose in 3D, but more general; Compound -- parallel animation composed of other animations with blending support. Legacy It is a simple parallel animation created for each node by default. Usable for very simple game / application prototypes. Warning Legacy animations are obsolete. Use parallel for new projects. Triggers Citrus features \"triggers\" mechanism to run animations and control their lifetime from the editor. Using triggers you can play, loop or stop animations at any frame specified with Marker. Timeline Timeline provides you an interface for animating, animations preview and nodes's manipulation. 3D Animations Citrus supports import of animations from the FBX format. To use it properly you should set a binding between exported animations and parallel animations which will be created."
  },
  "articles/tangerine/animation/animators.html": {
    "href": "articles/tangerine/animation/animators.html",
    "title": "What are animators and keyframes? | Citrus Engine",
    "keywords": "What are animators and keyframes? When you create a keyframe for a node, it adds to Animator of the property you are animating. Animators appears automatically once you add a new keyframe. Each animator stores a property and widget it affects while keyframe stores only the values, frame number and easing settings. In Tangerine you can edit your animation keyframes from the timeline panel."
  },
  "articles/tangerine/animation/easing.html": {
    "href": "articles/tangerine/animation/easing.html",
    "title": "Easing and Blending | Citrus Engine",
    "keywords": "Easing and Blending Using easing for blending and transitions you can develop smooth and nice-looking animations and achieve user-friendlier experience. Easing between frames Easing between markers Blending in AnimationBlender component Blending in Compound Animation"
  },
  "articles/tangerine/animation/legacy.html": {
    "href": "articles/tangerine/animation/legacy.html",
    "title": "Legacy Animations [obsolete] | Citrus Engine",
    "keywords": "Legacy Animations [obsolete] Warning Legacy animations are obsolete. Use parallel for new projects. Legacy animation system allows you to create animations on the single timeline. It is simpler and easier in some cases and can be used for very small projects or prototypes. The term \"animation\" in legacy system is a range of frames contained between \"Play\" and \"Jump\" or \"Stop\" markers."
  },
  "articles/tangerine/animation/parallel.html": {
    "href": "articles/tangerine/animation/parallel.html",
    "title": "Parallel Animations | Citrus Engine",
    "keywords": "Parallel Animations Default Animation Animations are containers for animators, their keyframes and markers. When you run animation it starts interpolating properties of widgets between values locked with keyframes. You can run multiple animations at the same time. Note If multiple animations animate the same property of one widget the end result is undefined. Use compound animations for that purpose. ZeroPose Animation Sometimes during animation process you can find that all your animations have the same initial frame / state. In Citrus we call it \"zero-pose\". The main purpose of such animation is to automate a creation and update process for the \"zero-pose\" keyframe on all your animations. You can have only one ZeroPose Animation per node. Once you add the ZeroPose animation it will generate keyframes on the first frame (frame 0) for all animators you change. Also it will propagate all the changes for these animators when you update ZeroPose animation. Note Changing the keyframe generated by ZeroPose from another animation disables propagation for its animator. Please keep it in mind. Compound Animation Compound Animation is a powerful tool which allows you to combine multiple \"Default\" animations into one. It turns Timeline into special mode where you can place your animations on tracks, split them on clips and set different playback options for each clip. Also you can set the blending between two different animations using «Shift» hotkey and by clicking on a left or right edge of the animation on track."
  },
  "articles/tangerine/animation/running.html": {
    "href": "articles/tangerine/animation/running.html",
    "title": "Animation playback | Citrus Engine",
    "keywords": "Animation playback Running animations in Tangerine Tangerine allows you to preview animations with preview playback feature. You can do this from the timeline panel or by pressing «F5» hotkey. Running animations with triggers Read more about triggers here. Running animations from code To run animation from the code use one of these two methods: Node.Animations.Run(); Node.Animations.TryRun()."
  },
  "articles/tangerine/animation/triggers.html": {
    "href": "articles/tangerine/animation/triggers.html",
    "title": "Markers and triggers | Citrus Engine",
    "keywords": "Markers and triggers This topic describes core features of Citrus animation system. Markers During animating process you may want to tag specific frames of your animation to play it from that position, to stop it or to make a looped animation. For that purpose Citrus provides you markers. You can set a marker at specific frame and choose its action type between: Play -- marker which indicates a start of the animation; Jump -- marker which allows you to jump to another frame of your animation using some marker; Stop -- marker which stops an animation when the animation reaches its frame. Animation stores a marker when you add a new one using Tangerine timeline. Triggers Triggers allow you to start running a nested animation or multiple animations of the currently animated node / container. Also using triggers you can control the animation which is already playing or stop it with Stop-marker. Trigger stores a list of marker and their animation names. Note One trigger can store only one marker per animation to keep the execution invariant. When you add a new trigger it sets a \"trigger\"-keyframe. It is executed once the playing animation reaches it. Important Triggers works only in preview mode in Tangerine and in game. Timeline does not execute triggers. This happens for performance reasons."
  },
  "articles/tangerine/changelog.html": {
    "href": "articles/tangerine/changelog.html",
    "title": "| Citrus Engine",
    "keywords": "Changelog 20.04.2009 - 25.04.2019 Ключи анимации альфа-канала в ParticleModifier были изменены на 0 30 60 CIT-1044 Добавлена возможность копировать компоненты CIT-1140 Добавлена возможность сбрасывать анимации на начальное положение при использовании Animation Mode CIT-1143 Переделан механизм загрузки .dll OrangePlugin CIT-1150 Теперь кости игнорируются при перетаскивании виджетов на таймлайне CIT-1157 Реализован интеллектуальный автоскролл в Orange CIT-1164 Отрефакторен AssetCoocker CIT-1165 Реализован сетевой кэш для сборки билдов в Orange CIT-1166 Реализован dual quaternion skinning для 3D моделей CIT-1170 При экспорте фрейма во внешнюю сцену его значения больше не экспортируются CIT-1180 Реализованы маркеры для локалей CIT-1192 Реализованы составные анимации (CompoundAnimations) Багфиксы: Исправлена проблема со \"съезжающими\" панелями в редакторе CIT-922 Исправлена проблема, при которой использоватся по-умолчанию первый словарь в списке CIT-1007 Исправлены неработающие ограничения для значений, введенных с помощью мыши CIT-1061 Исправлена ошибка, не позволяющая назначить DefaultLayout в Layouts CIT-1071 Исправлена проблема, когда при запуске нового проекта возникал черный экран CIT-1138 Исправлена ошибка, когда Frame Progression не отрисовывается поверх всех виджетов CIT-1167 Исправлена ошибка ObjectDisposedException \"Texture2D\" CIT-1174 Исправлена ошибка, при которой BounceZoneThickness в ScrollView ни на что не влиял CIT-1186 Changelog 19.03.2019 Реализован автоскролл в Orange CIT-1152 ContentsPath теперь проверяется на наличие внешней сцены CIT-1156 Widget.Input.RestrictScope заменены Widget.Enabled в Orange CIT-1160 Реворк реализации SDF-шрифтов (SDFCleanup) Багфиксы: Исправлена ошибка, при которой невозможно открыть файлы, в пути которых содержится больше одной точки CIT-1139 Changelog 1.03.2019 - 14.03.2019 Добавлена возможность настраивать плавность анимации через изинги (easings) Добавлена возможность очистить кэш, настройки и проч. прямо из редактора CIT-874 Убрана возможность сделать Undo после конвертации сцены CIT-1108 Реализован прогрессбар для Orange Launcher CIT-1144 Реализован кэш для файлов, сжатых алгоритмом DDS CIT-1146 Багфиксы: Исправлена ошибка, при которой не рендерились вложенные шрифты CIT-1120 Исправлена ошибка, при которой файлы со старшей датой изменения не перекукивались при сборке CIT-1127 Исправлена ошибка, при которой не обновлялись значения триггеров при выделении кейфрейма CIT-1130 Changelog 1.03.2019 Добавлена возможность сбрасывать значения свойств виджета кликом средней кнопки мыши CIT-846 Реализован кэш для файлов, сжатых алгоритмом ETC CIT-1122 Багфиксы: Исправлены проблемы с отображением меню CIT-736 Исправлен некорректный сброс значений пивота CIT-926 Исправлена ошибка, при которой бандл пересобирался при изменении регистра пути до файлов CIT-1109 Исправлена ошибка, при которой файлы, имеющие дату старше, чем в бандлах, не перекукивались CIT-1127 Changelog 26.02.2019 Добавлена возможность использовать Audio во Viewport3D CIT-1002 Добавлено отображение свойств в readonly CIT-1096 Переработана работа с кешом в режиме Animation Mode CIT-1121 Добавлена возможность обновить рабочий проект через Git напрямую через редактор CIT-1126 Багфиксы: Исправлена ошибка, при которой выбор SplinePoint3D блокировал ввод с клавиатуры CIT-754 Исправлено отображение кириллицы в окне вывода Orange CIT-916 Исправлено отображение иероглифов для различных языков в свойстве Text CIT-1015 Исправлена ошибка, приводящая к поломке сцен с Viewport3D при конвертации из .scene в .tan CIT-1082 Исправлена ошибка, приводящая к крашу при использовании унарных тегов CIT-1133 Changelog 22.02.2019 Багфиксы: Исправлена ошибка, не позволяющая скроллить вывод Orange CIT-220 Увеличена производительность при работе с Model3D CIT-974 Исправлена ошибка, не обновляющая значение триггеров при выборе фреймов CIT-1130 Changelog 20.02.2019 Переделан интерфейс работы с триггерами CIT-1062, CIT-1112 Багфиксы: Исправлена ошибка, когда из параллельной анимации вызывались неиспользуемые триггеры CIT-1118 Исправлена ошибка, при которой вызов \"Update XCode Project\" пересобирал все доступные бандлы CIT-1125 Changelog 15.02.2019 Реализована возможность объединять меши с одинаковыми материалами в Model3D CIT-1115 Багфиксы: Исправлена ошибка, приводящая к крашу редактору при использовании некоторых мешей в .fbx CIT-1123 Исправлены другие мелкие ошибки и проблемы в производительности. Changelog 13.02.2019 Возвращена возможность таскать ключи анимации без клика на фрейме CIT-1119 Багфиксы: Исправлены ошибки и недоработки, связанные с работой Hierarchy CIT-866, CIT-1008 Исправлены ошибки, связанные с LetterSpacing в RichText. Changelog 12.02.2019 Добавлена возможность рендерить анимацию в последовательность PNG-файлов CIT-1009 Доработан функционал Lock timeline cursor CIT-1110 Багфиксы: Исправлена ошибка, при которой настройки шейдеров/блендинга не наследовались в DistortionMesh CIT-1102 Changelog 11.02.2019 Lock widgets теперь блокирует виджет от редактирования CIT-1095 Добавлены аниматоры для NumericRange CIT-1114 Changelog 07.02.2019 Багфиксы: Исправлены проблемы, связанные с конвертацией .scene в .tan CIT-964, CIT-1080 Исправлена ошибка, приводящая к остановке анимации при использовании Animation Mode CIT-1048 Changelog 06.02.2019 Добавлен выбор анимации по-умолчанию для 3d-моделей в 3DAttachment CIT-1099 Багфиксы: Исправлен краш при открытии Model3D в сцене через панель Hierarchy CIT-1100 В root-сцене убрана возможность менять Position CIT-1092 Changelog 05.02.2019 При использовании TiledImage выдаётся предупреждение, если задействованная текстура не имеет wrap mode: repeat CIT-779 Реализована возможность конвертировать виджет во внешнюю сцену через контекстное меню в списке таймлайна CIT-1049 Добавлена возможность игнорировать подгружающиеся типы в dropdown list CIT-1078 Добавлена возможность уменьшать список виджетов таймлайна в ширину CIT-1094 Добавлена возможность фиксировать каретку на таймлайне CIT-1097 Багфиксы: Исправлена ошибка, сбрасывающая значения альфа-канала при использовании инструмента \"пипетка\" CIT-1001 Исправлена ошибка, при которой виртуальная клавиатура перестается отвечать на ввод CIT-1057 Исправлено неправильное отображение кнопки удаления анимаций CIT-1058 Исправлена некорректная работа LetterSpacing у TextStyle CIT-1063 Исправлен краш при выборе ImageUsage -> Overlay в TextStyle CIT-1076 Исправлены различные краши при использовании Gradient Component CIT-1083, CIT-1084 Цвета теперь корректно свапаются при перестановке точек местами в Gradient Component CIT-1085 Исправлен краш при выборе инструмента \"пипетка\" при отсутствии открытого проекта CIT-1088 Исправлена ошибка, позволяющая сбросить развёрнутое на весь экран окно до исходного размера CIT-1089 Исправлена ошибка, позволяющая отрисовывать несколько Animation Path одновременно при использовании параллельных анимаций CIT-1093 Changelog 04.02.2019 Реализовано визуальное отображение изменения виджета на определенном промежутке времени (Frame Progression) CIT-721 Changelog 22.01.2019 Багфиксы: Исправлена ошибка, приводящая к крашу при выборе списка из выпадающего списка листов CIT-1081 Changelog 11.01.2019 Багфиксы: Исправлена ошибка, позволяющая циклические зависимости между сценами CIT-835 Исправлена ошибка, делающая невозможным изменение цвета во множественном выделении CIT-1035 Исправлена ошибка, позволяющая заменить содержимое root-сцены CIT-1040 Исправлена ошибка, делающая невозможным обновление проекта XCode CIT-1055 Changelog 29.12.2018 При клике на надпись <many values> она автоматически убирается CIT-1021 Багфиксы: Исправлена ошибка, не позволяющая изменять значение Color у нескольких выбранных виджетов, если они имели различные значения данного параметра CIT-1022 Changelog 26.12.2018 Реализована возможность отображать предупреждения и ошибки прямо в панели Inspector CIT-1016 Багфиксы: Исправлена ошибка, позволяющая случайно зайти в контейнер при изменении значения в инспекторе CIT-783 Исправлена ошибка, приводящая к крашу, если введенное значение Color было больше 4 байт CIT-1034 Changelog 19.12.2018 Добавлен новый тип блендинга PremultipliedAlpha для корректной работы RenderTarget с прозрачностью CIT-971 Исправлена ошибка, приводящая к невозможности настроить видимость виджета после взаимодействия с Hierarchy CIT-973 Исправлена некорректная работа LetterSpacing в Text CIT-1014 Changelog 18.12.2018 Реализована возможность анимировать кастомные enum-поля CIT-995 Параметры Position, Size, и Rotation теперь по-умолчанию изменяются с шагом в 1 единицу CIT-582 Changelog 14.12.2018 Добавлена возможность свернуть список аниматоров виджета, выбрав один из аниматоров CIT-827 Реализована валидация текстовый полей окна Inspector CIT-932 Багфиксы: Исправлена ошибка, позволяющая переместить таймлайн кликом с зажатым Ctrl + Shift CIT-931 Исправлена ошибка при копировании аниматоров виджетов с расвёрнутым списком аниматоров CIT-933 Исправлена ошибка, ломающая сцену, если в ContentsPath Viewport3D вставить внешнюю сцену с отличным от Viewport3D root-сценой CIT-993 Changelog 12.12.2018 Исправлена ошибка, позволяющая удалять ключи анимаций глобально из всех анимаций CIT-996 Changelog 11.12.2018 Для кнопок в играх и редакторе теперь можно задавать доп. лимиты, где кнопка считается нажатой CIT-902 Реализована возможность использовать SDF-шрифты в RichText и SimpleText CIT-929 Багфиксы: Исправлена ошибка, приводящая к невозможности снять выделение с отдельного фрейма, используя Ctrl CIT-967 Changelog 07.12.2018 Исправлена ошибка, приводящая к нерабочим анимациям, если в Model3D Attachment название анимации выставлено в отличное от Default значение commit: a0d0a7cf79f490e8a2f3e5159634c5420d72aaa4 Changelog 06.12.2018 Исправлена ошибка, приводящая к необновляемым значениями в инспекторе CIT-973 Changelog 05.12.2018 Увеличена производительность редактора при работе со внешними сценами CIT-428 Внешние сцены больше не подгружаются, если не были изменены CIT-719 Добавлена возможность переназначать материал в Model3D Attachment CIT-912 Переделана вкладка \"Mesh Options\" в Model3D Attachment CIT-913 AlignmentPropertyEditor теперь используется для Alignment CIT-919 В объектах типa Bone (кости) теперь доступны параметры Index и BaseIndex (в readonly) CIT-975 Багфиксы: Исправлена ошибка, при которой открывался последний закрытый проект после перезапуска редактора CIT-839 Исправлена ошибка, приводящая к крашу при попытке дублирования (Ctrl + D) виджета ImageCombiner и свёрнутой папки (Folder) CIT-956 Исправлена ошибка, приводящая к неправильной работе Undo после удаления столбца CIT-968 Changelog 30.11.2018 Исправлено медленное удаление столбца на таймлайне (через Ctrl + W) CIT-739 Исправлено поведение Resize, если положение пивота виджета было отлично от значений по-умолчанию CIT-800 При множественном выделении теперь отображается <many values>, если значения у свойств виджетов было разное CIT-884 В исключения валидатора FilesystemPropertyEditor добавлен символ \"-\" CIT-910 При смене виджета, если скролл оказался в недоступной зоне, он откатывается на последнюю доступную позицию CIT-920 Исправлена ошибка, не позволяющая сохранять текущий тип интерполяции на таймлайне при работе с кейфреймами CIT-935 RowCount и ColumnCount в Table Layout больше не могут быть отрицательными значениями CIT-945 Исправлена проблема, приводящая к ошибки в обновлении дерева Hierarchy CIT-957 Changelog 26.11.2018 Исправлена ошибка, приводящая к крашу, если была использована модель .fbx c частотой кадров 30 fps CIT-947 Changelog 22.11.2018 Исправлена ошибка в SplineGear, приводящая к неверному просчету анимации при использовании AlongPathOrientation CIT-905 Исправлена ошибка, позволяющая обходить валидацию имени виджетов через переименование в списке Timeline CIT-906 Исправлен краш при установке ключа анимации хоткеем при развернутом списке аниматоров CIT-918 Исправлена ошибка, приводящая к применению всех доступных анимаций родительского виджета к дочерним, когда этого не требовалось CIT-925 Changelog 15.11.2018 Теперь позиция скролла в Inspector сохраняется при выборе однотипного виджета CIT-882 Реализован проброс параметра tag в TaskList.AddLoop CIT-904 Багфиксы: Исправлена ошибка, позволяющая создать виджет с отрицательными значениями параметра Size CIT-896 Исправлена ошибка, не позволяющая возвращать исходные значения параметра (после Undo), если они были изменены через Paste Keyframes CIT-903 Changelog 14.11.2018 Добавлена документация по редактору. Теперь узнать информацию по Tangerine можно, вызвав Help -> View Help Ctrl + F1 (на данный момент работает только на платформе Win) CIT-798 Багфиксы: Исправлена ошибка, создающая в дочерних виджетах лейаутов LayoutConstraints, если у виджета уже был добавлен кастомный компонент, наследуемый от класса LayoutConstraints CIT-752 Исправлена ошибка, приводящая к невозможности смены типа интерполяции у множественного выделения виджетов CIT-848 Исправлена регрессия, не позволяющая скроллить список виджетов таймлайна при перетаскивании виджетов CIT-881 Changelog (12.11.2018 - 13.11.2018) Разворачиваемые списки больше не сворачиваются при смене кадра CIT-764 Теперь по клику в любое доступное место можно снять фокус с текущего активного текстового/числового поля CIT-792 MFDecoder убран из движка в 3rdparty CIT-879 Changelog (01.11.2018 - 9.11.2018) Переработан интерфейс работы с Attachment3D. Теперь он вызывается как панель (View -> Panels -> Model3D Attachment) CIT-744 Добавлен выбор источника анимации при использовании Model3D. По-умолчанию теперь будут импортироваться все анимации из fbx модели (раньше импортировалась только одна). Следовательно, можно создавать разные анимации вместо размещения всех анимаций на одном таймлайне. В 3DAttachment можно явно указать, какую анимацию нужно перегрузить CIT-795 Багфиксы: Исправлена ошибка, позволяющая при анимировании поля Text создавать новые ключи анимации без Automatic Keyframes CIT-763 Исправлена ошибка, приводящая к крашу, если применить Fit to Container при выставленном ключе анимации Rotation CIT-786 Исправлена ошибка, приводящая к невозможности использовать стандартные операции (вставка/копирование/вырезание и т.п.) над аниматорами кастомных виджетов CIT-864 / CIT-887 Исправлена ошибка, приводившая к крашу при копировании виджета с анимированным Spacing в любом Layout CIT-886 Исправлена ошибка, приводивщая к пробрасыванию нажатия Enter в диалоге создания маркера CIT-891 Changelog (1.10.2018 - 1.11.2018) Ревамп внешнего вида редактора, изменен дизайн табов панелей и толщина сплиттеров между ними CIT-332 Была изменена логика работы с пивотами - теперь активный (выбранный) пивот всегда отображается поверх остальных, также добавлена цветовая индикация. CIT-810 Убрана задержка при драге виджетов (теперь она справедлива только для дублирования через Alt) CIT-819 Меню, которые невозможно использовать в данный момент, теперь остаются неактивными CIT-850 Начат переход к использованию параллельных анимаций. Подробная информация об этом и как это использовать будет позднее. Кратко: теперь есть возможность создавать несколько неймспейсов у корневых виджетов (контейнеров), в пределах этих неймспейсов будут свои ключи анимации и маркеры. Применятся они, соответственно, будут на дочерние контейнеру виджеты Исправлено множество ошибок и багов. В том числе устранена проблема с некорректной обработкой даблкликов и большинство проблем с инпутом Changelog (11.09.2018 - 1.10.2018) Теперь Orange Launcher регенерирует бинарные десериалайзеры Yuzu CIT-110 Добавлена обводка для маркеров на таймлайне CIT-713 Добавлена возможность работы с аниматорами на таймлайне CIT-720 Реализован ListPropertyEditor (редактор полей типа List ) CIT-750 Для текста теперь можно указать PathPropertyEditor CIT-765 Недостающие цвета в конфиге теперь берутся из текущей темы CIT-766 При запуске редактора неиспользуемые сцены не грузятся до их открытия CIT-790 Изменена индикация изменений на сцене CIT-796 Исправлено множество багов и недоработок Changelog (1.08.2018 - 11.09.2018) Добавлен пользовательский компонент Gradient CIT-102 Добавлен пользовательский компонент HSL CIT-650 Добавлен пользовательский компонент Layout - Stack, Table, Flow, Linear. layout branch report Добавлен фильтр элементов для Viewport (Visual Hints) CIT-246 Добавлена индикация связей костей/SplineGear с виджетами CIT-267, CIT-612 Добавлена возможность раскрывать список аниматоров хоткеем (Shift + Space) CIT-274 Добавлена возможность выставить/убрать ключи анимации хоткеями (Position, Scale, Rotation - E/R/T) CIT-280, CIT-673 Добавлена возможность Copy/Paste в курсор мыши CIT-286 Добавлена возможность производить поиск по полю Text CIT-344 Добавлен общий заголовок для панелей CIT-349 Добавлена возможность конвертировать Frame в Button CIT-379 Переработана работа с цветовыми схемами в редакторе CIT-417 Добавлена поддержка арифметический операций в числовых полях CIT-431 Добавлена возможность смещать/масштабировать ключи анимации (Numeric Scale/Move Keys) CIT-450 Исправлено отображение мелких записей в интерфейсе CIT-466 Добавлена возможность центрировать экран на выбранном виджете/ноде (Center View) CIT-490 Превью виджетов по Tab теперь работает циклически CIT-495 Окна панелей теперь имеют класс ToolWindow CIT-496 Добавлен механизм проверки \"плохих\" путей файлов CIT-500 Переработана панель инструментов (теперь ее можно кастомизировать) CIT-501 Добавлена возможность быстрого масштабирования ключей анимации на таймлайне (растягиванием выделения) CIT-525 Переработана панель Filesystem с поддержкой адресной строки и навигации по клавишам (как в Windows Explorer) CIT-534 Добавлена возможность центрироваться на каретке по хоткею (Ctrl + Shift + C) CIT-539 Добавлено превью в Filesystem для .tan CIT-556 Ускорена работа с ключами анимации/маркерами на таймлайне CIT-557 Реализован новый виджет - TiledImage CIT-560 Добавлена возможность drag & drop для TiledImage CIT-625 Добавлена возможность выставить свой коэф. Zoom CIT-581 Добавлена возможность изменения рамок виджета без затрагивания его содержимого CIT-589 Реализован AlongPathOrientation для SplineGear CIT-607 Переработана панель Search - переименована в Hierarchy, реализовано в виде древовидной структуры CIT-619 Удалена возможность анимировать Root-cцену CIT-613 Добавлен режим Slowmotion (x0.10) для режима проигрывания анимации (F5) CIT-629 Реализован базовый функционал внутренней справки CIT-634 Переработан редактор текста для RichText/SimpleText CIT-641 Переработан внешний вид меню (добавлены иконки и сплиттеры) CIT-662 Unsample animation twice теперь работает только внутри контейнера CIT-663 Добавлена возможность выбрать все ключи анимации для текущей строки (Ctrl + Shift + A) и выбрать только ключи анимации выделением через Alt CIT-668 Выделение теперь сбрасывается по клику на выделенной области CIT-670 Изменен порядок интерполяций по-умолчанию (Linear → Spline → Steep → ClosedSpline) CIT-671 Добавлена возможность скрывать только выделенные виджеты на таймлайне (Shift + Show widgets) CIT-675 Реализована возможность добавить кастомные компоненты в Model3DAttachment CIT-697 Добавлена возможность изменять префикс во множественном выделении виджетов CIT-699 Реализована функция Timeshift для ParticleEmitter (аналогично HotStudio) CIT-708 Исправлено множество багов и недоработок Changelog (11.08.2018 - 1.10.2018) Теперь Orange Launcher регенерирует бинарные десериалайзеры Yuzu CIT-110 Добавлена обводка для маркеров на таймлайне CIT-713 Добавлена возможность работы с аниматорами на таймлайне CIT-720 Реализован ListPropertyEditor (редактор полей типа List ) CIT-750 Для текста теперь можно указать PathPropertyEditor CIT-765 Недостающие цвета в конфиге теперь берутся из текущей темы CIT-766 При запуске редактора неиспользуемые сцены не грузятся до их открытия CIT-790 Изменена индикация изменений на сцене CIT-796 Исправлено множество багов и недоработок"
  },
  "articles/tangerine/components/animation_blender.html": {
    "href": "articles/tangerine/components/animation_blender.html",
    "title": "Animation Blender | Citrus Engine",
    "keywords": "Animation Blender Animation Blender используется для плавного перехода анимаций между собой. Имеет следующие параметры: BlendDuration - продолжительность смешивания (в кадрах)"
  },
  "articles/tangerine/components/components.html": {
    "href": "articles/tangerine/components/components.html",
    "title": "Компоненты (Components) | Citrus Engine",
    "keywords": "Компоненты (Components) В редакторе есть возможность использовать дополнительные компоненты для виджетов. Они могут быть project specific, так и общими для всех проектов. Компоненты доступные по умолчанию: Система лэйаутов Animation Blender - смешение анимаций Post Processing Component - постэффекты HSL Component - Hue, Saturation, Lightness Gradient Component - градиент Добавить их можно в инспекторе, нажав на \"+\" в левом нижнем углу."
  },
  "articles/tangerine/components/gradient.html": {
    "href": "articles/tangerine/components/gradient.html",
    "title": "Gradient | Citrus Engine",
    "keywords": "Gradient Gradient используется для заливки виджетов градиентом. Имеет следующие параметры: Angle - угол наклона Blending - настройки блендинга (аналогично Widget) Gradient - настройка цвета градиента"
  },
  "articles/tangerine/components/hsl.html": {
    "href": "articles/tangerine/components/hsl.html",
    "title": "HSL | Citrus Engine",
    "keywords": "HSL HSL настраивает параметры тона, насыщенности и теплоты для определенного виджета (с текстурой). Имеет следующие параметры: Hue - настройка тона Saturation - настройка насыщенности Lightness - настройка теплоты"
  },
  "articles/tangerine/components/layouts.html": {
    "href": "articles/tangerine/components/layouts.html",
    "title": "Layouts | Citrus Engine",
    "keywords": "Layouts В редакторе есть возможность использовать несколько способов размещения виджетов (лэйаутов): Flow Layout - лэйаут, отображение элементов которой зависит от размера его элементов. Linear Layout - линейный лэйаут (отображение по вертикали/горизонтали). Stack Layout - лэйаут в виде списка, где элементы расположены слоями. Table Layout - лэйаут в виде таблицы. Также для лэйаутов используются следующие компоненты: Layout Cell - присваивается по-умолчанию каждому дочернему виджету, используемому в формировании лэйаута. Содержит в себе настройки особенности расположения виджета в ячейке. Layout Constraints - используется для задания минимальных/максимальных размеров виджета в ячейке. При применении любого компонента Layout на виджет, его дочерним виджетам всегда добавляется кастомный компонент Layout Constraints. Для всех Layout работают общие свойства: DefaultCell - настройки ячеек по-умолчанию. На данный момент там доступен один пункт - DefaultLayoutCell. IgnoreHidden - игнорировать настройки видимости дочерних виджетов. DefaultLayoutCell имеет следующие свойства: HorizontalAlignment - выравнивание по горизонтали. VerticalAlignment - выравнивание по вертикали. ColumnSpan - количество ячеек, объединенных по вертикали. RowSpan - количество ячеек, объединенных по горизонтали. Stretch - растягивание ячеек по горизонтали/вертикали Ignore - игнорировать все настройки Подробнее о каждом лэйауте: Flow Layout - лэйаут, в котором отображение виджетов зависит от размера: Для того, чтобы всё заработало, необходимо выставить MinSize в Layout Constraints, иначе никаких изменений не будет видно. Spacing - промежуток между ячейками. RowAligment - выравнивание строк. ColumnAligment - выравнивание столбцов. Direction - направление компоновки виджетов. Linear Layout - лэйаут, в котором виджеты выстраиваются в одну линию, по горизонтали/по вертикали: Spacing - промежуток между ячейками. Direction - направление компоновки виджетов. Stack Layout - лэйаут, в котором виджеты накладываются один на другой (наподобие слоёв): HorizontallySizeable - блокирует изменение размера внутри лэйаута по горизонтали. VerticallySizeable - блокирует изменение размера внутри лэйаута по вертикали. Table Layout - лэйаут, в котором виджеты выстраиваются в виде таблицы: RowCount - количество строк. ColumnCount - количество столбцов. ColumnSpacing - промежуток между столбцами. RowSpacing - промежуток между строками."
  },
  "articles/tangerine/components/shaders.html": {
    "href": "articles/tangerine/components/shaders.html",
    "title": "Shaders | Citrus Engine",
    "keywords": "Shaders"
  },
  "articles/tangerine/custom_components.html": {
    "href": "articles/tangerine/custom_components.html",
    "title": "Пользовательские компоненты (Components) | Citrus Engine",
    "keywords": "Пользовательские компоненты (Components) В редакторе есть возможность использовать пользовательские компоненты для виджетов. Они могут быть project specific, так и общими для всех проектов. Добавить их можно в инспекторе, нажав на \"+\" в левом нижнем углу."
  },
  "articles/tangerine/intro.html": {
    "href": "articles/tangerine/intro.html",
    "title": "Tangerine Overview | Citrus Engine",
    "keywords": "Tangerine Overview More topics to read: User Interface (UI) Preferences Custom Components"
  },
  "articles/tangerine/node/3d/camera_3d.html": {
    "href": "articles/tangerine/node/3d/camera_3d.html",
    "title": "Camera3D | Citrus Engine",
    "keywords": "Camera3D Camera3D - камера для использования в 3D-сценах Свойства Camera3D: Является Node3D FieldOfView - настройка поля зрения AspectRatio - соотношение сторон NearClipPlane - настройка видимости ближнего расстояния FarClipPlane - настройка видимости дальнего расстояния OrthographicSize - размер камеры в ортогональном режиме ProjectionMode - выбор типа проекции камеры (ортогональная или перспективная)"
  },
  "articles/tangerine/node/3d/model_3d.html": {
    "href": "articles/tangerine/node/3d/model_3d.html",
    "title": "Model3D | Citrus Engine",
    "keywords": "Model3D Model3D - контейнер для вставки 3D-моделей в сцены Свойства Model3D: Является Node3D"
  },
  "articles/tangerine/node/3d/node_3d.html": {
    "href": "articles/tangerine/node/3d/node_3d.html",
    "title": "Node3D | Citrus Engine",
    "keywords": "Node3D Node3D - базовая нода, используемая в Viewport3D. Все остальные объекты, которые работают в пределах этого контейнера, наследуются от Node3D. Свойства Node3D: Visible - вкл/выкл признака видимости Scale - коэф. масштабирования (по Х/Y/Z) Rotation - вращение Position - координаты в пространстве Color - цвет Opaque - прозрачность"
  },
  "articles/tangerine/node/3d/spline_3d/spline_3d.html": {
    "href": "articles/tangerine/node/3d/spline_3d/spline_3d.html",
    "title": "Spline3D | Citrus Engine",
    "keywords": "Spline3D Spline3D - инструмент для рисования сплайнов в 3д-сценах. Контейнер, который содержит в себе SplinePoint3D Свойства Spline3D: Является Node3D Closed - признак замкнутости сплайна"
  },
  "articles/tangerine/node/3d/spline_3d/spline_gear_3d.html": {
    "href": "articles/tangerine/node/3d/spline_3d/spline_gear_3d.html",
    "title": "SplineGear3D | Citrus Engine",
    "keywords": "SplineGear3D SplineGear3D - инструмент для связывания Node3D (виджета) и сплайна. Используется для анимирования движения вдоль сплайна. Свойства SplineGear3D: Является Node3D Node - Id ноды Spline - Id сплайна SplineOffset - смещение вдоль сплайна"
  },
  "articles/tangerine/node/3d/spline_3d/spline_point_3d.html": {
    "href": "articles/tangerine/node/3d/spline_3d/spline_point_3d.html",
    "title": "SplinePoint3D | Citrus Engine",
    "keywords": "SplinePoint3D SplinePoint3D - точки сплайна в 3d (Spline3D) Свойства SplinePoint3D: Свойства похожи на свойства SplinePoint, только в трёх измерениях Является Node3D Position - координаты точки TangentA - координаты касательной A TangentB - координаты касательной B Interpolation - выбор типа интерполяции (безье/линейная)"
  },
  "articles/tangerine/node/3d/viewport_3d.html": {
    "href": "articles/tangerine/node/3d/viewport_3d.html",
    "title": "Viewport3D | Citrus Engine",
    "keywords": "Viewport3D Viewport3D - вьюпорт для использования в трех измерениях (X/Y/Z). Является виджетом (т.е. использует его свойства) Свойства Viewport3D: Является Node3D Camera - выбор камеры по-умолчанию Frame - выбор фрейма, с которого начинается отображение"
  },
  "articles/tangerine/node/3d/widget_adapter_3d.html": {
    "href": "articles/tangerine/node/3d/widget_adapter_3d.html",
    "title": "WidgetAdapter3D | Citrus Engine",
    "keywords": "WidgetAdapter3D WidgetAdapter3D - используется для вставки 2D-виджетов с 3D-сцены Свойства WidgetAdapter3D: Является Node3D"
  },
  "articles/tangerine/node/audio.html": {
    "href": "articles/tangerine/node/audio.html",
    "title": "Audio | Citrus Engine",
    "keywords": "Audio Audio (аудиофайл) - используется для вставки звуков и музыки на сценах. Свойства Audio: Sample - путь до используемого семплa (обычно это *.ogg) Looping - вкл/выкл цикличность FadeTime - время затухания семпла Volume - громкость Pan - смещение звука относительно каналов (L/R) Pitch - регулировка тональности Action - проигрывать ли звук, либо остановить проигрывание (используется при анимации) Group - к какой группе (Effects/Music/Voice) относить данный аудиофайл Priority - выставить аудиофайлу приоритет Continuous - проигрывать ли звук до конца, даже если исходная сцена была закрыта"
  },
  "articles/tangerine/node/bone.html": {
    "href": "articles/tangerine/node/bone.html",
    "title": "Bones | Citrus Engine",
    "keywords": "Bones Bone (кости) используются для скелетной анимации. К костям могут быть привязаны виджеты (Ctrl + T) и другие кости. Свойства Bone: Position - положение кости на сцене Rotation - вращение костей относительно начальной точки Length - длина кости IKStopper - стоппер для инверсной кинематики (вкл/выкл) Index - индекс кости BaseIndex - базовый индекс кости EffectiveRadius - радиус, в пределах которого, все точки будут иметь максимальный вес FadeoutZone - радиус, в пределах которого, вес точек (кости) будет уменьшаться от центра RefPosition/RefRotation/RefLength - выставляется при кукинге, в редакторе не используется"
  },
  "articles/tangerine/node/button.html": {
    "href": "articles/tangerine/node/button.html",
    "title": "Button | Citrus Engine",
    "keywords": "Button Button (кнопка) работает аналогично Frame (является контейнером), за исключением того, что она может быть кликабельна. Свойства Button: Является виджетом Text - текстовая подпись к кнопке Enabled - вкл/выкл кнопку"
  },
  "articles/tangerine/node/frame.html": {
    "href": "articles/tangerine/node/frame.html",
    "title": "Frame | Citrus Engine",
    "keywords": "Frame Frame (группа) - используется как контейнер для других виджетов. Свойства Frame: Является виджетом ClipChildren - как поступать с контентом за пределами фрейма (обрезать/игнорировать) Допустимые значения: - None doesn't clip children - ScissorTest clips by frame rectangle, doesn't support rotation but faster - StensilTest clips by frame rectangle, supports rotation but slower - NoRender skips children rendering. RenderTarget - рендерит фрейм в текстуру, согласно выбранному размеру. Затем эту текстуру можно использовать в полях Texture"
  },
  "articles/tangerine/node/image/distortion_mesh.html": {
    "href": "articles/tangerine/node/image/distortion_mesh.html",
    "title": "DistortionMesh | Citrus Engine",
    "keywords": "DistortionMesh DistortionMesh - используется для создания объекта \"DistortionMesh\". Представляет собой контейнер, наполненный точками (DistortionMeshPoints) Свойства DistortionMesh: Является виджетом NumCols - количество колонок NumRows - количество строк Texture - путь до используемой текстуры Свойства DistortionMeshPoint: Color - цвет точки UV - настройка UV-преобразования развертки текстуры (можно менять драгом через Ctrl) Offset - настройка смещения"
  },
  "articles/tangerine/node/image/image.html": {
    "href": "articles/tangerine/node/image/image.html",
    "title": "Image | Citrus Engine",
    "keywords": "Image Image (изображение) - виджет для вставки изображения в сцену. Свойства Image: Является виджетом Texture - путь до отображаемой текстуры UV0/UV1 - настройка UV-преобразования развертки текстуры"
  },
  "articles/tangerine/node/image/nine_grid.html": {
    "href": "articles/tangerine/node/image/nine_grid.html",
    "title": "NineGrid | Citrus Engine",
    "keywords": "NineGrid NineGrid - используется для создания \"9-slicing sprites\" Свойства NineGrid: Является виджетом Texture - путь до используемой текстуры LeftOffset - смещение границы грида слева RightOffset - смещение границы грида справа TopOffset - смещение границы грида сверху BottomOffset - смещение границы грида снизу"
  },
  "articles/tangerine/node/image/tiled_image.html": {
    "href": "articles/tangerine/node/image/tiled_image.html",
    "title": "TiledImage | Citrus Engine",
    "keywords": "TiledImage TiledImage - используется для \"плиточных\" текстур Свойства TiledImage: Является виджетом Texture - путь до используемой текстуры TileRatio - количество строк/столбцов для создания тайлов TileOffset - смещение тайлов TileRounding - использовать только \"целые\" тайлы"
  },
  "articles/tangerine/node/image_combiner.html": {
    "href": "articles/tangerine/node/image_combiner.html",
    "title": "ImageCombiner | Citrus Engine",
    "keywords": "ImageCombiner ImageCombiner - используется для наложения маски на изображение (первое изображение является маской) Свойства ImageCombiner: Является виджетом Enabled - вкл/выкл комбайнер Blending - настройка смешивания Shader - настройка шейдера"
  },
  "articles/tangerine/node/movie.html": {
    "href": "articles/tangerine/node/movie.html",
    "title": "Movie | Citrus Engine",
    "keywords": "Movie Movie (видеофайл) используется для вставки видео в сцены Свойства Movie: Является виджетом Path - путь до используемого видеофайла (обычно это *.ogv) Looping - вкл/выкл цикличность FadeTime - время затухания семпла Action - проигрывать ли видео, поставить на паузу или остановить (используется при анимации)"
  },
  "articles/tangerine/node/particles/emitter_shape_point.html": {
    "href": "articles/tangerine/node/particles/emitter_shape_point.html",
    "title": "ParticleShapePoint | Citrus Engine",
    "keywords": "ParticleShapePoint ParticleShapePoint - элемент для контейнера частиц (ParticleEmitter), может использоваться только внутри контейнера. Используется для создания кастомной зоны распределения частиц. Имеет смысл только при Shape -> Custom. Свойства ParticleShapePoint: Position - позиция точки на экране"
  },
  "articles/tangerine/node/particles/particle_emitter.html": {
    "href": "articles/tangerine/node/particles/particle_emitter.html",
    "title": "ParticleEmitter | Citrus Engine",
    "keywords": "ParticleEmitter ParticleEmitter - контейнер для системы частиц Свойства ParticleEmitter: Является виджетом EmissionMethod - способ генерации частиц, а именно: NumberPerSecond - генерация N частиц в секунду (старый метод) ConstantNumber - генерация N частиц за один вызов, которые никогда не исчезнут. ImmortalParticles для них всегда включен, хоть и скрыт из интерфейса. NumberPerBurst - генерация N частиц каждый раз, когда вызвано определенное действие. Анимируется свойство Action, на данный момент доступен только Burst. Shape - форма контейнера для частиц (Custom активируется автоматически при использовании EmitterShapePoint) EmissionType - тип излучения частиц (от центра/к центру) ParticlesLinkage - указать, куда привязывать контейнер частиц (root-сцена/текущий контейнер/другое) Number - количество частиц, используемых в генерации различными методами TimeShift - временной сдвиг (в секундах) Speed - скорость движения частиц AlongPathOrientation - включить ориентирование партиклей вдоль трека (сплайна/кривой) WindDirection - направление ветра в градусах (0 - дует слева, 90 - дует сверху) WindAmount - сила ветра GravityDirection - направление гравитации (0 - тянет направо, 90 - тянет вниз) GravityAmount - сила гравитации MagnetAmount - сила влияния магнитов на эмиттер Orientation - угол поворота созданных частиц Direction - угол поворота эмиттера (контейнера) частиц Lifetime - время жизни частиц в секундах Zoom - зум для созданных частиц AspectRatio - соотношение сторон для созданных частиц Velocity - угловая скорость частиц Spin - задать частицам угол вращения (в градусах) AngularVelocity - угловая скорость контейнера частиц (в градусах) RandomMotionRadius - радиус рандомного движения частиц RandomMotionSpeed - скорость рандомного движения частиц RandomMotionAspectRatio - соотношение сторон зоны движения частиц RandomMotionRotation - вращение рандомного движения частиц Action - триггер для NumberPerBurst, на данный момент доступен только Burst"
  },
  "articles/tangerine/node/particles/particle_modifier.html": {
    "href": "articles/tangerine/node/particles/particle_modifier.html",
    "title": "ParticleEmitter | Citrus Engine",
    "keywords": "ParticleEmitter ParticleModifier - элемент для контейнера частиц (ParticleEmitter), может использоваться только внутри контейнера. Свойства ParticleModifier: Size - размер частиц Scale - масштабирование частиц Velocity - скорость вылета частиц Spin - угол вращения частиц AngularVelocity - угловая скорость частиц GravityAmount - сила гравитации, действующая на частицы WindAmount - сила ветра, действующая на частицы MagnetAmount - сила магнита, действущая на частицы Color - цвет частиц FirstFrame - фрейм, с которого стартует генерация частиц LastFrame - фрейм, на котором заканчивается генерация частиц AnimationFps - количество кадров анимации частиц LoopedAnimation - признак зацикленности анимации Texture - путь до используемой текстуры"
  },
  "articles/tangerine/node/particles/particles_magnet.html": {
    "href": "articles/tangerine/node/particles/particles_magnet.html",
    "title": "ParticlesMagnet | Citrus Engine",
    "keywords": "ParticlesMagnet ParticlesMagnet - магнит для системы частиц Свойства ParticlesMagnet: Является виджетом Shape - форма области притяжения магнита Attenuation - коэффицицент затухания силы притяжения магнита Strength - сила магнита"
  },
  "articles/tangerine/node/polyline/polyline.html": {
    "href": "articles/tangerine/node/polyline/polyline.html",
    "title": "Polyline | Citrus Engine",
    "keywords": "Polyline Polyline - используется для создания кривой Свойства Polyline: Является виджетом Thickness - толщина линий StaticThickness - статическая толщина кривой Closed - замкнутость кривой (да/нет)"
  },
  "articles/tangerine/node/polyline/polyline_point.html": {
    "href": "articles/tangerine/node/polyline/polyline_point.html",
    "title": "PolylinePoint | Citrus Engine",
    "keywords": "PolylinePoint PolylinePoint - объект типа PointObject (точка), используется в контейнере Polyline Свойства PolylinePoint: Position - координаты точки"
  },
  "articles/tangerine/node/slider.html": {
    "href": "articles/tangerine/node/slider.html",
    "title": "Slider | Citrus Engine",
    "keywords": "Slider Slider - используется для создания слайдеров Свойства Slider: Является виджетом RangeMin - минимальное значение на шкале слайдера RangeMax - максимальное значение на шкале слайдера Value - значение по-умолчанию (текущее) Step - шаг (цена деления)"
  },
  "articles/tangerine/node/spline/spline.html": {
    "href": "articles/tangerine/node/spline/spline.html",
    "title": "Spline | Citrus Engine",
    "keywords": "Spline Spline (сплайн) - создает контейнер для объектов типа SplinePoint Свойства Spline: Является виджетом Closed - признак замкнутости сплайна"
  },
  "articles/tangerine/node/spline/spline_gear.html": {
    "href": "articles/tangerine/node/spline/spline_gear.html",
    "title": "SplineGear | Citrus Engine",
    "keywords": "SplineGear SplineGear - используется для создания связи между виджетом и сплайном (можно анимировать движение виджета по сплайну) Свойства SplineGear: Widget - Id виджета на сцене Spline - Id сплайна на сцене SplineOffset - смещение вдоль сплайна AlongPathOrientation - поворачивать виджет по направлению движения по сплайну"
  },
  "articles/tangerine/node/spline/spline_point.html": {
    "href": "articles/tangerine/node/spline/spline_point.html",
    "title": "SplinePoint | Citrus Engine",
    "keywords": "SplinePoint SplinePoint (точка сплайна) - создает контейнер для объектов типа SplinePoint Свойства SplinePoint: TangentAngle - угол касательной TangentWeight - вес касательной Straight - принадлежит ли точка прямой"
  },
  "articles/tangerine/node/text/rich_text.html": {
    "href": "articles/tangerine/node/text/rich_text.html",
    "title": "RichText | Citrus Engine",
    "keywords": "RichText RichText - создает виджет с текстом, поддерживающим стили (через bb-коды). Виджет является контейнером для стилей (TextStyle) Свойства RichText: Является виджетом Text - текст HAlignment - горизонтальное выравнивание VAlignment - вертикальное выравнивание OverflowMode - выбрать способ, как \"обрезать\" текст, если он не вмещается WordSplitAllowed - разрешать ли переносить слова"
  },
  "articles/tangerine/node/text/simple_text.html": {
    "href": "articles/tangerine/node/text/simple_text.html",
    "title": "SimpleText | Citrus Engine",
    "keywords": "SimpleText SimpleText - создает виджет с простым (неформатированным) текстом Свойства SimpleText: Является виджетом Font - выбор шрифта (по-умолчанию - Default/Labels/Text) Text - текст FontHeight - высота шрифта HAlignment - горизонтальное выравнивание VAlignment - вертикальное выравнивание OverflowMode - выбрать способ, как \"обрезать\" текст, если он не вмещается WordSplitAllowed - разрешать ли дробить слова на буквы при переносе TextColor - цвет текста GradienMapIndex - настройка заливки текста LetterSpacing - расстояние между буквами ForceUncutText - используется в Layouts, запрещает переносить текст"
  },
  "articles/tangerine/node/text/text_style.html": {
    "href": "articles/tangerine/node/text/text_style.html",
    "title": "TextStyle | Citrus Engine",
    "keywords": "TextStyle TextStyle - создает стиль для использования в RichText-контейнере. Свойства TextStyle: ImageTexture - путь до используемой текстуры ImageSize - размеры используемой текстуры ImageUsage - для какого типа используется текстура Font - шрифт Size - размер шрифта SpaceAfter - ??? Bold - признак жирности шрифта CastShadow - признак тени ShadowOffset - настройка смещения тени TextColor - цвет текста ShadowColor - цвет тени GradientMapIndex - настройка градиента LetterSpacing - межбуквенный интервал"
  },
  "articles/tangerine/node/widget.html": {
    "href": "articles/tangerine/node/widget.html",
    "title": "Widget | Citrus Engine",
    "keywords": "Widget Почти все объекты, используемые в сценах редактора, являются виджетами. Виджеты имеют одинаковые для всех типов свойства, объединённые в группу Widget: Position - позиция в координатах x/y на вьюпорте Scale - масштабирование по x/y Size - размер по x/y Pivot - координаты точки вращения относительно виджета Padding - отступы (используются исключительно в кастомном компоненте Layouts) Color - цвет в формате RGB + настройка альфа-канала Anchors - настройка якорей Blending - настройка смещивания (используется вместе с шейдерами) Shader - наложенный на виджет шейдер Visible - флаг, используемый для отображения виджета (не только в редакторе, но и в коде) SkinningWeights - настройка веса виджета HitTestMethod - настройка хитбокса (Bounding Rect/Contents/Skip) Для некоторых виджетов (Model3D, Frame или Button) также доступно поле ContentsPath - что позволяет указать *.tan, который будет использоваться в качестве \"наполнителя\" для контейнера. Независимо от типа, у всех объектов имеется поле Id, определяющее имя объекта. У каждого виджета также есть свои собственные свойства, весь список виджетов можно посмотреть здесь."
  },
  "articles/tangerine/prefs.html": {
    "href": "articles/tangerine/prefs.html",
    "title": "Preferences | Citrus Engine",
    "keywords": "Preferences [EN | RU] Editor preferences can be accessed with File -> Preferences or «Ctrl + P» hotkey. Windows with settings contains several tabs: General -- general settings. Target platform - target platform to build app for. Experimental: timeline hierarchy - enable timeline hierarchy for parallel animations (does not work with legacy). Reload modified files - always reload modified files by default. Default scene dimensions - default dimensions for new scenes. Automatic keyframes - auto-creating keyframes if property is changed. Autosave delay - ... Show scene thumbnail - show scene preview on the timeline. Don't paste at mouse pointer - disable «Ctrl + V» of copied nodes at mouse position. Bone Width - set bones width. Default interpolation - keyframes default interpolation method. Appearance -- appearance settings. Chess background - use chess texture for background. Background color A - ... Background color B - ... Root overlay color - color for edges of the scene root node. Animation preview background - background color of a preview player. Theme -- color theme settings. Dark icon theme - use dark theme icons. Dark/Light preset - switch between predefined light and dark themes. Save theme - ... Load theme - ... Search - filter properties by name. Keyboard shortcuts -- hotkey mappings. Profile - current keyboard mapping preset. Commands - list of commands available for mapping. Export/Import/Delete - manage profile. Search - filter commands by name. Toolbar -- editor's toolbar settings. Search - filter commands by name. Available commands - list of available commands. Used commands - list of used commands."
  },
  "articles/tangerine/prefs.ru.html": {
    "href": "articles/tangerine/prefs.ru.html",
    "title": "Настройки (Preferences) | Citrus Engine",
    "keywords": "Настройки (Preferences) [EN | RU] Настройки редактора вызываются через File -> Preferences, либо использовав комбинацию клавиш Ctrl + P. Окно настроек делится на несколько категорий: General - основные настройки. Target platform - выбор платформы, с которой работаем. Reload modified files - перегружать ли измененные файлы по-умолчанию. Default scene dimensions - размеры сцены по-умолчанию. Automatic keyframes - выставлять ли ключи анимации при изменении пропертей. Animation mode - активировать ли триггеры при проигрывании анимации. Autosave delay - период сохранения сейвов. Stop animation on current frame - останавливать анимацию на текущем фрейме (вкл/выкл). Show scene thumbnail - показывать ли превью сцены на таймлайне. Don't paste at mouse pointer - отключить вставку на место курсора. Inverse Shift behavior when dragging keyframe - инвертировать поведение Shift при перетаскивании кейфреймов. Bone Width - настроить ширину кости. Default interpolation - выбор способа интерполяции по-умолчанию. Appearance - настройки внешнего вида. Chess background - использовать ли шахматки для фона. Background color A - цвет бэкграунда А. Background color B - цвет бэкграунда Б. Root overlay color - цвет границы root-сцены. Animation preview background - цвет фона для плеера анимаций. Theme - настройки цветовой схемы. Dark icon theme - использовать ли тёмные иконки. Dark/Light preset - захардкоженные дефолтные темы (тёмные/светлые). Save theme - сохранить тему. Load theme - загрузить тему. Search - поиск нужного проперти для изменения цвета. Keyboard shortcuts - настройки хоткеев. Profile - текущий пресет (профиль) настроек клавиатуры. Commands - список команд, доступных для биндов. Export/Import/Delete - управление профилем. Search - поиск по командам. Reset To Defaults - сбросить настройки по-умолчанию. Toolbar - настройка тулбаров. Search - поиск необходимой команды. Available commands - список доступных команд. Used commands - список использованных команд."
  },
  "articles/tangerine/tips/particles/emission_method.html": {
    "href": "articles/tangerine/tips/particles/emission_method.html",
    "title": "Emission Method - что это такое и как этим пользоваться | Citrus Engine",
    "keywords": "Emission Method - что это такое и как этим пользоваться EmissionMethod - это свойство виджета типа ParticleEmitter. От метода эмиссии зависит, по какому принципу частицы будут \"вылетать\" из эммитера. Доступны следующие типы эмиссии: NumberPerSecond ConstantNumber NumberPerBurst Number свойство эмиттера, которое определяет количество частиц, по-разному в зависимости от метода эмиссии. Оба этих свойства могут быть анимированы. NumberPerSecond Частицы генерируются непрерывно каждый кадр так, что за секунду генерируется Number количество частиц. На примерах показано, как выглядит данный тип эмиссии, если Number равно 1, 10 и 100 частиц соответственно. ConstantNumber Каждый раз, когда текущее число частиц выпущенных данным эмиттером отличается от Number, за один кадр генерируется Number - particles.Count количество частиц. В случае, если данное число отрицательно — частицы будут удалены. Таким образом, анимируя Number можно удалять и снова генерировать частицы с этим методом. Частицы сгенерированные методом ConstantNumber имеют бесконечное время жизни. Это реализовано так, что когда их время жизни кончатся, оно начинается снова, то есть анимация частицы начнётся заново согласно присвоенному ей при генерации ParticleModifier и тому как там анимированы свойства частицы. На примерах показано, как выглядит данный тип эмиссии, если генерировать 1, 10 и 100 частиц соответственно. NumberPerBurst За один кадр генерируется Number количество частиц по триггеру со значением Burst (анимируемое свойство ParticleEmitter с названием Action). На примере показано, что сначала генерится 5, затем 10, 20 частиц, вплоть до 50 (для наглядности были использованы разные цвета). Все эти \"импульсы\" были вызваны через Action у одного эммитера. Таким образом анимируя Number и Action можно с точностью до одной частицы управлять тем сколько частиц на каком кадре анимации генерируется. Сцена с примерами В сцене Particles.tan есть примеры использования всех описанных методов эмиссии. Нужно лишь включить нужный фрейм. Класть в ../Citrus/Examples/EmptyProject/Data и запускать из EmptyProject (работает везде, где есть Citrus)"
  },
  "articles/tangerine/ui/3d_attachment.html": {
    "href": "articles/tangerine/ui/3d_attachment.html",
    "title": "Panel «Model3D Attachment» | Citrus Engine",
    "keywords": "Panel «Model3D Attachment» [EN | RU] Panel \"Model3D Attachment\" configures import settings for Model3D. Settings are saved in the same directory as the source model into file named <model_name>.Attachment.txt. It is available under «View -> Panels -> Model3D Attachment» in Menubar. Panel has several tabs: General - general settings ScaleFactor - scale of the model. Default: 1. Materials Remap- material settings Remap Material - reassign material, used for model by default. Source materials - list of materials vendored with model. Mesh Options - mesh settings Node Id - node identificator. Cull Mode - culling mode. Opaque - opaque mode (on / off). Hit Test Target - collision detection (on / off). Animations - animation settings. The initial list of animations is imported from the model by default. You can override already existing animations or create a new one. Under the hood it creates a parallel animation. Animation name - name of the animation Source Animation - imported animation name (as you see in your 3D editor tool) Start Frame - frame of the imported animation from which it starts Last Frame - frame of the imported animation where animation ends Blending - blending settings Если название анимации отлично от Default - то будут использоваться перегруженные анимации, вместо встроенных. Node Removals - list of the nodes to remove after Model3D import Node Id - identificator of the node to remove Components - list of the components to add after Model3D import Node Id - identificator of the node to add component"
  },
  "articles/tangerine/ui/3d_attachment.ru.html": {
    "href": "articles/tangerine/ui/3d_attachment.ru.html",
    "title": "Окно «Model3D Attachment» | Citrus Engine",
    "keywords": "Окно «Model3D Attachment» [EN | RU] Панель \"Model3D Attachment используется для настройки Model3D. После редактирования настроек, они сохраняются рядом с моделью в файл вида <название модели>.Attachment.txt. Окно имеет несколько вкладок: General - основные настройки ScaleFactor - масштаб модели. Значение по-умолчанию - 1. Materials Remap- настройки материалов Remap Material - переназначить материал, используемый в модели по-умолчанию. Source materials - список материалов, идущих в комплекте с используемой моделью. Mesh Options - настройки мешей Node Id - идентификатор ноды Cull Mode - режим куллинга Opaque - непрозрачность вкл/выкл Hit Test Target - хитбокс вкл/выкл Animations Список анимаций по-умолчанию берется из модели. Также можно перегрузить уже существующие анимации или создать новые. Animation name - название анимации Source Animation - источник анимации Start Frame - стартовый фрейм анимации Last Frame - конечный фрейм анимации Blending - смешивание анимации Если название анимации отлично от Default - то будут использоваться перегруженные анимации, вместо встроенных. Node Removals - удаление ненужных нод из ассетов Node Id - идентификатор ноды Components - применение каких-либо компонентов Node Id - идентификатор ноды"
  },
  "articles/tangerine/ui/backups.html": {
    "href": "articles/tangerine/ui/backups.html",
    "title": "Окно \"Backups\" | Citrus Engine",
    "keywords": "Окно \"Backups\" Панель \"Backups\" используется для манипуляции с резервными копиями, созданными автоматически. Они сценозависимые и хранятся в %APPDATA% Резервные копии создаются через определенные промежутки времени и при каждом сохранении сцены вручную."
  },
  "articles/tangerine/ui/console.html": {
    "href": "articles/tangerine/ui/console.html",
    "title": "Окно \"Console\" | Citrus Engine",
    "keywords": "Окно \"Console\" Панель \"Console\" используется для отображения служебной информации и предупреждений. Имеется возможность целиком скопировать лог по ПКМ на рабочей области панели."
  },
  "articles/tangerine/ui/filesystem.html": {
    "href": "articles/tangerine/ui/filesystem.html",
    "title": "Окно \"Filesystem\" | Citrus Engine",
    "keywords": "Окно \"Filesystem\" Панель \"Filesystem\" используется для навигации по файловой системе проекта. Она состоит из панели инструментов, списка файлов и адресной строки. Панель инструментов \"Filesystem\" содержит следующие элементы: Home - возвращение к корню проекта Up - возвращает на один уровень вверх Back - перемещает назад по истории посещений папок Forward - перемещает вперед по истории посещений папок Cooking Editor - показывает окно для настройки Cooking rules Preview - показывает доп. фрейм, где можно видеть превью файлов Add horizontal frame - создает доп. фрейм файлменеджера справа Add vertical frame - создает. доп. фрейм файлменеджера снизу Меню сортировки по имени/расширению/размеру/дате и изменение порядка сортировки файлов Список файлов в \"Filesystem\" работает аналогично Windows Explorer (поддерживаются те же сочетания клавиш) Адресная строка отображает текущий путь, кликом по ней или по сочетанию клавиш Ctrl + L она переходит в режим редактирования"
  },
  "articles/tangerine/ui/hierarchy.html": {
    "href": "articles/tangerine/ui/hierarchy.html",
    "title": "Окно \"Hierarchy\" | Citrus Engine",
    "keywords": "Окно \"Hierarchy\" Панель \"Hierarchy\" используется для навигации по сцене, используя иерархию в виде дерева. Также доступен поиск по дереву. Заматченные значения будут подсвечены желтым цветом. При переходе во внешнюю сцену, она откроется в своем окне и будет иметь своё дерево."
  },
  "articles/tangerine/ui/inspector.html": {
    "href": "articles/tangerine/ui/inspector.html",
    "title": "Panel «Inspector» | Citrus Engine",
    "keywords": "Panel «Inspector» [EN | RU] Inspector panel shows properties of the selected widget or group of widgets. You can read more about each widget here. Also inspector has button called Inspect Root Node which allows you to inspect \"Root\" node of the document (most of time it is a Frame widget)."
  },
  "articles/tangerine/ui/inspector.ru.html": {
    "href": "articles/tangerine/ui/inspector.ru.html",
    "title": "Окно «Inspector» | Citrus Engine",
    "keywords": "Окно «Inspector» [EN | RU] Окно инспектора служит для отображения свойств выбранного виджета. Подробнее о свойствах каждого виджета можно узнать здесь Также инспектор содержит кнопку Inspect Root Node, которая отображает свойства root-сцены (чаще всего он имеет тип Frame)"
  },
  "articles/tangerine/ui/lookup.html": {
    "href": "articles/tangerine/ui/lookup.html",
    "title": "Maximizing your efficiency in Tangerine — lookup | Citrus Engine",
    "keywords": "Maximizing your efficiency in Tangerine — lookup Lookup is a Tangerine feature that makes it simple to execute commands, open files and quick jump to nodes, components, animations, markers and frames. Instructions Use the default Ctrl+Shift+P/Cmd+Shift+P keyboard shortcut or File/Open Lookup Dialog command. For possible options type ? to open the Help Menu Go to Command by typing > Go to File by typing f: Type f: to find files in the current workspace. You can open scenes in a new tab or insert scenes, images and sounds to the current document. Go to Node by typing n: Go to Component by typing c: Go to Animation by typing a: or ad: Type a: to find animations of the current container or ad: to find animations in current document. Go to Marker by typing m: or md: Type m: to find markers in the current animation or md: to find markers in current document. Go to Frame by typing : Type : and the frame number to jump to the corresponding frame. Assign a keyboard shortcut to any Lookup function Go to the Keyboard shortcuts tab in the Preferences and assign a keyboard shortcut to any Lookup function (Lookup Commands, Lookup Files and etc) in Generic Commands section."
  },
  "articles/tangerine/ui/menu_bar/menu_bar.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_bar.html",
    "title": "Панель меню (Menu bar) | Citrus Engine",
    "keywords": "Панель меню (Menu bar) Панель меню содержит в себе элементы: File - меню для работы со сценой, создание новых сцен, открытие/закрытие проектов, сохранение файлов. Edit - содержит команды для редактирования сцены, Undo/Redo, Copy/Paste, etc. Create - содержит список виджетов, которые мы может создать. Дублируется на панели инструментов. View - содержит настройки отображения сцены, настройку доп. окон, линеек, etc. Window - управление текущими вкладками (след./пред. вкладка). Orange - дублирует меню из Orange Launcher, пункты меню зависят от текущего проекта. Help - меню вызова справки/списка изменений."
  },
  "articles/tangerine/ui/menu_bar/menu_create.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_create.html",
    "title": "Меню \"Create\" | Citrus Engine",
    "keywords": "Меню \"Create\" В меню \"Create\" содержатся все виджеты/ноды, доступные для создания в редакторе. Custom Nodes - подменю для создания пользовательских виджетов. Зависит от используемого в данный момент проекта. Frame Button Audio Movie Bone ParticleEmitter ParticleModifier EmitterShapePoint ParticlesMagnet SimpleText RichText TextStyle NineGrid DistortionMesh Spline SplinePoint SplineGear Slider ImageCombiner Viewport3D Camera3D Model3D Node3D WidgetAdapter3D Spline3D SplinePoint3D SplineGear3D Polyline PolylinePoint TiledImage"
  },
  "articles/tangerine/ui/menu_bar/menu_edit.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_edit.html",
    "title": "Меню \"Edit\" | Citrus Engine",
    "keywords": "Меню \"Edit\" Undo Ctrl + Z - отменяет последнее действие Redo Ctrl + Shift + Z - возвращает отмененное действие Cut Ctrl + X - вырезает выделенный виджет Copy Ctrl + C - копирует выделенный виджет Paste Ctrl + V - вставляет скопированный/вырезанный виджет Delete Del- удаляет выделенный виджет Duplicate Ctrl + D - делает копию выделенного виджета Delete Selected Keyframes Shift + Del - удаляет выбранные кадры с таймлайна Create Play Marker Alt + 1 - создать Play маркер на таймлайне (зеленый) Create Stop Marker Alt + 2 - создать Stop маркер на таймлайне (красный) Create Jump Marker Alt + 3 - создать Jump маркер на таймлайне (желтый) Delete Marker Alt + 4 - удалить маркер с таймлайна Select All Ctrl + A - выбрать все виджеты в окне Viewport Group Ctrl + G - сгруппировать виджеты в группу (все выбранные виджеты будут находиться внутри Frame) Ungroup Ctrl + Shift + G - разгруппировать группу Insert Timeline Column Ctrl + Q - вставить колонку на таймлайне Remove Timeline Column Ctrl + W- удалить колонку на таймлайне Tie Node with Bones Ctrl + T - связать виджеты с костями Untie Node from Bones Ctrl + Shift + T - отвязать виджеты от костей Group Contents to Morphable Meshes Ctrl + M - ??? Export Scene - экспортировать сцену в *.tan Upsample Animation Twice - растягивает анимации в 2 раза, работает только внутри контейнера (виджета) Convert to Button - преобразует Frame в Button Generate Preview - сгенерировать превью для отображения в Filesystem"
  },
  "articles/tangerine/ui/menu_bar/menu_file.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_file.html",
    "title": "Меню \"File\" | Citrus Engine",
    "keywords": "Меню \"File\" New Ctrl + N - создает новый файл. Можно выбрать *.tan, *.scene или *.tan с кастомной рут-сценой New Project Ctrl + J - cоздает новый проект Open Ctrl + O - открыть сцену (*.scene / *.tan) Open Project Ctrl + Shift + O - открыть проект Close Project Alt + Q - закрыть проект Recent Documents - отображает список 5 последних открытых документов в пределах текущего проекта Recent Projects - отображает список 5 последних открытых проектов Save Ctrl + S - сохраняет текущий документ Save As Ctrl + Shift + S - сохраняет текущий документ с изменением имени Save All - сохранить все открытые документы Revert Ctrl + R - откатить все изменения, сделанные в сцене (документе) Upgrade Document Format (.tan) - перевести формат *.scene в *.tan Preferences Ctrl + P - открывает окно настроек редактора Close - закрыть текущий документ Сlose All - закрыть все открытые документы Close All but Current - закрыть все, кроме текущего документа Quit Alt + F4 - выйти из редактора"
  },
  "articles/tangerine/ui/menu_bar/menu_help.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_help.html",
    "title": "Меню \"Help\" | Citrus Engine",
    "keywords": "Меню \"Help\" View Help Ctrl + F1 - показать справку Help Mode F1 - режим отображения справки по выбранной ноде View Changelog - показать список изменений (changelog)"
  },
  "articles/tangerine/ui/menu_bar/menu_orange.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_orange.html",
    "title": "Меню \"Window\" | Citrus Engine",
    "keywords": "Меню \"Window\" Меню \"подтягивается\" из Orange Launcher (и зависит от Orange Plugins), однако следующие функции встроенны в редактор: Build and Run F9 - собрать и запустить проект Run Config Ctrl + F9 - запустить конфиг проекта Cook Game Assets Alt + F9 - подготовить ресурсы для проекта (прокукать)"
  },
  "articles/tangerine/ui/menu_bar/menu_view.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_view.html",
    "title": "Меню \"View\" | Citrus Engine",
    "keywords": "Меню \"View\" Layouts - работа с лейаутами интерфейса редактора Save layoyt - сохранить текущий лейаутами Load layout - загрузить заранее сохранённый лейаутами Default layout - сбросить на лейаут по-умолчанию Pads - настройка панелей (допол. окон) редактора Timeline - вкл./выкл. отображение таймлайна Inspector - вкл./выкл. отображения инспектора Hierarchy - вкл./выкл. отображение дерева виджетов Filesystem - вкл./выкл. отображение файлменеджера Console - вкл./выкл. отображение консоли (вывода) Backups - вкл./выкл. отображение списка бекапов Visual Hints - вкл./выкл. фильтр пивотов Resolution - выставляет разрешение root-сцены под соответствующий девайс Overlays - отобразить разрешения для различных девайсов Rulers - управление линейками Toggle Display - вкл./выкл. отображение линеек Clear Active Ruler - удалить выделенную линейку Save Ruler - сохранить выделенную линейку Manage Rulers - управлять сохраненными линейками Snap Widget to Ruler - вкл./выкл. привязку виджета к линейке Snap Widget Pivot to Ruler - вкл./выкл. привязку пивота виджета к линейке Snap Ruler Lines to Node - вкл./выкл. привязку линеек к виджетам Preview Next/Previous Resolution F11`Shift + F11`- включить превью с разрешениями экрана для различных девайсов Preview Next Orientation F12 - переключить превью со сменой ориентации для данного разрешения девайса Center Timeline on Current Column Ctrl + Shift + C - центрировать таймлайн на каретке Localization - ???"
  },
  "articles/tangerine/ui/menu_bar/menu_window.html": {
    "href": "articles/tangerine/ui/menu_bar/menu_window.html",
    "title": "Меню \"Window\" | Citrus Engine",
    "keywords": "Меню \"Window\" Next Document Ctrl + Tab - следующая вкладка на Viewport Previous Document Ctrl + Shift + Tab - предыдущая вкладка на Viewport"
  },
  "articles/tangerine/ui/timeline.html": {
    "href": "articles/tangerine/ui/timeline.html",
    "title": "Panel «Timeline» | Citrus Engine",
    "keywords": "Panel «Timeline» [EN | RU] Timeline Panel provides all information about frames, animators, markers and scene hierarchy. It organizes and controls a scenes's content over time. It includes: preview scrollbar; toolbar; list / tree of widgets; chronological roll pane with markers and keyframes. Preview Scrollbar gives you ability to see the whole timeline and drag & move your workspace along timeline. Use Alt + MouseWheel hotkey to zoom-in / zoom-out for more comfortable and efficient animating experience. Toolbar Animation mode -- animation mode allows editor to enter all nested animations; Automatic keyframes -- auto-keyframe mode sets animators automatically when you change any property of the widget on scene; Create folder -- create folder for grouping widgets on timeline; Edit curves -- curves mode allows to edit blending curves between animators; Animation stretch mode -- stretch mode allows you to scale animators in the selected range by dragging it with left and right edges; Slow motion mode (hotkey ~) -- slow-mo mode slows the animation x0.10 times during preview; Col: N -- current timeline column indicator (shows ou current frame or range of frames); Exit current container (hotkey Backspace) -- exit from the current container; Lock animation -- enable/disable node animation for all animators. Green - all animators enabled, grey - all animators disabled, blue - partly disabled (it can happen when you create a new animator while others are disabled); Show Node -- toggle widget visibility (shown / hidden) inside Viewport (also known as \"SceneView\"). Use hotket Shift to toggle only selected widgets; Lock Node -- block widget transformation and modification. List of widgets on the left side of the timeline allows you to navigate through scenes' hierarchy. Press RMB on any widget to open context menu: Inline external scene -- inline selected external scene (frame with \"ContentsPath\") into current document; Export Scene... -- export seleted @Lime.Frame-based widget as \".tan\" document; Copy Asset Path -- copy path to the selected widget relative to the bundle it is in; Copy/Cut/Paste/Delete -- move / remove operations; Rename -- rename selected widget; Color mark -- set an indicator color for the selected widget. It does not change the real widget's color and is available only from Tangerine; Convert to -- convert selected item to widget of another type (only if applicable). For parallel animations with enabled \"Experimental: timeline hierarchy\" option you can use Shift + Space hotkey or click on the toggle icon (left to the widget item's name) to expand / hide list of children widgets. Animators All animators (and their keyframes) are available from a rollpane on the right side of the Timeline. There are several operations available to manipulate keyframes / animations: Cut Keyframes (hotkey Ctrl + Alt + X) -- cut selected keyframes (including their animators); Copy Keyframes (hotkey Ctrl + Alt + C) -- copy selected keyframes; Paste Keyframes (hotkey Ctrl + Alt + V) -- paste selected/copied keyframes starting at current frame. If widget does not have some animated property (animator), it will be ignored. Reverse Keyframes -- \"reverse\" order of keyframes on the selected range of frames. Ex. if widget changes its position from A to B it would change it from B to A and so on. Insert Timeline Column (hotkey Ctrl + Q) -- insert a new column on the timeline; Remove Timeline Column (hotkey Ctrl + W) -- remove the current column on the timeline. If column had keyframes they will be shifted left; Delete Selected Keyframes (hotkey Ctrl + Del) -- remove selected keyframes (including their animators); Numeric Move -- shiftig a range of the selected frames on timeline with N frames to the right. Use negative value for shifting to the left. Numeric Scale -- scaling a range of the selected frames on timeline with a specified multiplier. Markers Double-Click on the Timeline's frame meter creates new markers. Also you can create them using Alt + 1/2/3 hotkeys for Play/Stop/Jump markers respectively. Marker Id -- marker's indentificator / name; Action -- action type for marker, one of: Play, Jump or Stop. Action happens when animation reaches marker's frame; Jump to -- transition marker used for \"Jump\" action. Animation \"jumps\" onto it when it reaches marker's frame; Easing -- marker easing / interpolation function, read Easing page for more information."
  },
  "articles/tangerine/ui/timeline.ru.html": {
    "href": "articles/tangerine/ui/timeline.ru.html",
    "title": "Окно «Timeline» | Citrus Engine",
    "keywords": "Окно «Timeline» [EN | RU] Окно таймлайна служит для отображения кадров и маркеров в хронологическом порядке. Оно состоит из ленты превью, панели инструментов, списка виджетов и хронологической ленты. На превью можно видеть весь таймлайн целиком и передвигать рабочую область, драгая и перемещая её влево или вправо. Также, на Alt + Mousewheel есть возможность выставить зум так, как удобно. Панель инструментов состоит из нескольких элементов: Animation mode - режим анимации, при котором редактор будет заходить во все вложенные анимации Automatic keyframes - режим автоматического расставления ключей анимации Create folder - создать папку Edit curves - режим отображения кривых (WIP) Animation stretch mode - режим \"растягивания\" анимации, при котором можно увеличить или уменьшить проигрываемую анимацию по времени, просто потянув за ее края временного промежутка Slow motion mode ~ - режим замедления времени, замедляется на x0.10 раз Col: N - индикатор текущего столбца Exit current container Backspace - выходит из текущего контейнера Lock animation - включает/выключает анимирование нода, причем для всех анимаций. Зеленый цвет – все аниматоры enabled, серый – все disabled, синий – часть так, часть так (синий появляется когда например мы создаем новый аниматор (он станет enabled), а существующие – disabled). Show Node - отображение виджетов на Viewport (Shown/Hidden), при клике через Shift изменяет параметр только для выбранных виджетов Lock Node - блокирует виджет, не давая вносить в него какие-либо изменения Список виджетов используется для навигации по всем виджетам, используемым в сцене По ПКМ с виджетами доступны действия: Copy/Cut/Paste/Delete - копировать/вырезать/вставить/удалить виджеты Rename - переименовать виджет Color mark - выставляет \"цвет\" виджету, используется только для цветовой дифференциации внутри редактора Convert to Button - конвертирует виджет в кнопку (работает только для объектов типа Frame) Также по Shift + Space на виджете (или кликнув на значок выпадающего списка слева) можно раскрыть список аниматоров, используемых в виджете. Для аниматоров доступны операции Copy/Cut/Paste/Delete Хронологическая лента отображает анимации покадрово, также она используется для того, чтобы производить действия с кейфреймами и анимациями: Cut Keyframes Ctrl + Alt + X - вырезать выделенные кейфреймы (со всеми ключами анимации) Copy Keyframes Ctrl + Alt + C - копировать выделенные кейфреймы Paste Keyframes Ctrl + Alt + V - вставить выделенные/скопированные кейфреймы в выбранный кадр. Если у виджета отсутствует какое-то анимированное свойство, оно будет игнорироваться. Reverse Keyframes - \"переворачивает\" анимацию на выбранном временном отрезке. Т.е. если виджет двигался из A -> B, то станет двигаться из B -> A и так далее. Insert Timeline Column Ctrl + Q - вставить колонку на таймлайне Remove Timeline Column Ctrl + W - удалить колонку на таймлайне. При этом, если колонка содержала ключи анимации, они будут смещены влево Delete Selected Keyframes Ctrl + Del - удалить выделенные кейфреймы Numeric Move - смещение выбранного участка таймлайна на N кадров вправо. При вводе отрицательного значения - влево Numeric Scale - масштабирование выбранного участка таймлайна, используя множитель Даблкликом на таймлайне создаются маркеры. Также их можно создать, используя горячие клавиши (Alt + 1/2/3) Окно создания маркера выглядит так: Marker Id - идентификатор (имя) маркера Action - действие, которые будет выполняться, когда каретка достигнет маркера (Play/Jump/Stop) Jump to - маркер, на который будет \"прыгать\" каретка при достижении маркера, если выбран маркер типа \"Jump\""
  },
  "articles/tangerine/ui/toolbar.html": {
    "href": "articles/tangerine/ui/toolbar.html",
    "title": "Панель инструментов (Toolbar) | Citrus Engine",
    "keywords": "Панель инструментов (Toolbar) Панель инструментов частично копирует функционал из панели меню и разделена на 3 панели: Панель History - работа с историей изменений сцены: Undo - откатить изменения Redo - отменить откат последнего изменения Revert - восстановить виджет/сцену до первоначального вида Панель Create - дублирует функционал меню \"Create\" Панель Tools - содержит функционал для управления виджетами на сцене: Align Left - выравнивание по левому краю Align Right - выравнивание по правому краю Align Top - выравнивание по верхнему краю Align Bottom - выравнивание по нижнему краю Сenter Horizontally - отцентрировать горизонтально Center Vertically - отцентрировать вертикально Align to Parent/Root - выбрать, относительно чего (родителя или root-сцены) использовать центровку Align Centers Horizontally - выровнять центры горизонтально Align Centers Vertically - выровнять центры вертикально Distribute Left - распределение по левому краю Distribute Horizontally - горизонтальное распределение Distribute Right - распределение по правому краю Distribute Top - распределение по верхнему краю Distribute Vertically - вертикальное распределение Distribute Bottom - распределение по нижнему краю Align to Selection/Root/Parent - выбрать, относительно чего (выделения, root-cцены или родителя), использовать выравнивание Restore Original Size - восстановить изначальный размер виджета Reset Scale - восстановить изначальный масштаб виджета Reset Rotation - восстановить изначальный угол поворота виджета Flip Horizontally - перевернуть виджет по горизонтали Flip Vertically - перевернуть виджет по вертикали Fit to Container - изменить размер виджета по размеру контейнера (в котором он находится) Fit to Content - изменить размер виджета по содержимому контейнера Center View - центрироваться в Viewport на выбранном виджете"
  },
  "articles/tangerine/ui/ui.html": {
    "href": "articles/tangerine/ui/ui.html",
    "title": "User Interface (UI) | Citrus Engine",
    "keywords": "User Interface (UI) [EN | RU] Tangerine main window Window caption - shows names of opened project and editor. Menubar - provides editor menu. Toolbar panel - provides several available tools for working in editor. Configurable from preferences. Panel «Timeline» - allows you to animate widgets, watch preview of animations and so on. Panel «Inspector» - provides an interface to view and change properties of the selected widget or group of widgets. Panel «Viewport» - also known as «Scene View». Provides preview of the current scene and allows you to manipulate widgets in it. Hidden when no documents are opened. Has a status bar at the bottom. Panel «Filesystem» - file manager for currently opened project. You can use it for navigation between your documents. Panel «Hierarchy» - provides tree representation of the scene with display filtering feature. Panel «Backups» - manages documents backups. Panel «Console» - Tangeine uses it for displaying service and debug information. Panel «Model3D Attachment» - provides a list of settings for importing 3D-models."
  },
  "articles/tangerine/ui/ui.ru.html": {
    "href": "articles/tangerine/ui/ui.ru.html",
    "title": "Пользовательский интерфейс (UI) | Citrus Engine",
    "keywords": "Пользовательский интерфейс (UI) [EN | RU] Главное окно Tangerine Заголовок окна - показывает имя открытого проекта и название редактора. Панель меню - служит для отображения меню редактора. Панель инструментов - служит для отображения доступных инструментов редактора. Окно \"Timeline\" - служит для отображения временной шкалы с кадрами и ключами анимации. Окно \"Inspector\" - служит для отображения свойств выбранного объекта (ноды/виджета), с возможностью редактирования этих свойств. Окно \"Viewport\" - служит для отображения текущей сцены. Всегда должно иметь как минимум 1 вкладку для отображения. Снизу находится статусбар, который, пока что, содержит в себе только ползунок с зумом. Окно \"Filesystem\" - файлменеджер для текущего проекта (и не только). Используется для навигации по файлам. Окно \"Hierarchy\" - дерево и поиск объектов на сцене Окно \"Backups\" - управление бекапами сцены Окно \"Console\" - используется для отображения различной технической информации и вывода ошибок. Окно \"Model3D Attachment\" - используется для настройки 3d-моделей. (по-умолчанию скрыто, вызывается через View -> Panels -> Model3D Attachment. Имеет смысл при работе с Model3D)"
  },
  "articles/tangerine/ui/viewport.html": {
    "href": "articles/tangerine/ui/viewport.html",
    "title": "Окно \"Viewport\" | Citrus Engine",
    "keywords": "Окно \"Viewport\" Окно \"Viewport\" служит для отображения текущей сцены. Рабочая область состоит из вкладок, которые соответствуют открытым сценам. Звездочка возле названия вкладки означает, что в сцене есть несохраненные изменения. В рабочей области есть отображение различного вида линеек и границ. Они дифференциируются цветом: Размеры и границы текущего контейнера (синие) Сохраненные пользовательские границы/линейки (вызванные View -> Rulers) (бирюзовые) Несохраненные пользовательские границы/линейки (сохранить можно в View -> Rulers) (фиолетовые) Линейки по краям экрана можно отключить сочетанием клавиш Ctrl + Alt + R В окно Viewport работает drag & drop для текстур, что позволяет создавать \"на лету\" Image, Tiled Image, Distortion Mesh, Nine Grid Снизу окна вьюпорта есть строка статуса, где можно изменять отзум на активной сцене и вкл/выкл. панель Visual Hints."
  },
  "articles/tangerine/ui/visual_hints.html": {
    "href": "articles/tangerine/ui/visual_hints.html",
    "title": "Окно \"Visual Hints\" | Citrus Engine",
    "keywords": "Окно \"Visual Hints\" Окно \"Visual Hints\" служит для настройки отображения на текущей сцене. По-умолчанию выключен, поэтому при необходимости его надо включить в View -> Pads -> Visual Hints Помимо пивотов здесь можно выключить сетку для Distortion Mesh и отображение направлений анимаций (Animation Path)"
  },
  "index.html": {
    "href": "index.html",
    "title": "Citrus Engine | Citrus Engine",
    "keywords": "Citrus Engine Citrus is a game engine made and used by Game Forest Engine manual API reference Games made with Citrus Zombie! Zombie! Zombie! (2013) Gummy Drop! (2014) Android iOS Ocean Drop! (2016) iOS Yummy Drop! (2018) Toy Story Drop! (2019) Android iOS"
  }
}